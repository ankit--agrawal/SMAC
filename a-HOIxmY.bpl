// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-3.14/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil.c --verifier-options  /bopt:z3opt:SMT.MBQI=true /bopt:z3opt:SMT.MBQI.MAX_ITERATIONS=1000 /di /staticInlining /trackAllVars /useArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (101 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: i32;
var $M.4: i32;
var $M.5: i32;
var $M.6: [ref] i32;
var $M.7: [ref] i8;
var $M.8: i32;
var $M.9: i32;
var $M.10: i32;
var $M.11: i32;
var $M.12: i32;
var $M.13: i32;
var $M.14: i32;
var $M.15: i32;
var $M.16: i32;
var $M.17: ref;
var $M.18: ref;
var $M.19: i16;
var $M.20: ref;
var $M.21: [ref] ref;
var $M.22: [ref] i32;
var $M.23: i32;
var $M.24: ref;
var $M.25: ref;
var $M.26: i32;
var $M.27: [ref] i32;
var $M.28: [ref] i32;
var $M.29: i32;
var $M.30: i32;
var $M.31: [ref] i8;
var $M.32: [ref] i8;
var $M.33: [ref] ref;
var $M.34: [ref] ref;
var $M.35: [ref] i32;
var $M.36: [ref] i32;
var $M.37: [ref] i32;
var $M.38: [ref] i32;
var $M.39: [ref] i32;
var $M.40: [ref] i64;
var $M.41: [ref] ref;
var $M.42: [ref] ref;
var $M.43: [ref] ref;
var $M.44: [ref] i64;
var $M.45: [ref] i32;
var $M.46: [ref] i32;
var $M.47: [ref] i32;
var $M.48: [ref] i32;
var $M.49: [ref] ref;
var $M.50: [ref] i32;
var $M.51: [ref] i32;
var $M.52: [ref] i8;
var $M.53: [ref] i64;
var $M.54: [ref] ref;
var $M.55: i32;
var $M.56: [ref] i32;
var $M.57: [ref] i32;
var $M.58: [ref] i32;
var $M.59: i32;
var $M.60: i32;
var $M.61: i32;
var $M.62: i32;
var $M.63: i32;
var $M.64: i32;
var $M.65: i32;
var $M.66: i32;
var $M.67: i32;
var $M.68: i32;
var $M.69: i32;
var $M.70: i32;
var $M.71: i32;
var $M.72: i32;
var $M.73: i32;
var $M.74: i32;
var $M.75: i32;
var $M.76: i32;
var $M.77: i32;
var $M.78: i64;
var $M.79: i32;
var $M.80: ref;
var $M.81: i32;
var $M.82: ref;
var $M.83: i32;
var $M.84: ref;
var $M.85: i32;
var $M.86: ref;
var $M.87: i32;
var $M.88: ref;
var $M.89: i32;
var $M.90: ref;
var $M.91: [ref] i8;
var $M.92: ref;
var $M.93: ref;
var $M.94: i16;
var $M.95: ref;
var $M.96: [ref] i8;
var $M.97: [ref] i8;
var $M.98: [ref] i8;
var $M.99: [ref] i8;
var $M.100: [ref] i8;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 762777));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32840));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const __mod_pci_device_table: ref;
axiom (__mod_pci_device_table == $sub.ref(0, 1056));
const ldv_thread_0: ref;
axiom (ldv_thread_0 == $sub.ref(0, 2096));
const ldv_thread_1: ref;
axiom (ldv_thread_1 == $sub.ref(0, 3136));
const ldv_thread_17: ref;
axiom (ldv_thread_17 == $sub.ref(0, 4176));
const ldv_thread_2: ref;
axiom (ldv_thread_2 == $sub.ref(0, 5216));
const ldv_thread_3: ref;
axiom (ldv_thread_3 == $sub.ref(0, 6256));
const ldv_thread_4: ref;
axiom (ldv_thread_4 == $sub.ref(0, 7296));
const ldv_spin_tx_global_lock_of_net_device: ref;
axiom (ldv_spin_tx_global_lock_of_net_device == $sub.ref(0, 8324));
const ldv_spin_slock_of_NOT_ARG_SIGN: ref;
axiom (ldv_spin_slock_of_NOT_ARG_SIGN == $sub.ref(0, 9352));
const ldv_spin_sk_dst_lock_of_sock: ref;
axiom (ldv_spin_sk_dst_lock_of_sock == $sub.ref(0, 10380));
const ldv_spin_siglock_of_sighand_struct: ref;
axiom (ldv_spin_siglock_of_sighand_struct == $sub.ref(0, 11408));
const ldv_spin_ptl: ref;
axiom (ldv_spin_ptl == $sub.ref(0, 12436));
const ldv_spin_node_size_lock_of_pglist_data: ref;
axiom (ldv_spin_node_size_lock_of_pglist_data == $sub.ref(0, 13464));
const ldv_spin_lru_lock_of_netns_frags: ref;
axiom (ldv_spin_lru_lock_of_netns_frags == $sub.ref(0, 14492));
const ldv_spin_lock_of_res_counter: ref;
axiom (ldv_spin_lock_of_res_counter == $sub.ref(0, 15520));
const ldv_spin_lock_of_myri10ge_slice_state: ref;
axiom (ldv_spin_lock_of_myri10ge_slice_state == $sub.ref(0, 16548));
const ldv_spin_lock_of_NOT_ARG_SIGN: ref;
axiom (ldv_spin_lock_of_NOT_ARG_SIGN == $sub.ref(0, 17576));
const ldv_spin_lock: ref;
axiom (ldv_spin_lock == $sub.ref(0, 18604));
const ldv_spin_i_lock_of_inode: ref;
axiom (ldv_spin_i_lock_of_inode == $sub.ref(0, 19632));
const ldv_spin_alloc_lock_of_task_struct: ref;
axiom (ldv_spin_alloc_lock_of_task_struct == $sub.ref(0, 20660));
const ldv_spin_addr_list_lock_of_net_device: ref;
axiom (ldv_spin_addr_list_lock_of_net_device == $sub.ref(0, 21688));
const ldv_spin__xmit_lock_of_netdev_queue: ref;
axiom (ldv_spin__xmit_lock_of_netdev_queue == $sub.ref(0, 22716));
const myri10ge_small_bytes: ref;
axiom (myri10ge_small_bytes == $sub.ref(0, 23744));
const myri10ge_reset_recover: ref;
axiom (myri10ge_reset_recover == $sub.ref(0, 24772));
const myri10ge_ethtool_ops: ref;
axiom (myri10ge_ethtool_ops == $sub.ref(0, 26164));
const myri10ge_watchdog_timeout: ref;
axiom (myri10ge_watchdog_timeout == $sub.ref(0, 27192));
const myri10ge_netdev_ops: ref;
axiom (myri10ge_netdev_ops == $sub.ref(0, 28688));
const myri10ge_initial_mtu: ref;
axiom (myri10ge_initial_mtu == $sub.ref(0, 29716));
const myri10ge_napi_weight: ref;
axiom (myri10ge_napi_weight == $sub.ref(0, 30744));
const myri10ge_msi: ref;
axiom (myri10ge_msi == $sub.ref(0, 31772));
const myri10ge_fw_rss_unaligned: ref;
axiom (myri10ge_fw_rss_unaligned == $sub.ref(0, 32804));
const myri10ge_fw_rss_aligned: ref;
axiom (myri10ge_fw_rss_aligned == $sub.ref(0, 33836));
const {:count 8} myri10ge_fw_names: ref;
axiom (myri10ge_fw_names == $sub.ref(0, 34924));
const myri10ge_fw_name: ref;
axiom (myri10ge_fw_name == $sub.ref(0, 35956));
const {:count 17} __param_str_myri10ge_fw_name: ref;
axiom (__param_str_myri10ge_fw_name == $sub.ref(0, 36997));
const __param_myri10ge_fw_name: ref;
axiom (__param_myri10ge_fw_name == $sub.ref(0, 38053));
const myri10ge_fw_unaligned: ref;
axiom (myri10ge_fw_unaligned == $sub.ref(0, 39085));
const myri10ge_ecrc_enable: ref;
axiom (myri10ge_ecrc_enable == $sub.ref(0, 40113));
const myri10ge_fw_aligned: ref;
axiom (myri10ge_fw_aligned == $sub.ref(0, 41145));
const myri10ge_force_firmware: ref;
axiom (myri10ge_force_firmware == $sub.ref(0, 42173));
const myri10ge_debug: ref;
axiom (myri10ge_debug == $sub.ref(0, 43201));
const myri10ge_intr_coal_delay: ref;
axiom (myri10ge_intr_coal_delay == $sub.ref(0, 44229));
const myri10ge_flow_control: ref;
axiom (myri10ge_flow_control == $sub.ref(0, 45257));
const myri10ge_max_irq_loops: ref;
axiom (myri10ge_max_irq_loops == $sub.ref(0, 46285));
const myri10ge_deassert_wait: ref;
axiom (myri10ge_deassert_wait == $sub.ref(0, 47313));
const myri10ge_dca: ref;
axiom (myri10ge_dca == $sub.ref(0, 48341));
const myri10ge_fill_thresh: ref;
axiom (myri10ge_fill_thresh == $sub.ref(0, 49369));
const {:count 14} myri10ge_gstrings_slice_stats: ref;
axiom (myri10ge_gstrings_slice_stats == $sub.ref(0, 50841));
const {:count 46} myri10ge_gstrings_main_stats: ref;
axiom (myri10ge_gstrings_main_stats == $sub.ref(0, 53337));
const myri10ge_max_slices: ref;
axiom (myri10ge_max_slices == $sub.ref(0, 54365));
const myri10ge_rss_hash: ref;
axiom (myri10ge_rss_hash == $sub.ref(0, 55393));
const {:count 3} myri10ge_pci_tbl: ref;
axiom (myri10ge_pci_tbl == $sub.ref(0, 56513));
const myri10ge_driver: ref;
axiom (myri10ge_driver == $sub.ref(0, 57849));
const myri10ge_dca_notifier: ref;
axiom (myri10ge_dca_notifier == $sub.ref(0, 58897));
const {:count 31} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 59952));
const {:count 36} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 61012));
const cpu_number: ref;
axiom (cpu_number == $sub.ref(0, 32776));
const __preempt_count: ref;
axiom (__preempt_count == $sub.ref(0, 32784));
const {:count 9} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 62045));
const {:count 21} .str.114: ref;
axiom (.str.114 == $sub.ref(0, 63090));
const {:count 25} .str.123: ref;
axiom (.str.123 == $sub.ref(0, 64139));
const {:count 14} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 65177));
const {:count 32} .str.103: ref;
axiom (.str.103 == $sub.ref(0, 66233));
const {:count 28} .str.125: ref;
axiom (.str.125 == $sub.ref(0, 67285));
const {:count 25} .str.126: ref;
axiom (.str.126 == $sub.ref(0, 68334));
const {:count 39} .str.127: ref;
axiom (.str.127 == $sub.ref(0, 69397));
const {:count 24} .str.128: ref;
axiom (.str.128 == $sub.ref(0, 70445));
const {:count 27} .str.129: ref;
axiom (.str.129 == $sub.ref(0, 71496));
const {:count 23} .str.130: ref;
axiom (.str.130 == $sub.ref(0, 72543));
const {:count 24} .str.131: ref;
axiom (.str.131 == $sub.ref(0, 73591));
const jiffies: ref;
axiom (jiffies == $sub.ref(0, 32792));
const {:count 41} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 74656));
const dma_ops: ref;
axiom (dma_ops == $sub.ref(0, 32800));
const {:count 26} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 75706));
const {:count 20} .str.134: ref;
axiom (.str.134 == $sub.ref(0, 76750));
const {:count 38} .str.132: ref;
axiom (.str.132 == $sub.ref(0, 77812));
const {:count 36} .str.133: ref;
axiom (.str.133 == $sub.ref(0, 78872));
const {:count 19} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 79915));
const {:count 27} .str.105: ref;
axiom (.str.105 == $sub.ref(0, 80966));
const {:count 47} .str.106: ref;
axiom (.str.106 == $sub.ref(0, 82037));
const {:count 12} .str.107: ref;
axiom (.str.107 == $sub.ref(0, 83073));
const {:count 33} .str.108: ref;
axiom (.str.108 == $sub.ref(0, 84130));
const {:count 24} .str.109: ref;
axiom (.str.109 == $sub.ref(0, 85178));
const {:count 12} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 86214));
const {:count 9} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 87247));
const {:count 28} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 88299));
const {:count 5} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 89328));
const {:count 9} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 90361));
const {:count 30} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 91415));
const system_wq: ref;
axiom (system_wq == $sub.ref(0, 32808));
const {:count 32} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 92471));
const {:count 35} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 93530));
const {:count 7} .str.119: ref;
axiom (.str.119 == $sub.ref(0, 94561));
const {:count 8} .str.120: ref;
axiom (.str.120 == $sub.ref(0, 95593));
const {:count 22} .str.118: ref;
axiom (.str.118 == $sub.ref(0, 96639));
const {:count 32} .str.102: ref;
axiom (.str.102 == $sub.ref(0, 97695));
const {:count 33} .str.104: ref;
axiom (.str.104 == $sub.ref(0, 98752));
const {:count 49} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 99825));
const {:count 60} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 100909));
const {:count 57} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 101990));
const {:count 50} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 103064));
const {:count 28} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 104116));
const {:count 33} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 105173));
const {:count 2} .str.73: ref;
axiom (.str.73 == $sub.ref(0, 106199));
const {:count 5} .str.74: ref;
axiom (.str.74 == $sub.ref(0, 107228));
const {:count 6} .str.75: ref;
axiom (.str.75 == $sub.ref(0, 108258));
const {:count 11} .str.76: ref;
axiom (.str.76 == $sub.ref(0, 109293));
const {:count 29} .str.77: ref;
axiom (.str.77 == $sub.ref(0, 110346));
const {:count 9} .str.124: ref;
axiom (.str.124 == $sub.ref(0, 111379));
const {:count 28} .str.135: ref;
axiom (.str.135 == $sub.ref(0, 112431));
const {:count 26} .str.136: ref;
axiom (.str.136 == $sub.ref(0, 113481));
const {:count 20} .str.137: ref;
axiom (.str.137 == $sub.ref(0, 114525));
const {:count 63} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 115612));
const {:count 49} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 116685));
const {:count 199} .str.121: ref;
axiom (.str.121 == $sub.ref(0, 117908));
const pv_irq_ops: ref;
axiom (pv_irq_ops == $sub.ref(0, 32816));
const {:count 196} .str.122: ref;
axiom (.str.122 == $sub.ref(0, 119128));
const {:count 14} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 120166));
const {:count 31} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 121221));
const {:count 33} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 122278));
const {:count 52} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 123354));
const {:count 27} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 124405));
const {:count 39} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 125468));
const {:count 42} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 126534));
const {:count 25} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 127583));
const {:count 29} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 128636));
const {:count 25} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 129685));
const {:count 22} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 130731));
const {:count 28} .str.46: ref;
axiom (.str.46 == $sub.ref(0, 131783));
const {:count 8} .str.48: ref;
axiom (.str.48 == $sub.ref(0, 132815));
const {:count 9} .str.49: ref;
axiom (.str.49 == $sub.ref(0, 133848));
const {:count 42} .str.47: ref;
axiom (.str.47 == $sub.ref(0, 134914));
const {:count 4} .str.51: ref;
axiom (.str.51 == $sub.ref(0, 135942));
const {:count 5} .str.52: ref;
axiom (.str.52 == $sub.ref(0, 136971));
const {:count 38} .str.50: ref;
axiom (.str.50 == $sub.ref(0, 138033));
const {:count 41} .str.53: ref;
axiom (.str.53 == $sub.ref(0, 139098));
const {:count 12} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 140134));
const {:count 22} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 141180));
const {:count 25} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 142229));
const {:count 27} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 143280));
const {:count 28} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 144332));
const {:count 37} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 145393));
const {:count 34} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 146451));
const {:count 45} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 147520));
const {:count 46} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 148590));
const .str: ref;
axiom (.str == $sub.ref(0, 149615));
const {:count 5} .str.113: ref;
axiom (.str.113 == $sub.ref(0, 150644));
const {:count 34} .str.112: ref;
axiom (.str.112 == $sub.ref(0, 151702));
const {:count 18} .str.115: ref;
axiom (.str.115 == $sub.ref(0, 152744));
const {:count 15} .str.116: ref;
axiom (.str.116 == $sub.ref(0, 153783));
const {:count 27} .str.117: ref;
axiom (.str.117 == $sub.ref(0, 154834));
const {:count 41} .str.110: ref;
axiom (.str.110 == $sub.ref(0, 155899));
const {:count 38} .str.111: ref;
axiom (.str.111 == $sub.ref(0, 156961));
const {:count 31} .str.97: ref;
axiom (.str.97 == $sub.ref(0, 158016));
const {:count 24} .str.98: ref;
axiom (.str.98 == $sub.ref(0, 159064));
const {:count 34} .str.99: ref;
axiom (.str.99 == $sub.ref(0, 160122));
const {:count 33} .str.79: ref;
axiom (.str.79 == $sub.ref(0, 161179));
const {:count 34} .str.80: ref;
axiom (.str.80 == $sub.ref(0, 162237));
const {:count 39} .str.81: ref;
axiom (.str.81 == $sub.ref(0, 163300));
const {:count 55} .str.82: ref;
axiom (.str.82 == $sub.ref(0, 164379));
const {:count 49} .str.83: ref;
axiom (.str.83 == $sub.ref(0, 165452));
const {:count 13} .str.84: ref;
axiom (.str.84 == $sub.ref(0, 166489));
const {:count 8} .str.85: ref;
axiom (.str.85 == $sub.ref(0, 167521));
const {:count 16} .str.86: ref;
axiom (.str.86 == $sub.ref(0, 168561));
const {:count 36} .str.96: ref;
axiom (.str.96 == $sub.ref(0, 169621));
const {:count 52} .str.95: ref;
axiom (.str.95 == $sub.ref(0, 170697));
const {:count 25} .str.91: ref;
axiom (.str.91 == $sub.ref(0, 171746));
const {:count 9} .str.92: ref;
axiom (.str.92 == $sub.ref(0, 172779));
const {:count 27} .str.93: ref;
axiom (.str.93 == $sub.ref(0, 173830));
const {:count 20} .str.94: ref;
axiom (.str.94 == $sub.ref(0, 174874));
const {:count 46} .str.87: ref;
axiom (.str.87 == $sub.ref(0, 175944));
const {:count 26} .str.88: ref;
axiom (.str.88 == $sub.ref(0, 176994));
const {:count 19} .str.89: ref;
axiom (.str.89 == $sub.ref(0, 178037));
const {:count 47} .str.90: ref;
axiom (.str.90 == $sub.ref(0, 179108));
const {:count 15} .str.58: ref;
axiom (.str.58 == $sub.ref(0, 180147));
const {:count 39} .str.59: ref;
axiom (.str.59 == $sub.ref(0, 181210));
const {:count 41} .str.60: ref;
axiom (.str.60 == $sub.ref(0, 182275));
const {:count 27} .str.61: ref;
axiom (.str.61 == $sub.ref(0, 183326));
const {:count 37} .str.63: ref;
axiom (.str.63 == $sub.ref(0, 184387));
const {:count 36} .str.64: ref;
axiom (.str.64 == $sub.ref(0, 185447));
const {:count 21} .str.65: ref;
axiom (.str.65 == $sub.ref(0, 186492));
const {:count 52} .str.66: ref;
axiom (.str.66 == $sub.ref(0, 187568));
const {:count 40} .str.67: ref;
axiom (.str.67 == $sub.ref(0, 188632));
const {:count 61} .str.68: ref;
axiom (.str.68 == $sub.ref(0, 189717));
const {:count 39} .str.69: ref;
axiom (.str.69 == $sub.ref(0, 190780));
const {:count 37} .str.70: ref;
axiom (.str.70 == $sub.ref(0, 191841));
const {:count 67} .str.71: ref;
axiom (.str.71 == $sub.ref(0, 192932));
const {:count 36} .str.72: ref;
axiom (.str.72 == $sub.ref(0, 193992));
const {:count 5} .str.54: ref;
axiom (.str.54 == $sub.ref(0, 195021));
const {:count 4} .str.55: ref;
axiom (.str.55 == $sub.ref(0, 196049));
const {:count 4} .str.56: ref;
axiom (.str.56 == $sub.ref(0, 197077));
const {:count 32} .str.57: ref;
axiom (.str.57 == $sub.ref(0, 198133));
const x86_dma_fallback_dev: ref;
axiom (x86_dma_fallback_dev == $sub.ref(0, 32824));
const {:count 21} .str.62: ref;
axiom (.str.62 == $sub.ref(0, 199178));
const {:count 22} .str.78: ref;
axiom (.str.78 == $sub.ref(0, 200224));
const param_ops_charp: ref;
axiom (param_ops_charp == $sub.ref(0, 32832));
const {:count 25} .str.100: ref;
axiom (.str.100 == $sub.ref(0, 201273));
const {:count 26} .str.101: ref;
axiom (.str.101 == $sub.ref(0, 202323));
const {:count 23} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 203370));
const {:count 65} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 204459));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32840));
const {:count 14} .str.2.142: ref;
axiom (.str.2.142 == $sub.ref(0, 205497));
const ldv_EMGentry_exit_myri10ge_cleanup_module_17_2: ref;
axiom (ldv_EMGentry_exit_myri10ge_cleanup_module_17_2 == $sub.ref(0, 206529));
procedure  ldv_EMGentry_exit_myri10ge_cleanup_module_17_2($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15497, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_cleanup_module();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15499, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 207561));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const myri10ge_cleanup_module: ref;
axiom (myri10ge_cleanup_module == $sub.ref(0, 208593));
procedure  myri10ge_cleanup_module()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15362, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dca_unregister_notify_100(myri10ge_dca_notifier);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15363, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_unregister_driver_101(myri10ge_driver);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15365, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dca_unregister_notify_100: ref;
axiom (ldv_dca_unregister_notify_100 == $sub.ref(0, 209625));
procedure  ldv_dca_unregister_notify_100($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17479, 3} true;
  assume {:verifier.code 0} true;
  call dca_unregister_notify($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17480, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dca_unregister_notify($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17482, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_unregister_driver_101: ref;
axiom (ldv_pci_unregister_driver_101 == $sub.ref(0, 210657));
procedure  ldv_pci_unregister_driver_101($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17491, 3} true;
  assume {:verifier.code 0} true;
  call pci_unregister_driver($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17492, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_unregister_driver($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17494, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_unregister_driver: ref;
axiom (pci_unregister_driver == $sub.ref(0, 211689));
procedure  pci_unregister_driver($p0: ref);
const ldv_pci_unregister_driver: ref;
axiom (ldv_pci_unregister_driver == $sub.ref(0, 212721));
procedure  ldv_pci_unregister_driver($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16926, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_deregister_13_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16928, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_deregister_13_1: ref;
axiom (ldv_dispatch_deregister_13_1 == $sub.ref(0, 213753));
procedure  ldv_dispatch_deregister_13_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15616, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dca_unregister_notify: ref;
axiom (dca_unregister_notify == $sub.ref(0, 214785));
procedure  dca_unregister_notify($p0: ref);
const ldv_dca_unregister_notify: ref;
axiom (ldv_dca_unregister_notify == $sub.ref(0, 215817));
procedure  ldv_dca_unregister_notify($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15584, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_deregister_15_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15586, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_deregister_15_1: ref;
axiom (ldv_dispatch_deregister_15_1 == $sub.ref(0, 216849));
procedure  ldv_dispatch_deregister_15_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15624, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_notify_dca: ref;
axiom (myri10ge_notify_dca == $sub.ref(0, 217881));
procedure  myri10ge_notify_dca($p0: ref, $i1: i64, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p3, $i1);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15313, 78} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15313, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := driver_for_each_device($add.ref(myri10ge_driver, 104), $0.ref, $p4, myri10ge_notify_dca_device);
  // WARNING: %6 = call i32 @driver_for_each_device(%struct.device_driver* getelementptr inbounds (%struct.pci_driver, %struct.pci_driver* @myri10ge_driver, i32 0, i32 12), %struct.device* null, i8* %5, i32 (%struct.device*, i8*)* @myri10ge_notify_dca_device), !dbg !8152, !verifier.code !8141
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !8224, metadata !8144), !dbg !8225, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15317, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15317, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15318, 5} true;
  assume {:verifier.code 0} true;
  $i7 := 32770;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15324, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15322, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
}
const myri10ge_notify_dca_device: ref;
axiom (myri10ge_notify_dca_device == $sub.ref(0, 218913));
procedure  myri10ge_notify_dca_device($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10404, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_dev_get_drvdata_85($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10405, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10406, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10406, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.0, $p4);
  // WARNING: %6 = load i64, i64* %5, align 8, !dbg !8158, !verifier.code !8146
  call {:cexpr "event"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10408, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10408, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10410, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_setup_dca($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10412, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10413, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10413, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10420, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb4:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10415, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_teardown_dca($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10417, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
}
const driver_for_each_device: ref;
axiom (driver_for_each_device == $sub.ref(0, 219945));
procedure  driver_for_each_device($p0: ref, $p1: ref, $p2: ref, $p3: ref)
  returns ($r: i32);
const ldv_dev_get_drvdata_85: ref;
axiom (ldv_dev_get_drvdata_85 == $sub.ref(0, 220977));
procedure  ldv_dev_get_drvdata_85($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17263, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17265, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const myri10ge_setup_dca: ref;
axiom (myri10ge_setup_dca == $sub.ref(0, 222009));
procedure  myri10ge_setup_dca($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $i45: i1;
  var $i28: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10318, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10318, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 536);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 42} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 76} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 76} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10320, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 84} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 84} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 96} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10319, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10370, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10324, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10324, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10324, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10326, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10326, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := dev_err.ref.ref($p14, .str.26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10328, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10333, 35} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10333, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := dca_add_requester($p16);
  // WARNING: %25 = call i32 @dca_add_requester(%struct.device* %24), !dbg !8174, !verifier.code !8146
  call {:cexpr "err"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10335, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10336, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i17, $sub.i32(0, 19));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10336, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb13:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10338, 49} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10338, 7} true;
  assume {:verifier.code 0} true;
  call $i21 := dev_err.ref.ref.i32($p20, .str.27, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10341, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10344, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10349, 24} true;
  assume {:verifier.code 0} true;
  call $i22 := myri10ge_toggle_relaxed($p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10349, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10349, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10350, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10350, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, 1);
  // WARNING: store i32 1, i32* %38, align 8, !dbg !8195, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 16} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 16} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 9} true;
  assume {:verifier.code 0} true;
  $i27 := $slt.i32(0, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 7} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  goto $bb20;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i27 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10363, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10356, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10356, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10356, 14} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10356, 12} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p30, $mul.ref($i31, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10356, 34} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p30, $mul.ref($i31, 688)), 532);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10356, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10357, 9} true;
  assume {:verifier.code 0} true;
  $p34 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10357, 9} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10357, 14} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10357, 12} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p35, $mul.ref($i36, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10357, 34} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p35, $mul.ref($i36, 688)), 528);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10357, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10358, 28} true;
  assume {:verifier.code 0} true;
  $p39 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10358, 28} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10358, 33} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10358, 31} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p40, $mul.ref($i41, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10358, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_update_dca($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10359, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i28, 1);
  // WARNING: %57 = add nsw i32 %.01, 1, !dbg !8217, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 16} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i43, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $i43;
  assume {:branchcond $i45} true;
  goto $bb22, $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 7} true;
  assume {:verifier.code 0} true;
  assume ($i45 == 1);
  goto $bb20;
$bb23:
  assume !(($i45 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10362, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10368, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const myri10ge_teardown_dca: ref;
axiom (myri10ge_teardown_dca == $sub.ref(0, 223041));
procedure  myri10ge_teardown_dca($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10376, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10376, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10377, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10377, 12} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10377, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10377, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10378, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10395, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10382, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10382, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10383, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10383, 12} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10383, 26} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10383, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10385, 5} true;
  assume {:verifier.code 0} true;
  call $i10 := myri10ge_toggle_relaxed($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10391, 32} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10391, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := dca_remove_requester($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10393, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const myri10ge_toggle_relaxed: ref;
axiom (myri10ge_toggle_relaxed == $sub.ref(0, 224073));
procedure  myri10ge_toggle_relaxed($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i16;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i16;
  var $i10: i32;
  var $i11: i32;
  var $i12: i16;
  var $i13: i16;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $i17: i32;
  var $i18: i32;
  var $i19: i16;
  var $i20: i16;
  var $i21: i32;
  var $i22: i16;
  var $i23: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !8389, metadata !8144), !dbg !8390, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10035, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := pcie_capability_read_word($p0, 8, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10036, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10036, 10} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10036, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10036, 26} true;
  assume {:verifier.code 0} true;
  $i7 := $ashr.i32($i6, 4);
  // WARNING: %8 = ashr i32 %7, 4, !dbg !8155, !verifier.code !8141
  call {:cexpr "ret"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10038, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10038, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10040, 26} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10040, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i16.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10040, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i10, 65519);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10040, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i16($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10040, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 33} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i16.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 59} true;
  assume {:verifier.code 0} true;
  $i15 := $shl.i32($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 47} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 40} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i16.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 38} true;
  assume {:verifier.code 0} true;
  $i18 := $or.i32($i14, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i16($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10041, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10042, 47} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10042, 41} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i16.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10042, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i16($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10042, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := pcie_capability_write_word($p0, 8, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10044, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10047, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const dca_remove_requester: ref;
axiom (dca_remove_requester == $sub.ref(0, 225105));
procedure  dca_remove_requester($p0: ref)
  returns ($r: i32);
const pcie_capability_read_word: ref;
axiom (pcie_capability_read_word == $sub.ref(0, 226137));
procedure  pcie_capability_read_word($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32);
const pcie_capability_write_word: ref;
axiom (pcie_capability_write_word == $sub.ref(0, 227169));
procedure  pcie_capability_write_word($p0: ref, $i1: i32, $i2: i16)
  returns ($r: i32);
const dev_err: ref;
axiom (dev_err == $sub.ref(0, 228201));
procedure  dev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  dev_err.ref.ref.ref($p0: ref, $p1: ref, p.2: ref)
  returns ($r: i32);
procedure  dev_err.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  dev_err.ref.ref.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32)
  returns ($r: i32);
procedure  dev_err.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32)
  returns ($r: i32);
procedure  dev_err.ref.ref.ref.i64($p0: ref, $p1: ref, p.2: ref, p.3: i64)
  returns ($r: i32);
procedure  dev_err.ref.ref.i32.i64($p0: ref, $p1: ref, p.2: i32, p.3: i64)
  returns ($r: i32);
procedure  dev_err.ref.ref.i64.i64($p0: ref, $p1: ref, p.2: i64, p.3: i64)
  returns ($r: i32);
const dca_add_requester: ref;
axiom (dca_add_requester == $sub.ref(0, 229233));
procedure  dca_add_requester($p0: ref)
  returns ($r: i32);
const myri10ge_update_dca: ref;
axiom (myri10ge_update_dca == $sub.ref(0, 230265));
procedure  myri10ge_update_dca($p0: ref)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10077, 3} true;
  assume {:verifier.code 0} true;
  call __preempt_count_add(1);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10093, 5} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10204, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10116, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  call $i3 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10133, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10134, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  call $i1 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10127, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10128, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10145, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10145, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10146, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  call $i2 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10130, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10131, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb7:
  call $i4 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10136, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10137, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10140, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10141, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10143, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10288, 18} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 532);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10288, 18} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10288, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i13, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10288, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb36, $bb37;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10160, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  call $i8 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10177, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10178, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  call $i6 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10171, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10172, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10189, 16} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10189, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10190, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb15:
  call $i7 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10174, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10175, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb16:
  call $i9 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10180, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10181, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10184, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10185, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10187, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb19:
  call $i13 := devirtbounce.1(0, cpu_number);
  // WARNING: %34 = call i32 @devirtbounce.1(i32 (i32*)* asm "movl %gs:${1:P},$0", "=r,*m,~{dirflag},~{fpsr},~{flags}", i32* @cpu_number)
  call {:cexpr "pfo_ret_____1"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10222, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  call $i11 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10215, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10216, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10234, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb22:
  call $i12 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10218, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10219, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb23:
  call $i14 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10224, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10225, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10228, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10229, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10231, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10248, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  call $i17 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10265, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10266, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  call $i15 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10259, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10260, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10277, 16} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10277, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10278, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb30:
  call $i16 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10262, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10263, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb31:
  call $i18 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10268, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10269, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10272, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10273, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10275, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10281, 3} true;
  assume {:verifier.code 0} true;
  call __bad_size_call_parameter();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10283, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10285, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb36:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10290, 32} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10290, 32} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10290, 38} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10290, 38} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10290, 45} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10290, 11} true;
  assume {:verifier.code 0} true;
  call $i28 := dca3_get_tag($p27, $i13);
  // WARNING: %65 = call zeroext i8 @dca3_get_tag(%struct.device* %64, i32 %34), !dbg !8248, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10291, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  // WARNING: %66 = zext i8 %65 to i32, !dbg !8251, !verifier.code !8146
  call {:cexpr "tag"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10293, 13} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 528);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10293, 13} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10293, 28} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10293, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb38, $bb39;
$bb37:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb38:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10295, 7} true;
  assume {:verifier.code 0} true;
  call myri10ge_write_dca($p0, $i13, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10297, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10300, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 532);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10300, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10301, 3} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10306, 3} true;
  assume {:verifier.code 0} true;
  call __preempt_count_sub(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10308, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __preempt_count_add: ref;
axiom (__preempt_count_add == $sub.ref(0, 231297));
procedure  __preempt_count_add($i0: i32)
{
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !8553, metadata !8144), !dbg !8554, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6458, 5} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6489, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6489, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb17, $bb18;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6469, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6469, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i1 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6471, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6472, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6472, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6477, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i2 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6474, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i2 == 1));
  call devirtbounce.3(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb5;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6515, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6479, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i3 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6481, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6482, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6482, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6487, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb14:
  assume ($i4 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6484, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i4 == 1));
  call devirtbounce.3(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb17:
  assume ($i5 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6491, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6492, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6492, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6497, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb20:
  assume ($i6 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6494, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i6 == 1));
  call devirtbounce.3(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6499, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6499, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i7 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6501, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6502, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6502, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb27, $bb28;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6507, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb27:
  assume ($i8 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6504, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i8 == 1));
  call devirtbounce.3(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6510, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6511, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const __bad_percpu_size: ref;
axiom (__bad_percpu_size == $sub.ref(0, 232329));
procedure  __bad_percpu_size();
const __bad_size_call_parameter: ref;
axiom (__bad_size_call_parameter == $sub.ref(0, 233361));
procedure  __bad_size_call_parameter();
const dca3_get_tag: ref;
axiom (dca3_get_tag == $sub.ref(0, 234393));
procedure  dca3_get_tag($p0: ref, $i1: i32)
  returns ($r: i8);
const myri10ge_write_dca: ref;
axiom (myri10ge_write_dca == $sub.ref(0, 235425));
procedure  myri10ge_write_dca($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %0, i64 0, metadata !8614, metadata !8144), !dbg !8615, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !8616, metadata !8144), !dbg !8617, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10056, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 528);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10056, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p3, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10057, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := __fswab32($i2);
  // WARNING: %5 = call i32 @__fswab32(i32 %2), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10058, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 536);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10058, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10058, 3} true;
  assume {:verifier.code 0} true;
  call put_be32($i4, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10060, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __preempt_count_sub: ref;
axiom (__preempt_count_sub == $sub.ref(0, 236457));
procedure  __preempt_count_sub($i0: i32)
{
  var $i1: i1;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !8631, metadata !8144), !dbg !8632, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6536, 5} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6567, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6567, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb17, $bb18;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6547, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6547, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i1 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6549, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6550, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6555, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i2 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6552, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6553, 66} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0, $i0);
  call devirtbounce.3(0, __preempt_count, $i3, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb5;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6593, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6557, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6557, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i4 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6559, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6560, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6560, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6565, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb14:
  assume ($i5 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6562, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6563, 66} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, $i0);
  call devirtbounce.3(0, __preempt_count, $i6, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb17:
  assume ($i7 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6569, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6570, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6570, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6575, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb20:
  assume ($i8 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6572, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6573, 66} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, $i0);
  call devirtbounce.3(0, __preempt_count, $i9, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6577, 16} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6577, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i10 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6579, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6580, 16} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb27, $bb28;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6585, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb27:
  assume ($i11 == 1);
  call devirtbounce.2(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6582, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6583, 66} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, $i0);
  call devirtbounce.3(0, __preempt_count, $i12, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6588, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6589, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6591, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const __fswab32: ref;
axiom (__fswab32 == $sub.ref(0, 237489));
procedure  __fswab32($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6304, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := llvm.bswap.i32($i0);
  // WARNING: %2 = call i32 @llvm.bswap.i32(i32 %0), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6306, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const put_be32: ref;
axiom (put_be32 == $sub.ref(0, 238521));
procedure  put_be32($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8918, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8918, 3} true;
  assume {:verifier.code 0} true;
  call __writel($i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8920, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __writel: ref;
axiom (__writel == $sub.ref(0, 239553));
procedure  __writel($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6800, 58} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  call devirtbounce.4(0, $i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6801, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.bswap.i32: ref;
axiom (llvm.bswap.i32 == $sub.ref(0, 240585));
procedure  llvm.bswap.i32($i0: i32)
  returns ($r: i32);
const ldv_dev_get_drvdata: ref;
axiom (ldv_dev_get_drvdata == $sub.ref(0, 241617));
procedure  ldv_dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 75} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 99} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 99} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 78} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 101} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 75} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17504, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17504, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17504, 23} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17504, 23} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17504, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $p10;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17503, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17510, 1} true;
  assume {:verifier.code 0} true;
  $r := $p11;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17508, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $0.ref;
  goto $bb6;
}
const myri10ge_probe: ref;
axiom (myri10ge_probe == $sub.ref(0, 242649));
procedure  myri10ge_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $i30: i32;
  var $i32: i32;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i32;
  var $i39: i32;
  var $i40: i1;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $i46: i1;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i64;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $i72: i1;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i64;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i64;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i64;
  var $p94: ref;
  var $i95: i64;
  var $i96: i32;
  var $p97: ref;
  var $p98: ref;
  var $i99: i32;
  var $i100: i1;
  var $p101: ref;
  var $p102: ref;
  var $i103: i64;
  var $p104: ref;
  var $i105: i64;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i110: i64;
  var $i111: i1;
  var $p112: ref;
  var $p113: ref;
  var $i114: i64;
  var $p115: ref;
  var $i116: i64;
  var $i117: i32;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $i123: i32;
  var $i124: i32;
  var $i125: i32;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $p129: ref;
  var $i130: i32;
  var $i131: i32;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $i135: i64;
  var $p136: ref;
  var $i137: i64;
  var $i138: i1;
  var $p139: ref;
  var $i140: i32;
  var $i141: i1;
  var $p142: ref;
  var $p143: ref;
  var $i144: i32;
  var $p145: ref;
  var $i146: i64;
  var $i147: i32;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i32;
  var $i155: i64;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $i160: i32;
  var $i161: i1;
  var $p162: ref;
  var $p163: ref;
  var $i164: i8;
  var $p165: ref;
  var $p166: ref;
  var $i167: i32;
  var $i168: i1;
  var $p169: ref;
  var $i170: i32;
  var $i171: i32;
  var $i172: i1;
  var $p173: ref;
  var $i174: i32;
  var $p176: ref;
  var $i177: i32;
  var $i178: i32;
  var $p179: ref;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $p184: ref;
  var $i185: i32;
  var $p187: ref;
  var $i188: i32;
  var $i189: i32;
  var $i190: i1;
  var $i191: i32;
  var $i192: i32;
  var $i193: i1;
  var $p194: ref;
  var $i195: i32;
  var $p196: ref;
  var $p197: ref;
  var $i198: i32;
  var $i199: i64;
  var $i200: i64;
  var $p201: ref;
  var $p202: ref;
  var $i203: i64;
  var $i204: i64;
  var $p205: ref;
  var $p206: ref;
  var $i207: i64;
  var $p208: ref;
  var $i209: i1;
  var $p210: ref;
  var $i211: i64;
  var $i212: i64;
  var $p213: ref;
  var $p214: ref;
  var $i215: i64;
  var $p216: ref;
  var $i217: i32;
  var $i218: i64;
  var $i219: i64;
  var $p220: ref;
  var $p221: ref;
  var $i222: i32;
  var $i223: i1;
  var $p224: ref;
  var $i225: i64;
  var $i226: i64;
  var $p227: ref;
  var $p228: ref;
  var $i229: i32;
  var $i230: i1;
  var $p231: ref;
  var $i232: i64;
  var $i233: i64;
  var $p234: ref;
  var $i235: i32;
  var $i236: i1;
  var $i237: i32;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $i241: i64;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $p256: ref;
  var $i257: i32;
  var $i258: i1;
  var $p259: ref;
  var $i260: i32;
  var $p261: ref;
  var $i262: i32;
  var $i263: i1;
  var $p264: ref;
  var $i265: i32;
  var $p266: ref;
  var $i267: i32;
  var $p268: ref;
  var $p269: ref;
  var $p270: ref;
  var $i271: i32;
  var $i272: i1;
  var $p273: ref;
  var $i274: i32;
  var $p275: ref;
  var $i276: i32;
  var $i277: i1;
  var $p278: ref;
  var $p279: ref;
  var $i280: i32;
  var $p281: ref;
  var $i282: i32;
  var $p283: ref;
  var $p284: ref;
  var $p285: ref;
  var $i286: i32;
  var $i287: i1;
  var $p288: ref;
  var $i289: i32;
  var $i186: i32;
  var $i175: i32;
  var $i148: i32;
  var $p290: ref;
  var $p291: ref;
  var $i292: i64;
  var $i293: i1;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $i298: i64;
  var $i299: i32;
  var $p300: ref;
  var $p301: ref;
  var $i118: i32;
  var $p302: ref;
  var $i303: i32;
  var $i304: i1;
  var $p305: ref;
  var $i306: i32;
  var $p307: ref;
  var $i308: i64;
  var $p309: ref;
  var $i310: i64;
  var $i311: i32;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $p315: ref;
  var $p316: ref;
  var $i317: i64;
  var $i38: i32;
  var $i31: i32;
  var $i10: i32;
  var $p318: ref;
  var $p319: ref;
  var $i320: i8;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $p324: ref;
  var $p325: ref;
  var $i326: i8;
  var $p327: ref;
  var $p328: ref;
  var $p329: ref;
  var $p330: ref;
  var $p331: ref;
  var $i332: i8;
  var $p333: ref;
  var $p334: ref;
  var $p335: ref;
  var $p336: ref;
  var $p337: ref;
  var $i338: i8;
  var $p339: ref;
  var $p340: ref;
  var $p341: ref;
  var $p342: ref;
  var $p343: ref;
  var $i344: i8;
  var $p345: ref;
  var $p346: ref;
  var $p347: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14930, 17} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %7, i64 0, metadata !8765, metadata !8144), !dbg !8766, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14932, 12} true;
  assume {:verifier.code 0} true;
  call $p7 := ldv_alloc_etherdev_mqs_93(968, 32, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14934, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14934, 30} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14934, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14935, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15239, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14940, 32} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14940, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p7, 1280);
  $p13 := $add.ref($p7, 1280);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14940, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p13, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14941, 9} true;
  assume {:verifier.code 0} true;
  call $p14 := netdev_priv($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14942, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14943, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14943, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14944, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p15, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14944, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p17, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14945, 16} true;
  assume {:verifier.code 0} true;
  $i18 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14945, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p15, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14945, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14946, 26} true;
  assume {:verifier.code 0} true;
  $i20 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14946, 8} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p15, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14946, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14947, 36} true;
  assume {:verifier.code 0} true;
  $i22 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14947, 21} true;
  assume {:verifier.code 0} true;
  call $i23 := netif_msg_init($i22, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14947, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p15, 952);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14947, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14948, 8} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p15, 956);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14948, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, $u1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14949, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p15, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14949, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p26, .str.34, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14950, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := pci_enable_device($p0);
  // WARNING: %30 = call i32 @pci_enable_device(%struct.pci_dev* %0), !dbg !8199, !verifier.code !8141
  call {:cexpr "tmp___0"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14952, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14952, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14954, 47} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14954, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := dev_err.ref.ref($p29, .str.35);
  // WARNING: %34 = call i32 (%struct.device*, i8*, ...) @dev_err(%struct.device* %33, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.35, i32 0, i32 0)), !dbg !8208, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14957, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 19);
  goto $bb7;
$bb6:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15234, 3} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p15, $0.ref, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15235, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev_95($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15237, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i31;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14962, 33} true;
  assume {:verifier.code 0} true;
  call $i32 := pci_find_capability($p0, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14962, 8} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p15, 920);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14962, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14963, 12} true;
  assume {:verifier.code 0} true;
  call $i34 := pcie_set_readrq($p0, 4096);
  // WARNING: %39 = call i32 @pcie_set_readrq(%struct.pci_dev* %0, i32 4096), !dbg !8214, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14965, 14} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14965, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14967, 47} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14967, 5} true;
  assume {:verifier.code 0} true;
  call $i37 := dev_err.ref.ref.i32($p36, .str.36, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14970, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $i34;
  goto $bb11;
$bb10:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15230, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15231, 3} true;
  assume {:verifier.code 0} true;
  $i31 := $i38;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14975, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_mask_surprise_down($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14976, 3} true;
  assume {:verifier.code 0} true;
  call pci_set_master($p0);
  // WARNING: call void @pci_set_master(%struct.pci_dev* %0), !dbg !8225, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14978, 12} true;
  assume {:verifier.code 0} true;
  call $i39 := pci_set_dma_mask($p0, $sub.i64(0, 1));
  // WARNING: %46 = call i32 @pci_set_dma_mask(%struct.pci_dev* %0, i64 -1), !dbg !8228, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14980, 14} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14983, 47} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14983, 5} true;
  assume {:verifier.code 0} true;
  call $i42 := dev_err.ref.ref($p41, .str.37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14984, 14} true;
  assume {:verifier.code 0} true;
  call $i43 := pci_set_dma_mask($p0, 4294967295);
  // WARNING: %51 = call i32 @pci_set_dma_mask(%struct.pci_dev* %0, i64 4294967295), !dbg !8236, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14986, 3} true;
  assume {:verifier.code 0} true;
  $i44, $i45 := $i43, 0;
  goto $bb15;
$bb14:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  $i44, $i45 := $i39, 1;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14989, 14} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14989, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14991, 47} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14991, 5} true;
  assume {:verifier.code 0} true;
  call $i48 := dev_err.ref.ref.i32($p47, .str.38, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14994, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $i44;
  goto $bb11;
$bb17:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14999, 3} true;
  assume {:verifier.code 0} true;
  call $i49 := pci_set_consistent_dma_mask($p0, $sub.i64(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15000, 37} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15000, 54} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p15, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15000, 13} true;
  assume {:verifier.code 0} true;
  call $p52 := dma_alloc_attrs($p50, 8, $p51, 208, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15001, 14} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15001, 8} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p15, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15001, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p54, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15003, 28} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p15, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15003, 28} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15003, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15003, 32} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i64($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15003, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15004, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $i44;
  goto $bb11;
$bb20:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 27} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 1544);
  $p60 := $add.ref($p0, 1544);
  $p61 := $add.ref($p0, 1544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 39} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i64($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 45} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i64($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 53} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb22, $bb24;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 53} true;
  assume {:verifier.code 0} true;
  assume ($i63 == 1);
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 131} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 1544);
  $p74 := $add.ref($p0, 1544);
  $p75 := $add.ref($add.ref($p0, 1544), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 143} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i64($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 155} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 1544);
  $p78 := $add.ref($p0, 1544);
  $p79 := $add.ref($p0, 1544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 167} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i64($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 147} true;
  assume {:verifier.code 0} true;
  $i81 := $sub.i64($i76, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 174} true;
  assume {:verifier.code 0} true;
  $i82 := $add.i64($i81, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 21} true;
  assume {:verifier.code 0} true;
  $i83 := $i82;
  goto $bb27;
$bb24:
  assume !(($i63 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 62} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 1544);
  $p65 := $add.ref($p0, 1544);
  $p66 := $add.ref($add.ref($p0, 1544), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 74} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i64($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 87} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 1544);
  $p69 := $add.ref($p0, 1544);
  $p70 := $add.ref($p0, 1544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 99} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i64($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 78} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i64($i67, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 21} true;
  assume {:verifier.code 0} true;
  assume ($i72 == 1);
  goto $bb23;
$bb26:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 21} true;
  assume {:verifier.code 0} true;
  $i83 := 0;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 8} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15009, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p84, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15010, 43} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 1544);
  $p86 := $add.ref($p0, 1544);
  $p87 := $add.ref($p0, 1544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15010, 55} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i64($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15010, 8} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p15, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15010, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p89, $i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15011, 8} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p15, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15011, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p90, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15012, 8} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p15, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15012, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p91, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15013, 29} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p15, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15013, 29} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i64($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15013, 46} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15013, 46} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i64($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15013, 15} true;
  assume {:verifier.code 0} true;
  call $i96 := mtrr_add($i93, $i95, 1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15013, 8} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p15, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15013, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p97, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15015, 12} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p15, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15015, 12} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15015, 17} true;
  assume {:verifier.code 0} true;
  $i100 := $sge.i32($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15015, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15016, 10} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p15, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15016, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p101, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15017, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15021, 47} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p15, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15021, 47} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i64($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15021, 64} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15021, 64} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i64($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15021, 13} true;
  assume {:verifier.code 0} true;
  call $p106 := ioremap_wc($i103, $i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15022, 8} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p15, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15022, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p107, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15024, 28} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p15, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15024, 28} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15024, 7} true;
  assume {:verifier.code 0} true;
  $i110 := $p2i.ref.i64($p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15024, 33} true;
  assume {:verifier.code 0} true;
  $i111 := $eq.i64($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15024, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15026, 47} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15027, 18} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15027, 18} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i64($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15027, 35} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p15, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15027, 35} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i64($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15026, 5} true;
  assume {:verifier.code 0} true;
  call $i117 := dev_err.ref.ref.i64.i64($p112, .str.39, $i114, $i116);
  // WARNING: %139 = call i32 (%struct.device*, i8*, ...) @dev_err(%struct.device* %134, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.39, i32 0, i32 0), i64 %136, i64 %138), !dbg !8328, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15030, 5} true;
  assume {:verifier.code 0} true;
  $i118 := $sub.i32(0, 6);
  goto $bb33;
$bb32:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15218, 12} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p15, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15218, 12} true;
  assume {:verifier.code 0} true;
  $i303 := $load.i32($M.0, $p302);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15218, 17} true;
  assume {:verifier.code 0} true;
  $i304 := $sge.i32($i303, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15218, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i304} true;
  goto $bb88, $bb89;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15035, 49} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p15, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15035, 49} true;
  assume {:verifier.code 0} true;
  $p120 := $load.ref($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15035, 54} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p120, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15035, 13} true;
  assume {:verifier.code 0} true;
  call $i122 := readl($p121);
  // WARNING: %145 = call i32 @readl(i8* %144), !dbg !8333, !verifier.code !8141
  call {:cexpr "tmp___3"} boogie_si_record_i32($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15036, 13} true;
  assume {:verifier.code 0} true;
  call $i123 := __fswab32($i122);
  // WARNING: %146 = call i32 @__fswab32(i32 %145), !dbg !8336, !verifier.code !8141
  call {:cexpr "tmp___4"} boogie_si_record_i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15037, 24} true;
  assume {:verifier.code 0} true;
  $i124 := $and.i32($i123, 1048572);
  // WARNING: %147 = and i32 %146, 1048572, !dbg !8339, !verifier.code !8141
  call {:cexpr "hdr_offset"} boogie_si_record_i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15038, 26} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i32($i124, 144);
  // WARNING: %148 = add i32 %147, 144, !dbg !8342, !verifier.code !8141
  call {:cexpr "ss_offset"} boogie_si_record_i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15039, 49} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p15, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15039, 49} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15039, 56} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i32.i64($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15039, 54} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p127, $mul.ref($i128, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15039, 13} true;
  assume {:verifier.code 0} true;
  call $i130 := readl($p129);
  // WARNING: %153 = call i32 @readl(i8* %152), !dbg !8348, !verifier.code !8141
  call {:cexpr "tmp___5"} boogie_si_record_i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15040, 13} true;
  assume {:verifier.code 0} true;
  call $i131 := __fswab32($i130);
  // WARNING: %154 = call i32 @__fswab32(i32 %153), !dbg !8351, !verifier.code !8141
  call {:cexpr "tmp___6"} boogie_si_record_i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15041, 8} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p15, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15041, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p132, $i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 28} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p15, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 28} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i32($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 7} true;
  assume {:verifier.code 0} true;
  $i135 := $sext.i32.i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 45} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 45} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i64($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 38} true;
  assume {:verifier.code 0} true;
  $i138 := $ugt.i64($i135, $i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 56} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb35, $bb37;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 56} true;
  assume {:verifier.code 0} true;
  assume ($i138 == 1);
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15045, 47} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15046, 18} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p15, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15046, 18} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i32($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15046, 34} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15046, 34} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i64($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15045, 5} true;
  assume {:verifier.code 0} true;
  call $i147 := dev_err.ref.ref.i32.i64($p142, .str.40, $i144, $i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15048, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $i44;
  goto $bb40;
$bb37:
  assume !(($i138 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 64} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p15, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 64} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i32($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 74} true;
  assume {:verifier.code 0} true;
  $i141 := $sle.i32($i140, 1048576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb38, $bb39;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15043, 7} true;
  assume {:verifier.code 0} true;
  assume ($i141 == 1);
  goto $bb36;
$bb39:
  assume !(($i141 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15206, 28} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($p15, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15206, 28} true;
  assume {:verifier.code 0} true;
  $p291 := $load.ref($M.0, $p290);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15206, 7} true;
  assume {:verifier.code 0} true;
  $i292 := $p2i.ref.i64($p291);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15206, 44} true;
  assume {:verifier.code 0} true;
  $i293 := $ne.i64($i292, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15206, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i293} true;
  goto $bb85, $bb86;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 33} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p15, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 17} true;
  assume {:verifier.code 0} true;
  $p150 := $bitcast.ref.ref($p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 80} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p15, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 80} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 108} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p15, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 108} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i32($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 87} true;
  assume {:verifier.code 0} true;
  $i155 := $sext.i32.i64($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 85} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p152, $mul.ref($i155, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15053, 3} true;
  assume {:verifier.code 0} true;
  call memcpy_fromio($p150, $p156, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15055, 26} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p15, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15055, 10} true;
  assume {:verifier.code 0} true;
  $p158 := $bitcast.ref.ref($p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15055, 42} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p158, 254);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15055, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p159, 0, 2, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15056, 12} true;
  assume {:verifier.code 0} true;
  call $i160 := myri10ge_read_mac_addr($p15);
  // WARNING: %186 = call i32 @myri10ge_read_mac_addr(%struct.myri10ge_priv* %18), !dbg !8385, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15058, 14} true;
  assume {:verifier.code 0} true;
  $i161 := $ne.i32($i160, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15058, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15059, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $i160;
  goto $bb40;
$bb43:
  assume !(($i161 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15069, 7} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 50} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p15, 904);
  $p163 := $add.ref($p15, 904);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 45} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i8($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p7, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p166 := $load.ref($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p166, $i164);
  // WARNING: store i8 %194, i8* %196, align 1, !dbg !8397, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 50} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($p15, 904);
  $p319 := $add.ref($add.ref($p15, 904), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 45} true;
  assume {:verifier.code 0} true;
  $i320 := $load.i8($M.0, $p319);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p321 := $add.ref($p7, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p322 := $load.ref($M.0, $p321);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 22} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($p322, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p323, $i320);
  // WARNING: store i8 %398, i8* %401, align 1, !dbg !8397, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15075, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_select_firmware($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15076, 12} true;
  assume {:verifier.code 0} true;
  call $i167 := myri10ge_load_firmware($p15, 1);
  // WARNING: %199 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %18, i32 1), !dbg !8403, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15078, 14} true;
  assume {:verifier.code 0} true;
  $i168 := $ne.i32($i167, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15078, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i168 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15080, 47} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15080, 5} true;
  assume {:verifier.code 0} true;
  call $i170 := dev_err.ref.ref($p169, .str.41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15082, 5} true;
  assume {:verifier.code 0} true;
  $i148 := $i167;
  goto $bb40;
$bb50:
  assume !(($i168 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15087, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_probe_slices($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15088, 12} true;
  assume {:verifier.code 0} true;
  call $i171 := myri10ge_alloc_slices($p15);
  // WARNING: %206 = call i32 @myri10ge_alloc_slices(%struct.myri10ge_priv* %18), !dbg !8414, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15090, 14} true;
  assume {:verifier.code 0} true;
  $i172 := $ne.i32($i171, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15090, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i172} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i172 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15092, 47} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15092, 5} true;
  assume {:verifier.code 0} true;
  call $i174 := dev_err.ref.ref($p173, .str.42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15094, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $i171;
  goto $bb54;
$bb53:
  assume !(($i172 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15203, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_dummy_rdma($p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15204, 3} true;
  assume {:verifier.code 0} true;
  $i148 := $i175;
  goto $bb40;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15099, 60} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p15, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15099, 60} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i32($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15099, 3} true;
  assume {:verifier.code 0} true;
  call $i178 := netif_set_real_num_tx_queues($p7, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15100, 60} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p15, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15100, 60} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i32($M.0, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15100, 3} true;
  assume {:verifier.code 0} true;
  call $i181 := netif_set_real_num_rx_queues($p7, $i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15101, 12} true;
  assume {:verifier.code 0} true;
  call $i182 := myri10ge_reset($p15);
  // WARNING: %219 = call i32 @myri10ge_reset(%struct.myri10ge_priv* %18), !dbg !8428, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15103, 14} true;
  assume {:verifier.code 0} true;
  $i183 := $ne.i32($i182, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15103, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i183 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15105, 47} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15105, 5} true;
  assume {:verifier.code 0} true;
  call $i185 := dev_err.ref.ref($p184, .str.43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15107, 5} true;
  assume {:verifier.code 0} true;
  $i186 := $i182;
  goto $bb58;
$bb57:
  assume !(($i183 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15199, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_slices($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15200, 3} true;
  assume {:verifier.code 0} true;
  $i175 := $i186;
  goto $bb54;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15112, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_setup_dca($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15113, 25} true;
  assume {:verifier.code 0} true;
  $p187 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15113, 3} true;
  assume {:verifier.code 0} true;
  call pci_set_drvdata($p0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15115, 7} true;
  assume {:verifier.code 0} true;
  $i188 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15115, 28} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15115, 33} true;
  assume {:verifier.code 0} true;
  $i190 := $sgt.i32($i189, 9014);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i190 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15116, 26} true;
  assume {:verifier.code 0} true;
  $M.5 := 9000;
  call {:cexpr "myri10ge_initial_mtu"} boogie_si_record_i32(9000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15117, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i190 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15120, 7} true;
  assume {:verifier.code 0} true;
  $i191 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15120, 28} true;
  assume {:verifier.code 0} true;
  $i192 := $add.i32($i191, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15120, 33} true;
  assume {:verifier.code 0} true;
  $i193 := $sle.i32($i192, 67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15120, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i193} true;
  goto $bb63, $bb64;
$bb63:
  assume ($i193 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15121, 26} true;
  assume {:verifier.code 0} true;
  $M.5 := 68;
  call {:cexpr "myri10ge_initial_mtu"} boogie_si_record_i32(68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15122, 3} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume !(($i193 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15125, 11} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p7, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15125, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p194, myri10ge_netdev_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15126, 32} true;
  assume {:verifier.code 0} true;
  $i195 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15126, 11} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p7, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15126, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p196, $i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15127, 51} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p15, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15127, 51} true;
  assume {:verifier.code 0} true;
  $i198 := $load.i32($M.0, $p197);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15127, 25} true;
  assume {:verifier.code 0} true;
  $i199 := $zext.i32.i64($i198);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15127, 60} true;
  assume {:verifier.code 0} true;
  $i200 := $or.i64($i199, 4294967296);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15127, 11} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($p7, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15127, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p201, $i200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15128, 33} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p7, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15128, 33} true;
  assume {:verifier.code 0} true;
  $i203 := $load.i64($M.0, $p202);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15128, 45} true;
  assume {:verifier.code 0} true;
  $i204 := $or.i64($i203, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15128, 11} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p7, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15128, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p205, $i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15129, 30} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p7, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15129, 30} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i64($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15129, 11} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p7, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15129, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p208, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15130, 19} true;
  assume {:verifier.code 0} true;
  $i209 := $ne.i32($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15130, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i209} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i209 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15131, 32} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p7, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15131, 32} true;
  assume {:verifier.code 0} true;
  $i211 := $load.i64($M.0, $p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15131, 41} true;
  assume {:verifier.code 0} true;
  $i212 := $or.i64($i211, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15131, 13} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p7, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15131, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p213, $i212);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15132, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i209 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 35} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p7, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 35} true;
  assume {:verifier.code 0} true;
  $i215 := $load.i64($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 76} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($p15, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 76} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i32($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 51} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.i32.i64($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 49} true;
  assume {:verifier.code 0} true;
  $i219 := $or.i64($i215, $i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 11} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p7, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15135, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p220, $i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15136, 12} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p15, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15136, 12} true;
  assume {:verifier.code 0} true;
  $i222 := $load.i32($M.0, $p221);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15136, 24} true;
  assume {:verifier.code 0} true;
  $i223 := $sle.i32($i222, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15136, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i223} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i223 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15137, 37} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p7, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15137, 37} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i64($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15137, 51} true;
  assume {:verifier.code 0} true;
  $i226 := $and.i64($i225, $sub.i64(0, 1048577));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15137, 13} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($p7, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15137, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p227, $i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15138, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i223 == 1));
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15141, 12} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p15, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15141, 12} true;
  assume {:verifier.code 0} true;
  $i229 := $load.i32($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15141, 24} true;
  assume {:verifier.code 0} true;
  $i230 := $sle.i32($i229, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15141, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i230 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15142, 37} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($p7, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15142, 37} true;
  assume {:verifier.code 0} true;
  $i232 := $load.i64($M.0, $p231);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15142, 51} true;
  assume {:verifier.code 0} true;
  $i233 := $and.i64($i232, $sub.i64(0, 65537));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15142, 13} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p7, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15142, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p234, $i233);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15143, 3} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb73:
  assume !(($i230 == 1));
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15147, 12} true;
  assume {:verifier.code 0} true;
  call $i235 := myri10ge_request_irq($p15);
  // WARNING: %289 = call i32 @myri10ge_request_irq(%struct.myri10ge_priv* %18), !dbg !8509, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i235);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15149, 14} true;
  assume {:verifier.code 0} true;
  $i236 := $ne.i32($i235, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15149, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  goto $bb75, $bb76;
$bb75:
  assume ($i236 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15150, 5} true;
  assume {:verifier.code 0} true;
  $i175 := $i235;
  goto $bb54;
$bb76:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15155, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_irq($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15156, 3} true;
  assume {:verifier.code 0} true;
  call $i237 := pci_save_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15157, 25} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p15, 344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15157, 3} true;
  assume {:verifier.code 0} true;
  call init_timer_key($p238, 0, .str.44, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15158, 8} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p15, 344);
  $p240 := $add.ref($add.ref($p15, 344), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15158, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p240, myri10ge_watchdog_timer);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15159, 30} true;
  assume {:verifier.code 0} true;
  $i241 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15159, 8} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p15, 344);
  $p243 := $add.ref($add.ref($p15, 344), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15159, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p243, $i241);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15160, 11} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p7, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15160, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p244, myri10ge_ethtool_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15161, 22} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($p15, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15161, 3} true;
  assume {:verifier.code 0} true;
  call __init_work($p245, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15162, 19} true;
  assume {:verifier.code 0} true;
  $p246 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15162, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p246, 137438953408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15163, 8} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p15, 264);
  $p248 := $add.ref($p15, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15163, 29} true;
  assume {:verifier.code 0} true;
  $p249 := $bitcast.ref.ref($p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15163, 29} true;
  assume {:verifier.code 0} true;
  $p250 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15163, 29} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p249, $p250, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15164, 27} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p15, 264);
  $p252 := $add.ref($add.ref($p15, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15164, 3} true;
  assume {:verifier.code 0} true;
  call lockdep_init_map($p252, .str.45, $p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15166, 25} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p15, 264);
  $p254 := $add.ref($add.ref($p15, 264), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15166, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p254);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15167, 8} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($p15, 264);
  $p256 := $add.ref($add.ref($p15, 264), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15167, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p256, myri10ge_watchdog);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15168, 12} true;
  assume {:verifier.code 0} true;
  call $i257 := ldv_register_netdev_94($p7);
  // WARNING: %314 = call i32 @ldv_register_netdev_94(%struct.net_device* %8), !dbg !8540, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15170, 14} true;
  assume {:verifier.code 0} true;
  $i258 := $ne.i32($i257, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15170, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i258 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15172, 47} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15172, 5} true;
  assume {:verifier.code 0} true;
  call $i260 := dev_err.ref.ref.i32($p259, .str.46, $i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15175, 5} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume !(($i258 == 1));
  assume {:verifier.code 0} true;
  goto $bb81;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15195, 3} true;
  assume {:verifier.code 0} true;
  call pci_restore_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15196, 3} true;
  assume {:verifier.code 0} true;
  $i186 := $i257;
  goto $bb58;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15179, 12} true;
  assume {:verifier.code 0} true;
  $p261 := $add.ref($p15, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15179, 12} true;
  assume {:verifier.code 0} true;
  $i262 := $load.i32($M.0, $p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15179, 25} true;
  assume {:verifier.code 0} true;
  $i263 := $ne.i32($i262, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15179, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i263} true;
  goto $bb82, $bb83;
$bb82:
  assume ($i263 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 20} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p15, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 20} true;
  assume {:verifier.code 0} true;
  $i265 := $load.i32($M.0, $p264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 37} true;
  assume {:verifier.code 0} true;
  $p266 := $add.ref($p15, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 37} true;
  assume {:verifier.code 0} true;
  $i267 := $load.i32($M.0, $p266);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 55} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p15, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 55} true;
  assume {:verifier.code 0} true;
  $p269 := $load.ref($M.0, $p268);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 69} true;
  assume {:verifier.code 0} true;
  $p270 := $add.ref($p15, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 69} true;
  assume {:verifier.code 0} true;
  $i271 := $load.i32($M.0, $p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 80} true;
  assume {:verifier.code 0} true;
  $i272 := $ne.i32($i271, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15182, 64} true;
  assume {:verifier.code 0} true;
  havoc $p273;
  assume ((($i272 == 1) ==> ($p273 == .str.48)) && (($i272 != 1) ==> ($p273 == .str.49)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15181, 5} true;
  assume {:verifier.code 0} true;
  call $i274 := _dev_info.ref.ref.i32.i32.ref.ref($p6, .str.47, $i265, $i267, $p269, $p273);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15184, 3} true;
  assume {:verifier.code 0} true;
  goto $bb84;
$bb83:
  assume !(($i263 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 20} true;
  assume {:verifier.code 0} true;
  $p275 := $add.ref($p15, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 20} true;
  assume {:verifier.code 0} true;
  $i276 := $load.i32($M.0, $p275);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 32} true;
  assume {:verifier.code 0} true;
  $i277 := $ne.i32($i276, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 15} true;
  assume {:verifier.code 0} true;
  havoc $p278;
  assume ((($i277 == 1) ==> ($p278 == .str.51)) && (($i277 != 1) ==> ($p278 == .str.52)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 77} true;
  assume {:verifier.code 0} true;
  $p279 := $add.ref($p0, 1540);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 77} true;
  assume {:verifier.code 0} true;
  $i280 := $load.i32($M.0, $p279);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 87} true;
  assume {:verifier.code 0} true;
  $p281 := $add.ref($p15, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15187, 87} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i32($M.0, $p281);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15188, 20} true;
  assume {:verifier.code 0} true;
  $p283 := $add.ref($p15, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15188, 20} true;
  assume {:verifier.code 0} true;
  $p284 := $load.ref($M.0, $p283);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15188, 34} true;
  assume {:verifier.code 0} true;
  $p285 := $add.ref($p15, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15188, 34} true;
  assume {:verifier.code 0} true;
  $i286 := $load.i32($M.0, $p285);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15188, 45} true;
  assume {:verifier.code 0} true;
  $i287 := $ne.i32($i286, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15188, 29} true;
  assume {:verifier.code 0} true;
  havoc $p288;
  assume ((($i287 == 1) ==> ($p288 == .str.48)) && (($i287 != 1) ==> ($p288 == .str.49)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15186, 5} true;
  assume {:verifier.code 0} true;
  call $i289 := _dev_info.ref.ref.ref.i32.i32.ref.ref($p6, .str.50, $p278, $i280, $i282, $p284, $p288);
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15192, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
$bb85:
  assume ($i293 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15208, 47} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15209, 18} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p15, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15209, 18} true;
  assume {:verifier.code 0} true;
  $p296 := $load.ref($M.0, $p295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15209, 40} true;
  assume {:verifier.code 0} true;
  $p297 := $add.ref($p15, 912);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15209, 40} true;
  assume {:verifier.code 0} true;
  $i298 := $load.i64($M.0, $p297);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15208, 5} true;
  assume {:verifier.code 0} true;
  call $i299 := dev_err.ref.ref.ref.i64($p294, .str.53, $p296, $i298);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15211, 3} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb86:
  assume !(($i293 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15215, 35} true;
  assume {:verifier.code 0} true;
  $p300 := $add.ref($p15, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15215, 35} true;
  assume {:verifier.code 0} true;
  $p301 := $load.ref($M.0, $p300);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15215, 3} true;
  assume {:verifier.code 0} true;
  call iounmap($p301);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15216, 3} true;
  assume {:verifier.code 0} true;
  $i118 := $i148;
  goto $bb33;
$bb88:
  assume ($i304 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15220, 19} true;
  assume {:verifier.code 0} true;
  $p305 := $add.ref($p15, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15220, 19} true;
  assume {:verifier.code 0} true;
  $i306 := $load.i32($M.0, $p305);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15220, 30} true;
  assume {:verifier.code 0} true;
  $p307 := $add.ref($p15, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15220, 30} true;
  assume {:verifier.code 0} true;
  $i308 := $load.i64($M.0, $p307);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15220, 47} true;
  assume {:verifier.code 0} true;
  $p309 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15220, 47} true;
  assume {:verifier.code 0} true;
  $i310 := $load.i64($M.0, $p309);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15220, 5} true;
  assume {:verifier.code 0} true;
  call $i311 := mtrr_del($i306, $i308, $i310);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15222, 3} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume !(($i304 == 1));
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15226, 26} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15226, 49} true;
  assume {:verifier.code 0} true;
  $p313 := $add.ref($p15, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15226, 49} true;
  assume {:verifier.code 0} true;
  $p314 := $load.ref($M.0, $p313);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15226, 36} true;
  assume {:verifier.code 0} true;
  $p315 := $bitcast.ref.ref($p314);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15226, 59} true;
  assume {:verifier.code 0} true;
  $p316 := $add.ref($p15, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15226, 59} true;
  assume {:verifier.code 0} true;
  $i317 := $load.i64($M.0, $p316);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15226, 3} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p312, 8, $p315, $i317, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15227, 3} true;
  assume {:verifier.code 0} true;
  $i38 := $i118;
  goto $bb11;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 50} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($p15, 904);
  $p325 := $add.ref($add.ref($p15, 904), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 45} true;
  assume {:verifier.code 0} true;
  $i326 := $load.i8($M.0, $p325);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p327 := $add.ref($p7, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p328 := $load.ref($M.0, $p327);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 22} true;
  assume {:verifier.code 0} true;
  $p329 := $add.ref($p328, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p329, $i326);
  // WARNING: store i8 %405, i8* %408, align 1, !dbg !8397, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 50} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($p15, 904);
  $p331 := $add.ref($add.ref($p15, 904), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 45} true;
  assume {:verifier.code 0} true;
  $i332 := $load.i8($M.0, $p331);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p333 := $add.ref($p7, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p334 := $load.ref($M.0, $p333);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 22} true;
  assume {:verifier.code 0} true;
  $p335 := $add.ref($p334, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p335, $i332);
  // WARNING: store i8 %412, i8* %415, align 1, !dbg !8397, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 50} true;
  assume {:verifier.code 0} true;
  $p336 := $add.ref($p15, 904);
  $p337 := $add.ref($add.ref($p15, 904), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 45} true;
  assume {:verifier.code 0} true;
  $i338 := $load.i8($M.0, $p337);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p339 := $add.ref($p7, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p340 := $load.ref($M.0, $p339);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 22} true;
  assume {:verifier.code 0} true;
  $p341 := $add.ref($p340, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p341, $i338);
  // WARNING: store i8 %419, i8* %422, align 1, !dbg !8397, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 50} true;
  assume {:verifier.code 0} true;
  $p342 := $add.ref($p15, 904);
  $p343 := $add.ref($add.ref($p15, 904), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 45} true;
  assume {:verifier.code 0} true;
  $i344 := $load.i8($M.0, $p343);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p345 := $add.ref($p7, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 13} true;
  assume {:verifier.code 0} true;
  $p346 := $load.ref($M.0, $p345);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 22} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($p346, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15066, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p347, $i344);
  // WARNING: store i8 %426, i8* %429, align 1, !dbg !8397, !verifier.code !8141
  assume {:verifier.code 0} true;
  goto $bb48;
}
const myri10ge_remove: ref;
axiom (myri10ge_remove == $sub.ref(0, 243681));
procedure  myri10ge_remove($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15248, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := pci_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15249, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15251, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15251, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15251, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15252, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15290, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15257, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15257, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := cancel_work_sync($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15258, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15258, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15259, 3} true;
  assume {:verifier.code 0} true;
  call ldv_unregister_netdev_96($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15260, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_teardown_dca($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15261, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_dummy_rdma($p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15262, 3} true;
  assume {:verifier.code 0} true;
  call pci_restore_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15263, 35} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15263, 35} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15263, 3} true;
  assume {:verifier.code 0} true;
  call iounmap($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15265, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15265, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15265, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $sge.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15265, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15267, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15267, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15267, 30} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15267, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15267, 47} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15267, 47} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i64($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15267, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := mtrr_del($i15, $i17, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15269, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15273, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_slices($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15275, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15275, 28} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15275, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15275, 41} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15275, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15277, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15277, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15277, 11} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15277, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15279, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15283, 26} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15283, 49} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p2, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15283, 49} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15283, 36} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15283, 59} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15283, 59} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i64($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15283, 3} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p28, 8, $p31, $i33, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15284, 3} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p2, $0.ref, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15285, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev_97($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15286, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15288, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const myri10ge_suspend: ref;
axiom (myri10ge_suspend == $sub.ref(0, 244713));
procedure  myri10ge_suspend($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i1;
  var $i12: i8;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i8: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:verifier.code 0} true;
  $M.6 := $store.i32($M.6, $p3, $i1);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14172, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := pci_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14173, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14175, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14175, 27} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14175, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14176, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14204, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14181, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14181, 17} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14182, 3} true;
  assume {:verifier.code 0} true;
  call netif_device_detach($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14183, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := netif_running($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14183, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i8($i11);
  // WARNING: %15 = zext i1 %14 to i8, !dbg !8167, !verifier.code !8141
  call {:cexpr "tmp___0"} boogie_si_record_i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14185, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i8.i1($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14185, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14187, 5} true;
  assume {:verifier.code 0} true;
  call $i14 := netdev_info.ref.ref($p10, .str.124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14188, 5} true;
  assume {:verifier.code 0} true;
  call rtnl_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14189, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := myri10ge_close($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14190, 5} true;
  assume {:verifier.code 0} true;
  call rtnl_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14192, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14196, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_dummy_rdma($p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14197, 3} true;
  assume {:verifier.code 0} true;
  call $i16 := pci_save_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14198, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14199, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14199, 13} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.6, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14199, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := pci_choose_state($p0, $i18);
  // WARNING: %25 = call i32 @pci_choose_state(%struct.pci_dev* %0, i32 %24), !dbg !8184, !verifier.code !8141
  call {:cexpr "tmp___1"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14200, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := pci_set_power_state($p0, $i19);
  // WARNING: %26 = call i32 @pci_set_power_state(%struct.pci_dev* %0, i32 %25), !dbg !8187, !verifier.code !8141
  call {:cexpr "tmp___2"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14202, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i20;
  goto $bb3;
}
const myri10ge_resume: ref;
axiom (myri10ge_resume == $sub.ref(0, 245745));
procedure  myri10ge_resume($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i16;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i8;
  var $i27: i1;
  var $i28: i32;
  var $i29: i1;
  var $i6: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14216, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := pci_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14217, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14219, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14219, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14219, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14220, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14281, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14225, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14225, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14226, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := pci_set_power_state($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14227, 3} true;
  assume {:verifier.code 0} true;
  call msleep(5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14228, 55} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14228, 55} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14228, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := pci_read_config_word($p11, 0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14230, 22} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14230, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i16.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14230, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14230, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14232, 50} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14232, 50} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14232, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := netdev_err.ref.ref($p17, .str.114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14234, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 5);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14239, 3} true;
  assume {:verifier.code 0} true;
  call pci_restore_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14240, 12} true;
  assume {:verifier.code 0} true;
  call $i19 := pci_enable_device($p0);
  // WARNING: %25 = call i32 @pci_enable_device(%struct.pci_dev* %0), !dbg !8181, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14242, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14242, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14244, 47} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14244, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := dev_err.ref.ref($p21, .str.123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14246, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $i19;
  goto $bb3;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14251, 3} true;
  assume {:verifier.code 0} true;
  call pci_set_master($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14252, 3} true;
  assume {:verifier.code 0} true;
  call $i23 := myri10ge_reset($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14253, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_dummy_rdma($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14254, 3} true;
  assume {:verifier.code 0} true;
  call $i24 := pci_save_state($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14255, 13} true;
  assume {:verifier.code 0} true;
  call $i25 := netif_running($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14255, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i1.i8($i25);
  // WARNING: %35 = zext i1 %34 to i8, !dbg !8198, !verifier.code !8141
  call {:cexpr "tmp___0"} boogie_si_record_i8($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14257, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i8.i1($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14257, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14259, 5} true;
  assume {:verifier.code 0} true;
  call rtnl_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14260, 14} true;
  assume {:verifier.code 0} true;
  call $i28 := myri10ge_open($p8);
  // WARNING: %38 = call i32 @myri10ge_open(%struct.net_device* %11), !dbg !8207, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14261, 5} true;
  assume {:verifier.code 0} true;
  call rtnl_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14263, 16} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14263, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb13:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14264, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14277, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14279, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 5);
  goto $bb3;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14268, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14272, 3} true;
  assume {:verifier.code 0} true;
  call netif_device_attach($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14274, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
}
const pci_get_drvdata: ref;
axiom (pci_get_drvdata == $sub.ref(0, 246777));
procedure  pci_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8686, 66} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8686, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_dev_get_drvdata_58($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8688, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const pci_set_power_state: ref;
axiom (pci_set_power_state == $sub.ref(0, 247809));
procedure  pci_set_power_state($p0: ref, $i1: i32)
  returns ($r: i32);
const msleep: ref;
axiom (msleep == $sub.ref(0, 248841));
procedure  msleep($i0: i32);
const pci_read_config_word: ref;
axiom (pci_read_config_word == $sub.ref(0, 249873));
procedure  pci_read_config_word($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !9444, metadata !8144), !dbg !9445, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8545, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8545, 39} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8545, 49} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8545, 49} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8545, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := pci_bus_read_config_word($p4, $i6, $i1, $p2);
  // WARNING: %8 = call i32 @pci_bus_read_config_word(%struct.pci_bus* %5, i32 %7, i32 %1, i16* %2), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8547, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const netdev_err: ref;
axiom (netdev_err == $sub.ref(0, 250905));
procedure  netdev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  netdev_err.ref.ref.i32.ref($p0: ref, $p1: ref, p.2: i32, p.3: ref)
  returns ($r: i32);
procedure  netdev_err.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  netdev_err.ref.ref.ref($p0: ref, $p1: ref, p.2: ref)
  returns ($r: i32);
procedure  netdev_err.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32)
  returns ($r: i32);
const pci_restore_state: ref;
axiom (pci_restore_state == $sub.ref(0, 251937));
procedure  pci_restore_state($p0: ref);
const pci_enable_device: ref;
axiom (pci_enable_device == $sub.ref(0, 252969));
procedure  pci_enable_device($p0: ref)
  returns ($r: i32);
const pci_set_master: ref;
axiom (pci_set_master == $sub.ref(0, 254001));
procedure  pci_set_master($p0: ref);
const myri10ge_reset: ref;
axiom (myri10ge_reset == $sub.ref(0, 255033));
procedure  myri10ge_reset($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $i39: i32;
  var $i40: i32;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $p64: ref;
  var $i65: i32;
  var $i66: i1;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i64;
  var $i77: i32;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i64;
  var $i82: i64;
  var $i83: i32;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $i87: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i1;
  var $i68: i32;
  var $i69: i32;
  var $i91: i32;
  var $i67: i32;
  var $i92: i32;
  var $i93: i32;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p98: ref;
  var $p99: ref;
  var $i100: i64;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i32;
  var $i106: i64;
  var $i107: i32;
  var $i108: i64;
  var $i109: i64;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i32;
  var $i114: i32;
  var $i115: i1;
  var $i97: i32;
  var $i116: i32;
  var $i117: i32;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $i123: i64;
  var $p124: ref;
  var $p125: ref;
  var $i126: i32;
  var $i127: i32;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $i132: i32;
  var $i133: i64;
  var $p134: ref;
  var $p135: ref;
  var $i136: i1;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $i140: i32;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $p144: ref;
  var $p145: ref;
  var $i146: i32;
  var $p147: ref;
  var $i148: i32;
  var $i149: i64;
  var $p150: ref;
  var $i151: i32;
  var $i152: i1;
  var $p154: ref;
  var $p155: ref;
  var $i156: i64;
  var $p157: ref;
  var $i158: i1;
  var $p159: ref;
  var $p160: ref;
  var $i161: i32;
  var $i162: i64;
  var $i163: i64;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: i32;
  var $i169: i32;
  var $i170: i1;
  var $i153: i32;
  var $p171: ref;
  var $p172: ref;
  var $i173: i32;
  var $i174: i1;
  var $p176: ref;
  var $p177: ref;
  var $i178: i64;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $i204: i32;
  var $i205: i32;
  var $i206: i1;
  var $i175: i32;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $i211: i32;
  var $p212: ref;
  var $i213: i32;
  var $i214: i32;
  var $p215: ref;
  var $p216: ref;
  var $i9: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9862, 3} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9862, 3} true;
  assume {:verifier.code 0} true;
  call $M.7 := $memset.i8($M.7, $p2, 0, 12, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9863, 12} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_send_cmd($p0, 1, $p1, 0);
  // WARNING: %4 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 1, %struct.myri10ge_cmd* %2, i32 0), !dbg !8157, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9865, 14} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9865, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9867, 47} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9867, 47} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9867, 54} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9867, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := dev_err.ref.ref($p7, .str.43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9869, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 6);
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10027, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9874, 3} true;
  assume {:verifier.code 0} true;
  call $i10 := myri10ge_dma_test($p0, 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9875, 7} true;
  assume {:verifier.code 0} true;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9875, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9876, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := myri10ge_send_cmd($p0, 52, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9877, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9877, 32} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9877, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9877, 47} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i64($i15, 4);
  // WARNING: %19 = mul i64 %18, 4, !dbg !8176, !verifier.code !8143
  call {:cexpr "bytes"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9878, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i64.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9878, 7} true;
  assume {:verifier.code 0} true;
  $p18 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9878, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9879, 12} true;
  assume {:verifier.code 0} true;
  call $i19 := myri10ge_send_cmd($p0, 13, $p1, 0);
  // WARNING: %22 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 13, %struct.myri10ge_cmd* %2, i32 0), !dbg !8182, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9881, 12} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9881, 12} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9881, 23} true;
  assume {:verifier.code 0} true;
  $i22 := $sgt.i32($i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9881, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9883, 14} true;
  assume {:verifier.code 0} true;
  call $i23 := myri10ge_send_cmd($p0, 35, $p1, 0);
  // WARNING: %27 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 35, %struct.myri10ge_cmd* %2, i32 0), !dbg !8187, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9885, 16} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9885, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  $i63 := $i19;
  goto $bb22;
$bb7:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9887, 49} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9887, 49} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9887, 56} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9887, 7} true;
  assume {:verifier.code 0} true;
  call $i28 := dev_err.ref.ref($p27, .str.102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9889, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9892, 28} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9892, 28} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9892, 9} true;
  assume {:verifier.code 0} true;
  $p31 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9892, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9893, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9893, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p32, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9894, 15} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9894, 15} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9894, 21} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9894, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9894, 40} true;
  assume {:verifier.code 0} true;
  $i37 := $ugt.i32($i36, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9894, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9895, 23} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9895, 23} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.7, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9895, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $or.i32($i39, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9895, 11} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9895, 17} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9896, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9900, 14} true;
  assume {:verifier.code 0} true;
  call $i42 := myri10ge_send_cmd($p0, 36, $p1, 0);
  // WARNING: %52 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 36, %struct.myri10ge_cmd* %2, i32 0), !dbg !8215, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 16} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 30} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 30} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 36} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 36} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 55} true;
  assume {:verifier.code 0} true;
  $i48 := $ugt.i32($i47, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 21} true;
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  $i57 := $i42;
  goto $bb18;
$bb16:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9904, 41} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9904, 41} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9904, 7} true;
  assume {:verifier.code 0} true;
  call $i51 := netif_set_real_num_tx_queues($p50, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9905, 30} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9905, 30} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9905, 11} true;
  assume {:verifier.code 0} true;
  $p54 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9905, 17} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p54, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9906, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9906, 17} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p55, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9907, 16} true;
  assume {:verifier.code 0} true;
  call $i56 := myri10ge_send_cmd($p0, 36, $p1, 0);
  // WARNING: %68 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 36, %struct.myri10ge_cmd* %2, i32 0), !dbg !8234, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9909, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $i56;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9902, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i48 == 1));
  goto $bb15;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9912, 16} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9912, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9914, 49} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9914, 49} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9914, 56} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9914, 7} true;
  assume {:verifier.code 0} true;
  call $i62 := dev_err.ref.ref($p61, .str.103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9916, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $i57;
  goto $bb3;
$bb20:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9920, 3} true;
  assume {:verifier.code 0} true;
  $i63 := $i57;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  // WARNING: %.1 = phi i32 [ %.01, %78 ], [ %22, %79 ], !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 16} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 16} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $slt.i32(0, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 7} true;
  assume {:verifier.code 0} true;
  $i67 := $i63;
  assume {:branchcond $i66} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 7} true;
  assume {:verifier.code 0} true;
  $i68, $i69 := $i63, 0;
  goto $bb26;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb26:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9937, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9927, 13} true;
  assume {:verifier.code 0} true;
  $p70 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9927, 13} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9927, 18} true;
  assume {:verifier.code 0} true;
  $i72 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9927, 16} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p71, $mul.ref($i72, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9928, 34} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p71, $mul.ref($i72, 688)), 216);
  $p75 := $add.ref($add.ref($add.ref($p71, $mul.ref($i72, 688)), 216), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9928, 42} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i64($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9928, 15} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i64.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9928, 7} true;
  assume {:verifier.code 0} true;
  $p78 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9928, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p78, $i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9929, 35} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p71, $mul.ref($i72, 688)), 216);
  $p80 := $add.ref($add.ref($add.ref($p71, $mul.ref($i72, 688)), 216), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9929, 43} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i64($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9929, 47} true;
  assume {:verifier.code 0} true;
  $i82 := $lshr.i64($i81, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9929, 15} true;
  assume {:verifier.code 0} true;
  $i83 := $trunc.i64.i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9929, 7} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9929, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p84, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9930, 7} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9930, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p85, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9931, 9} true;
  assume {:verifier.code 0} true;
  call $i86 := myri10ge_send_cmd($p0, 3, $p1, 0);
  // WARNING: %101 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 3, %struct.myri10ge_cmd* %2, i32 0), !dbg !8271, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9932, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $or.i32($i68, $i86);
  // WARNING: %102 = or i32 %.215, %101, !dbg !8274, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9933, 9} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i69, 1);
  // WARNING: %103 = add nsw i32 %.0214, 1, !dbg !8275, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 16} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 9} true;
  assume {:verifier.code 0} true;
  $i90 := $slt.i32($i88, $i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 7} true;
  assume {:verifier.code 0} true;
  $i68, $i69, $i91 := $i87, $i88, $i87;
  assume {:branchcond $i90} true;
  goto $bb28, $bb29;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 7} true;
  assume {:verifier.code 0} true;
  assume ($i90 == 1);
  goto $bb26;
$bb29:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9936, 7} true;
  assume {:verifier.code 0} true;
  $i67 := $i91;
  goto $bb25;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9942, 13} true;
  assume {:verifier.code 0} true;
  call $i92 := myri10ge_send_cmd($p0, 9, $p1, 0);
  // WARNING: %109 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 9, %struct.myri10ge_cmd* %2, i32 0), !dbg !8278, !verifier.code !8143
  call {:cexpr "tmp___0"} boogie_si_record_i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9943, 19} true;
  assume {:verifier.code 0} true;
  $i93 := $or.i32($i67, $i92);
  // WARNING: %110 = or i32 %.2.lcssa, %109, !dbg !8282, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i93);
  // WARNING: call void @llvm.dbg.value(metadata i32 %110, i64 0, metadata !9474, metadata !8144), !dbg !9475, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 16} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 16} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i32($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $slt.i32(0, $i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 7} true;
  assume {:verifier.code 0} true;
  $i97 := 0;
  goto $bb34;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i96 == 1));
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb38;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9953, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9948, 13} true;
  assume {:verifier.code 0} true;
  $p98 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9948, 13} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9948, 18} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9948, 16} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p99, $mul.ref($i100, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 35} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 35} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 63} true;
  assume {:verifier.code 0} true;
  $p104 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 63} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.7, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 43} true;
  assume {:verifier.code 0} true;
  $i106 := $zext.i32.i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 90} true;
  assume {:verifier.code 0} true;
  $i107 := $mul.i32($i97, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 71} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i32.i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 69} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i64($i106, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 40} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p103, $mul.ref($i109, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 19} true;
  assume {:verifier.code 0} true;
  $p111 := $bitcast.ref.ref($p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 7} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p99, $mul.ref($i100, 688)), 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9949, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p112, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9950, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i97, 1);
  // WARNING: %130 = add nsw i32 %.1310, 1, !dbg !8300, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 16} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $slt.i32($i113, $i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 7} true;
  assume {:verifier.code 0} true;
  $i97 := $i113;
  assume {:branchcond $i115} true;
  goto $bb36, $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 7} true;
  assume {:verifier.code 0} true;
  assume ($i115 == 1);
  goto $bb34;
$bb37:
  assume !(($i115 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9952, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9958, 13} true;
  assume {:verifier.code 0} true;
  call $i116 := myri10ge_send_cmd($p0, 10, $p1, 0);
  // WARNING: %136 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 10, %struct.myri10ge_cmd* %2, i32 0), !dbg !8303, !verifier.code !8143
  call {:cexpr "tmp___1"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9959, 19} true;
  assume {:verifier.code 0} true;
  $i117 := $or.i32($i93, $i116);
  // WARNING: %137 = or i32 %110, %136, !dbg !8307, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 38} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 38} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 23} true;
  assume {:verifier.code 0} true;
  $p120 := $bitcast.ref.ref($p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 65} true;
  assume {:verifier.code 0} true;
  $p121 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 65} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i32($M.7, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 45} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i32.i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 43} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p120, $mul.ref($i123, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 8} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9960, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p125, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9961, 13} true;
  assume {:verifier.code 0} true;
  call $i126 := myri10ge_send_cmd($p0, 17, $p1, 0);
  // WARNING: %146 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 17, %struct.myri10ge_cmd* %2, i32 0), !dbg !8315, !verifier.code !8143
  call {:cexpr "tmp___2"} boogie_si_record_i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9962, 19} true;
  assume {:verifier.code 0} true;
  $i127 := $or.i32($i117, $i126);
  // WARNING: %147 = or i32 %137, %146, !dbg !8318, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 45} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 45} true;
  assume {:verifier.code 0} true;
  $p129 := $load.ref($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 30} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 72} true;
  assume {:verifier.code 0} true;
  $p131 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 72} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i32($M.7, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 52} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i32.i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 50} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p130, $mul.ref($i133, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 8} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9963, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p135, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9965, 14} true;
  assume {:verifier.code 0} true;
  $i136 := $ne.i32($i127, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9965, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i136 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9967, 47} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9967, 47} true;
  assume {:verifier.code 0} true;
  $p138 := $load.ref($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9967, 54} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p138, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9967, 5} true;
  assume {:verifier.code 0} true;
  call $i140 := dev_err.ref.ref($p139, .str.104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9969, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i127;
  goto $bb3;
$bb40:
  assume !(($i136 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9974, 36} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p0, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9974, 36} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i32($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9974, 13} true;
  assume {:verifier.code 0} true;
  call $i143 := __fswab32($i142);
  // WARNING: %166 = call i32 @__fswab32(i32 %165), !dbg !8337, !verifier.code !8143
  call {:cexpr "tmp___3"} boogie_si_record_i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9975, 26} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9975, 26} true;
  assume {:verifier.code 0} true;
  $p145 := $load.ref($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9975, 3} true;
  assume {:verifier.code 0} true;
  call put_be32($i143, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9976, 12} true;
  assume {:verifier.code 0} true;
  call $i146 := myri10ge_send_cmd($p0, 56, $p1, 0);
  // WARNING: %169 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 56, %struct.myri10ge_cmd* %2, i32 0), !dbg !8342, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9977, 37} true;
  assume {:verifier.code 0} true;
  $p147 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9977, 37} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i32($M.7, $p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9977, 17} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i32.i64($i148);
  // WARNING: %172 = zext i32 %171 to i64, !dbg !8344, !verifier.code !8143
  call {:cexpr "dca_tag_off"} boogie_si_record_i64($i149);
  // WARNING: call void @llvm.dbg.value(metadata i64 %172, i64 0, metadata !9661, metadata !8144), !dbg !9662, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 16} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 16} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i32($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $slt.i32(0, $i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i152 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  $i153 := 0;
  goto $bb45;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i152 == 1));
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  goto $bb52;
$bb45:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9991, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9982, 13} true;
  assume {:verifier.code 0} true;
  $p154 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9982, 13} true;
  assume {:verifier.code 0} true;
  $p155 := $load.ref($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9982, 18} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i32.i64($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9982, 16} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p155, $mul.ref($i156, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9983, 14} true;
  assume {:verifier.code 0} true;
  $i158 := $eq.i32($i146, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9983, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i158} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i158 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 35} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 35} true;
  assume {:verifier.code 0} true;
  $p160 := $load.ref($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 76} true;
  assume {:verifier.code 0} true;
  $i161 := $mul.i32($i153, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 57} true;
  assume {:verifier.code 0} true;
  $i162 := $sext.i32.i64($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 55} true;
  assume {:verifier.code 0} true;
  $i163 := $add.i64($i149, $i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 40} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p160, $mul.ref($i163, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 19} true;
  assume {:verifier.code 0} true;
  $p165 := $bitcast.ref.ref($p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 9} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($add.ref($p155, $mul.ref($i156, 688)), 536);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9984, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p166, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9985, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i158 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9986, 9} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($add.ref($p155, $mul.ref($i156, 688)), 536);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9986, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p167, $0.ref);
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9988, 9} true;
  assume {:verifier.code 0} true;
  $i168 := $add.i32($i153, 1);
  // WARNING: %194 = add nsw i32 %.246, 1, !dbg !8370, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 16} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i32($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $slt.i32($i168, $i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  $i153 := $i168;
  assume {:branchcond $i170} true;
  goto $bb50, $bb51;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  assume ($i170 == 1);
  goto $bb45;
$bb51:
  assume !(($i170 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9990, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9995, 8} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p0, 948);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9995, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p171, 0);
  // WARNING: store i32 0, i32* %200, align 4, !dbg !8374, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 16} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 16} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i32($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 9} true;
  assume {:verifier.code 0} true;
  $i174 := $slt.i32(0, $i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 7} true;
  assume {:verifier.code 0} true;
  $i175 := 0;
  goto $bb56;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i174 == 1));
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb56:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10016, 5} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10000, 13} true;
  assume {:verifier.code 0} true;
  $p176 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10000, 13} true;
  assume {:verifier.code 0} true;
  $p177 := $load.ref($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10000, 18} true;
  assume {:verifier.code 0} true;
  $i178 := $sext.i32.i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10000, 16} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p177, $mul.ref($i178, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10001, 22} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 216);
  $p181 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10001, 30} true;
  assume {:verifier.code 0} true;
  $p182 := $load.ref($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10001, 3} true;
  assume {:verifier.code 0} true;
  $p183 := $bitcast.ref.ref($p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10001, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p183, 0, $i16, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10002, 7} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p177, $mul.ref($i178, 688));
  $p185 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10002, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p185, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10003, 7} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p177, $mul.ref($i178, 688));
  $p187 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10003, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p187, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10004, 7} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p177, $mul.ref($i178, 688));
  $p189 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10004, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p189, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10005, 7} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p177, $mul.ref($i178, 688));
  $p191 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10005, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p191, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10006, 7} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 152);
  $p193 := $add.ref($add.ref($add.ref($p177, $mul.ref($i178, 688)), 152), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10006, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p193, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10007, 7} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 88);
  $p195 := $add.ref($add.ref($add.ref($p177, $mul.ref($i178, 688)), 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10007, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p195, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10008, 7} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 216);
  $p197 := $add.ref($add.ref($add.ref($p177, $mul.ref($i178, 688)), 216), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10008, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p197, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10009, 7} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 216);
  $p199 := $add.ref($add.ref($add.ref($p177, $mul.ref($i178, 688)), 216), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10009, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p199, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10010, 7} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p177, $mul.ref($i178, 688));
  $p201 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10010, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p201, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10011, 7} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p177, $mul.ref($i178, 688));
  $p203 := $add.ref($add.ref($p177, $mul.ref($i178, 688)), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10011, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p203, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10012, 9} true;
  assume {:verifier.code 0} true;
  $i204 := $add.i32($i175, 1);
  // WARNING: %233 = add nsw i32 %.35, 1, !dbg !8406, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 16} true;
  assume {:verifier.code 0} true;
  $i205 := $load.i32($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 9} true;
  assume {:verifier.code 0} true;
  $i206 := $slt.i32($i204, $i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 7} true;
  assume {:verifier.code 0} true;
  $i175 := $i204;
  assume {:branchcond $i206} true;
  goto $bb58, $bb59;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 7} true;
  assume {:verifier.code 0} true;
  assume ($i206 == 1);
  goto $bb56;
$bb59:
  assume !(($i206 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10015, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10021, 51} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10021, 51} true;
  assume {:verifier.code 0} true;
  $p208 := $load.ref($M.0, $p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10021, 57} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p208, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10021, 57} true;
  assume {:verifier.code 0} true;
  $p210 := $load.ref($M.0, $p209);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10021, 12} true;
  assume {:verifier.code 0} true;
  call $i211 := myri10ge_update_mac_address($p0, $p210);
  // WARNING: %243 = call i32 @myri10ge_update_mac_address(%struct.myri10ge_priv* %0, i8* %242), !dbg !8412, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10022, 35} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10022, 35} true;
  assume {:verifier.code 0} true;
  $i213 := $load.i32($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10022, 3} true;
  assume {:verifier.code 0} true;
  call $i214 := myri10ge_change_pause($p0, $i213);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10023, 36} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10023, 36} true;
  assume {:verifier.code 0} true;
  $p216 := $load.ref($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10023, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_set_multicast_list($p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10025, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i211;
  goto $bb3;
}
const myri10ge_dummy_rdma: ref;
axiom (myri10ge_dummy_rdma == $sub.ref(0, 256065));
procedure  myri10ge_dummy_rdma($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i32;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $i12: i32;
  var $i13: i32;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i34: i32;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $i39: i1;
  var $i40: i1;
  var $i33: i32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i1;
  var $p50: ref;
  var $i51: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(64, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !9738, metadata !8144), !dbg !9739, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9165, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9165, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9165, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9165, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, 0);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9167, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9167, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i64($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9167, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  // WARNING: %9 = trunc i64 %8 to i32, !dbg !8158, !verifier.code !8143
  call {:cexpr "dma_low"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9168, 35} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9168, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9168, 43} true;
  assume {:verifier.code 0} true;
  $i11 := $lshr.i64($i10, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9168, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  // WARNING: %13 = trunc i64 %12 to i32, !dbg !8163, !verifier.code !8143
  call {:cexpr "dma_high"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9169, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := __fswab32($i12);
  // WARNING: %14 = call i32 @__fswab32(i32 %13), !dbg !8166, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9170, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9170, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9171, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := __fswab32($i8);
  // WARNING: %16 = call i32 @__fswab32(i32 %9), !dbg !8171, !verifier.code !8143
  call {:cexpr "tmp___0"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9172, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9172, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9173, 3} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9173, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9174, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := __fswab32($i12);
  // WARNING: %19 = call i32 @__fswab32(i32 %13), !dbg !8178, !verifier.code !8143
  call {:cexpr "tmp___1"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9175, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9175, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9176, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := __fswab32($i8);
  // WARNING: %21 = call i32 @__fswab32(i32 %9), !dbg !8183, !verifier.code !8143
  call {:cexpr "tmp___2"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9177, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9177, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9178, 13} true;
  assume {:verifier.code 0} true;
  call $i22 := __fswab32($i1);
  // WARNING: %23 = call i32 @__fswab32(i32 %1), !dbg !8188, !verifier.code !8143
  call {:cexpr "tmp___3"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9179, 3} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9179, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9180, 25} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9180, 25} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9180, 30} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 16515520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9181, 36} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9181, 3} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p26, $p27, 8);
  // WARNING: call void @__iowrite64_copy(i8* %27, i8* %28, i64 8), !dbg !8198, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 13} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 13} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 19} true;
  assume {:verifier.code 0} true;
  $p30 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 19} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 24} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 39} true;
  assume {:verifier.code 0} true;
  $i33 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 39} true;
  assume {:verifier.code 0} true;
  assume !(($i32 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9192, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9187, 3} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9188, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i33, 1);
  // WARNING: %35 = add nsw i32 %.01, 1, !dbg !8208, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 13} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $p35;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 24} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 44} true;
  assume {:verifier.code 0} true;
  $i39 := $sle.i32($i34, 19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 39} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i1($i38, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 39} true;
  assume {:verifier.code 0} true;
  $i33 := $i34;
  assume {:branchcond $i40} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 39} true;
  assume {:verifier.code 0} true;
  assume ($i40 == 1);
  goto $bb4;
$bb7:
  assume !(($i40 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9191, 39} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9197, 13} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9197, 13} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9197, 19} true;
  assume {:verifier.code 0} true;
  $p43 := $p42;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9197, 19} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9197, 24} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9197, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9199, 47} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9199, 47} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9199, 54} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9200, 20} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9200, 13} true;
  assume {:verifier.code 0} true;
  havoc $p50;
  assume ((($i49 == 1) ==> ($p50 == .str.119)) && (($i49 != 1) ==> ($p50 == .str.120)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9199, 5} true;
  assume {:verifier.code 0} true;
  call $i51 := dev_err.ref.ref.ref($p48, .str.118, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9202, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9205, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_save_state: ref;
axiom (pci_save_state == $sub.ref(0, 257097));
procedure  pci_save_state($p0: ref)
  returns ($r: i32);
const netif_running: ref;
axiom (netif_running == $sub.ref(0, 258129));
procedure  netif_running($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7949, 73} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7949, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 0, i64* %2), !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7951, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7951, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const rtnl_lock: ref;
axiom (rtnl_lock == $sub.ref(0, 259161));
procedure  rtnl_lock();
const myri10ge_open: ref;
axiom (myri10ge_open == $sub.ref(0, 260193));
procedure  myri10ge_open($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i1;
  var $i49: i8;
  var $i50: i32;
  var $i51: i8;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $i57: i1;
  var $i48: i32;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $i73: i32;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i80: i32;
  var $i79: i32;
  var $i81: i64;
  var $i82: i1;
  var $i83: i8;
  var $i84: i1;
  var $i85: i32;
  var $i86: i1;
  var $i87: i32;
  var $p88: ref;
  var $i89: i32;
  var $i90: i32;
  var $p91: ref;
  var $p93: ref;
  var $i92: i32;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $p102: ref;
  var $i103: i32;
  var $i104: i1;
  var $i105: i32;
  var $i106: i32;
  var $i108: i32;
  var $i109: i1;
  var $i110: i32;
  var $i111: i1;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i32;
  var $i116: i1;
  var $i117: i32;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i32;
  var $p122: ref;
  var $i123: i32;
  var $i124: i32;
  var $i125: i1;
  var $i98: i32;
  var $i126: i32;
  var $i97: i32;
  var $p127: ref;
  var $i128: i32;
  var $i129: i32;
  var $p130: ref;
  var $i131: i32;
  var $p132: ref;
  var $i133: i32;
  var $p134: ref;
  var $i135: i32;
  var $i136: i32;
  var $p137: ref;
  var $i138: i32;
  var $i139: i32;
  var $i140: i1;
  var $i141: i32;
  var $p142: ref;
  var $i143: i32;
  var $i144: i1;
  var $i145: i1;
  var $i146: i32;
  var $p147: ref;
  var $p148: ref;
  var $i149: i32;
  var $i150: i1;
  var $i151: i32;
  var $p152: ref;
  var $i153: i64;
  var $i154: i32;
  var $i155: i32;
  var $i156: i64;
  var $i157: i64;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i107: i32;
  var $i161: i1;
  var $i163: i32;
  var $p164: ref;
  var $p165: ref;
  var $i166: i64;
  var $p167: ref;
  var $p168: ref;
  var $i169: i1;
  var $i162: i32;
  var $p170: ref;
  var $i171: i32;
  var $i172: i1;
  var $p174: ref;
  var $p175: ref;
  var $i176: i64;
  var $p177: ref;
  var $i178: i32;
  var $i179: i32;
  var $i180: i1;
  var $i173: i32;
  var $p181: ref;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12597, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12598, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12600, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12600, 12} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12600, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12600, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12601, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 16);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12854, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12606, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12606, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p8, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12607, 12} true;
  assume {:verifier.code 0} true;
  call $i9 := myri10ge_reset($p3);
  // WARNING: %12 = call i32 @myri10ge_reset(%struct.myri10ge_priv* %4), !dbg !8169, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12609, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12609, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12611, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := netdev_err.ref.ref($p0, .str.43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12613, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12851, 8} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12851, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p181, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12852, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 12);
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12617, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12617, 12} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12617, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $sgt.i32($i13, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12617, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12618, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12618, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12618, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12618, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12619, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12619, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p18, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12620, 15} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12620, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12620, 21} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12620, 21} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12620, 40} true;
  assume {:verifier.code 0} true;
  $i23 := $ugt.i32($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12620, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb11:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12621, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12621, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.7, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12621, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $or.i32($i25, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12621, 11} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12621, 17} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12622, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12626, 14} true;
  assume {:verifier.code 0} true;
  call $i28 := myri10ge_send_cmd($p3, 36, $p1, 0);
  // WARNING: %38 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 36, %struct.myri10ge_cmd* %2, i32 0), !dbg !8200, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12628, 16} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12628, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12630, 7} true;
  assume {:verifier.code 0} true;
  call $i30 := netdev_err.ref.ref($p0, .str.103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12632, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb15:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12637, 28} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12637, 28} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12637, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12637, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12638, 14} true;
  assume {:verifier.code 0} true;
  call $i34 := myri10ge_send_cmd($p3, 40, $p1, 0);
  // WARNING: %47 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 40, %struct.myri10ge_cmd* %2, i32 0), !dbg !8213, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12639, 15} true;
  assume {:verifier.code 0} true;
  call $i35 := myri10ge_send_cmd($p3, 39, $p1, 0);
  // WARNING: %48 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 39, %struct.myri10ge_cmd* %2, i32 0), !dbg !8214, !verifier.code !8141
  call {:cexpr "tmp___0"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12640, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $or.i32($i34, $i35);
  // WARNING: %49 = or i32 %47, %48, !dbg !8217, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12642, 16} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12642, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12644, 7} true;
  assume {:verifier.code 0} true;
  call $i38 := netdev_err.ref.ref($p0, .str.125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12646, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb18:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12650, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p3, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12650, 19} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12650, 46} true;
  assume {:verifier.code 0} true;
  $p41 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12650, 46} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.7, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12650, 26} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i32.i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12650, 24} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p40, $mul.ref($i43, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %60, i64 0, metadata !9915, metadata !8144), !dbg !9916, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 18} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 18} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $slt.i32(0, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 9} true;
  assume {:verifier.code 0} true;
  $i48 := 0;
  goto $bb23;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i47 == 1));
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12660, 7} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12655, 21} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i8($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12655, 14} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12655, 14} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i8($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12655, 69} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i48);
  $i53 := $add.i64($i43, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12655, 67} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p40, $mul.ref($i53, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12655, 5} true;
  assume {:verifier.code 0} true;
  call __writeb($i51, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12656, 11} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i32($i48, 1);
  // WARNING: %70 = add nsw i32 %.0621, 1, !dbg !8243, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 18} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $slt.i32($i55, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $i55;
  assume {:branchcond $i57} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 9} true;
  assume {:verifier.code 0} true;
  assume ($i57 == 1);
  goto $bb23;
$bb26:
  assume !(($i57 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12659, 9} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12665, 9} true;
  assume {:verifier.code 0} true;
  $p58 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12665, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p58, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12666, 23} true;
  assume {:verifier.code 0} true;
  $i59 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12666, 9} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12666, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12667, 14} true;
  assume {:verifier.code 0} true;
  call $i61 := myri10ge_send_cmd($p3, 43, $p1, 0);
  // WARNING: %79 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 43, %struct.myri10ge_cmd* %2, i32 0), !dbg !8252, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12669, 16} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12669, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12671, 7} true;
  assume {:verifier.code 0} true;
  call $i63 := netdev_err.ref.ref($p0, .str.126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12673, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb29:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12677, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12681, 12} true;
  assume {:verifier.code 0} true;
  call $i64 := myri10ge_request_irq($p3);
  // WARNING: %87 = call i32 @myri10ge_request_irq(%struct.myri10ge_priv* %4), !dbg !8261, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12683, 14} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12683, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12684, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb33:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12688, 12} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12688, 12} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12688, 16} true;
  assume {:verifier.code 0} true;
  $i68 := $ule.i32($i67, 1500);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12688, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12689, 10} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12689, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12690, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i68 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12691, 10} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12691, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p70, 1518);
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12693, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12693, 28} true;
  assume {:verifier.code 0} true;
  $i72 := $sge.i32($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12693, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12694, 24} true;
  assume {:verifier.code 0} true;
  $i73 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12694, 10} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12694, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p74, $i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12695, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12698, 26} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12698, 26} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12698, 30} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i76, 20);
  // WARNING: %109 = add i32 %108, 20, !dbg !8289, !verifier.code !8141
  call {:cexpr "big_pow2"} boogie_si_record_i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12699, 31} true;
  assume {:verifier.code 0} true;
  $i78 := $ule.i32($i77, 2047);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12699, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12700, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $i77;
  goto $bb43;
$bb42:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12720, 10} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12720, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, 4096);
  assume {:verifier.code 0} true;
  $i92 := 4096;
  goto $bb51;
$bb43:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12705, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $sext.i32.i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12705, 15} true;
  assume {:verifier.code 0} true;
  call $i82 := is_power_of_2($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12705, 13} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.i1.i8($i82);
  // WARNING: %117 = zext i1 %116 to i8, !dbg !8302, !verifier.code !8141
  call {:cexpr "tmp___1"} boogie_si_record_i8($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12707, 9} true;
  assume {:verifier.code 0} true;
  $i84 := $trunc.i8.i1($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12707, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb45, $bb46;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12702, 25} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, 1);
  // WARNING: %113 = add nsw i32 %.03, 1, !dbg !8297, !verifier.code !8141
  call {:cexpr "big_pow2"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12702, 5} true;
  assume {:verifier.code 0} true;
  $i79 := $i80;
  goto $bb43;
$bb45:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12709, 5} true;
  assume {:verifier.code 0} true;
  $i85 := 0;
  goto $bb47;
$bb46:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  $i85 := 1;
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12712, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i32($i85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12712, 9} true;
  assume {:verifier.code 0} true;
  $i87 := $i79;
  assume {:branchcond $i86} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12713, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb49:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12717, 34} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12717, 34} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12717, 38} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i32($i89, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12717, 10} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12717, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p91, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12718, 3} true;
  assume {:verifier.code 0} true;
  $i92 := $i87;
  goto $bb51;
$bb51:
  assume {:verifier.code 0} true;
  // WARNING: %.14 = phi i32 [ %.03.lcssa, %125 ], [ 4096, %130 ], !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 20} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 20} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i32($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 13} true;
  assume {:verifier.code 0} true;
  $i96 := $slt.i32(0, $i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 7} true;
  assume {:verifier.code 0} true;
  $i97 := 0;
  assume {:branchcond $i96} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 7} true;
  assume {:verifier.code 0} true;
  $i98 := 0;
  goto $bb55;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i96 == 1));
  goto $bb54;
$bb54:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb55:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12767, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12726, 13} true;
  assume {:verifier.code 0} true;
  $p99 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12726, 13} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12726, 18} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i32.i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12726, 16} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p100, $mul.ref($i101, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12727, 12} true;
  assume {:verifier.code 0} true;
  call $i103 := myri10ge_get_txrx($p3, $i98);
  // WARNING: %141 = call i32 @myri10ge_get_txrx(%struct.myri10ge_priv* %4, i32 %.0217), !dbg !8337, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12729, 14} true;
  assume {:verifier.code 0} true;
  $i104 := $ne.i32($i103, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12729, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $i98;
  assume {:branchcond $i104} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i104 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12731, 5} true;
  assume {:verifier.code 0} true;
  call $i106 := netdev_err.ref.ref($p0, .str.127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12733, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $i105;
  goto $bb59;
$bb58:
  assume !(($i104 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 13} true;
  assume {:verifier.code 0} true;
  $i161 := $ne.i32($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb88, $bb89;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12738, 12} true;
  assume {:verifier.code 0} true;
  call $i108 := myri10ge_allocate_rings($p102);
  // WARNING: %147 = call i32 @myri10ge_allocate_rings(%struct.myri10ge_slice_state* %140), !dbg !8345, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12740, 14} true;
  assume {:verifier.code 0} true;
  $i109 := $ne.i32($i108, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12740, 7} true;
  assume {:verifier.code 0} true;
  $i110 := $i98;
  assume {:branchcond $i109} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i109 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12741, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $i110;
  goto $bb59;
$bb62:
  assume !(($i109 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 13} true;
  assume {:verifier.code 0} true;
  $i111 := $eq.i32($i98, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb64, $bb66;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 18} true;
  assume {:verifier.code 0} true;
  assume ($i111 == 1);
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12747, 14} true;
  assume {:verifier.code 0} true;
  call $i117 := myri10ge_set_stats($p3, $i98);
  // WARNING: %160 = call i32 @myri10ge_set_stats(%struct.myri10ge_priv* %4, i32 %.0217), !dbg !8360, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12749, 3} true;
  assume {:verifier.code 0} true;
  $i118 := $i117;
  goto $bb69;
$bb66:
  assume !(($i111 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 27} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 27} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 33} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p113, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 33} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i32($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 52} true;
  assume {:verifier.code 0} true;
  $i116 := $ugt.i32($i115, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb67, $bb68;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12745, 7} true;
  assume {:verifier.code 0} true;
  assume ($i116 == 1);
  goto $bb65;
$bb68:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  $i118 := $i108;
  goto $bb69;
$bb69:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12752, 14} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.i32($i118, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12752, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $i98;
  assume {:branchcond $i119} true;
  goto $bb70, $bb71;
$bb70:
  assume ($i119 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12754, 5} true;
  assume {:verifier.code 0} true;
  call $i121 := netdev_err.ref.ref($p0, .str.128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12756, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $i120;
  goto $bb59;
$bb71:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb72;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12761, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_ss_init_lock($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12762, 21} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($add.ref($p100, $mul.ref($i101, 688)), 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12762, 3} true;
  assume {:verifier.code 0} true;
  call napi_enable($p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12763, 17} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i32($i98, 1);
  // WARNING: %169 = add nsw i32 %.0217, 1, !dbg !8375, !verifier.code !8141
  call {:cexpr "slice"} boogie_si_record_i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 20} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 13} true;
  assume {:verifier.code 0} true;
  $i125 := $slt.i32($i123, $i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 7} true;
  assume {:verifier.code 0} true;
  $i98, $i126 := $i123, $i123;
  assume {:branchcond $i125} true;
  goto $bb73, $bb74;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 7} true;
  assume {:verifier.code 0} true;
  assume ($i125 == 1);
  goto $bb55;
$bb74:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12766, 7} true;
  assume {:verifier.code 0} true;
  $i97 := $i126;
  goto $bb54;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12772, 20} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12772, 20} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i32($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12772, 24} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i32($i128, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12772, 7} true;
  assume {:verifier.code 0} true;
  $p130 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12772, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p130, $i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12773, 12} true;
  assume {:verifier.code 0} true;
  call $i131 := myri10ge_send_cmd($p3, 16, $p1, 0);
  // WARNING: %179 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 16, %struct.myri10ge_cmd* %2, i32 0), !dbg !8383, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12774, 26} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12774, 26} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i32($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12774, 7} true;
  assume {:verifier.code 0} true;
  $p134 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12774, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p134, $i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12775, 13} true;
  assume {:verifier.code 0} true;
  call $i135 := myri10ge_send_cmd($p3, 5, $p1, 0);
  // WARNING: %183 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 5, %struct.myri10ge_cmd* %2, i32 0), !dbg !8387, !verifier.code !8141
  call {:cexpr "tmp___3"} boogie_si_record_i32($i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12776, 19} true;
  assume {:verifier.code 0} true;
  $i136 := $or.i32($i131, $i135);
  // WARNING: %184 = or i32 %179, %183, !dbg !8390, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12777, 7} true;
  assume {:verifier.code 0} true;
  $p137 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12777, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p137, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12778, 13} true;
  assume {:verifier.code 0} true;
  call $i138 := myri10ge_send_cmd($p3, 4, $p1, 0);
  // WARNING: %186 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 4, %struct.myri10ge_cmd* %2, i32 0), !dbg !8393, !verifier.code !8141
  call {:cexpr "tmp___4"} boogie_si_record_i32($i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12779, 19} true;
  assume {:verifier.code 0} true;
  $i139 := $or.i32($i136, $i138);
  // WARNING: %187 = or i32 %184, %186, !dbg !8396, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12781, 14} true;
  assume {:verifier.code 0} true;
  $i140 := $ne.i32($i139, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12781, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb76, $bb77;
$bb76:
  assume ($i140 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12783, 5} true;
  assume {:verifier.code 0} true;
  call $i141 := netdev_err.ref.ref($p0, .str.129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12785, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $i97;
  goto $bb59;
$bb77:
  assume !(($i140 == 1));
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12790, 7} true;
  assume {:verifier.code 0} true;
  $p142 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12790, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p142, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12791, 12} true;
  assume {:verifier.code 0} true;
  call $i143 := myri10ge_send_cmd($p3, 45, $p1, 0);
  // WARNING: %194 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 45, %struct.myri10ge_cmd* %2, i32 0), !dbg !8407, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12793, 14} true;
  assume {:verifier.code 0} true;
  $i144 := $ne.i32($i143, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12793, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i144} true;
  goto $bb79, $bb80;
$bb79:
  assume ($i144 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12793, 29} true;
  assume {:verifier.code 0} true;
  $i145 := $ne.i32($i143, $sub.i32(0, 38));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12793, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb82, $bb83;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12793, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i144 == 1));
  goto $bb81;
$bb81:
  assume {:verifier.code 0} true;
  goto $bb84;
$bb82:
  assume ($i145 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12795, 5} true;
  assume {:verifier.code 0} true;
  call $i146 := netdev_err.ref.ref($p0, .str.130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12797, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $i97;
  goto $bb59;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12793, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i145 == 1));
  goto $bb81;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12802, 8} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p3, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12802, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p147, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12803, 8} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p3, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12803, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p148, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12804, 12} true;
  assume {:verifier.code 0} true;
  call $i149 := myri10ge_send_cmd($p3, 14, $p1, 0);
  // WARNING: %204 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 14, %struct.myri10ge_cmd* %2, i32 0), !dbg !8423, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12806, 14} true;
  assume {:verifier.code 0} true;
  $i150 := $ne.i32($i149, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12806, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i150} true;
  goto $bb85, $bb86;
$bb85:
  assume ($i150 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12808, 5} true;
  assume {:verifier.code 0} true;
  call $i151 := netdev_err.ref.ref($p0, .str.131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12810, 5} true;
  assume {:verifier.code 0} true;
  $i107 := $i97;
  goto $bb59;
$bb86:
  assume !(($i150 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12815, 8} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12815, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p152, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12816, 49} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12816, 76} true;
  assume {:verifier.code 0} true;
  $i154 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12816, 102} true;
  assume {:verifier.code 0} true;
  $i155 := $mul.i32($i154, 250);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12816, 59} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i32.i64($i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12816, 57} true;
  assume {:verifier.code 0} true;
  $i157 := $add.i64($i153, $i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12816, 8} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p3, 344);
  $p159 := $add.ref($add.ref($p3, 344), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12816, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p159, $i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12817, 20} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p3, 344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12817, 3} true;
  assume {:verifier.code 0} true;
  call add_timer($p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12818, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_wake_all_queues($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12820, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb88:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $i107;
  goto $bb91;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i161 == 1));
  goto $bb90;
$bb90:
  assume {:verifier.code 0} true;
  goto $bb95;
$bb91:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12830, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12825, 17} true;
  assume {:verifier.code 0} true;
  $i163 := $sub.i32($i162, 1);
  // WARNING: %222 = sub nsw i32 %.113, 1, !dbg !8448, !verifier.code !8141
  call {:cexpr "slice"} boogie_si_record_i32($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12826, 24} true;
  assume {:verifier.code 0} true;
  $p164 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12826, 24} true;
  assume {:verifier.code 0} true;
  $p165 := $load.ref($M.0, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12826, 29} true;
  assume {:verifier.code 0} true;
  $i166 := $sext.i32.i64($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12826, 27} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p165, $mul.ref($i166, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12826, 53} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($add.ref($p165, $mul.ref($i166, 688)), 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12826, 3} true;
  assume {:verifier.code 0} true;
  call napi_disable($p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 13} true;
  assume {:verifier.code 0} true;
  $i169 := $ne.i32($i163, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $i163;
  assume {:branchcond $i169} true;
  goto $bb93, $bb94;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 7} true;
  assume {:verifier.code 0} true;
  assume ($i169 == 1);
  goto $bb91;
$bb94:
  assume !(($i169 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12829, 7} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 16} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 16} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i32($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 9} true;
  assume {:verifier.code 0} true;
  $i172 := $slt.i32(0, $i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i172} true;
  goto $bb96, $bb97;
$bb96:
  assume ($i172 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 7} true;
  assume {:verifier.code 0} true;
  $i173 := 0;
  goto $bb99;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i172 == 1));
  goto $bb98;
$bb98:
  assume {:verifier.code 0} true;
  goto $bb103;
$bb99:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12843, 5} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12838, 28} true;
  assume {:verifier.code 0} true;
  $p174 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12838, 28} true;
  assume {:verifier.code 0} true;
  $p175 := $load.ref($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12838, 33} true;
  assume {:verifier.code 0} true;
  $i176 := $sext.i32.i64($i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12838, 31} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p175, $mul.ref($i176, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12838, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_rings($p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12839, 9} true;
  assume {:verifier.code 0} true;
  $i178 := $add.i32($i173, 1);
  // WARNING: %240 = add nsw i32 %.1712, 1, !dbg !8466, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 16} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i32($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 9} true;
  assume {:verifier.code 0} true;
  $i180 := $slt.i32($i178, $i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 7} true;
  assume {:verifier.code 0} true;
  $i173 := $i178;
  assume {:branchcond $i180} true;
  goto $bb101, $bb102;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 7} true;
  assume {:verifier.code 0} true;
  assume ($i180 == 1);
  goto $bb99;
$bb102:
  assume !(($i180 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12842, 7} true;
  assume {:verifier.code 0} true;
  goto $bb98;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12848, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_irq($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12849, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
}
const rtnl_unlock: ref;
axiom (rtnl_unlock == $sub.ref(0, 261225));
procedure  rtnl_unlock();
const netif_device_attach: ref;
axiom (netif_device_attach == $sub.ref(0, 262257));
procedure  netif_device_attach($p0: ref);
const pci_disable_device: ref;
axiom (pci_disable_device == $sub.ref(0, 263289));
procedure  pci_disable_device($p0: ref);
const netdev_priv: ref;
axiom (netdev_priv == $sub.ref(0, 264321));
procedure  netdev_priv($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7792, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7792, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 3200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7792, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const myri10ge_send_cmd: ref;
axiom (myri10ge_send_cmd == $sub.ref(0, 265353));
procedure  myri10ge_send_cmd($p0: ref, $i1: i32, $p2: ref, $i3: i32)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i32;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $i34: i32;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i1;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $i53: i1;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $p57: ref;
  var $i58: i32;
  var $i59: i32;
  var $i60: i1;
  var $i61: i1;
  var $p62: ref;
  var $i64: i1;
  var $i65: i1;
  var $i66: i1;
  var $i67: i1;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i63: i32;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i83: i1;
  var $i84: i32;
  var $i85: i1;
  var $i86: i32;
  var $i87: i1;
  var $i88: i32;
  var $i89: i1;
  var $i90: i32;
  var $i91: i1;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i95: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i100: i32;
  var $i101: i1;
  var $i102: i32;
  var $i103: i1;
  var $i104: i32;
  var $i105: i1;
  var $i106: i32;
  var $i107: i1;
  var $i108: i32;
  var $i109: i1;
  var $i110: i32;
  var $i111: i1;
  var $i112: i32;
  var $i113: i1;
  var $i114: i32;
  var $i115: i1;
  var $i116: i32;
  var $i117: i1;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i1;
  var $i122: i32;
  var $i123: i1;
  var $i124: i32;
  var $i125: i1;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i129: i1;
  var $i130: i32;
  var $i131: i1;
  var $i132: i32;
  var $i133: i1;
  var $i134: i32;
  var $i135: i1;
  var $i136: i32;
  var $i137: i1;
  var $i138: i32;
  var $i139: i1;
  var $i140: i32;
  var $i141: i1;
  var $i142: i32;
  var $i143: i1;
  var $i144: i32;
  var $i145: i1;
  var $i146: i32;
  var $i147: i1;
  var $i148: i32;
  var $i149: i1;
  var $i150: i32;
  var $i151: i1;
  var $i152: i32;
  var $i153: i1;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i1;
  var $i158: i32;
  var $i159: i1;
  var $i160: i32;
  var $i161: i1;
  var $i162: i32;
  var $i163: i1;
  var $i164: i32;
  var $i165: i1;
  var $i166: i32;
  var $i167: i1;
  var $i168: i32;
  var $i169: i1;
  var $i170: i32;
  var $i171: i1;
  var $i172: i32;
  var $i173: i1;
  var $i174: i32;
  var $i175: i1;
  var $i176: i32;
  var $i177: i1;
  var $i178: i32;
  var $i179: i1;
  var $i180: i32;
  var $i181: i1;
  var $i182: i32;
  var $i183: i1;
  var $i184: i32;
  var $i185: i1;
  var $i186: i32;
  var $i187: i1;
  var $i188: i32;
  var $i189: i1;
  var $i190: i32;
  var $i191: i1;
  var $i192: i32;
  var $i193: i1;
  var $i194: i32;
  var $i195: i1;
  var $i196: i32;
  var $i197: i1;
  var $i198: i32;
  var $i199: i1;
  var $i200: i32;
  var $i201: i1;
  var $i202: i32;
  var $i203: i1;
  var $i204: i32;
  var $i205: i1;
  var $i206: i32;
  var $i207: i1;
  var $i208: i32;
  var $i209: i1;
  var $i210: i32;
  var $i211: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i216: i32;
  var $i217: i1;
  var $i218: i32;
  var $i219: i1;
  var $i220: i32;
  var $i221: i1;
  var $i222: i32;
  var $i223: i1;
  var $i224: i32;
  var $i225: i1;
  var $i226: i32;
  var $i227: i1;
  var $i228: i32;
  var $i229: i1;
  var $i230: i32;
  var $i231: i1;
  var $i232: i32;
  var $i233: i1;
  var $i234: i32;
  var $i235: i1;
  var $i236: i32;
  var $i237: i1;
  var $i238: i32;
  var $i239: i1;
  var $i240: i32;
  var $i241: i1;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i245: i1;
  var $i246: i32;
  var $i247: i1;
  var $i248: i32;
  var $i249: i1;
  var $i250: i32;
  var $i251: i1;
  var $i252: i32;
  var $i253: i1;
  var $i254: i32;
  var $i255: i1;
  var $i256: i32;
  var $i257: i1;
  var $i258: i32;
  var $i259: i1;
  var $i260: i32;
  var $i261: i1;
  var $i262: i32;
  var $i263: i1;
  var $i264: i32;
  var $i265: i1;
  var $i266: i32;
  var $i267: i1;
  var $i268: i32;
  var $i269: i1;
  var $i270: i32;
  var $i271: i1;
  var $i272: i32;
  var $i273: i1;
  var $i274: i32;
  var $i275: i1;
  var $i276: i32;
  var $i277: i1;
  var $i278: i32;
  var $i279: i1;
  var $i280: i32;
  var $i281: i1;
  var $i282: i32;
  var $i283: i1;
  var $i284: i32;
  var $i285: i1;
  var $i286: i32;
  var $i287: i1;
  var $i288: i32;
  var $i289: i1;
  var $i290: i32;
  var $i291: i1;
  var $i292: i32;
  var $i293: i1;
  var $i294: i32;
  var $i295: i1;
  var $i296: i32;
  var $i297: i1;
  var $i298: i32;
  var $i299: i1;
  var $i300: i32;
  var $i301: i1;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(72, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !10175, metadata !8144), !dbg !10176, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_cmd* %2, i64 0, metadata !10179, metadata !8144), !dbg !10180, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8964, 19} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8964, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8965, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8965, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8965, 32} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 16252928);
  // WARNING: call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !10195, metadata !8144), !dbg !10196, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8967, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8967, 59} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8967, 66} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i64($i11, $sub.i64(0, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8967, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8968, 25} true;
  assume {:verifier.code 0} true;
  $p14 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8968, 25} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.7, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8968, 9} true;
  assume {:verifier.code 0} true;
  call $i16 := __fswab32($i15);
  // WARNING: %17 = call i32 @__fswab32(i32 %16), !dbg !8182, !verifier.code !8149
  call {:cexpr "tmp"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8969, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p13, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8969, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8970, 29} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8970, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.7, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8970, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := __fswab32($i19);
  // WARNING: %21 = call i32 @__fswab32(i32 %20), !dbg !8188, !verifier.code !8149
  call {:cexpr "tmp___0"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8971, 8} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p13, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8971, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8972, 29} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8972, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.7, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8972, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := __fswab32($i23);
  // WARNING: %25 = call i32 @__fswab32(i32 %24), !dbg !8194, !verifier.code !8149
  call {:cexpr "tmp___1"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8973, 8} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p13, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8973, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8974, 13} true;
  assume {:verifier.code 0} true;
  call $i26 := __fswab32($i1);
  // WARNING: %27 = call i32 @__fswab32(i32 %1), !dbg !8199, !verifier.code !8149
  call {:cexpr "tmp___2"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8975, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8975, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8976, 33} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8976, 33} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i64($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8976, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i64.i32($i29);
  // WARNING: %31 = trunc i64 %30 to i32, !dbg !8205, !verifier.code !8149
  call {:cexpr "dma_low"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8977, 35} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8977, 35} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8977, 43} true;
  assume {:verifier.code 0} true;
  $i33 := $lshr.i64($i32, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8977, 14} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i64.i32($i33);
  // WARNING: %35 = trunc i64 %34 to i32, !dbg !8210, !verifier.code !8149
  call {:cexpr "dma_high"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8978, 13} true;
  assume {:verifier.code 0} true;
  call $i35 := __fswab32($i30);
  // WARNING: %36 = call i32 @__fswab32(i32 %31), !dbg !8213, !verifier.code !8149
  call {:cexpr "tmp___3"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8979, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p13, 16);
  $p37 := $add.ref($add.ref($p13, 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8979, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8980, 13} true;
  assume {:verifier.code 0} true;
  call $i38 := __fswab32($i34);
  // WARNING: %39 = call i32 @__fswab32(i32 %35), !dbg !8218, !verifier.code !8149
  call {:cexpr "tmp___4"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8981, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p13, 16);
  $p40 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8981, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8982, 13} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8982, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, $sub.i32(0, 1));
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8984, 38} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8984, 3} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p9, $p42, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8986, 14} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8986, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 28} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 27} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i32($i47, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb8, $bb9;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i32($i45, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i46 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb8:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i48 == 1));
  goto $bb7;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9002, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9019, 33} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9019, 33} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9019, 13} true;
  assume {:verifier.code 0} true;
  call $i56 := __fswab32($i55);
  // WARNING: %70 = call i32 @__fswab32(i32 %69), !dbg !8255, !verifier.code !8149
  call {:cexpr "tmp___5"} boogie_si_record_i32($i56);
  // WARNING: call void @llvm.dbg.value(metadata i32 %70, i64 0, metadata !10280, metadata !8144), !dbg !10281, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9021, 33} true;
  assume {:verifier.code 0} true;
  $p57 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9021, 33} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9021, 13} true;
  assume {:verifier.code 0} true;
  call $i59 := __fswab32($i58);
  // WARNING: %73 = call i32 @__fswab32(i32 %72), !dbg !8261, !verifier.code !8149
  call {:cexpr "tmp___6"} boogie_si_record_i32($i59);
  // WARNING: call void @llvm.dbg.value(metadata i32 %73, i64 0, metadata !10286, metadata !8144), !dbg !10287, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9024, 14} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i56, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9024, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb20, $bb21;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i53 := $eq.i32($i52, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb17, $bb18;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i51 := $eq.i32($i50, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb332;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i51 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb17:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i53 == 1));
  goto $bb16;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb20:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9025, 16} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9025, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb22:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9026, 13} true;
  assume {:verifier.code 0} true;
  $p62 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9026, 19} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p62, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9027, 7} true;
  assume {:verifier.code 0} true;
  $i63 := 0;
  goto $bb24;
$bb23:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9029, 16} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i32($i56, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9029, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb25, $bb26;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9053, 1} true;
  assume {:verifier.code 0} true;
  $r := $i63;
  $exn := false;
  return;
$bb25:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9030, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i32(0, 38);
  goto $bb24;
$bb26:
  assume !(($i64 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9032, 16} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i56, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9032, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9033, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i32(0, 7);
  goto $bb24;
$bb28:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i56, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 30} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i1, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 38} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb32, $bb33;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 23} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9039, 49} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9039, 49} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9039, 56} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p73, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9039, 7} true;
  assume {:verifier.code 0} true;
  call $i75 := dev_err.ref.ref.i32.i32($p74, .str.13, $i1, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9042, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i32(0, 6);
  goto $bb24;
$bb32:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 48} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 48} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.7, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 54} true;
  assume {:verifier.code 0} true;
  $i70 := $and.i32($i69, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 60} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 38} true;
  assume {:verifier.code 0} true;
  assume !(($i67 == 1));
  goto $bb31;
$bb34:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9036, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i32(0, 34);
  goto $bb24;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9035, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb31;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9048, 45} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9048, 45} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9048, 52} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9048, 3} true;
  assume {:verifier.code 0} true;
  call $i79 := dev_err.ref.ref.i32.i32($p78, .str.14, $i1, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9051, 3} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i32(0, 11);
  goto $bb24;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1));
  goto $bb7;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i83 := $eq.i32($i82, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i83 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i83 == 1));
  goto $bb7;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i85 := $eq.i32($i84, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i85 == 1));
  goto $bb7;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i87 := $eq.i32($i86, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i87 == 1));
  goto $bb7;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i89 := $eq.i32($i88, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i89 == 1));
  goto $bb7;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i91 := $eq.i32($i90, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i91 == 1));
  goto $bb7;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i93 := $eq.i32($i92, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i93 == 1));
  goto $bb7;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i95 := $eq.i32($i94, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb59, $bb60;
$bb59:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i95 == 1));
  goto $bb7;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i97 := $eq.i32($i96, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i97 == 1));
  goto $bb7;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i99 := $eq.i32($i98, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i99 == 1));
  goto $bb7;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i101 := $eq.i32($i100, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb68, $bb69;
$bb68:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i101 == 1));
  goto $bb7;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i103 := $eq.i32($i102, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i103 == 1));
  goto $bb7;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i105 := $eq.i32($i104, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i105 == 1));
  goto $bb7;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i107 := $eq.i32($i106, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i107 == 1));
  goto $bb7;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i109 := $eq.i32($i108, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i109 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i109 == 1));
  goto $bb7;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i111 := $eq.i32($i110, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb83, $bb84;
$bb83:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i111 == 1));
  goto $bb7;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i113 := $eq.i32($i112, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb86, $bb87;
$bb86:
  assume ($i113 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i113 == 1));
  goto $bb7;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i115 := $eq.i32($i114, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb89, $bb90;
$bb89:
  assume ($i115 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i115 == 1));
  goto $bb7;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i117 := $eq.i32($i116, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb92, $bb93;
$bb92:
  assume ($i117 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i117 == 1));
  goto $bb7;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i119 := $eq.i32($i118, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb95, $bb96;
$bb95:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i119 == 1));
  goto $bb7;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i121 := $eq.i32($i120, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb98, $bb99;
$bb98:
  assume ($i121 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i121 == 1));
  goto $bb7;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i123 := $eq.i32($i122, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb101, $bb102;
$bb101:
  assume ($i123 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i123 == 1));
  goto $bb7;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i125 := $eq.i32($i124, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb104, $bb105;
$bb104:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb106;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i125 == 1));
  goto $bb7;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i127 := $eq.i32($i126, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb107, $bb108;
$bb107:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i127 == 1));
  goto $bb7;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i129 := $eq.i32($i128, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb110, $bb111;
$bb110:
  assume ($i129 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i129 == 1));
  goto $bb7;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i131 := $eq.i32($i130, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb113, $bb114;
$bb113:
  assume ($i131 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb114:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i131 == 1));
  goto $bb7;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i133 := $eq.i32($i132, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb116, $bb117;
$bb116:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb118;
$bb117:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i133 == 1));
  goto $bb7;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i135 := $eq.i32($i134, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb119, $bb120;
$bb119:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb120:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i135 == 1));
  goto $bb7;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i137 := $eq.i32($i136, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb122, $bb123;
$bb122:
  assume ($i137 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb124;
$bb123:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i137 == 1));
  goto $bb7;
$bb124:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i139 := $eq.i32($i138, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i139} true;
  goto $bb125, $bb126;
$bb125:
  assume ($i139 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb126:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i139 == 1));
  goto $bb7;
$bb127:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i141 := $eq.i32($i140, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb128, $bb129;
$bb128:
  assume ($i141 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb130;
$bb129:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i141 == 1));
  goto $bb7;
$bb130:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i143 := $eq.i32($i142, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb131, $bb132;
$bb131:
  assume ($i143 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb133;
$bb132:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i143 == 1));
  goto $bb7;
$bb133:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i145 := $eq.i32($i144, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb134, $bb135;
$bb134:
  assume ($i145 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb136;
$bb135:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i145 == 1));
  goto $bb7;
$bb136:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i147 := $eq.i32($i146, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i147} true;
  goto $bb137, $bb138;
$bb137:
  assume ($i147 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb139;
$bb138:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i147 == 1));
  goto $bb7;
$bb139:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i149 := $eq.i32($i148, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb140, $bb141;
$bb140:
  assume ($i149 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb142;
$bb141:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i149 == 1));
  goto $bb7;
$bb142:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i151 := $eq.i32($i150, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i151} true;
  goto $bb143, $bb144;
$bb143:
  assume ($i151 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb145;
$bb144:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i151 == 1));
  goto $bb7;
$bb145:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i153 := $eq.i32($i152, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb146, $bb147;
$bb146:
  assume ($i153 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb148;
$bb147:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i153 == 1));
  goto $bb7;
$bb148:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i155 := $eq.i32($i154, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb149, $bb150;
$bb149:
  assume ($i155 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb151;
$bb150:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i155 == 1));
  goto $bb7;
$bb151:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i157 := $eq.i32($i156, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i157} true;
  goto $bb152, $bb153;
$bb152:
  assume ($i157 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb154;
$bb153:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i157 == 1));
  goto $bb7;
$bb154:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i159 := $eq.i32($i158, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i159} true;
  goto $bb155, $bb156;
$bb155:
  assume ($i159 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb157;
$bb156:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i159 == 1));
  goto $bb7;
$bb157:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i160 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i161 := $eq.i32($i160, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb158, $bb159;
$bb158:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb160;
$bb159:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i161 == 1));
  goto $bb7;
$bb160:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i163 := $eq.i32($i162, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb161, $bb162;
$bb161:
  assume ($i163 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb163;
$bb162:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i163 == 1));
  goto $bb7;
$bb163:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i165 := $eq.i32($i164, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i165} true;
  goto $bb164, $bb165;
$bb164:
  assume ($i165 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb166;
$bb165:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i165 == 1));
  goto $bb7;
$bb166:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i166 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i167 := $eq.i32($i166, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb167, $bb168;
$bb167:
  assume ($i167 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb169;
$bb168:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i167 == 1));
  goto $bb7;
$bb169:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i169 := $eq.i32($i168, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i169} true;
  goto $bb170, $bb171;
$bb170:
  assume ($i169 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb172;
$bb171:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i169 == 1));
  goto $bb7;
$bb172:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i171 := $eq.i32($i170, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i171} true;
  goto $bb173, $bb174;
$bb173:
  assume ($i171 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb175;
$bb174:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i171 == 1));
  goto $bb7;
$bb175:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i173 := $eq.i32($i172, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i173} true;
  goto $bb176, $bb177;
$bb176:
  assume ($i173 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb177:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i173 == 1));
  goto $bb7;
$bb178:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i175 := $eq.i32($i174, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i175} true;
  goto $bb179, $bb180;
$bb179:
  assume ($i175 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb181;
$bb180:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i175 == 1));
  goto $bb7;
$bb181:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i176 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i177 := $eq.i32($i176, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb182, $bb183;
$bb182:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb184;
$bb183:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i177 == 1));
  goto $bb7;
$bb184:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i178 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i179 := $eq.i32($i178, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb185, $bb186;
$bb185:
  assume ($i179 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb187;
$bb186:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i179 == 1));
  goto $bb7;
$bb187:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i181 := $eq.i32($i180, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i181} true;
  goto $bb188, $bb189;
$bb188:
  assume ($i181 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb190;
$bb189:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i181 == 1));
  goto $bb7;
$bb190:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i183 := $eq.i32($i182, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb191, $bb192;
$bb191:
  assume ($i183 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb193;
$bb192:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i183 == 1));
  goto $bb7;
$bb193:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i184 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i185 := $eq.i32($i184, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb194, $bb195;
$bb194:
  assume ($i185 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb196;
$bb195:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i185 == 1));
  goto $bb7;
$bb196:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i187 := $eq.i32($i186, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i187} true;
  goto $bb197, $bb198;
$bb197:
  assume ($i187 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb199;
$bb198:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i187 == 1));
  goto $bb7;
$bb199:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i189 := $eq.i32($i188, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i189} true;
  goto $bb200, $bb201;
$bb200:
  assume ($i189 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb202;
$bb201:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i189 == 1));
  goto $bb7;
$bb202:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i190 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i191 := $eq.i32($i190, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i191} true;
  goto $bb203, $bb204;
$bb203:
  assume ($i191 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb205;
$bb204:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i191 == 1));
  goto $bb7;
$bb205:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i193 := $eq.i32($i192, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i193} true;
  goto $bb206, $bb207;
$bb206:
  assume ($i193 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb208;
$bb207:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i193 == 1));
  goto $bb7;
$bb208:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i195 := $eq.i32($i194, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb209, $bb210;
$bb209:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb211;
$bb210:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i195 == 1));
  goto $bb7;
$bb211:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i196 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i197 := $eq.i32($i196, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i197} true;
  goto $bb212, $bb213;
$bb212:
  assume ($i197 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb214;
$bb213:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i197 == 1));
  goto $bb7;
$bb214:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i198 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i199 := $eq.i32($i198, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i199} true;
  goto $bb215, $bb216;
$bb215:
  assume ($i199 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb217;
$bb216:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i199 == 1));
  goto $bb7;
$bb217:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i200 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i201 := $eq.i32($i200, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb218, $bb219;
$bb218:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb220;
$bb219:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i201 == 1));
  goto $bb7;
$bb220:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i203 := $eq.i32($i202, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb221, $bb222;
$bb221:
  assume ($i203 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb223;
$bb222:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i203 == 1));
  goto $bb7;
$bb223:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i204 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i205 := $eq.i32($i204, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i205} true;
  goto $bb224, $bb225;
$bb224:
  assume ($i205 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb226;
$bb225:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i205 == 1));
  goto $bb7;
$bb226:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i206 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i207 := $eq.i32($i206, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb227, $bb228;
$bb227:
  assume ($i207 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb229;
$bb228:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i207 == 1));
  goto $bb7;
$bb229:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i208 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i209 := $eq.i32($i208, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i209} true;
  goto $bb230, $bb231;
$bb230:
  assume ($i209 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb232;
$bb231:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i209 == 1));
  goto $bb7;
$bb232:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i210 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i211 := $eq.i32($i210, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb233, $bb234;
$bb233:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb235;
$bb234:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i211 == 1));
  goto $bb7;
$bb235:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i213 := $eq.i32($i212, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb236, $bb237;
$bb236:
  assume ($i213 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb238;
$bb237:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i213 == 1));
  goto $bb7;
$bb238:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i215 := $eq.i32($i214, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb239, $bb240;
$bb239:
  assume ($i215 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb241;
$bb240:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i215 == 1));
  goto $bb7;
$bb241:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i216 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i217 := $eq.i32($i216, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i217} true;
  goto $bb242, $bb243;
$bb242:
  assume ($i217 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb244;
$bb243:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i217 == 1));
  goto $bb7;
$bb244:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i218 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i219 := $eq.i32($i218, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb245, $bb246;
$bb245:
  assume ($i219 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb247;
$bb246:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i219 == 1));
  goto $bb7;
$bb247:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i220 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i221 := $eq.i32($i220, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb248, $bb249;
$bb248:
  assume ($i221 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb250;
$bb249:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i221 == 1));
  goto $bb7;
$bb250:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i222 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i223 := $eq.i32($i222, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i223} true;
  goto $bb251, $bb252;
$bb251:
  assume ($i223 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb253;
$bb252:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i223 == 1));
  goto $bb7;
$bb253:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i224 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i225 := $eq.i32($i224, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i225} true;
  goto $bb254, $bb255;
$bb254:
  assume ($i225 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb256;
$bb255:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i225 == 1));
  goto $bb7;
$bb256:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i226 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i227 := $eq.i32($i226, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i227} true;
  goto $bb257, $bb258;
$bb257:
  assume ($i227 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb259;
$bb258:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i227 == 1));
  goto $bb7;
$bb259:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i228 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i229 := $eq.i32($i228, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i229} true;
  goto $bb260, $bb261;
$bb260:
  assume ($i229 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb262;
$bb261:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i229 == 1));
  goto $bb7;
$bb262:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i230 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i231 := $eq.i32($i230, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i231} true;
  goto $bb263, $bb264;
$bb263:
  assume ($i231 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb265;
$bb264:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i231 == 1));
  goto $bb7;
$bb265:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i232 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i233 := $eq.i32($i232, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i233} true;
  goto $bb266, $bb267;
$bb266:
  assume ($i233 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb268;
$bb267:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i233 == 1));
  goto $bb7;
$bb268:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i234 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i235 := $eq.i32($i234, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i235} true;
  goto $bb269, $bb270;
$bb269:
  assume ($i235 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb271;
$bb270:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i235 == 1));
  goto $bb7;
$bb271:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i236 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i237 := $eq.i32($i236, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i237} true;
  goto $bb272, $bb273;
$bb272:
  assume ($i237 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb274;
$bb273:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i237 == 1));
  goto $bb7;
$bb274:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i238 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i239 := $eq.i32($i238, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i239} true;
  goto $bb275, $bb276;
$bb275:
  assume ($i239 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb277;
$bb276:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i239 == 1));
  goto $bb7;
$bb277:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i240 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i241 := $eq.i32($i240, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i241} true;
  goto $bb278, $bb279;
$bb278:
  assume ($i241 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb280;
$bb279:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i241 == 1));
  goto $bb7;
$bb280:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i242 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i243 := $eq.i32($i242, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb281, $bb282;
$bb281:
  assume ($i243 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb283;
$bb282:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i243 == 1));
  goto $bb7;
$bb283:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i244 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i245 := $eq.i32($i244, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb284, $bb285;
$bb284:
  assume ($i245 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb286;
$bb285:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i245 == 1));
  goto $bb7;
$bb286:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i246 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i247 := $eq.i32($i246, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i247} true;
  goto $bb287, $bb288;
$bb287:
  assume ($i247 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb289;
$bb288:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i247 == 1));
  goto $bb7;
$bb289:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i248 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i249 := $eq.i32($i248, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i249} true;
  goto $bb290, $bb291;
$bb290:
  assume ($i249 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb292;
$bb291:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i249 == 1));
  goto $bb7;
$bb292:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i250 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i251 := $eq.i32($i250, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i251} true;
  goto $bb293, $bb294;
$bb293:
  assume ($i251 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb295;
$bb294:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i251 == 1));
  goto $bb7;
$bb295:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i252 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i253 := $eq.i32($i252, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i253} true;
  goto $bb296, $bb297;
$bb296:
  assume ($i253 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb298;
$bb297:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i253 == 1));
  goto $bb7;
$bb298:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i254 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i255 := $eq.i32($i254, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i255} true;
  goto $bb299, $bb300;
$bb299:
  assume ($i255 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb301;
$bb300:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i255 == 1));
  goto $bb7;
$bb301:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i256 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i257 := $eq.i32($i256, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i257} true;
  goto $bb302, $bb303;
$bb302:
  assume ($i257 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb304;
$bb303:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i257 == 1));
  goto $bb7;
$bb304:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i258 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i259 := $eq.i32($i258, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i259} true;
  goto $bb305, $bb306;
$bb305:
  assume ($i259 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb307;
$bb306:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i259 == 1));
  goto $bb7;
$bb307:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i260 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i261 := $eq.i32($i260, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i261} true;
  goto $bb308, $bb309;
$bb308:
  assume ($i261 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb310;
$bb309:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i261 == 1));
  goto $bb7;
$bb310:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i262 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i263 := $eq.i32($i262, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i263} true;
  goto $bb311, $bb312;
$bb311:
  assume ($i263 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb313;
$bb312:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i263 == 1));
  goto $bb7;
$bb313:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i265 := $eq.i32($i264, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i265} true;
  goto $bb314, $bb315;
$bb314:
  assume ($i265 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb316;
$bb315:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i265 == 1));
  goto $bb7;
$bb316:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i266 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i267 := $eq.i32($i266, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i267} true;
  goto $bb317, $bb318;
$bb317:
  assume ($i267 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb319;
$bb318:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i267 == 1));
  goto $bb7;
$bb319:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i268 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i269 := $eq.i32($i268, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i269} true;
  goto $bb320, $bb321;
$bb320:
  assume ($i269 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb322;
$bb321:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i269 == 1));
  goto $bb7;
$bb322:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i271 := $eq.i32($i270, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i271} true;
  goto $bb323, $bb324;
$bb323:
  assume ($i271 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb325;
$bb324:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i271 == 1));
  goto $bb7;
$bb325:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i272 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i273 := $eq.i32($i272, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb326, $bb327;
$bb326:
  assume ($i273 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb328;
$bb327:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i273 == 1));
  goto $bb7;
$bb328:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 41} true;
  assume {:verifier.code 0} true;
  $i274 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 48} true;
  assume {:verifier.code 0} true;
  $i275 := $eq.i32($i274, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  goto $bb329, $bb330;
$bb329:
  assume ($i275 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8997, 7} true;
  assume {:verifier.code 0} true;
  goto $bb331;
$bb330:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i275 == 1));
  goto $bb7;
$bb331:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8991, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:verifier.code 0} true;
  goto $bb7;
$bb332:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i276 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i277 := $eq.i32($i276, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i277} true;
  goto $bb333, $bb334;
$bb333:
  assume ($i277 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb335;
$bb334:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i277 == 1));
  goto $bb16;
$bb335:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i278 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i279 := $eq.i32($i278, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i279} true;
  goto $bb336, $bb337;
$bb336:
  assume ($i279 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb338;
$bb337:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i279 == 1));
  goto $bb16;
$bb338:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i280 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i281 := $eq.i32($i280, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i281} true;
  goto $bb339, $bb340;
$bb339:
  assume ($i281 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb341;
$bb340:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i281 == 1));
  goto $bb16;
$bb341:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i283 := $eq.i32($i282, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i283} true;
  goto $bb342, $bb343;
$bb342:
  assume ($i283 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb344;
$bb343:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i283 == 1));
  goto $bb16;
$bb344:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i284 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i285 := $eq.i32($i284, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i285} true;
  goto $bb345, $bb346;
$bb345:
  assume ($i285 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb347;
$bb346:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i285 == 1));
  goto $bb16;
$bb347:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i286 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i287 := $eq.i32($i286, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i287} true;
  goto $bb348, $bb349;
$bb348:
  assume ($i287 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb350;
$bb349:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i287 == 1));
  goto $bb16;
$bb350:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i288 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i289 := $eq.i32($i288, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i289} true;
  goto $bb351, $bb352;
$bb351:
  assume ($i289 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb353;
$bb352:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i289 == 1));
  goto $bb16;
$bb353:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i290 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i291 := $eq.i32($i290, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i291} true;
  goto $bb354, $bb355;
$bb354:
  assume ($i291 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb356;
$bb355:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i291 == 1));
  goto $bb16;
$bb356:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i292 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i293 := $eq.i32($i292, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i293} true;
  goto $bb357, $bb358;
$bb357:
  assume ($i293 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb359;
$bb358:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i293 == 1));
  goto $bb16;
$bb359:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i294 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i295 := $eq.i32($i294, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i295} true;
  goto $bb360, $bb361;
$bb360:
  assume ($i295 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb362;
$bb361:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i295 == 1));
  goto $bb16;
$bb362:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i296 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i297 := $eq.i32($i296, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i297} true;
  goto $bb363, $bb364;
$bb363:
  assume ($i297 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb365;
$bb364:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i297 == 1));
  goto $bb16;
$bb365:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i298 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i299 := $eq.i32($i298, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i299} true;
  goto $bb366, $bb367;
$bb366:
  assume ($i299 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb368;
$bb367:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i299 == 1));
  goto $bb16;
$bb368:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 40} true;
  assume {:verifier.code 0} true;
  $i300 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 47} true;
  assume {:verifier.code 0} true;
  $i301 := $eq.i32($i300, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i301} true;
  goto $bb369, $bb370;
$bb369:
  assume ($i301 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9012, 7} true;
  assume {:verifier.code 0} true;
  goto $bb371;
$bb370:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9011, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i301 == 1));
  goto $bb16;
$bb371:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  // WARNING: call void @msleep(i32 1), !dbg !8247, !verifier.code !8149
  assume {:verifier.code 0} true;
  goto $bb16;
}
const __writeb: ref;
axiom (__writeb == $sub.ref(0, 266385));
procedure  __writeb($i0: i8, $p1: ref)
{
$bb0:
  call devirtbounce.5(0, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6792, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_request_irq: ref;
axiom (myri10ge_request_irq == $sub.ref(0, 267417));
procedure  myri10ge_request_irq($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i1;
  var $i61: i32;
  var $i62: i32;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $p78: ref;
  var $i79: i32;
  var $i80: i1;
  var $i67: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i1;
  var $i40: i32;
  var $i84: i32;
  var $i39: i32;
  var $p86: ref;
  var $i87: i32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $i98: i32;
  var $p99: ref;
  var $i100: i32;
  var $i101: i1;
  var $i85: i32;
  var $i21: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12357, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12357, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12358, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12358, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12359, 8} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12359, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12360, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12360, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, 0);
  // WARNING: store i32 0, i32* %7, align 4, !dbg !8157, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12362, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12362, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12362, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12363, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12363, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12363, 25} true;
  assume {:verifier.code 0} true;
  $i11 := $sgt.i32($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12363, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i32 := 0;
  goto $bb16;
$bb3:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12365, 43} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12365, 43} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12365, 62} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12365, 62} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12365, 16} true;
  assume {:verifier.code 0} true;
  call $i16 := pci_enable_msix($p2, $p13, $i15);
  // WARNING: %19 = call i32 @pci_enable_msix(%struct.pci_dev* %3, %struct.msix_entry* %16, i32 %18), !dbg !8173, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12367, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12367, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i22 := 0;
  goto $bb9;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12368, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12368, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12369, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12371, 51} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12371, 9} true;
  assume {:verifier.code 0} true;
  call $i20 := dev_err.ref.ref.i32($p19, .str.105, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12374, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $i16;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12376, 5} true;
  assume {:verifier.code 0} true;
  $i22 := $i16;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12463, 1} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12379, 14} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12379, 14} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12379, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12379, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12381, 16} true;
  assume {:verifier.code 0} true;
  call $i26 := pci_enable_msi_block($p2, 1);
  // WARNING: %33 = call i32 @pci_enable_msi_block(%struct.pci_dev* %3, i32 1), !dbg !8191, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12383, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12383, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  $i31 := $i22;
  goto $bb15;
$bb12:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12385, 51} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12385, 9} true;
  assume {:verifier.code 0} true;
  call $i29 := dev_err.ref.ref.i32($p28, .str.106, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12388, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12389, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12389, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, 1);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12391, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $i26;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12394, 3} true;
  assume {:verifier.code 0} true;
  $i32 := $i31;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12397, 12} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12397, 12} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12397, 25} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12397, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 18} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 18} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 11} true;
  assume {:verifier.code 0} true;
  $i38 := $slt.i32(0, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $i32;
  assume {:branchcond $i38} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i35 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12443, 39} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p2, 1540);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12443, 39} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12443, 93} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12443, 93} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12443, 99} true;
  assume {:verifier.code 0} true;
  $p90 := $p89;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12443, 68} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12444, 46} true;
  assume {:verifier.code 0} true;
  $p92 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12444, 46} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12444, 33} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12443, 14} true;
  assume {:verifier.code 0} true;
  call $i95 := ldv_request_irq_88($i87, myri10ge_intr, 128, $p91, $p94);
  // WARNING: %113 = call i32 @ldv_request_irq_88(i32 %105, i32 (i32, i8*)* @myri10ge_intr, i64 128, i8* %109, i8* %112), !dbg !8276, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12446, 16} true;
  assume {:verifier.code 0} true;
  $i96 := $ne.i32($i95, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12446, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb39, $bb40;
$bb19:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 9} true;
  assume {:verifier.code 0} true;
  $i40 := 0;
  goto $bb22;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i38 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12436, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12402, 15} true;
  assume {:verifier.code 0} true;
  $p41 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12402, 15} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12402, 20} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12402, 18} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p42, $mul.ref($i43, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12403, 29} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p42, $mul.ref($i43, 688)), 656);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12403, 14} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12403, 80} true;
  assume {:verifier.code 0} true;
  $p47 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12403, 61} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12403, 5} true;
  assume {:verifier.code 0} true;
  call $i49 := snprintf.ref.i64.ref.ref.i32($p46, 32, .str.107, $p48, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12405, 39} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12405, 39} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12405, 54} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12405, 52} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p51, $mul.ref($i52, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12405, 74} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p51, $mul.ref($i52, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12405, 74} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12406, 61} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p42, $mul.ref($i43, 688)), 656);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12406, 38} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12406, 72} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12405, 14} true;
  assume {:verifier.code 0} true;
  call $i59 := ldv_request_irq_86($i55, myri10ge_intr, 0, $p57, $p58);
  // WARNING: %71 = call i32 @ldv_request_irq_86(i32 %67, i32 (i32, i8*)* @myri10ge_intr, i64 0, i8* %69, i8* %70), !dbg !8236, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12408, 16} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12408, 9} true;
  assume {:verifier.code 0} true;
  $i61, $i62 := $i40, $i59;
  assume {:branchcond $i60} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i60 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12410, 49} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12410, 7} true;
  assume {:verifier.code 0} true;
  call $i64 := dev_err.ref.ref.i32($p63, .str.108, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12412, 13} true;
  assume {:verifier.code 0} true;
  $i65 := $sub.i32($i61, 1);
  // WARNING: %76 = sub nsw i32 %.13.lcssa5, 1, !dbg !8244, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 13} true;
  assume {:verifier.code 0} true;
  $i66 := $sge.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb26, $bb27;
$bb25:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb26:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 11} true;
  assume {:verifier.code 0} true;
  $i67 := $i65;
  goto $bb29;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb33;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12422, 9} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 29} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 29} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 44} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 42} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p69, $mul.ref($i70, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 64} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p69, $mul.ref($i70, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 64} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i32($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 85} true;
  assume {:verifier.code 0} true;
  $p74 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 85} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 72} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 90} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i32.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 88} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p76, $mul.ref($i77, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12417, 7} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq_87($i73, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12418, 13} true;
  assume {:verifier.code 0} true;
  $i79 := $sub.i32($i67, 1);
  // WARNING: %90 = sub nsw i32 %.026, 1, !dbg !8258, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 13} true;
  assume {:verifier.code 0} true;
  $i80 := $sge.i32($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 11} true;
  assume {:verifier.code 0} true;
  $i67 := $i79;
  assume {:branchcond $i80} true;
  goto $bb31, $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 11} true;
  assume {:verifier.code 0} true;
  assume ($i80 == 1);
  goto $bb29;
$bb32:
  assume !(($i80 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12421, 11} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12427, 7} true;
  assume {:verifier.code 0} true;
  call pci_disable_msix($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12429, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $i62;
  goto $bb8;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12433, 11} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i32($i40, 1);
  // WARNING: %97 = add nsw i32 %.137, 1, !dbg !8264, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 18} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 11} true;
  assume {:verifier.code 0} true;
  $i83 := $slt.i32($i81, $i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 9} true;
  assume {:verifier.code 0} true;
  $i40, $i84 := $i81, $i59;
  assume {:branchcond $i83} true;
  goto $bb35, $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 9} true;
  assume {:verifier.code 0} true;
  assume ($i83 == 1);
  goto $bb22;
$bb36:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12435, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $i84;
  goto $bb21;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12441, 3} true;
  assume {:verifier.code 0} true;
  $i85 := $i39;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12461, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $i85;
  goto $bb8;
$bb39:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12448, 49} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12448, 7} true;
  assume {:verifier.code 0} true;
  call $i98 := dev_err.ref.ref($p97, .str.109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12450, 16} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12450, 16} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i32($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12450, 28} true;
  assume {:verifier.code 0} true;
  $i101 := $ne.i32($i100, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12450, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb41:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12452, 9} true;
  assume {:verifier.code 0} true;
  call pci_disable_msi($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12454, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12457, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  $i85 := $i95;
  goto $bb38;
}
const is_power_of_2: ref;
axiom (is_power_of_2 == $sub.ref(0, 268449));
procedure  is_power_of_2($i0: i64)
  returns ($r: i1)
{
  var $i1: i1;
  var $i3: i64;
  var $i4: i64;
  var $i5: i1;
  var $i2: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6314, 21} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i64($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6314, 28} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6314, 39} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i64($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6314, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i64($i0, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6314, 47} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:verifier.code 0} true;
  $i2 := $i5;
  goto $bb3;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6314, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6314, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const myri10ge_get_txrx: ref;
axiom (myri10ge_get_txrx == $sub.ref(0, 269481));
procedure  myri10ge_get_txrx($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i64;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !10513, metadata !8144), !dbg !10514, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12517, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12517, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12517, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12517, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, $mul.ref($i5, 688));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %7, i64 0, metadata !10523, metadata !8144), !dbg !10524, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 18} true;
  assume {:verifier.code 0} true;
  assume ($i7 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12521, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12521, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p13, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12522, 14} true;
  assume {:verifier.code 0} true;
  call $i14 := myri10ge_send_cmd($p0, 6, $p2, 0);
  // WARNING: %17 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 6, %struct.myri10ge_cmd* %3, i32 0), !dbg !8176, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 55} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 55} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 20} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 82} true;
  assume {:verifier.code 0} true;
  $p18 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 82} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.7, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 62} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 60} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p17, $mul.ref($i20, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 9} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p4, $mul.ref($i5, 688));
  $p23 := $add.ref($p4, $mul.ref($i5, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12523, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12525, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i14;
  goto $bb6;
$bb3:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 27} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 33} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 52} true;
  assume {:verifier.code 0} true;
  $i12 := $ugt.i32($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12519, 7} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb2;
$bb5:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i24 := 0;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12529, 7} true;
  assume {:verifier.code 0} true;
  $p25 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12529, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p25, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12530, 9} true;
  assume {:verifier.code 0} true;
  call $i26 := myri10ge_send_cmd($p0, 7, $p2, 0);
  // WARNING: %30 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 7, %struct.myri10ge_cmd* %3, i32 0), !dbg !8188, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12531, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $or.i32($i24, $i26);
  // WARNING: %31 = or i32 %.0, %30, !dbg !8191, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 59} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 59} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 24} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 86} true;
  assume {:verifier.code 0} true;
  $p31 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 86} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.7, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 66} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 64} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p30, $mul.ref($i33, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 7} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 88);
  $p36 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12532, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p36, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12533, 7} true;
  assume {:verifier.code 0} true;
  $p37 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12533, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p37, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12534, 13} true;
  assume {:verifier.code 0} true;
  call $i38 := myri10ge_send_cmd($p0, 8, $p2, 0);
  // WARNING: %42 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 8, %struct.myri10ge_cmd* %3, i32 0), !dbg !8201, !verifier.code !8143
  call {:cexpr "tmp___0"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12535, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $or.i32($i27, $i38);
  // WARNING: %43 = or i32 %31, %42, !dbg !8204, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 57} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 57} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 22} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 84} true;
  assume {:verifier.code 0} true;
  $p43 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 84} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.7, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 64} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i32.i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 62} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p42, $mul.ref($i45, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 7} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 152);
  $p48 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12536, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p48, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 36} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 36} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 67} true;
  assume {:verifier.code 0} true;
  $i51 := $mul.i32($i1, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 44} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 73} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 3670016);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 41} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p50, $mul.ref($i53, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 20} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 7} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p4, $mul.ref($i5, 688));
  $p57 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12537, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p57, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 38} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 38} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 69} true;
  assume {:verifier.code 0} true;
  $i60 := $mul.i32($i1, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 46} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i32.i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 75} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i61, 3932160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 43} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p59, $mul.ref($i62, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 22} true;
  assume {:verifier.code 0} true;
  $p64 := $bitcast.ref.ref($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 7} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p4, $mul.ref($i5, 688));
  $p66 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12538, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p66, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12540, 3} true;
  assume {:verifier.code 0} true;
  $r := $i39;
  $exn := false;
  return;
}
const myri10ge_allocate_rings: ref;
axiom (myri10ge_allocate_rings == $sub.ref(0, 270513));
procedure  myri10ge_allocate_rings($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $p22: ref;
  var $i23: i32;
  var $i24: i64;
  var $i25: i64;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $i29: i32;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i64;
  var $i67: i1;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $i78: i1;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i64;
  var $i89: i1;
  var $i90: i64;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i64;
  var $i100: i1;
  var $i101: i64;
  var $i102: i64;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i110: i64;
  var $i111: i1;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: i32;
  var $i130: i1;
  var $p131: ref;
  var $p132: ref;
  var $i133: i32;
  var $i134: i32;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: i32;
  var $i140: i32;
  var $p141: ref;
  var $p142: ref;
  var $i143: i32;
  var $p144: ref;
  var $p145: ref;
  var $i146: i32;
  var $i147: i32;
  var $i148: i1;
  var $p149: ref;
  var $p150: ref;
  var $i151: i32;
  var $i152: i32;
  var $p153: ref;
  var $p154: ref;
  var $i155: i32;
  var $p156: ref;
  var $p157: ref;
  var $i158: i32;
  var $p159: ref;
  var $p160: ref;
  var $i161: i32;
  var $i162: i32;
  var $i163: i1;
  var $p164: ref;
  var $p165: ref;
  var $i166: i32;
  var $i167: i32;
  var $p168: ref;
  var $p169: ref;
  var $i170: i32;
  var $p171: ref;
  var $p172: ref;
  var $i173: i32;
  var $i174: i1;
  var $p176: ref;
  var $p177: ref;
  var $i178: i32;
  var $i179: i32;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $i185: i64;
  var $p186: ref;
  var $p187: ref;
  var $i188: i32;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $i192: i64;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $i175: i32;
  var $p199: ref;
  var $i200: i32;
  var $i201: i1;
  var $p202: ref;
  var $p203: ref;
  var $i204: i32;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i32;
  var $p210: ref;
  var $p211: ref;
  var $i212: i32;
  var $i213: i1;
  var $p215: ref;
  var $p216: ref;
  var $i217: i32;
  var $i218: i32;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $i224: i64;
  var $p225: ref;
  var $p226: ref;
  var $i227: i32;
  var $i228: i32;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $i232: i64;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $i236: i32;
  var $i237: i32;
  var $i238: i1;
  var $i214: i32;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $p256: ref;
  var $p257: ref;
  var $p258: ref;
  var $p259: ref;
  var $p260: ref;
  var $p261: ref;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $i21: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12047, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12047, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12048, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12048, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12049, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12049, 43} true;
  assume {:verifier.code 0} true;
  $p7 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12049, 43} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12049, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12049, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64($i6, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12049, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $sdiv.i64($i10, 832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12049, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  // WARNING: %13 = trunc i64 %12 to i32, !dbg !8167, !verifier.code !8143
  call {:cexpr "slice"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12050, 7} true;
  assume {:verifier.code 0} true;
  $p13 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12050, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12051, 12} true;
  assume {:verifier.code 0} true;
  call $i14 := myri10ge_send_cmd($p3, 11, $p1, 0);
  // WARNING: %15 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 11, %struct.myri10ge_cmd* %2, i32 0), !dbg !8172, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12052, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12052, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.7, $p15);
  // WARNING: %17 = load i32, i32* %16, align 4, !dbg !8175, !verifier.code !8143
  call {:cexpr "tx_ring_size"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12053, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12053, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p17, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12054, 9} true;
  assume {:verifier.code 0} true;
  call $i18 := myri10ge_send_cmd($p3, 12, $p1, 0);
  // WARNING: %19 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %4, i32 12, %struct.myri10ge_cmd* %2, i32 0), !dbg !8180, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12055, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i14, $i18);
  // WARNING: %20 = or i32 %15, %19, !dbg !8183, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12057, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12057, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12058, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $i19;
  goto $bb3;
$bb2:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12235, 1} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12063, 28} true;
  assume {:verifier.code 0} true;
  $p22 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12063, 28} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.7, $p22);
  // WARNING: %26 = load i32, i32* %25, align 4, !dbg !8189, !verifier.code !8143
  call {:cexpr "rx_ring_size"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12064, 28} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12064, 57} true;
  assume {:verifier.code 0} true;
  $i25 := $udiv.i64($i24, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12064, 21} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i64.i32($i25);
  // WARNING: %29 = trunc i64 %28 to i32, !dbg !8195, !verifier.code !8143
  call {:cexpr "tx_ring_entries"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12065, 28} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12065, 57} true;
  assume {:verifier.code 0} true;
  $i28 := $udiv.i64($i27, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12065, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i64.i32($i28);
  // WARNING: %32 = trunc i64 %31 to i32, !dbg !8200, !verifier.code !8143
  call {:cexpr "rx_ring_entries"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12066, 33} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i32($i26, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12066, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $p0;
  $p32 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12066, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12067, 29} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i29, $sub.i32(0, 1));
  // WARNING: %36 = add nsw i32 %32, -1, !dbg !8206, !verifier.code !8143
  call {:cexpr "tmp___0"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12068, 7} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 152);
  $p35 := $add.ref($add.ref($p0, 152), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12068, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p35, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12069, 7} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 88);
  $p37 := $add.ref($add.ref($p0, 88), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12069, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, $i33);
  // WARNING: store i32 %36, i32* %40, align 8, !dbg !8212, !verifier.code !8143
  // WARNING: call void @llvm.dbg.value(metadata i32 -12, i64 0, metadata !10618, metadata !8144), !dbg !10619, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12072, 13} true;
  assume {:verifier.code 0} true;
  call $p38 := kzalloc(1096, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12073, 7} true;
  assume {:verifier.code 0} true;
  $p39 := $p0;
  $p40 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12073, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p40, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12075, 27} true;
  assume {:verifier.code 0} true;
  $p41 := $p0;
  $p42 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12075, 30} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12075, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12075, 40} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i64($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12075, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12076, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12233, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i32(0, 12);
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 73} true;
  assume {:verifier.code 0} true;
  $p46 := $p0;
  $p47 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 76} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 53} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 86} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i64($i49, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 93} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i64($i50, $sub.i64(0, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 21} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 7} true;
  assume {:verifier.code 0} true;
  $p53 := $p0;
  $p54 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12081, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p54, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12082, 7} true;
  assume {:verifier.code 0} true;
  $p55 := $p0;
  $p56 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12082, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12083, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12083, 43} true;
  assume {:verifier.code 0} true;
  $i58 := $mul.i64($i57, 8);
  // WARNING: %64 = mul i64 %63, 8, !dbg !8240, !verifier.code !8143
  call {:cexpr "bytes"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12084, 13} true;
  assume {:verifier.code 0} true;
  call $p59 := kzalloc($i58, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12085, 25} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12085, 7} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 88);
  $p62 := $add.ref($add.ref($p0, 88), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12085, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p62, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12087, 27} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 88);
  $p64 := $add.ref($add.ref($p0, 88), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12087, 36} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12087, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12087, 43} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i64($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12087, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12088, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12228, 29} true;
  assume {:verifier.code 0} true;
  $p259 := $p0;
  $p260 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12228, 32} true;
  assume {:verifier.code 0} true;
  $p261 := $load.ref($M.0, $p260);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12228, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12229, 7} true;
  assume {:verifier.code 0} true;
  $p262 := $p0;
  $p263 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12229, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p263, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12230, 7} true;
  assume {:verifier.code 0} true;
  $p264 := $p0;
  $p265 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12230, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p265, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12231, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12093, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12093, 43} true;
  assume {:verifier.code 0} true;
  $i69 := $mul.i64($i68, 8);
  // WARNING: %78 = mul i64 %77, 8, !dbg !8257, !verifier.code !8143
  call {:cexpr "bytes"} boogie_si_record_i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12094, 13} true;
  assume {:verifier.code 0} true;
  call $p70 := kzalloc($i69, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12095, 23} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12095, 7} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 152);
  $p73 := $add.ref($add.ref($p0, 152), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12095, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p73, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12097, 27} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 152);
  $p75 := $add.ref($add.ref($p0, 152), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12097, 34} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12097, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12097, 41} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i64($i77, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12097, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12098, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12224, 29} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($p0, 88);
  $p256 := $add.ref($add.ref($p0, 88), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12224, 38} true;
  assume {:verifier.code 0} true;
  $p257 := $load.ref($M.0, $p256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12224, 9} true;
  assume {:verifier.code 0} true;
  $p258 := $bitcast.ref.ref($p257);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12224, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p258);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12225, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12103, 11} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12103, 43} true;
  assume {:verifier.code 0} true;
  $i80 := $mul.i64($i79, 32);
  // WARNING: %92 = mul i64 %91, 32, !dbg !8274, !verifier.code !8143
  call {:cexpr "bytes"} boogie_si_record_i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12104, 13} true;
  assume {:verifier.code 0} true;
  call $p81 := kzalloc($i80, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12105, 17} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12105, 7} true;
  assume {:verifier.code 0} true;
  $p83 := $p0;
  $p84 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12105, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p84, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12107, 27} true;
  assume {:verifier.code 0} true;
  $p85 := $p0;
  $p86 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12107, 30} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12107, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12107, 35} true;
  assume {:verifier.code 0} true;
  $i89 := $eq.i64($i88, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12107, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12220, 29} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p0, 152);
  $p252 := $add.ref($add.ref($p0, 152), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12220, 36} true;
  assume {:verifier.code 0} true;
  $p253 := $load.ref($M.0, $p252);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12220, 9} true;
  assume {:verifier.code 0} true;
  $p254 := $bitcast.ref.ref($p253);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12220, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p254);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12221, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12113, 11} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12113, 43} true;
  assume {:verifier.code 0} true;
  $i91 := $mul.i64($i90, 32);
  // WARNING: %106 = mul i64 %105, 32, !dbg !8291, !verifier.code !8143
  call {:cexpr "bytes"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12114, 13} true;
  assume {:verifier.code 0} true;
  call $p92 := kzalloc($i91, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12115, 23} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12115, 7} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p0, 88);
  $p95 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12115, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p95, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12117, 27} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p0, 88);
  $p97 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12117, 36} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12117, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12117, 41} true;
  assume {:verifier.code 0} true;
  $i100 := $eq.i64($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12117, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12118, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12216, 29} true;
  assume {:verifier.code 0} true;
  $p247 := $p0;
  $p248 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12216, 32} true;
  assume {:verifier.code 0} true;
  $p249 := $load.ref($M.0, $p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12216, 9} true;
  assume {:verifier.code 0} true;
  $p250 := $bitcast.ref.ref($p249);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12216, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12217, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12123, 11} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12123, 43} true;
  assume {:verifier.code 0} true;
  $i102 := $mul.i64($i101, 32);
  // WARNING: %120 = mul i64 %119, 32, !dbg !8308, !verifier.code !8143
  call {:cexpr "bytes"} boogie_si_record_i64($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12124, 13} true;
  assume {:verifier.code 0} true;
  call $p103 := kzalloc($i102, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12125, 21} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12125, 7} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p0, 152);
  $p106 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12125, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p106, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12127, 27} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0, 152);
  $p108 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12127, 34} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12127, 7} true;
  assume {:verifier.code 0} true;
  $i110 := $p2i.ref.i64($p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12127, 39} true;
  assume {:verifier.code 0} true;
  $i111 := $eq.i64($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12127, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12128, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12212, 29} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($p0, 88);
  $p244 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12212, 38} true;
  assume {:verifier.code 0} true;
  $p245 := $load.ref($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12212, 9} true;
  assume {:verifier.code 0} true;
  $p246 := $bitcast.ref.ref($p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12212, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p246);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12213, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12132, 7} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 152);
  $p113 := $add.ref($add.ref($p0, 152), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12132, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12133, 7} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0, 88);
  $p115 := $add.ref($add.ref($p0, 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12133, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p115, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12134, 7} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 152);
  $p117 := $add.ref($add.ref($p0, 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12134, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p117, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12135, 7} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0, 88);
  $p119 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12135, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p119, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12136, 7} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p0, 88);
  $p121 := $add.ref($add.ref($p0, 88), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12136, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p121, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12137, 7} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p0, 152);
  $p123 := $add.ref($add.ref($p0, 152), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12137, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p123, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12138, 7} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p0, 88);
  $p125 := $add.ref($add.ref($p0, 88), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12138, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p125, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12139, 7} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p0, 152);
  $p127 := $add.ref($add.ref($p0, 152), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12139, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p127, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12140, 12} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12140, 12} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12140, 24} true;
  assume {:verifier.code 0} true;
  $i130 := $eq.i32($i129, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12140, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i130} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i130 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12141, 33} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p0, 88);
  $p132 := $add.ref($add.ref($p0, 88), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12141, 42} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i32($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12141, 47} true;
  assume {:verifier.code 0} true;
  $i134 := $add.i32($i133, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12141, 9} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 88);
  $p136 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12141, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p136, $i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12142, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i130 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12144, 40} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12144, 55} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12144, 55} true;
  assume {:verifier.code 0} true;
  $i139 := $load.i32($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12144, 67} true;
  assume {:verifier.code 0} true;
  $i140 := $add.i32($i139, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12144, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_alloc_rx_pages($p3, $p137, $i140, 0);
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12147, 11} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p0, 88);
  $p142 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12147, 20} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i32($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12147, 35} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p0, 88);
  $p145 := $add.ref($add.ref($p0, 88), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12147, 44} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i32($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12147, 49} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i146, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12147, 29} true;
  assume {:verifier.code 0} true;
  $i148 := $slt.i32($i143, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12147, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i148 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12150, 27} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p0, 88);
  $p150 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12150, 36} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i32($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12149, 5} true;
  assume {:verifier.code 0} true;
  call $i152 := netdev_err.ref.ref.i32.i32($p5, .str.132, $i12, $i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12152, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i148 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12187, 12} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12187, 12} true;
  assume {:verifier.code 0} true;
  $i200 := $load.i32($M.0, $p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12187, 24} true;
  assume {:verifier.code 0} true;
  $i201 := $eq.i32($i200, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12187, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb48, $bb49;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12157, 38} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12157, 51} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12157, 51} true;
  assume {:verifier.code 0} true;
  $i155 := $load.i32($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12157, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_alloc_rx_pages($p3, $p153, $i155, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12159, 11} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p0, 152);
  $p157 := $add.ref($add.ref($p0, 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12159, 18} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i32($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12159, 33} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p0, 152);
  $p160 := $add.ref($add.ref($p0, 152), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12159, 40} true;
  assume {:verifier.code 0} true;
  $i161 := $load.i32($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12159, 45} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i32($i161, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12159, 27} true;
  assume {:verifier.code 0} true;
  $i163 := $slt.i32($i158, $i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i163 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12162, 27} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p0, 152);
  $p165 := $add.ref($add.ref($p0, 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12162, 34} true;
  assume {:verifier.code 0} true;
  $i166 := $load.i32($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12161, 5} true;
  assume {:verifier.code 0} true;
  call $i167 := netdev_err.ref.ref.i32.i32($p5, .str.133, $i12, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12164, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i163 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12170, 11} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p0, 152);
  $p169 := $add.ref($add.ref($p0, 152), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12170, 18} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i32($M.0, $p169);
  // WARNING: %201 = load i32, i32* %200, align 4, !dbg !8390, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 15} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p0, 152);
  $p172 := $add.ref($add.ref($p0, 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 22} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i32($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 9} true;
  assume {:verifier.code 0} true;
  $i174 := $slt.i32($i170, $i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12168, 3} true;
  assume {:verifier.code 0} true;
  $i21 := 0;
  goto $bb3;
$bb40:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 7} true;
  assume {:verifier.code 0} true;
  $i175 := $i170;
  goto $bb43;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i174 == 1));
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb47;
$bb43:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12181, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12174, 17} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p0, 152);
  $p177 := $add.ref($add.ref($p0, 152), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12174, 24} true;
  assume {:verifier.code 0} true;
  $i178 := $load.i32($M.0, $p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12174, 11} true;
  assume {:verifier.code 0} true;
  $i179 := $and.i32($i175, $i178);
  // WARNING: %210 = and i32 %.013, %209, !dbg !8401, !verifier.code !8143
  call {:cexpr "idx"} boogie_si_record_i32($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 31} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 31} true;
  assume {:verifier.code 0} true;
  $p181 := $load.ref($M.0, $p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 41} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p0, 152);
  $p183 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 48} true;
  assume {:verifier.code 0} true;
  $p184 := $load.ref($M.0, $p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 55} true;
  assume {:verifier.code 0} true;
  $i185 := $sext.i32.i64($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 53} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p184, $mul.ref($i185, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 81} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 81} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i32($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12175, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_unmap_rx_page($p181, $p186, $i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12176, 17} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p0, 152);
  $p190 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12176, 24} true;
  assume {:verifier.code 0} true;
  $p191 := $load.ref($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12176, 31} true;
  assume {:verifier.code 0} true;
  $i192 := $sext.i32.i64($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12176, 29} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p191, $mul.ref($i192, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12176, 53} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p191, $mul.ref($i192, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12176, 53} true;
  assume {:verifier.code 0} true;
  $p195 := $load.ref($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12176, 3} true;
  assume {:verifier.code 0} true;
  call put_page($p195);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12177, 9} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i32($i175, 1);
  // WARNING: %227 = add nsw i32 %.013, 1, !dbg !8417, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 22} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i32($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $slt.i32($i196, $i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 7} true;
  assume {:verifier.code 0} true;
  $i175 := $i196;
  assume {:branchcond $i198} true;
  goto $bb45, $bb46;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 7} true;
  assume {:verifier.code 0} true;
  assume ($i198 == 1);
  goto $bb43;
$bb46:
  assume !(($i198 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 7} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12180, 22} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb48:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12188, 33} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p0, 88);
  $p203 := $add.ref($add.ref($p0, 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12188, 42} true;
  assume {:verifier.code 0} true;
  $i204 := $load.i32($M.0, $p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12188, 9} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p0, 88);
  $p206 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12188, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p206, $i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12189, 3} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume !(($i201 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12192, 11} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p0, 88);
  $p208 := $add.ref($add.ref($p0, 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12192, 20} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i32($M.0, $p208);
  // WARNING: %247 = load i32, i32* %246, align 4, !dbg !8433, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 15} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p0, 88);
  $p211 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 24} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i32($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $slt.i32($i209, $i212);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i213 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $i209;
  goto $bb54;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i213 == 1));
  goto $bb53;
$bb53:
  assume {:verifier.code 0} true;
  goto $bb58;
$bb54:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12203, 5} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12196, 21} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p0, 88);
  $p216 := $add.ref($add.ref($p0, 88), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12196, 30} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i32($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12196, 15} true;
  assume {:verifier.code 0} true;
  $i218 := $and.i32($i214, $i217);
  // WARNING: %256 = and i32 %.12, %255, !dbg !8442, !verifier.code !8143
  call {:cexpr "idx___0"} boogie_si_record_i32($i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 31} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 31} true;
  assume {:verifier.code 0} true;
  $p220 := $load.ref($M.0, $p219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 41} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p0, 88);
  $p222 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 50} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 57} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i32.i64($i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 55} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p223, $mul.ref($i224, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 87} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 87} true;
  assume {:verifier.code 0} true;
  $i227 := $load.i32($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 99} true;
  assume {:verifier.code 0} true;
  $i228 := $add.i32($i227, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12197, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_unmap_rx_page($p220, $p225, $i228);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12198, 17} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p0, 88);
  $p230 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12198, 26} true;
  assume {:verifier.code 0} true;
  $p231 := $load.ref($M.0, $p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12198, 33} true;
  assume {:verifier.code 0} true;
  $i232 := $sext.i32.i64($i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12198, 31} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p231, $mul.ref($i232, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12198, 59} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p231, $mul.ref($i232, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12198, 59} true;
  assume {:verifier.code 0} true;
  $p235 := $load.ref($M.0, $p234);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12198, 3} true;
  assume {:verifier.code 0} true;
  call put_page($p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12199, 9} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i32($i214, 1);
  // WARNING: %274 = add nsw i32 %.12, 1, !dbg !8459, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 24} true;
  assume {:verifier.code 0} true;
  $i237 := $load.i32($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 9} true;
  assume {:verifier.code 0} true;
  $i238 := $slt.i32($i236, $i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  $i214 := $i236;
  assume {:branchcond $i238} true;
  goto $bb56, $bb57;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  assume ($i238 == 1);
  goto $bb54;
$bb57:
  assume !(($i238 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12208, 29} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p0, 152);
  $p240 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12208, 36} true;
  assume {:verifier.code 0} true;
  $p241 := $load.ref($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12208, 9} true;
  assume {:verifier.code 0} true;
  $p242 := $bitcast.ref.ref($p241);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12208, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12209, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
}
const myri10ge_set_stats: ref;
axiom (myri10ge_set_stats == $sub.ref(0, 271545));
procedure  myri10ge_set_stats($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $i25: i64;
  var $i26: i32;
  var $p27: ref;
  var $i28: i64;
  var $i29: i32;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $i24: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !10949, metadata !8144), !dbg !10950, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12552, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12552, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12552, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12552, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, $mul.ref($i5, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12553, 34} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12553, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12553, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12553, 7} true;
  assume {:verifier.code 0} true;
  $p10 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12553, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12554, 35} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12554, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i64($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12554, 48} true;
  assume {:verifier.code 0} true;
  $i13 := $lshr.i64($i12, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12554, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12554, 7} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12554, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p15, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12555, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $shl.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12555, 36} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i16, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12555, 7} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12555, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12556, 12} true;
  assume {:verifier.code 0} true;
  call $i19 := myri10ge_send_cmd($p0, 31, $p2, 0);
  // WARNING: %20 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 31, %struct.myri10ge_cmd* %3, i32 0), !dbg !8176, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12558, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, $sub.i32(0, 38));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12558, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12559, 15} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p4, $mul.ref($i5, 688)), 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12559, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  // WARNING: %24 = load i64, i64* %23, align 8, !dbg !8182, !verifier.code !8143
  call {:cexpr "bus"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12560, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12560, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12573, 10} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 924);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12573, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12561, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(0, 22);
  goto $bb5;
$bb4:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12577, 1} true;
  assume {:verifier.code 0} true;
  $r := $i24;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12566, 15} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i22, 24);
  // WARNING: %29 = add i64 %24, 24, !dbg !8191, !verifier.code !8143
  call {:cexpr "bus"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12567, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i64.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12567, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12567, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12568, 37} true;
  assume {:verifier.code 0} true;
  $i28 := $lshr.i64($i25, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12568, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i64.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12568, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12568, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p30, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12569, 14} true;
  assume {:verifier.code 0} true;
  call $i31 := myri10ge_send_cmd($p0, 19, $p2, 0);
  // WARNING: %35 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 19, %struct.myri10ge_cmd* %3, i32 0), !dbg !8200, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12570, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 924);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12570, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12572, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12575, 3} true;
  assume {:verifier.code 0} true;
  $i24 := 0;
  goto $bb5;
}
const myri10ge_ss_init_lock: ref;
axiom (myri10ge_ss_init_lock == $sub.ref(0, 272577));
procedure  myri10ge_ss_init_lock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9703, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9703, 3} true;
  assume {:verifier.code 0} true;
  call $p3 := spinlock_check($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9704, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 552);
  $p5 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9704, 54} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9704, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p6, .str.134, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9706, 7} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9706, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9708, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const napi_enable: ref;
axiom (napi_enable == $sub.ref(0, 273609));
procedure  napi_enable($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7759, 71} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7759, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 0, i64* %2), !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7760, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7760, 37} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7760, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7760, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv__builtin_expect($i5, 0);
  // WARNING: %7 = call i64 @ldv__builtin_expect(i64 %6, i64 0), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7762, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7762, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  call devirtbounce.6(0, .str.21, 502, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7766, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7773, 51} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7773, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit(0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7775, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const add_timer: ref;
axiom (add_timer == $sub.ref(0, 274641));
procedure  add_timer($p0: ref);
const netif_tx_wake_all_queues: ref;
axiom (netif_tx_wake_all_queues == $sub.ref(0, 275673));
procedure  netif_tx_wake_all_queues($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !11050, metadata !8144), !dbg !11051, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 912);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32(0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7863, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7856, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := netdev_get_tx_queue($p0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7858, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_wake_queue($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7859, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i4, 1);
  // WARNING: %7 = add i32 %.01, 1, !dbg !8159, !verifier.code !8144
  call {:cexpr "i"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $ult.i32($i6, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i6;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb4;
$bb7:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7868, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const napi_disable: ref;
axiom (napi_disable == $sub.ref(0, 276705));
procedure  napi_disable($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7729, 3} true;
  assume {:verifier.code 0} true;
  call __might_sleep(.str.21, 486, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7730, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7730, 3} true;
  assume {:verifier.code 0} true;
  call set_bit(1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7739, 64} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7739, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := test_and_set_bit(0, $p2);
  // WARNING: %4 = call i32 @test_and_set_bit(i64 0, i64* %3), !dbg !8154, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7742, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7735, 3} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7739, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := test_and_set_bit(0, $p2);
  // WARNING: %7 = call i32 @test_and_set_bit(i64 0, i64* %3), !dbg !8154, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 7} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb4;
$bb7:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7741, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7747, 51} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7747, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit(1, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7749, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_free_rings: ref;
axiom (myri10ge_free_rings == $sub.ref(0, 277737));
procedure  myri10ge_free_rings($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $i15: i32;
  var $p50: ref;
  var $i51: i32;
  var $i52: i1;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $i64: i1;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $i73: i32;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i64;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i64;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $i90: i32;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $i100: i1;
  var $i65: i32;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $p104: ref;
  var $i105: i32;
  var $i106: i1;
  var $p107: ref;
  var $i108: i32;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $p112: ref;
  var $p113: ref;
  var $i114: i64;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $i120: i64;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i32;
  var $i125: i32;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: i64;
  var $p130: ref;
  var $p131: ref;
  var $i132: i32;
  var $p133: ref;
  var $p134: ref;
  var $i135: i64;
  var $p136: ref;
  var $p137: ref;
  var $i138: i64;
  var $i139: i1;
  var $p140: ref;
  var $p141: ref;
  var $i142: i64;
  var $i143: i64;
  var $p144: ref;
  var $p145: ref;
  var $i146: i1;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $i151: i64;
  var $p152: ref;
  var $p153: ref;
  var $i154: i64;
  var $i155: i64;
  var $i156: i1;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: i64;
  var $p162: ref;
  var $p163: ref;
  var $i164: i64;
  var $i165: i64;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12246, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12246, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12247, 27} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  $p4 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12247, 30} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12247, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12247, 39} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12248, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12347, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12252, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 152);
  $p9 := $add.ref($add.ref($p0, 152), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12252, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  // WARNING: %14 = load i32, i32* %13, align 4, !dbg !8160, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 15} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 152);
  $p12 := $add.ref($add.ref($p0, 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 22} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i10, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $i10;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12268, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12255, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 152);
  $p17 := $add.ref($add.ref($p0, 152), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12255, 24} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12255, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i32($i15, $i18);
  // WARNING: %23 = and i32 %.05, %22, !dbg !8170, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12256, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 152);
  $p21 := $add.ref($add.ref($p0, 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12256, 23} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12256, 32} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i22, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12256, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i15, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12256, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12257, 10} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 152);
  $p26 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12257, 17} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12257, 24} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12257, 22} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p27, $mul.ref($i28, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12257, 46} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p27, $mul.ref($i28, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12257, 58} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12258, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 31} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 31} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 41} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 152);
  $p34 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 48} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 55} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 53} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p35, $mul.ref($i36, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 81} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 81} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12262, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_unmap_rx_page($p32, $p37, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12263, 17} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 152);
  $p41 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12263, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12263, 31} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12263, 29} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p42, $mul.ref($i43, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12263, 53} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p42, $mul.ref($i43, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12263, 53} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12263, 3} true;
  assume {:verifier.code 0} true;
  call put_page($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12264, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i15, 1);
  // WARNING: %54 = add nsw i32 %.05, 1, !dbg !8201, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 22} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $slt.i32($i47, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $i47;
  assume {:branchcond $i49} true;
  goto $bb13, $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 7} true;
  assume {:verifier.code 0} true;
  assume ($i49 == 1);
  goto $bb8;
$bb14:
  assume !(($i49 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12267, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12273, 12} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12273, 12} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12273, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12273, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12274, 33} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 88);
  $p54 := $add.ref($add.ref($p0, 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12274, 42} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12274, 9} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 88);
  $p57 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12274, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p57, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12275, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12278, 11} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 88);
  $p59 := $add.ref($add.ref($p0, 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12278, 20} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  // WARNING: %73 = load i32, i32* %72, align 4, !dbg !8215, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 15} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 88);
  $p62 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 24} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 9} true;
  assume {:verifier.code 0} true;
  $i64 := $slt.i32($i60, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 7} true;
  assume {:verifier.code 0} true;
  $i65 := $i60;
  goto $bb22;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i64 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12294, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12281, 17} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 88);
  $p67 := $add.ref($add.ref($p0, 88), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12281, 26} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12281, 11} true;
  assume {:verifier.code 0} true;
  $i69 := $and.i32($i65, $i68);
  // WARNING: %82 = and i32 %.11, %81, !dbg !8223, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12282, 16} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 88);
  $p71 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12282, 25} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12282, 34} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i72, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12282, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $eq.i32($i65, $i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12282, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12283, 10} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p0, 88);
  $p76 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12283, 19} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12283, 26} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12283, 24} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p77, $mul.ref($i78, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12283, 48} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($add.ref($p77, $mul.ref($i78, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12283, 60} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p80, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12284, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 31} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 31} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 41} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 88);
  $p84 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 50} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 57} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 55} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p85, $mul.ref($i86, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 83} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 83} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 95} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i32($i89, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12288, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_unmap_rx_page($p82, $p87, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12289, 17} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 88);
  $p92 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12289, 26} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12289, 33} true;
  assume {:verifier.code 0} true;
  $i94 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12289, 31} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p93, $mul.ref($i94, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12289, 55} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p93, $mul.ref($i94, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12289, 55} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12289, 3} true;
  assume {:verifier.code 0} true;
  call put_page($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12290, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i65, 1);
  // WARNING: %114 = add nsw i32 %.11, 1, !dbg !8253, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 24} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $slt.i32($i98, $i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 7} true;
  assume {:verifier.code 0} true;
  $i65 := $i98;
  assume {:branchcond $i100} true;
  goto $bb27, $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 7} true;
  assume {:verifier.code 0} true;
  assume ($i100 == 1);
  goto $bb22;
$bb28:
  assume !(($i100 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12293, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12298, 14} true;
  assume {:verifier.code 0} true;
  $p101 := $p0;
  $p102 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 11} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  $p104 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 23} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 16} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i32($i103, $i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i106 == 1));
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb46;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12331, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  $p107 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12301, 13} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p107);
  $p109 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12301, 24} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12301, 18} true;
  assume {:verifier.code 0} true;
  $i111 := $and.i32($i108, $i110);
  // WARNING: %131 = and i32 %128, %130, !dbg !8267, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i111);
  $p112 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12302, 14} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12302, 21} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12302, 19} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p113, $mul.ref($i114, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12302, 43} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p113, $mul.ref($i114, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12302, 43} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  $p118 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12303, 8} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12303, 15} true;
  assume {:verifier.code 0} true;
  $i120 := $sext.i32.i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12303, 13} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p119, $mul.ref($i120, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12303, 37} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p119, $mul.ref($i120, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12303, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p122, $0.ref);
  $p123 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12304, 18} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12304, 23} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i32($i124, 1);
  $p126 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12304, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p126, $i125);
  $p127 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12305, 20} true;
  assume {:verifier.code 0} true;
  $p128 := $load.ref($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12305, 27} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12305, 25} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p128, $mul.ref($i129, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12305, 49} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p128, $mul.ref($i129, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12305, 49} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i32($M.0, $p131);
  // WARNING: %152 = load i32, i32* %151, align 8, !dbg !8285, !verifier.code !8146
  call {:cexpr "len"} boogie_si_record_i32($i132);
  $p133 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12306, 8} true;
  assume {:verifier.code 0} true;
  $p134 := $load.ref($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12306, 15} true;
  assume {:verifier.code 0} true;
  $i135 := $sext.i32.i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12306, 13} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p134, $mul.ref($i135, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12306, 37} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($add.ref($p134, $mul.ref($i135, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12306, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p137, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12307, 7} true;
  assume {:verifier.code 0} true;
  $i138 := $p2i.ref.i64($p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12307, 27} true;
  assume {:verifier.code 0} true;
  $i139 := $ne.i64($i138, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12307, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i139} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i139 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12309, 32} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 440);
  $p141 := $add.ref($add.ref($p0, 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12309, 38} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i64($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12309, 49} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i64($i142, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12309, 9} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p0, 440);
  $p145 := $add.ref($add.ref($p0, 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12309, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p145, $i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12310, 5} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_any($p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12312, 13} true;
  assume {:verifier.code 0} true;
  $i146 := $ne.i32($i132, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12312, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb37, $bb38;
$bb36:
  assume !(($i139 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12321, 11} true;
  assume {:verifier.code 0} true;
  $i156 := $ne.i32($i132, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12321, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i156} true;
  goto $bb41, $bb42;
$bb37:
  assume ($i146 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 29} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 29} true;
  assume {:verifier.code 0} true;
  $p148 := $load.ref($M.0, $p147);
  $p149 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 40} true;
  assume {:verifier.code 0} true;
  $p150 := $load.ref($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 47} true;
  assume {:verifier.code 0} true;
  $i151 := $sext.i32.i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 45} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p150, $mul.ref($i151, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 69} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p150, $mul.ref($i151, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 69} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i64($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 74} true;
  assume {:verifier.code 0} true;
  $i155 := $sext.i32.i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12314, 7} true;
  assume {:verifier.code 0} true;
  call pci_unmap_single($p148, $i154, $i155, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12317, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12320, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 11} true;
  assume {:verifier.code 0} true;
  $i166 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 23} true;
  assume {:verifier.code 0} true;
  $i167 := $load.i32($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 16} true;
  assume {:verifier.code 0} true;
  $i168 := $ne.i32($i166, $i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb44, $bb45;
$bb41:
  assume ($i156 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 25} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 25} true;
  assume {:verifier.code 0} true;
  $p158 := $load.ref($M.0, $p157);
  $p159 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 36} true;
  assume {:verifier.code 0} true;
  $p160 := $load.ref($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 43} true;
  assume {:verifier.code 0} true;
  $i161 := $sext.i32.i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 41} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p160, $mul.ref($i161, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 65} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($add.ref($p160, $mul.ref($i161, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 65} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i64($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 70} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i32.i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12323, 5} true;
  assume {:verifier.code 0} true;
  call pci_unmap_page($p158, $i164, $i165, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12326, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i156 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb40;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 7} true;
  assume {:verifier.code 0} true;
  assume ($i168 == 1);
  goto $bb33;
$bb45:
  assume !(($i168 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12330, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12336, 29} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p0, 152);
  $p170 := $add.ref($add.ref($p0, 152), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12336, 36} true;
  assume {:verifier.code 0} true;
  $p171 := $load.ref($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12336, 9} true;
  assume {:verifier.code 0} true;
  $p172 := $bitcast.ref.ref($p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12336, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12337, 29} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p0, 88);
  $p174 := $add.ref($add.ref($p0, 88), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12337, 38} true;
  assume {:verifier.code 0} true;
  $p175 := $load.ref($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12337, 9} true;
  assume {:verifier.code 0} true;
  $p176 := $bitcast.ref.ref($p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12337, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12338, 29} true;
  assume {:verifier.code 0} true;
  $p177 := $p0;
  $p178 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12338, 32} true;
  assume {:verifier.code 0} true;
  $p179 := $load.ref($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12338, 9} true;
  assume {:verifier.code 0} true;
  $p180 := $bitcast.ref.ref($p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12338, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12339, 29} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p0, 152);
  $p182 := $add.ref($add.ref($p0, 152), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12339, 36} true;
  assume {:verifier.code 0} true;
  $p183 := $load.ref($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12339, 9} true;
  assume {:verifier.code 0} true;
  $p184 := $bitcast.ref.ref($p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12339, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12340, 29} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p0, 88);
  $p186 := $add.ref($add.ref($p0, 88), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12340, 38} true;
  assume {:verifier.code 0} true;
  $p187 := $load.ref($M.0, $p186);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12340, 9} true;
  assume {:verifier.code 0} true;
  $p188 := $bitcast.ref.ref($p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12340, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12341, 29} true;
  assume {:verifier.code 0} true;
  $p189 := $p0;
  $p190 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12341, 32} true;
  assume {:verifier.code 0} true;
  $p191 := $load.ref($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12341, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12342, 7} true;
  assume {:verifier.code 0} true;
  $p192 := $p0;
  $p193 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12342, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p193, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12343, 7} true;
  assume {:verifier.code 0} true;
  $p194 := $p0;
  $p195 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12343, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p195, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12345, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const myri10ge_free_irq: ref;
axiom (myri10ge_free_irq == $sub.ref(0, 278769));
procedure  myri10ge_free_irq($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i9: i32;
  var $p24: ref;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12470, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12470, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12471, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12471, 12} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12471, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12471, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $slt.i32(0, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12488, 27} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p2, 1540);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12488, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12488, 45} true;
  assume {:verifier.code 0} true;
  $p26 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12488, 45} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12488, 32} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12488, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq_90($i25, $p28);
  assume {:verifier.code 0} true;
  goto $bb11;
$bb3:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 9} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb6;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12481, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 27} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 27} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 42} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 40} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p11, $mul.ref($i12, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 62} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p11, $mul.ref($i12, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 62} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 83} true;
  assume {:verifier.code 0} true;
  $p16 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 83} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 70} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 88} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 86} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p18, $mul.ref($i19, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12476, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq_89($i15, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12477, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i9, 1);
  // WARNING: %23 = add nsw i32 %.01, 1, !dbg !8172, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 18} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $slt.i32($i21, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $i21;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 9} true;
  assume {:verifier.code 0} true;
  assume ($i23 == 1);
  goto $bb6;
$bb9:
  assume !(($i23 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12480, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12486, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12491, 12} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12491, 12} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12491, 24} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12491, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12493, 5} true;
  assume {:verifier.code 0} true;
  call pci_disable_msi($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12495, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12498, 12} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12498, 12} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12498, 25} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12498, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12500, 5} true;
  assume {:verifier.code 0} true;
  call pci_disable_msix($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12502, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12505, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free_irq_89: ref;
axiom (ldv_free_irq_89 == $sub.ref(0, 279801));
procedure  ldv_free_irq_89($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17324, 3} true;
  assume {:verifier.code 0} true;
  call free_irq($i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17325, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq($0.ref, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17327, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free_irq_90: ref;
axiom (ldv_free_irq_90 == $sub.ref(0, 280833));
procedure  ldv_free_irq_90($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17336, 3} true;
  assume {:verifier.code 0} true;
  call free_irq($i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17337, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq($0.ref, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17339, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_disable_msi: ref;
axiom (pci_disable_msi == $sub.ref(0, 281865));
procedure  pci_disable_msi($p0: ref);
const pci_disable_msix: ref;
axiom (pci_disable_msix == $sub.ref(0, 282897));
procedure  pci_disable_msix($p0: ref);
const free_irq: ref;
axiom (free_irq == $sub.ref(0, 283929));
procedure  free_irq($i0: i32, $p1: ref);
const ldv_free_irq: ref;
axiom (ldv_free_irq == $sub.ref(0, 284961));
procedure  ldv_free_irq($p0: ref, $i1: i32, $p2: ref)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !11394, metadata !8144), !dbg !11395, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !11398, metadata !8144), !dbg !11399, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16058, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_irq_deregister_7_1($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16060, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_irq_deregister_7_1: ref;
axiom (ldv_dispatch_irq_deregister_7_1 == $sub.ref(0, 285993));
procedure  ldv_dispatch_irq_deregister_7_1($i0: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15655, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_unmap_rx_page: ref;
axiom (myri10ge_unmap_rx_page == $sub.ref(0, 287025));
procedure  myri10ge_unmap_rx_page($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i1;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_rx_buffer_state* %1, i64 0, metadata !11416, metadata !8144), !dbg !11417, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ugt.i32($i2, 2047);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 36} true;
  assume {:verifier.code 0} true;
  assume ($i3 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10527, 32} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10527, 32} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10527, 36} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i64($i10, $sub.i64(0, 4096));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10527, 5} true;
  assume {:verifier.code 0} true;
  call pci_unmap_page($p0, $i11, 4096, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10529, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 61} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 61} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 81} true;
  assume {:verifier.code 0} true;
  $i6 := $mul.i32($i2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 73} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i32($i5, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 86} true;
  assume {:verifier.code 0} true;
  $i8 := $ugt.i32($i7, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10525, 7} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb2;
$bb5:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10532, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const put_page: ref;
axiom (put_page == $sub.ref(0, 288057));
procedure  put_page($p0: ref);
const dev_kfree_skb_any: ref;
axiom (dev_kfree_skb_any == $sub.ref(0, 289089));
procedure  dev_kfree_skb_any($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7976, 3} true;
  assume {:verifier.code 0} true;
  call __dev_kfree_skb_any($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7978, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_unmap_single: ref;
axiom (pci_unmap_single == $sub.ref(0, 290121));
procedure  pci_unmap_single($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !11447, metadata !8144), !dbg !11448, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !11449, metadata !8144), !dbg !11450, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !11451, metadata !8144), !dbg !11452, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 26} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 48} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 26} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 100} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 26} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8626, 3} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p7, $i1, $i2, $i3, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8629, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_unmap_page: ref;
axiom (pci_unmap_page == $sub.ref(0, 291153));
procedure  pci_unmap_page($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !11469, metadata !8144), !dbg !11470, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !11471, metadata !8144), !dbg !11472, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !11473, metadata !8144), !dbg !11474, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 92} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8652, 3} true;
  assume {:verifier.code 0} true;
  call dma_unmap_page($p7, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8655, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kfree: ref;
axiom (kfree == $sub.ref(0, 292185));
procedure  kfree($p0: ref);
const dma_unmap_page: ref;
axiom (dma_unmap_page == $sub.ref(0, 293217));
procedure  dma_unmap_page($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !11491, metadata !8144), !dbg !11492, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !11493, metadata !8144), !dbg !11494, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !11495, metadata !8144), !dbg !11496, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7204, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7206, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := valid_dma_direction($i3);
  // WARNING: %6 = call i32 @valid_dma_direction(i32 %3), !dbg !8158, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7207, 41} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7207, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7207, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7207, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !8163, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7209, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7209, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  call devirtbounce.6(0, .str.8, 91, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7213, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7218, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7218, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7218, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7218, 39} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7218, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7223, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7223, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call devirtbounce.7($p16, $p0, $i1, $i2, $i3, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7225, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7229, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_unmap_page($p0, $i1, $i2, $i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7231, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_dma_ops: ref;
axiom (get_dma_ops == $sub.ref(0, 294249));
procedure  get_dma_ops($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p13: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7069, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7069, 49} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7069, 49} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7069, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7069, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8151, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 17} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7073, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, dma_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7073, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p12;
  goto $bb6;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 41} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 1184);
  $p8 := $add.ref($p0, 1184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 58} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7072, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7075, 18} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 1184);
  $p15 := $add.ref($p0, 1184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7075, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7075, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p16;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7078, 1} true;
  assume {:verifier.code 0} true;
  $r := $p13;
  $exn := false;
  return;
}
const valid_dma_direction: ref;
axiom (valid_dma_direction == $sub.ref(0, 295281));
procedure  valid_dma_direction($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7044, 40} true;
  assume {:verifier.code 0} true;
  $i1 := $ule.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7044, 40} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7044, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 296313));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11570, metadata !8144), !dbg !11571, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17680, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const debug_dma_unmap_page: ref;
axiom (debug_dma_unmap_page == $sub.ref(0, 297345));
procedure  debug_dma_unmap_page($p0: ref, $i1: i64, $i2: i64, $i3: i32, $i4: i1);
const dma_unmap_single_attrs: ref;
axiom (dma_unmap_single_attrs == $sub.ref(0, 298377));
procedure  dma_unmap_single_attrs($p0: ref, $i1: i64, $i2: i64, $i3: i32, $p4: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !11577, metadata !8144), !dbg !11578, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !11579, metadata !8144), !dbg !11580, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !11581, metadata !8144), !dbg !11582, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7129, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7131, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := valid_dma_direction($i3);
  // WARNING: %7 = call i32 @valid_dma_direction(i32 %3), !dbg !8160, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7132, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7132, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7132, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7132, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0);
  // WARNING: %11 = call i64 @ldv__builtin_expect(i64 %10, i64 0), !dbg !8165, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7134, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7134, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  call devirtbounce.6(0, .str.8, 36, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7138, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7143, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7143, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7143, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7143, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7143, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7148, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7148, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  call devirtbounce.7($p17, $p0, $i1, $i2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7150, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7154, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_unmap_page($p0, $i1, $i2, $i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7156, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __dev_kfree_skb_any: ref;
axiom (__dev_kfree_skb_any == $sub.ref(0, 299409));
procedure  __dev_kfree_skb_any($p0: ref, $i1: i32);
const __might_sleep: ref;
axiom (__might_sleep == $sub.ref(0, 300441));
procedure  __might_sleep($p0: ref, $i1: i32, $i2: i32);
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 301473));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.8(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6259, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const test_and_set_bit: ref;
axiom (test_and_set_bit == $sub.ref(0, 302505));
procedure  test_and_set_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
$bb0:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6277, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const clear_bit: ref;
axiom (clear_bit == $sub.ref(0, 303537));
procedure  clear_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.8(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6268, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netdev_get_tx_queue: ref;
axiom (netdev_get_tx_queue == $sub.ref(0, 304569));
procedure  netdev_get_tx_queue($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !11648, metadata !8144), !dbg !11649, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7784, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 904);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7784, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7784, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7784, 43} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, $mul.ref($i4, 496));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7784, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const netif_tx_wake_queue: ref;
axiom (netif_tx_wake_queue == $sub.ref(0, 305601));
procedure  netif_tx_wake_queue($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7822, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := netpoll_trap();
  // WARNING: %2 = call i32 @netpoll_trap(), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7824, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7824, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7826, 5} true;
  assume {:verifier.code 0} true;
  call netif_tx_start_queue($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7828, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7844, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7833, 76} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7833, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := test_and_set_bit(0, $p3);
  // WARNING: %8 = call i32 @test_and_set_bit(i64 0, i64* %7), !dbg !8161, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7835, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7835, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7837, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7837, 33} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7837, 5} true;
  assume {:verifier.code 0} true;
  call __netif_schedule($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7839, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7842, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const netpoll_trap: ref;
axiom (netpoll_trap == $sub.ref(0, 306633));
procedure  netpoll_trap()
  returns ($r: i32);
const netif_tx_start_queue: ref;
axiom (netif_tx_start_queue == $sub.ref(0, 307665));
procedure  netif_tx_start_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7810, 59} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7810, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit(0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7812, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __netif_schedule: ref;
axiom (__netif_schedule == $sub.ref(0, 308697));
procedure  __netif_schedule($p0: ref);
const constant_test_bit: ref;
axiom (constant_test_bit == $sub.ref(0, 309729));
procedure  constant_test_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 63} true;
  assume {:verifier.code 0} true;
  $i2 := $ashr.i64($i0, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, $mul.ref($i2, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 74} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 83} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 70} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 70} true;
  assume {:verifier.code 0} true;
  $i8 := $lshr.i64($i4, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 90} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6287, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 310761));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6631, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6631, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6631, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 311793));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref);
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 312825));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11727, metadata !8144), !dbg !11728, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17142, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_kzalloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17144, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const myri10ge_alloc_rx_pages: ref;
axiom (myri10ge_alloc_rx_pages == $sub.ref(0, 313857));
procedure  myri10ge_alloc_rx_pages($p0: ref, $p1: ref, $i2: i32, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i8: i1;
  var $i7: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $p27: ref;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $i39: i1;
  var $p40: ref;
  var $i41: i32;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i64;
  var $i76: i32;
  var $p77: ref;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: i64;
  var $i88: i64;
  var $i89: i32;
  var $i90: i32;
  var $p91: ref;
  var $p92: ref;
  var $i93: i64;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i32;
  var $i98: i32;
  var $i99: i32;
  var $i100: i32;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $i104: i32;
  var $p105: ref;
  var $i106: i32;
  var $i107: i1;
  var $p108: ref;
  var $p109: ref;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i32;
  var $i122: i32;
  var $i123: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_rx_buf* %1, i64 0, metadata !11743, metadata !8144), !dbg !11744, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11745, metadata !8144), !dbg !11746, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 41} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 41} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 57} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 62} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 74} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i3, 0);
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb3;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 62} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 62} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10454, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !8164, !verifier.code !8147
  call {:cexpr "tmp"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10456, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10456, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10457, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10518, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 11} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 38} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 38} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 32} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i16, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 44} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i19, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 20} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i14, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10511, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10463, 13} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10463, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10463, 28} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10463, 28} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10463, 22} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32($i23, $i25);
  // WARNING: %33 = and i32 %30, %32, !dbg !8182, !verifier.code !8147
  call {:cexpr "idx"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10464, 27} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10464, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10464, 39} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i32($i28, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10464, 48} true;
  assume {:verifier.code 0} true;
  $i30 := $ule.i32($i29, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10464, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10466, 18} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10466, 18} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10466, 5} true;
  assume {:verifier.code 0} true;
  call get_page($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10468, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10470, 12} true;
  assume {:verifier.code 0} true;
  call $p33 := alloc_pages(16416, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10471, 35} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10471, 56} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10471, 56} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i1.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10471, 35} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10471, 15} true;
  assume {:verifier.code 0} true;
  call $i38 := ldv__builtin_expect($i37, 0);
  // WARNING: %47 = call i64 @ldv__builtin_expect(i64 %46, i64 0), !dbg !8202, !verifier.code !8147
  call {:cexpr "tmp___0"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10474, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i64($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10474, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 48} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 48} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 8} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 15} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 13} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p56, $mul.ref($i57, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 37} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p56, $mul.ref($i57, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10491, 42} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p59, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 55} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 55} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 8} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 8} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 15} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 13} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p63, $mul.ref($i64, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 37} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p63, $mul.ref($i64, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10492, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p66, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 47} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 47} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i64($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 8} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 15} true;
  assume {:verifier.code 0} true;
  $i71 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 13} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p70, $mul.ref($i71, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 37} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p70, $mul.ref($i71, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10493, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p73, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10494, 42} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10494, 42} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i64($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10494, 23} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i64.i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10494, 67} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10494, 67} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i32($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10494, 46} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i76, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10494, 13} true;
  assume {:verifier.code 0} true;
  call $i80 := __fswab32($i79);
  // WARNING: %96 = call i32 @__fswab32(i32 %95), !dbg !8252, !verifier.code !8147
  call {:cexpr "tmp___1"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10495, 8} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10495, 8} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10495, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10495, 15} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p82, $mul.ref($i83, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10495, 39} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p82, $mul.ref($i83, 8)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10495, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p85, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10496, 43} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10496, 43} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i64($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10496, 47} true;
  assume {:verifier.code 0} true;
  $i88 := $lshr.i64($i87, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10496, 23} true;
  assume {:verifier.code 0} true;
  $i89 := $trunc.i64.i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10496, 13} true;
  assume {:verifier.code 0} true;
  call $i90 := __fswab32($i89);
  // WARNING: %106 = call i32 @__fswab32(i32 %105), !dbg !8263, !verifier.code !8147
  call {:cexpr "tmp___2"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10497, 8} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10497, 8} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10497, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10497, 15} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p92, $mul.ref($i93, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10497, 39} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p92, $mul.ref($i93, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10497, 49} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p95, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10498, 25} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10498, 25} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i32($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10498, 47} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i2, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10498, 53} true;
  assume {:verifier.code 0} true;
  $i99 := $and.i32($i98, $sub.i32(0, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10498, 37} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i32($i97, $i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10498, 7} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10498, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p101, $i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10499, 22} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10499, 22} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10499, 31} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i32($i103, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10499, 7} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10499, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, $i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10501, 12} true;
  assume {:verifier.code 0} true;
  $i106 := $and.i32($i26, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10501, 17} true;
  assume {:verifier.code 0} true;
  $i107 := $eq.i32($i106, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10501, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb22, $bb23;
$bb16:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10475, 15} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10475, 15} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10475, 30} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10475, 30} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10475, 24} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i32($i41, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10475, 34} true;
  assume {:verifier.code 0} true;
  $i45 := $sle.i32($i44, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10475, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb18, $bb19;
$bb17:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb18:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10476, 13} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p1, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10476, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p46, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10477, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10480, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10485, 9} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10485, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p47, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10486, 9} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10486, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10487, 33} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10487, 33} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10487, 15} true;
  assume {:verifier.code 0} true;
  call $i51 := pci_map_page($p50, $p33, 0, 4096, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10487, 9} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10487, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p52, $i51);
  assume {:verifier.code 0} true;
  goto $bb15;
$bb22:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10503, 29} true;
  assume {:verifier.code 0} true;
  $p108 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10503, 29} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10503, 38} true;
  assume {:verifier.code 0} true;
  $i110 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10503, 58} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i64($i110, $sub.i64(0, 7));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10503, 35} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p109, $mul.ref($i111, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10504, 29} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10504, 29} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10504, 39} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10504, 59} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i64($i115, $sub.i64(0, 7));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10504, 36} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p114, $mul.ref($i116, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10503, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_submit_8rx($p112, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10506, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 11} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 28} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 38} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 32} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i119, $i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 44} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i121, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 20} true;
  assume {:verifier.code 0} true;
  $i123 := $ne.i32($i118, $i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 7} true;
  assume {:verifier.code 0} true;
  assume ($i123 == 1);
  goto $bb11;
$bb26:
  assume !(($i123 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10510, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10516, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const get_page: ref;
axiom (get_page == $sub.ref(0, 314889));
procedure  get_page($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $i7: i1;
  var $i8: i8;
  var $i9: i1;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6913, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := PageTail($p0);
  // WARNING: %2 = call i32 @PageTail(%struct.page* %0), !dbg !8145, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6914, 41} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6914, 41} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6914, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6914, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8152, !verifier.code !8144
  call {:cexpr "tmp___2"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6916, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6916, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6918, 11} true;
  assume {:verifier.code 0} true;
  call $i7 := __get_page_tail($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6918, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i8($i7);
  // WARNING: %10 = zext i1 %9 to i8, !dbg !8161, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6919, 42} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i8.i1($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6919, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6919, 15} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 1);
  // WARNING: %13 = call i64 @ldv__builtin_expect(i64 %12, i64 1), !dbg !8166, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6921, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6921, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6922, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6948, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6926, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6930, 54} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 16);
  $p14 := $add.ref($add.ref($p0, 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6930, 92} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6930, 111} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6930, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := atomic_read($p16);
  // WARNING: %24 = call i32 @atomic_read(%union.__anonunion____missing_field_name_252* %23), !dbg !8179, !verifier.code !8144
  call {:cexpr "tmp___3"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6931, 41} true;
  assume {:verifier.code 0} true;
  $i18 := $sle.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6931, 41} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i1.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6931, 33} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6931, 13} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv__builtin_expect($i20, 0);
  // WARNING: %28 = call i64 @ldv__builtin_expect(i64 %27, i64 0), !dbg !8184, !verifier.code !8144
  call {:cexpr "tmp___4"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6933, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6933, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6935, 5} true;
  assume {:verifier.code 0} true;
  call dump_page($p0, $0.ref);
  call devirtbounce.6(0, .str.9, 488, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6938, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb9:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6944, 22} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 16);
  $p24 := $add.ref($add.ref($p0, 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6944, 60} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6944, 79} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6944, 3} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6946, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
}
const alloc_pages: ref;
axiom (alloc_pages == $sub.ref(0, 315921));
procedure  alloc_pages($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !11958, metadata !8144), !dbg !11959, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6828, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := alloc_pages_current($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6830, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const pci_map_page: ref;
axiom (pci_map_page == $sub.ref(0, 316953));
procedure  pci_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32)
  returns ($r: i64)
{
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.page* %1, i64 0, metadata !11973, metadata !8144), !dbg !11974, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !11975, metadata !8144), !dbg !11976, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !11977, metadata !8144), !dbg !11978, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 96} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $p7;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8639, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := dma_map_page($p8, $p1, $i2, $i3, $i4);
  // WARNING: %13 = call i64 @dma_map_page(%struct.device* %12, %struct.page* %1, i64 %2, i64 %3, i32 %4), !dbg !8166, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8642, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const myri10ge_submit_8rx: ref;
axiom (myri10ge_submit_8rx == $sub.ref(0, 317985));
procedure  myri10ge_submit_8rx($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10429, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10429, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  // WARNING: %4 = load i32, i32* %3, align 4, !dbg !8149, !verifier.code !8146
  call {:cexpr "low"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10430, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10430, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10431, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10431, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10431, 3} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p5, $p6, 4);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10433, 20} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10433, 32} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10433, 38} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10433, 58} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10433, 3} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p8, $p10, 4);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10435, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10435, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10436, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10436, 3} true;
  assume {:verifier.code 0} true;
  call put_be32($i3, $p12);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10439, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __iowrite64_copy: ref;
axiom (__iowrite64_copy == $sub.ref(0, 319017));
procedure  __iowrite64_copy($p0: ref, $p1: ref, $i2: i64);
const dma_map_page: ref;
axiom (dma_map_page == $sub.ref(0, 320049));
procedure  dma_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32)
  returns ($r: i64)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.page* %1, i64 0, metadata !12028, metadata !8144), !dbg !12029, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !12030, metadata !8144), !dbg !12031, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !12032, metadata !8144), !dbg !12033, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7171, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7173, 13} true;
  assume {:verifier.code 0} true;
  call $p6 := lowmem_page_address($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7174, 38} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, $mul.ref($i2, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7174, 48} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7174, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p7, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7175, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := valid_dma_direction($i4);
  // WARNING: %10 = call i32 @valid_dma_direction(i32 %4), !dbg !8168, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7176, 41} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7176, 41} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7176, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7176, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv__builtin_expect($i12, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !8173, !verifier.code !8146
  call {:cexpr "tmp___2"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7178, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7178, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  call devirtbounce.6(0, .str.8, 79, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7182, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7188, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7188, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call $i17 := devirtbounce.9($p16, $p0, $p1, $i2, $i3, $i4, $0.ref);
  // WARNING: %21 = call i64 @devirtbounce.9(i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.__anonstruct_sigset_t_178*)* %20, %struct.device* %0, %struct.page* %1, i64 %2, i64 %3, i32 %4, %struct.__anonstruct_sigset_t_178* null)
  call {:cexpr "addr"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7189, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p1, $i2, $i3, $i4, $i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7191, 3} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
}
const lowmem_page_address: ref;
axiom (lowmem_page_address == $sub.ref(0, 321081));
procedure  lowmem_page_address($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6955, 60} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6955, 72} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 24189255811072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6955, 91} true;
  assume {:verifier.code 0} true;
  $i3 := $sdiv.i64($i2, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6955, 98} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i64($i3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6955, 105} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, $sub.i64(0, 131941395333120));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6955, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6955, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const kmemcheck_mark_initialized: ref;
axiom (kmemcheck_mark_initialized == $sub.ref(0, 322113));
procedure  kmemcheck_mark_initialized($p0: ref, $i1: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !12085, metadata !8144), !dbg !12086, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6964, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const debug_dma_map_page: ref;
axiom (debug_dma_map_page == $sub.ref(0, 323145));
procedure  debug_dma_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32, $i5: i64, $i6: i1);
const alloc_pages_current: ref;
axiom (alloc_pages_current == $sub.ref(0, 324177));
procedure  alloc_pages_current($i0: i32, $i1: i32)
  returns ($r: ref);
const PageTail: ref;
axiom (PageTail == $sub.ref(0, 325209));
procedure  PageTail($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6865, 75} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6865, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(15, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 15, i64* %2), !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6867, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const __get_page_tail: ref;
axiom (__get_page_tail == $sub.ref(0, 326241));
procedure  __get_page_tail($p0: ref)
  returns ($r: i1);
const atomic_read: ref;
axiom (atomic_read == $sub.ref(0, 327273));
procedure  atomic_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6406, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6406, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6406, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const dump_page: ref;
axiom (dump_page == $sub.ref(0, 328305));
procedure  dump_page($p0: ref, $p1: ref);
const atomic_inc: ref;
axiom (atomic_inc == $sub.ref(0, 329337));
procedure  atomic_inc($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6414, 129} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  call devirtbounce.2(0, $p1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6415, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_kzalloc: ref;
axiom (ldv_kzalloc == $sub.ref(0, 330369));
procedure  ldv_kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !12122, metadata !8144), !dbg !12123, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17643, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17644, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_zalloc($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17645, 3} true;
  assume {:verifier.code 0} true;
  call ldv_after_alloc($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17647, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ldv_check_alloc_flags: ref;
axiom (ldv_check_alloc_flags == $sub.ref(0, 331401));
procedure  ldv_check_alloc_flags($i0: i32);
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 332433));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17760, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17762, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_after_alloc: ref;
axiom (ldv_after_alloc == $sub.ref(0, 333465));
procedure  ldv_after_alloc($p0: ref);
const ldv_calloc: ref;
axiom (ldv_calloc == $sub.ref(0, 334497));
procedure  ldv_calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !12148, metadata !8144), !dbg !12149, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17738, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_undef_int();
  // WARNING: %3 = call i32 @ldv_undef_int(), !dbg !8149, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17740, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17740, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17742, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17744, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17744, 36} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17744, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17744, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17745, 15} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv_is_err($p4);
  // WARNING: %10 = call i64 @ldv_is_err(i8* %6), !dbg !8167, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17746, 24} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17746, 24} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17746, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17748, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $p4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17750, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $0.ref;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17753, 1} true;
  assume {:verifier.code 0} true;
  $r := $p11;
  $exn := false;
  return;
}
const ldv_undef_int: ref;
axiom (ldv_undef_int == $sub.ref(0, 335529));
procedure  ldv_undef_int()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17902, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__VERIFIER_nondet_int(), !dbg !8141, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17904, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_assume: ref;
axiom (ldv_assume == $sub.ref(0, 336561));
procedure  ldv_assume($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17657, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17657, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17657, 24} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17659, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17663, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_is_err: ref;
axiom (ldv_is_err == $sub.ref(0, 337593));
procedure  ldv_is_err($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17551, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17551, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $ugt.i64($i1, 4294967295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17551, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17551, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17551, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const pci_enable_msix: ref;
axiom (pci_enable_msix == $sub.ref(0, 338625));
procedure  pci_enable_msix($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32);
const pci_enable_msi_block: ref;
axiom (pci_enable_msi_block == $sub.ref(0, 339657));
procedure  pci_enable_msi_block($p0: ref, $i1: i32)
  returns ($r: i32);
const snprintf: ref;
axiom (snprintf == $sub.ref(0, 340689));
procedure  snprintf.ref.i64.ref.ref.i32($p0: ref, $i1: i64, $p2: ref, p.3: ref, p.4: i32)
  returns ($r: i32);
const myri10ge_intr: ref;
axiom (myri10ge_intr == $sub.ref(0, 341721));
procedure  myri10ge_intr($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p18: ref;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i1;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $i29: i8;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i1;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i32;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $p49: ref;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $i55: i64;
  var $i56: i64;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $i63: i1;
  var $p64: ref;
  var $i65: i8;
  var $i66: i32;
  var $i67: i1;
  var $i68: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i1;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $i75: i64;
  var $i76: i1;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i19: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11059, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11060, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11060, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11061, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11061, 15} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11062, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 38} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 47} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 90} true;
  assume {:verifier.code 0} true;
  $p14 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 90} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 69} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 66} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i13, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 44} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11065, 25} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11065, 5} true;
  assume {:verifier.code 0} true;
  call napi_schedule($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11067, 5} true;
  assume {:verifier.code 0} true;
  $i19 := 1;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11063, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11151, 1} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11072, 51} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p6, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11072, 51} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11072, 29} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11072, 57} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11072, 57} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11072, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11072, 9} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  // WARNING: %30 = call i64 @ldv__builtin_expect(i64 %29, i64 0), !dbg !8181, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11074, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11074, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11075, 5} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb6;
$bb9:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11079, 20} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p6, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11079, 20} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11079, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11079, 26} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11079, 26} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11079, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11081, 25} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p2, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11081, 5} true;
  assume {:verifier.code 0} true;
  call napi_schedule($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11083, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11086, 26} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11086, 38} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11086, 24} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i64($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11086, 70} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i64($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11086, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11088, 23} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11088, 23} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11088, 5} true;
  assume {:verifier.code 0} true;
  call put_be32(0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11090, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11090, 32} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11090, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i37 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11097, 12} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p6, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11097, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p43, 0);
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11091, 14} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p6, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11091, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11092, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11096, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11099, 3} true;
  assume {:verifier.code 0} true;
  $i44 := 0;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11102, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i32($i44, 1);
  // WARNING: %61 = add nsw i32 %.01, 1, !dbg !8224, !verifier.code !8144
  call {:cexpr "i"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11103, 30} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11103, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11103, 13} true;
  assume {:verifier.code 0} true;
  call $i48 := __fswab32($i47);
  // WARNING: %64 = call i32 @__fswab32(i32 %63), !dbg !8227, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i48);
  // WARNING: call void @llvm.dbg.value(metadata i32 %64, i64 0, metadata !12294, metadata !8144), !dbg !12295, !verifier.code !8146
  $p49 := $add.ref($p2, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11106, 36} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11106, 23} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i32($i48, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11106, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11108, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_tx_done($p2, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11110, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11114, 37} true;
  assume {:verifier.code 0} true;
  $i52 := $M.13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11114, 35} true;
  assume {:verifier.code 0} true;
  $i53 := $sgt.i32($i45, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11114, 35} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i1.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11114, 33} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11114, 13} true;
  assume {:verifier.code 0} true;
  call $i56 := ldv__builtin_expect($i55, 0);
  // WARNING: %75 = call i64 @ldv__builtin_expect(i64 %74, i64 0), !dbg !8244, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11116, 15} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i64($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11116, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11118, 51} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11118, 51} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11118, 5} true;
  assume {:verifier.code 0} true;
  call $i60 := netdev_warn.ref.ref($p59, .str.28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11119, 12} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p6, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11119, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11120, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11120, 5} true;
  assume {:verifier.code 0} true;
  call $i63 := schedule_work($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11122, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11126, 55} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p6, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11126, 55} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11126, 33} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11126, 61} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11126, 61} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i1.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11126, 33} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11126, 13} true;
  assume {:verifier.code 0} true;
  call $i70 := ldv__builtin_expect($i69, 1);
  // WARNING: %92 = call i64 @ldv__builtin_expect(i64 %91, i64 1), !dbg !8263, !verifier.code !8144
  call {:cexpr "tmp___2"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11128, 15} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i64($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11128, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11129, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11139, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11139, 50} true;
  assume {:verifier.code 0} true;
  $p73 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11139, 50} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11139, 29} true;
  assume {:verifier.code 0} true;
  $i75 := $p2i.ref.i64($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11139, 26} true;
  assume {:verifier.code 0} true;
  $i76 := $eq.i64($i72, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11139, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb31, $bb32;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11134, 3} true;
  assume {:verifier.code 0} true;
  call cpu_relax();
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11137, 3} true;
  assume {:verifier.code 0} true;
  $i44 := $i45;
  goto $bb20;
$bb31:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11141, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_check_statblock($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11143, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11147, 27} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p2, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11147, 27} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11147, 37} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p78, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11147, 3} true;
  assume {:verifier.code 0} true;
  call put_be32(50331648, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11149, 3} true;
  assume {:verifier.code 0} true;
  $i19 := 1;
  goto $bb6;
}
const ldv_request_irq_86: ref;
axiom (ldv_request_irq_86 == $sub.ref(0, 342753));
procedure  ldv_request_irq_86($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !12361, metadata !8144), !dbg !12362, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17279, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_irq($i0, $p1, $i2, $p3, $p4);
  // WARNING: %6 = call i32 @request_irq(i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !12372, metadata !8144), !dbg !12373, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17281, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv_request_irq($i5, $i0, $p1, $i2, $p3, $p4);
  // WARNING: %7 = call i32 @ldv_request_irq(i32 %6, i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4), !dbg !8163, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17283, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const ldv_free_irq_87: ref;
axiom (ldv_free_irq_87 == $sub.ref(0, 343785));
procedure  ldv_free_irq_87($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17293, 3} true;
  assume {:verifier.code 0} true;
  call free_irq($i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17294, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq($0.ref, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17296, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_request_irq_88: ref;
axiom (ldv_request_irq_88 == $sub.ref(0, 344817));
procedure  ldv_request_irq_88($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !12394, metadata !8144), !dbg !12395, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17310, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_irq($i0, $p1, $i2, $p3, $p4);
  // WARNING: %6 = call i32 @request_irq(i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !12405, metadata !8144), !dbg !12406, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17312, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv_request_irq($i5, $i0, $p1, $i2, $p3, $p4);
  // WARNING: %7 = call i32 @ldv_request_irq(i32 %6, i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4), !dbg !8163, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17314, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const request_irq: ref;
axiom (request_irq == $sub.ref(0, 345849));
procedure  request_irq($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !12417, metadata !8144), !dbg !12418, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8848, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_threaded_irq($i0, $p1, $0.ref, $i2, $p3, $p4);
  // WARNING: %6 = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8851, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const ldv_request_irq: ref;
axiom (ldv_request_irq == $sub.ref(0, 346881));
procedure  ldv_request_irq($i0: i32, $i1: i32, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32)
{
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !12434, metadata !8144), !dbg !12435, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %2, i64 0, metadata !12438, metadata !8144), !dbg !12439, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16995, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv_undef_int();
  // WARNING: %7 = call i32 @ldv_undef_int(), !dbg !8157, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16997, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16997, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16999, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16999, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16999, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i9);
  // WARNING: call void @ldv_assume(i32 %11), !dbg !8168, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17004, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_irq_register_11_2($i1, $p2, $0.ref, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17007, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17010, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17010, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17010, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17012, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17016, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_irq_register_11_2: ref;
axiom (ldv_dispatch_irq_register_11_2 == $sub.ref(0, 347913));
procedure  ldv_dispatch_irq_register_11_2($i0: i32, $p1: ref, $p2: ref, $p3: ref)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15666, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := ldv_xmalloc(40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15667, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15668, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15668, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15669, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15669, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15670, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15670, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15671, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15671, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15672, 38} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15672, 3} true;
  assume {:verifier.code 0} true;
  call ldv_interrupt_interrupt_instance_0($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15674, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_xmalloc: ref;
axiom (ldv_xmalloc == $sub.ref(0, 348945));
procedure  ldv_xmalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17784, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := malloc($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17786, 14} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17786, 34} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17786, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17786, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17787, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv_is_err($p1);
  // WARNING: %6 = call i64 @ldv_is_err(i8* %2), !dbg !8157, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17788, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17788, 22} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17788, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17790, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_interrupt_interrupt_instance_0: ref;
axiom (ldv_interrupt_interrupt_instance_0 == $sub.ref(0, 349977));
procedure  ldv_interrupt_interrupt_instance_0($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i1;
  var $i21: i32;
  var $i22: i64;
  var $i23: i1;
  var $i24: i1;
  var $i25: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16112, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16113, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16113, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16113, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16115, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16115, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  // WARNING: %7 = load i32, i32* %6, align 8, !dbg !8153, !verifier.code !8144
  call {:cexpr "ldv_0_line_line"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16116, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16116, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16117, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16117, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16118, 29} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16118, 29} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16119, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16119, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16121, 3} true;
  assume {:verifier.code 0} true;
  $i13, $p14, $p15, $p16 := $i5, $p11, $p7, $p9;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i13, $p14, $p15, $p16 := $u1, $u2, $u3, $u3;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16125, 3} true;
  assume {:verifier.code 0} true;
  call ldv_switch_to_interrupt_context();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16126, 27} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_interrupt_instance_handler_0_5($p15, $i13, $p14);
  // WARNING: %17 = call i32 @ldv_interrupt_instance_handler_0_5(i32 (i32, i8*)* %.01, i32 %.03, i8* %.02), !dbg !8172, !verifier.code !8144
  call {:cexpr "ldv_0_ret_val_default"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16128, 3} true;
  assume {:verifier.code 0} true;
  call ldv_switch_to_process_context();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16129, 9} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv_undef_int();
  // WARNING: %18 = call i32 @ldv_undef_int(), !dbg !8176, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16131, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16131, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16133, 53} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i17, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16133, 53} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i1.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16133, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16135, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16135, 45} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16135, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16145, 53} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i17, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16145, 53} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i1.i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16145, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i25);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16138, 7} true;
  assume {:verifier.code 0} true;
  call ldv_interrupt_instance_thread_0_3($p16, $i13, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16140, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16143, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16148, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free: ref;
axiom (ldv_free == $sub.ref(0, 351009));
procedure  ldv_free($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17771, 3} true;
  assume {:verifier.code 0} true;
  call free_($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17773, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_switch_to_interrupt_context: ref;
axiom (ldv_switch_to_interrupt_context == $sub.ref(0, 352041));
procedure  ldv_switch_to_interrupt_context();
const ldv_interrupt_instance_handler_0_5: ref;
axiom (ldv_interrupt_instance_handler_0_5 == $sub.ref(0, 353073));
procedure  ldv_interrupt_instance_handler_0_5($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %0, i64 0, metadata !12591, metadata !8144), !dbg !12592, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16084, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_intr($i1, $p2);
  // WARNING: %4 = call i32 @myri10ge_intr(i32 %1, i8* %2), !dbg !8151, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16086, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv_switch_to_process_context: ref;
axiom (ldv_switch_to_process_context == $sub.ref(0, 354105));
procedure  ldv_switch_to_process_context();
const ldv_interrupt_instance_thread_0_3: ref;
axiom (ldv_interrupt_instance_thread_0_3 == $sub.ref(0, 355137));
procedure  ldv_interrupt_instance_thread_0_3($p0: ref, $i1: i32, $p2: ref)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %0, i64 0, metadata !12606, metadata !8144), !dbg !12607, !verifier.code !8146
  call $i3 := devirtbounce.10($p0, $i1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16098, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_: ref;
axiom (free_ == $sub.ref(0, 356169));
procedure  free_($p0: ref)
{
  call $free($p0);
}
const malloc: ref;
axiom (malloc == $sub.ref(0, 357201));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const request_threaded_irq: ref;
axiom (request_threaded_irq == $sub.ref(0, 358233));
procedure  request_threaded_irq($i0: i32, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32);
const napi_schedule: ref;
axiom (napi_schedule == $sub.ref(0, 359265));
procedure  napi_schedule($p0: ref)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7708, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := napi_schedule_prep($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7708, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7710, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7710, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7712, 5} true;
  assume {:verifier.code 0} true;
  call __napi_schedule($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7714, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7717, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_tx_done: ref;
axiom (myri10ge_tx_done == $sub.ref(0, 360297));
procedure  myri10ge_tx_done($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $p62: ref;
  var $i63: i32;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $i71: i64;
  var $p72: ref;
  var $p73: ref;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $p78: ref;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $i82: i1;
  var $p83: ref;
  var $p84: ref;
  var $i85: i64;
  var $p86: ref;
  var $p87: ref;
  var $i88: i64;
  var $i89: i64;
  var $i90: i32;
  var $i91: i1;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i64;
  var $i100: i64;
  var $i101: i64;
  var $i102: i32;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $i110: i1;
  var $i111: i1;
  var $i112: i8;
  var $i113: i1;
  var $p114: ref;
  var $i115: i32;
  var $p116: ref;
  var $i117: i32;
  var $i118: i1;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i1;
  var $i123: i8;
  var $i124: i1;
  var $p125: ref;
  var $i126: i32;
  var $p127: ref;
  var $i128: i32;
  var $i129: i32;
  var $p130: ref;
  var $i131: i32;
  var $i132: i32;
  var $i133: i1;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $i137: i32;
  var $i138: i1;
  var $p139: ref;
  var $i140: i32;
  var $i141: i32;
  var $p142: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %0, i64 0, metadata !12634, metadata !8144), !dbg !12635, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10728, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10728, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10728, 21} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10728, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10729, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $p0;
  $p7 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 20} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10768, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  $p10 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10732, 13} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  $p12 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10732, 24} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10732, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i32($i11, $i13);
  // WARNING: %16 = and i32 %13, %15, !dbg !8164, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i14);
  $p15 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10733, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10733, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10733, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p16, $mul.ref($i17, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10733, 43} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p16, $mul.ref($i17, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10733, 43} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  $p21 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10734, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10734, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10734, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p22, $mul.ref($i23, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10734, 37} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p22, $mul.ref($i23, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10734, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p25, $0.ref);
  $p26 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10735, 12} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10735, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10735, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p27, $mul.ref($i28, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10735, 41} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p27, $mul.ref($i28, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10735, 41} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10735, 46} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10735, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i32 == 1);
  $p33 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10736, 24} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10736, 33} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i34, 1);
  $p36 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10736, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p36, $i35);
  $p37 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10737, 10} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10737, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10737, 15} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p38, $mul.ref($i39, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10737, 39} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p38, $mul.ref($i39, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10737, 44} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10738, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  $p42 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10741, 18} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10741, 23} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43, 1);
  $p45 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10741, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p45, $i44);
  $p46 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10742, 20} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10742, 27} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10742, 25} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p47, $mul.ref($i48, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10742, 49} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p47, $mul.ref($i48, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10742, 49} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  // WARNING: %56 = load i32, i32* %55, align 8, !dbg !8201, !verifier.code !8146
  call {:cexpr "len"} boogie_si_record_i32($i51);
  $p52 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10743, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10743, 15} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10743, 13} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p53, $mul.ref($i54, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10743, 37} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p53, $mul.ref($i54, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10743, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10744, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10744, 27} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i64($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10744, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 30} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 440);
  $p60 := $add.ref($add.ref($p0, 440), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 36} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i64($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 68} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p20, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 68} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 47} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i32.i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 45} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i61, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 9} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 440);
  $p67 := $add.ref($add.ref($p0, 440), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10746, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p67, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10747, 32} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 440);
  $p69 := $add.ref($add.ref($p0, 440), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10747, 38} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i64($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10747, 49} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i64($i70, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10747, 9} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 440);
  $p73 := $add.ref($add.ref($p0, 440), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10747, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p73, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10748, 5} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_irq($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10750, 13} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10750, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10759, 11} true;
  assume {:verifier.code 0} true;
  $i82 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10759, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb15, $bb16;
$bb11:
  assume ($i74 == 1);
  $p75 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10752, 35} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10752, 42} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10752, 40} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p76, $mul.ref($i77, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10752, 64} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p76, $mul.ref($i77, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10752, 64} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i64($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10752, 69} true;
  assume {:verifier.code 0} true;
  $i81 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10752, 7} true;
  assume {:verifier.code 0} true;
  call pci_unmap_single($p5, $i80, $i81, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10755, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10758, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 11} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 20} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb18, $bb19;
$bb15:
  assume ($i82 == 1);
  $p83 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10761, 31} true;
  assume {:verifier.code 0} true;
  $p84 := $load.ref($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10761, 38} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10761, 36} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p84, $mul.ref($i85, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10761, 60} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p84, $mul.ref($i85, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10761, 60} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i64($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10761, 65} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10761, 5} true;
  assume {:verifier.code 0} true;
  call pci_unmap_page($p5, $i88, $i89, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10763, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i82 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 7} true;
  assume {:verifier.code 0} true;
  assume ($i91 == 1);
  goto $bb4;
$bb19:
  assume !(($i91 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10767, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 68} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 68} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 90} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 114} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 114} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 120} true;
  assume {:verifier.code 0} true;
  $p97 := $p96;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 120} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 102} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 100} true;
  assume {:verifier.code 0} true;
  $i100 := $sub.i64($i94, $i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 124} true;
  assume {:verifier.code 0} true;
  $i101 := $sdiv.i64($i100, 832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 73} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i64.i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10773, 15} true;
  assume {:verifier.code 0} true;
  call $p103 := netdev_get_tx_queue($p93, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 13} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 13} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 19} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p105, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 19} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 25} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 25} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i32($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 44} true;
  assume {:verifier.code 0} true;
  $i110 := $ugt.i32($i109, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10775, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i110 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10777, 11} true;
  assume {:verifier.code 0} true;
  call $i111 := __netif_tx_trylock($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10777, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i1.i8($i111);
  // WARNING: %130 = zext i1 %129 to i8, !dbg !8276, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i8($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10779, 15} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i8.i1($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10779, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb23, $bb24;
$bb22:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb23:
  assume ($i113 == 1);
  $p114 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10780, 15} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i32($M.0, $p114);
  $p116 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10780, 26} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10780, 19} true;
  assume {:verifier.code 0} true;
  $i118 := $eq.i32($i115, $i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10780, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i113 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb25:
  assume ($i118 == 1);
  $p119 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10782, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p119, 0);
  $p120 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10783, 33} true;
  assume {:verifier.code 0} true;
  $p121 := $load.ref($M.0, $p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10783, 9} true;
  assume {:verifier.code 0} true;
  call put_be32(16777216, $p121);
  call devirtbounce(0);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10787, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i118 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10791, 7} true;
  assume {:verifier.code 0} true;
  call __netif_tx_unlock($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10793, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10796, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10800, 13} true;
  assume {:verifier.code 0} true;
  call $i122 := netif_tx_queue_stopped($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10800, 11} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i1.i8($i122);
  // WARNING: %149 = zext i1 %148 to i8, !dbg !8300, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i8($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 14} true;
  assume {:verifier.code 0} true;
  $i124 := $trunc.i8.i1($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i124 == 1);
  $p125 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 29} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p125);
  $p127 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 39} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i32($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 33} true;
  assume {:verifier.code 0} true;
  $i129 := $sub.i32($i126, $i128);
  $p130 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 50} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i32($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 55} true;
  assume {:verifier.code 0} true;
  $i132 := $ashr.i32($i131, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 44} true;
  assume {:verifier.code 0} true;
  $i133 := $slt.i32($i129, $i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 61} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb33, $bb34;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i124 == 1));
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb33:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 69} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 69} true;
  assume {:verifier.code 0} true;
  $p135 := $load.ref($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 75} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p135, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 75} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i32($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 83} true;
  assume {:verifier.code 0} true;
  $i138 := $eq.i32($i137, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 61} true;
  assume {:verifier.code 0} true;
  assume !(($i133 == 1));
  goto $bb32;
$bb35:
  assume ($i138 == 1);
  $p139 := $add.ref($p0, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10804, 26} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i32($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10804, 37} true;
  assume {:verifier.code 0} true;
  $i141 := $add.i32($i140, 1);
  $p142 := $add.ref($p0, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10804, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p142, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10805, 5} true;
  assume {:verifier.code 0} true;
  call netif_tx_wake_queue($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10807, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10802, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i138 == 1));
  goto $bb32;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10810, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netdev_warn: ref;
axiom (netdev_warn == $sub.ref(0, 361329));
procedure  netdev_warn.ref.ref.i32.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32, p.8: i32)
  returns ($r: i32);
procedure  netdev_warn.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  netdev_warn.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
const schedule_work: ref;
axiom (schedule_work == $sub.ref(0, 362361));
procedure  schedule_work($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6745, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $load.ref($M.0, system_wq);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6745, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := queue_work($p1, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6745, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  // WARNING: %4 = zext i1 %3 to i8, !dbg !8151, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6747, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6747, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const cpu_relax: ref;
axiom (cpu_relax == $sub.ref(0, 363393));
procedure  cpu_relax()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6396, 3} true;
  assume {:verifier.code 0} true;
  call rep_nop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6398, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_check_statblock: ref;
axiom (myri10ge_check_statblock == $sub.ref(0, 364425));
procedure  myri10ge_check_statblock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i32;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i1;
  var $p43: ref;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $p57: ref;
  var $i58: i32;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $p66: ref;
  var $i67: i32;
  var $p68: ref;
  var $i69: i8;
  var $i70: i32;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $i74: i8;
  var $i75: i32;
  var $i76: i1;
  var $p77: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10889, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10889, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10889, 22} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10889, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10890, 55} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10890, 55} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10890, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10890, 69} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10890, 69} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10890, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10890, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  // WARNING: %12 = call i64 @ldv__builtin_expect(i64 %11, i64 0), !dbg !8156, !verifier.code !8146
  call {:cexpr "tmp___2"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10892, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10892, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10894, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10894, 28} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10894, 11} true;
  assume {:verifier.code 0} true;
  call $i15 := __fswab32($i14);
  // WARNING: %17 = call i32 @__fswab32(i32 %16), !dbg !8165, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i15);
  // WARNING: call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !12856, metadata !8144), !dbg !12857, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10897, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10897, 14} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10897, 25} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10897, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb3:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10898, 12} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10898, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10899, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10899, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10899, 27} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10899, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb5:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10900, 19} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 952);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10900, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10900, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10900, 36} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10900, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i22 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10912, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 952);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10912, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10912, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $and.i32($i37, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10912, 36} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10912, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb11, $bb12;
$bb7:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10902, 57} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10902, 57} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10902, 11} true;
  assume {:verifier.code 0} true;
  call $i29 := netdev_info.ref.ref($p28, .str.29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10904, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10908, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10908, 31} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10908, 9} true;
  assume {:verifier.code 0} true;
  call netif_carrier_on($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10909, 34} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 948);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10909, 34} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10909, 47} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i33, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10909, 14} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 948);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10909, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p35, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10911, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10924, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb11:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10914, 57} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10914, 57} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10914, 83} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i15, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10914, 75} true;
  assume {:verifier.code 0} true;
  havoc $p43;
  assume ((($i42 == 1) ==> ($p43 == .str.31)) && (($i42 != 1) ==> ($p43 == .str.32)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10914, 11} true;
  assume {:verifier.code 0} true;
  call $i44 := netdev_info.ref.ref.ref($p41, .str.30, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10916, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10920, 32} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10920, 32} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10920, 9} true;
  assume {:verifier.code 0} true;
  call netif_carrier_off($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10921, 34} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 948);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10921, 34} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10921, 47} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i48, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10921, 14} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 948);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10921, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i49);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10928, 32} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p4, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10928, 32} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10928, 15} true;
  assume {:verifier.code 0} true;
  call $i53 := __fswab32($i52);
  // WARNING: %67 = call i32 @__fswab32(i32 %66), !dbg !8223, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10930, 14} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10930, 14} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10930, 34} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i32($i55, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10930, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10932, 34} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p4, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10932, 34} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10932, 17} true;
  assume {:verifier.code 0} true;
  call $i59 := __fswab32($i58);
  // WARNING: %74 = call i32 @__fswab32(i32 %73), !dbg !8233, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10933, 12} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10933, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10934, 53} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10934, 53} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10935, 24} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10935, 24} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10934, 7} true;
  assume {:verifier.code 0} true;
  call $i65 := netdev_warn.ref.ref.i32($p62, .str.33, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10937, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 26} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 26} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 50} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p4, 61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 50} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 37} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 35} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i32($i67, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 10} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10940, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10941, 31} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p4, 61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10941, 31} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i8($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10941, 9} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10941, 41} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10941, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10943, 24} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10943, 7} true;
  assume {:verifier.code 0} true;
  call __wake_up($p77, 3, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10945, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10948, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10951, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netdev_info: ref;
axiom (netdev_info == $sub.ref(0, 365457));
procedure  netdev_info.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32)
  returns ($r: i32);
procedure  netdev_info.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  netdev_info.ref.ref.ref($p0: ref, $p1: ref, p.2: ref)
  returns ($r: i32);
const netif_carrier_on: ref;
axiom (netif_carrier_on == $sub.ref(0, 366489));
procedure  netif_carrier_on($p0: ref);
const netif_carrier_off: ref;
axiom (netif_carrier_off == $sub.ref(0, 367521));
procedure  netif_carrier_off($p0: ref);
const __wake_up: ref;
axiom (__wake_up == $sub.ref(0, 368553));
procedure  __wake_up($p0: ref, $i1: i32, $i2: i32, $p3: ref);
const rep_nop: ref;
axiom (rep_nop == $sub.ref(0, 369585));
procedure  rep_nop()
{
$bb0:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6387, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const queue_work: ref;
axiom (queue_work == $sub.ref(0, 370617));
procedure  queue_work($p0: ref, $p1: ref)
  returns ($r: i1)
{
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6734, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := queue_work_on(8192, $p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6734, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  // WARNING: %4 = zext i1 %3 to i8, !dbg !8152, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6736, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6736, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const queue_work_on: ref;
axiom (queue_work_on == $sub.ref(0, 371649));
procedure  queue_work_on($i0: i32, $p1: ref, $p2: ref)
  returns ($r: i1);
const dev_kfree_skb_irq: ref;
axiom (dev_kfree_skb_irq == $sub.ref(0, 372681));
procedure  dev_kfree_skb_irq($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7965, 3} true;
  assume {:verifier.code 0} true;
  call __dev_kfree_skb_irq($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7967, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __netif_tx_trylock: ref;
axiom (__netif_tx_trylock == $sub.ref(0, 373713));
procedure  __netif_tx_trylock($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $i29: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8032, 36} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8032, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_spin_trylock_48($p1);
  // WARNING: %3 = call i32 @ldv_spin_trylock_48(%struct.spinlock* %2), !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8033, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8033, 6} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %5 = zext i1 %4 to i8, !dbg !8154, !verifier.code !8146
  call {:cexpr "ok"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8034, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8034, 33} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8034, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 1);
  // WARNING: %8 = call i64 @ldv__builtin_expect(i64 %7, i64 1), !dbg !8159, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8036, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8036, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8050, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8161, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8073, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  call $i11 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8090, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8091, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  call $i9 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8084, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8085, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8102, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8102, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8103, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb8:
  call $i10 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8087, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8088, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb9:
  call $i12 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8093, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8094, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8097, 5} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8098, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8100, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8244, 10} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8244, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8245, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8117, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  call $i16 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8134, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8135, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  call $i14 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8128, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8129, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8146, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8146, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8147, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb17:
  call $i15 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8131, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8132, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb18:
  call $i17 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8137, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8138, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8141, 5} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8142, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8144, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb21:
  call $i21 := devirtbounce.1(0, cpu_number);
  // WARNING: %43 = call i32 @devirtbounce.1(i32 (i32*)* asm "movl %gs:${1:P},$0", "=r,*m,~{dirflag},~{fpsr},~{flags}", i32* @cpu_number)
  call {:cexpr "pfo_ret_____1"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8179, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  call $i19 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8172, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8173, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8191, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb24:
  call $i20 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8175, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8176, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb25:
  call $i22 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8181, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8185, 5} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8186, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8188, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8205, 7} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  call $i25 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8222, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8223, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  call $i23 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8216, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8217, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8234, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8234, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8235, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb32:
  call $i24 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8219, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8220, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb33:
  call $i26 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8225, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8226, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8229, 5} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8230, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8232, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8238, 5} true;
  assume {:verifier.code 0} true;
  call __bad_size_call_parameter();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8240, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8242, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8248, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8248, 3} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
}
const __netif_tx_unlock: ref;
axiom (__netif_tx_unlock == $sub.ref(0, 374745));
procedure  __netif_tx_unlock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8257, 8} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8257, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p1, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8258, 29} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8258, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_49($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8260, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_queue_stopped: ref;
axiom (netif_tx_queue_stopped == $sub.ref(0, 375777));
procedure  netif_tx_queue_stopped($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7938, 79} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7938, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 0, i64* %2), !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7940, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7940, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv_spin_unlock_49: ref;
axiom (ldv_spin_unlock_49 == $sub.ref(0, 376809));
procedure  ldv_spin_unlock_49($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17181, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock__xmit_lock_of_netdev_queue();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17182, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17184, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock__xmit_lock_of_netdev_queue: ref;
axiom (ldv_spin_unlock__xmit_lock_of_netdev_queue == $sub.ref(0, 377841));
procedure  ldv_spin_unlock__xmit_lock_of_netdev_queue()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18046, 70} true;
  assume {:verifier.code 0} true;
  $i0 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18046, 106} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18046, 106} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18046, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18047, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18047, 50} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18047, 50} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18047, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18048, 39} true;
  assume {:verifier.code 0} true;
  $M.14 := 1;
  call {:cexpr "ldv_spin__xmit_lock_of_netdev_queue"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18050, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_unlock: ref;
axiom (spin_unlock == $sub.ref(0, 378873));
procedure  spin_unlock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6679, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6679, 47} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6679, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6681, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock: ref;
axiom (_raw_spin_unlock == $sub.ref(0, 379905));
procedure  _raw_spin_unlock($p0: ref);
const ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock: ref;
axiom (ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock == $sub.ref(0, 380937));
procedure  ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19925, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19925, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19927, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19929, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19932, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_trylock_48: ref;
axiom (ldv_spin_trylock_48 == $sub.ref(0, 381969));
procedure  ldv_spin_trylock_48($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17167, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := spin_trylock($p0);
  // WARNING: %2 = call i32 @spin_trylock(%struct.spinlock* %0), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !13164, metadata !8144), !dbg !13165, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17169, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_spin_trylock__xmit_lock_of_netdev_queue();
  // WARNING: %3 = call i32 @ldv_spin_trylock__xmit_lock_of_netdev_queue(), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17171, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const spin_trylock: ref;
axiom (spin_trylock == $sub.ref(0, 383001));
procedure  spin_trylock($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6667, 35} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6667, 54} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6667, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := _raw_spin_trylock($p2);
  // WARNING: %4 = call i32 @_raw_spin_trylock(%struct.raw_spinlock* %3), !dbg !8151, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6669, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv_spin_trylock__xmit_lock_of_netdev_queue: ref;
axiom (ldv_spin_trylock__xmit_lock_of_netdev_queue == $sub.ref(0, 384033));
procedure  ldv_spin_trylock__xmit_lock_of_netdev_queue()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18059, 72} true;
  assume {:verifier.code 0} true;
  $i0 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18059, 108} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18059, 108} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18059, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock_try($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18060, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18060, 50} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18060, 50} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18060, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18061, 36} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv_undef_int();
  // WARNING: %7 = call i32 @ldv_undef_int(), !dbg !8150, !verifier.code !8144
  call {:cexpr "is_spin_held_by_another_thread"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18063, 38} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18063, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18064, 5} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18066, 41} true;
  assume {:verifier.code 0} true;
  $M.14 := 2;
  call {:cexpr "ldv_spin__xmit_lock_of_netdev_queue"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18067, 5} true;
  assume {:verifier.code 0} true;
  $i8 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18070, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock_try: ref;
axiom (ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock_try == $sub.ref(0, 385065));
procedure  ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock_try($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19910, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19910, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19912, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19914, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19917, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_trylock: ref;
axiom (_raw_spin_trylock == $sub.ref(0, 386097));
procedure  _raw_spin_trylock($p0: ref)
  returns ($r: i32);
const __dev_kfree_skb_irq: ref;
axiom (__dev_kfree_skb_irq == $sub.ref(0, 387129));
procedure  __dev_kfree_skb_irq($p0: ref, $i1: i32);
const napi_schedule_prep: ref;
axiom (napi_schedule_prep == $sub.ref(0, 388161));
procedure  napi_schedule_prep($p0: ref)
  returns ($r: i1)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7680, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := napi_disable_pending($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7680, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7682, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7682, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7684, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7687, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7687, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7689, 70} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7689, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := test_and_set_bit(0, $p6);
  // WARNING: %11 = call i32 @test_and_set_bit(i64 0, i64* %10), !dbg !8166, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7691, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7691, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb9;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7693, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 1;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7696, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7699, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7699, 3} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const __napi_schedule: ref;
axiom (__napi_schedule == $sub.ref(0, 389193));
procedure  __napi_schedule($p0: ref);
const napi_disable_pending: ref;
axiom (napi_disable_pending == $sub.ref(0, 390225));
procedure  napi_disable_pending($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7666, 71} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7666, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(1, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 1, i64* %2), !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7668, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7668, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const __const_udelay: ref;
axiom (__const_udelay == $sub.ref(0, 391257));
procedure  __const_udelay($i0: i64);
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 392289));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const myri10ge_dma_test: ref;
axiom (myri10ge_dma_test == $sub.ref(0, 393321));
procedure  myri10ge_dma_test($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $p13: ref;
  var $i14: i64;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $i35: i64;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $i53: i64;
  var $i54: i32;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $i58: i32;
  var $i59: i1;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $i68: i32;
  var $p69: ref;
  var $i21: i32;
  var $p22: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i1;
  var $i73: i1;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $i6: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !13266, metadata !8144), !dbg !13267, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9633, 18} true;
  assume {:verifier.code 0} true;
  call $p3 := alloc_pages(208, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9635, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9635, 36} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9635, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9636, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9696, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9641, 35} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9641, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9641, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := pci_map_page($p8, $p3, 0, 4096, 0);
  // WARNING: %12 = call i64 @pci_map_page(%struct.pci_dev* %11, %struct.page* %4, i64 0, i64 4096, i32 0), !dbg !8171, !verifier.code !8143
  call {:cexpr "dmatest_bus"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9642, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9642, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  // WARNING: %14 = load i32, i32* %13, align 8, !dbg !8174, !verifier.code !8143
  call {:cexpr "len"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9643, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9643, 7} true;
  assume {:verifier.code 0} true;
  $p13 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9643, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9644, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $lshr.i64($i9, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9644, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9644, 7} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9644, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9645, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $mul.i32($i11, 65536);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9645, 7} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9645, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9646, 12} true;
  assume {:verifier.code 0} true;
  call $i19 := myri10ge_send_cmd($p0, $i1, $p2, 0);
  // WARNING: %22 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 %1, %struct.myri10ge_cmd* %3, i32 0), !dbg !8187, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9648, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9648, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9650, 5} true;
  assume {:verifier.code 0} true;
  $i21, $p22 := $i19, .str.74;
  goto $bb7;
$bb6:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9683, 23} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9683, 23} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9683, 3} true;
  assume {:verifier.code 0} true;
  call pci_unmap_page($p71, $i9, 4096, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9684, 3} true;
  assume {:verifier.code 0} true;
  call put_page($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9686, 14} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9686, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb15, $bb16;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 26} true;
  assume {:verifier.code 0} true;
  $p23 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 26} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.7, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 32} true;
  assume {:verifier.code 0} true;
  $i25 := $lshr.i32($i24, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 39} true;
  assume {:verifier.code 0} true;
  $i26 := $mul.i32($i25, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 46} true;
  assume {:verifier.code 0} true;
  $i27 := $mul.i32($i26, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 59} true;
  assume {:verifier.code 0} true;
  $p28 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 59} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.7, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 65} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 52} true;
  assume {:verifier.code 0} true;
  $i31 := $udiv.i32($i27, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 936);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9655, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9656, 15} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i64.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9656, 7} true;
  assume {:verifier.code 0} true;
  $p34 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9656, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p34, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9657, 43} true;
  assume {:verifier.code 0} true;
  $i35 := $lshr.i64($i9, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9657, 15} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i64.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9657, 7} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9657, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p37, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9658, 7} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9658, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p38, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9659, 12} true;
  assume {:verifier.code 0} true;
  call $i39 := myri10ge_send_cmd($p0, $i1, $p2, 0);
  // WARNING: %43 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 %1, %struct.myri10ge_cmd* %3, i32 0), !dbg !8214, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9661, 14} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9661, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9663, 5} true;
  assume {:verifier.code 0} true;
  $i21, $p22 := $i39, .str.75;
  goto $bb7;
$bb10:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 27} true;
  assume {:verifier.code 0} true;
  $p41 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 27} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.7, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 33} true;
  assume {:verifier.code 0} true;
  $i43 := $lshr.i32($i42, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 40} true;
  assume {:verifier.code 0} true;
  $i44 := $mul.i32($i43, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 47} true;
  assume {:verifier.code 0} true;
  $i45 := $mul.i32($i44, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 60} true;
  assume {:verifier.code 0} true;
  $p46 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 60} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.7, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 66} true;
  assume {:verifier.code 0} true;
  $i48 := $and.i32($i47, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 53} true;
  assume {:verifier.code 0} true;
  $i49 := $udiv.i32($i45, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 8} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 940);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9668, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9669, 15} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i64.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9669, 7} true;
  assume {:verifier.code 0} true;
  $p52 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9669, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9670, 43} true;
  assume {:verifier.code 0} true;
  $i53 := $lshr.i64($i9, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9670, 15} true;
  assume {:verifier.code 0} true;
  $i54 := $trunc.i64.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9670, 7} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9670, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9671, 19} true;
  assume {:verifier.code 0} true;
  $i56 := $mul.i32($i11, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9671, 7} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9671, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9672, 12} true;
  assume {:verifier.code 0} true;
  call $i58 := myri10ge_send_cmd($p0, $i1, $p2, 0);
  // WARNING: %65 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 %1, %struct.myri10ge_cmd* %3, i32 0), !dbg !8240, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9674, 14} true;
  assume {:verifier.code 0} true;
  $i59 := $ne.i32($i58, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9674, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9676, 5} true;
  assume {:verifier.code 0} true;
  $i21, $p22 := $i58, .str.76;
  goto $bb7;
$bb13:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 32} true;
  assume {:verifier.code 0} true;
  $p60 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 32} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.7, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 38} true;
  assume {:verifier.code 0} true;
  $i62 := $lshr.i32($i61, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 45} true;
  assume {:verifier.code 0} true;
  $i63 := $mul.i32($i62, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 52} true;
  assume {:verifier.code 0} true;
  $i64 := $mul.i32($i63, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 65} true;
  assume {:verifier.code 0} true;
  $p65 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 65} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.7, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 71} true;
  assume {:verifier.code 0} true;
  $i67 := $and.i32($i66, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 58} true;
  assume {:verifier.code 0} true;
  $i68 := $udiv.i32($i64, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 8} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 944);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9680, 3} true;
  assume {:verifier.code 0} true;
  $i21, $p22 := $i58, .str.73;
  goto $bb7;
$bb15:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9686, 32} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9686, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9686, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i72 == 1));
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb18:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9688, 48} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9688, 48} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9688, 55} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9688, 5} true;
  assume {:verifier.code 0} true;
  call $i77 := dev_warn.ref.ref.ref.i32($p76, .str.77, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9691, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9686, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i73 == 1));
  goto $bb17;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9694, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i21;
  goto $bb3;
}
const netif_set_real_num_tx_queues: ref;
axiom (netif_set_real_num_tx_queues == $sub.ref(0, 394353));
procedure  netif_set_real_num_tx_queues($p0: ref, $i1: i32)
  returns ($r: i32);
const myri10ge_update_mac_address: ref;
axiom (myri10ge_update_mac_address == $sub.ref(0, 395385));
procedure  myri10ge_update_mac_address($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $i12: i8;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $p25: ref;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $p29: ref;
  var $i30: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32($i4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 60} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 53} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 47} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 67} true;
  assume {:verifier.code 0} true;
  $i9 := $shl.i32($i8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 44} true;
  assume {:verifier.code 0} true;
  $i10 := $or.i32($i5, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 91} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 84} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 78} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 98} true;
  assume {:verifier.code 0} true;
  $i14 := $shl.i32($i13, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 75} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i10, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 120} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 113} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 107} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 105} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i15, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 7} true;
  assume {:verifier.code 0} true;
  $p20 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9570, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 36} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 29} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 23} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 43} true;
  assume {:verifier.code 0} true;
  $i24 := $shl.i32($i23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 64} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 57} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i8($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 51} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 49} true;
  assume {:verifier.code 0} true;
  $i28 := $or.i32($i24, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 7} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9571, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9572, 12} true;
  assume {:verifier.code 0} true;
  call $i30 := myri10ge_send_cmd($p0, 22, $p2, 0);
  // WARNING: %31 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 22, %struct.myri10ge_cmd* %3, i32 0), !dbg !8187, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9574, 3} true;
  assume {:verifier.code 0} true;
  $r := $i30;
  $exn := false;
  return;
}
const myri10ge_change_pause: ref;
axiom (myri10ge_change_pause == $sub.ref(0, 396417));
procedure  myri10ge_change_pause($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p11: ref;
  var $i10: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !13435, metadata !8144), !dbg !13436, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9585, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9585, 9} true;
  assume {:verifier.code 0} true;
  havoc $i4;
  assume ((($i3 == 1) ==> ($i4 == 23)) && (($i3 != 1) ==> ($i4 == 24)));
  // WARNING: %5 = select i1 %4, i32 23, i32 24, !dbg !8159, !verifier.code !8143
  call {:cexpr "ctl"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9586, 12} true;
  assume {:verifier.code 0} true;
  call $i5 := myri10ge_send_cmd($p0, $i4, $p2, 0);
  // WARNING: %6 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 %5, %struct.myri10ge_cmd* %3, i32 0), !dbg !8162, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9588, 14} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9588, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9590, 50} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9590, 50} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9590, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := netdev_err.ref.ref($p8, .str.23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9592, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i5;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9599, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9596, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9596, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9597, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
}
const myri10ge_set_multicast_list: ref;
axiom (myri10ge_set_multicast_list == $sub.ref(0, 397449));
procedure  myri10ge_set_multicast_list($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $p48: ref;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i1;
  var $p37: ref;
  var $i63: i32;
  var $i64: i1;
  var $i65: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13676, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13677, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13678, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13678, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13679, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13679, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13680, 43} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13680, 43} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13680, 49} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13680, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_change_promisc($p4, $i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13682, 12} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 924);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13682, 12} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13682, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13682, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13683, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13761, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13688, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := myri10ge_send_cmd($p4, 26, $p1, 1);
  // WARNING: %17 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %5, i32 26, %struct.myri10ge_cmd* %2, i32 1), !dbg !8175, !verifier.code !8141
  call {:cexpr "err"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13690, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13690, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13692, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := netdev_err.ref.ref.i32($p0, .str.15, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13695, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13759, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 13} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i17, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 27} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb9, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 33} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1);
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13700, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 41} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p4, 900);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 41} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 63} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13699, 7} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1);
  goto $bb10;
$bb13:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13705, 9} true;
  assume {:verifier.code 0} true;
  call $i23 := myri10ge_send_cmd($p4, 30, $p1, 1);
  // WARNING: %34 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %5, i32 30, %struct.myri10ge_cmd* %2, i32 1), !dbg !8197, !verifier.code !8141
  call {:cexpr "err"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13707, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13707, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13709, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := netdev_err.ref.ref.i32($p0, .str.16, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13712, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb16:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13716, 45} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 672);
  $p27 := $add.ref($p0, 672);
  $p28 := $add.ref($p0, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13716, 53} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13717, 8} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 63} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 672);
  $p34 := $add.ref($p0, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 39} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 36} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i64($i32, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  $p37 := $p29;
  goto $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb21:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13741, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13721, 3} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13721, 51} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p37, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13721, 3} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13721, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p38, $p40, 6, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13722, 23} true;
  assume {:verifier.code 0} true;
  $p41 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13722, 23} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13722, 13} true;
  assume {:verifier.code 0} true;
  call $i43 := __fswab32($i42);
  // WARNING: %57 = call i32 @__fswab32(i32 %56), !dbg !8224, !verifier.code !8141
  call {:cexpr "tmp___0"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13723, 7} true;
  assume {:verifier.code 0} true;
  $p44 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13723, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13724, 23} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13724, 23} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13724, 13} true;
  assume {:verifier.code 0} true;
  call $i47 := __fswab32($i46);
  // WARNING: %61 = call i32 @__fswab32(i32 %60), !dbg !8230, !verifier.code !8141
  call {:cexpr "tmp___1"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13725, 7} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13725, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13726, 9} true;
  assume {:verifier.code 0} true;
  call $i49 := myri10ge_send_cmd($p4, 28, $p1, 1);
  // WARNING: %63 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %5, i32 28, %struct.myri10ge_cmd* %2, i32 1), !dbg !8235, !verifier.code !8141
  call {:cexpr "err"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13728, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i32($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13728, 7} true;
  assume {:verifier.code 0} true;
  $p51, $i52 := $p37, $i49;
  assume {:branchcond $i50} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i50 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13731, 45} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p51, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13731, 21} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13730, 5} true;
  assume {:verifier.code 0} true;
  call $i55 := netdev_err.ref.ref.i32.ref($p0, .str.17, $i52, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb24:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13737, 48} true;
  assume {:verifier.code 0} true;
  $p56 := $p37;
  $p57 := $p37;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13737, 53} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13738, 8} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 30} true;
  assume {:verifier.code 0} true;
  $p60 := $p59;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 36} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i64($i61, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  $p37 := $p58;
  assume {:branchcond $i62} true;
  goto $bb26, $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  assume ($i62 == 1);
  goto $bb21;
$bb27:
  assume !(($i62 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13740, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13746, 9} true;
  assume {:verifier.code 0} true;
  call $i63 := myri10ge_send_cmd($p4, 27, $p1, 1);
  // WARNING: %81 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %5, i32 27, %struct.myri10ge_cmd* %2, i32 1), !dbg !8252, !verifier.code !8141
  call {:cexpr "err"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13748, 11} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i32($i63, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13748, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13750, 5} true;
  assume {:verifier.code 0} true;
  call $i65 := netdev_err.ref.ref.i32($p0, .str.18, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13753, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb30:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13757, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const myri10ge_change_promisc: ref;
axiom (myri10ge_change_promisc == $sub.ref(0, 398481));
procedure  myri10ge_change_promisc($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !13582, metadata !8144), !dbg !13583, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !13584, metadata !8144), !dbg !13585, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9608, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9608, 9} true;
  assume {:verifier.code 0} true;
  havoc $i5;
  assume ((($i4 == 1) ==> ($i5 == 20)) && (($i4 != 1) ==> ($i5 == 21)));
  // WARNING: %6 = select i1 %5, i32 20, i32 21, !dbg !8161, !verifier.code !8143
  call {:cexpr "ctl"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9609, 12} true;
  assume {:verifier.code 0} true;
  call $i6 := myri10ge_send_cmd($p0, $i5, $p3, $i2);
  // WARNING: %7 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 %6, %struct.myri10ge_cmd* %4, i32 %2), !dbg !8164, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9611, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9611, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9613, 50} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9613, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9613, 5} true;
  assume {:verifier.code 0} true;
  call $i10 := netdev_err.ref.ref($p9, .str.19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9615, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9618, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 399513));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const dev_warn: ref;
axiom (dev_warn == $sub.ref(0, 400545));
procedure  dev_warn.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  dev_warn.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  dev_warn.ref.ref.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32)
  returns ($r: i32);
procedure  dev_warn.ref.ref.ref.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32)
  returns ($r: i32);
const pci_bus_read_config_word: ref;
axiom (pci_bus_read_config_word == $sub.ref(0, 401577));
procedure  pci_bus_read_config_word($p0: ref, $i1: i32, $i2: i32, $p3: ref)
  returns ($r: i32);
const ldv_dev_get_drvdata_58: ref;
axiom (ldv_dev_get_drvdata_58 == $sub.ref(0, 402609));
procedure  ldv_dev_get_drvdata_58($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17193, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17195, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const netif_device_detach: ref;
axiom (netif_device_detach == $sub.ref(0, 403641));
procedure  netif_device_detach($p0: ref);
const myri10ge_close: ref;
axiom (myri10ge_close == $sub.ref(0, 404673));
procedure  myri10ge_close($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $p31: ref;
  var $i32: i1;
  var $i33: i8;
  var $i34: i1;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $i21: i32;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i32;
  var $i45: i32;
  var $i46: i1;
  var $i47: i32;
  var $p48: ref;
  var $i49: i32;
  var $i50: i1;
  var $i51: i8;
  var $i52: i1;
  var $i53: i1;
  var $i54: i64;
  var $i55: i1;
  var $i57: i1;
  var $i56: i1;
  var $i58: i32;
  var $i59: i1;
  var $p60: ref;
  var $p61: ref;
  var $i62: i64;
  var $p63: ref;
  var $i64: i64;
  var $p65: ref;
  var $i66: i32;
  var $i67: i1;
  var $i68: i8;
  var $i69: i1;
  var $i70: i1;
  var $i71: i64;
  var $i72: i1;
  var $i74: i1;
  var $i73: i1;
  var $i75: i32;
  var $i76: i1;
  var $i77: i64;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p87: ref;
  var $p88: ref;
  var $i89: i64;
  var $p90: ref;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i86: i32;
  var $p94: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12877, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12878, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12880, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12880, 12} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12880, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12880, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12881, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13037, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12885, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12885, 29} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12885, 34} true;
  assume {:verifier.code 0} true;
  $p10 := $p9;
  $p11 := $add.ref($p9, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12885, 37} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12885, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12885, 47} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12885, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12886, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12891, 32} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12891, 3} true;
  assume {:verifier.code 0} true;
  call $i16 := ldv_del_timer_sync_91($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12892, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12892, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12893, 3} true;
  assume {:verifier.code 0} true;
  call local_bh_disable();
  // WARNING: call void @local_bh_disable(), !dbg !8193, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 16} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 16} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32(0, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 7} true;
  assume {:verifier.code 0} true;
  $i21 := 0;
  goto $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12944, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12899, 24} true;
  assume {:verifier.code 0} true;
  $p22 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12899, 24} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12899, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12899, 27} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p23, $mul.ref($i24, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12899, 49} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p23, $mul.ref($i24, 688)), 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12899, 3} true;
  assume {:verifier.code 0} true;
  call napi_disable($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12901, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12929, 40} true;
  assume {:verifier.code 0} true;
  $p28 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12929, 40} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12929, 45} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12929, 43} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p29, $mul.ref($i30, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12929, 13} true;
  assume {:verifier.code 0} true;
  call $i32 := myri10ge_ss_lock_napi($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12929, 11} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i1.i8($i32);
  // WARNING: %48 = zext i1 %47 to i8, !dbg !8233, !verifier.code !8141
  call {:cexpr "tmp___1"} boogie_si_record_i8($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12931, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i8.i1($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12931, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb21, $bb22;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12904, 3} true;
  assume {:verifier.code 0} true;
  call $i27 := printk.ref.i32(.str.135, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12906, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 1} true;
  goto $bb15, $bb16;
$bb15:
  assume (1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12908, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12910, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !((1 == 1));
  // WARNING: call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !13685, metadata !8144), !dbg !13686, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !13687, metadata !8144), !dbg !13688, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12920, 9} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12906, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12921, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12915, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8221, !verifier.code !8141
  // WARNING: call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !13687, metadata !8144), !dbg !13688, !verifier.code !8146
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb21:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12933, 3} true;
  assume {:verifier.code 0} true;
  $i35 := 0;
  goto $bb23;
$bb22:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $i35 := 1;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12936, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12936, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12937, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb25:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12941, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i32($i21, 1);
  // WARNING: %57 = add nsw i32 %.058, 1, !dbg !8248, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 16} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i37, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $i37;
  assume {:branchcond $i39} true;
  goto $bb27, $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 7} true;
  assume {:verifier.code 0} true;
  assume ($i39 == 1);
  goto $bb11;
$bb28:
  assume !(($i39 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12943, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12949, 3} true;
  assume {:verifier.code 0} true;
  call local_bh_enable();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12950, 3} true;
  assume {:verifier.code 0} true;
  call netif_carrier_off($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12951, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_all_queues($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12953, 12} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p4, 960);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12953, 12} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12953, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12953, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12955, 25} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12955, 25} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  // WARNING: %68 = load i32, i32* %67, align 8, !dbg !8259, !verifier.code !8141
  call {:cexpr "old_down_cnt"} boogie_si_record_i32($i44);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12957, 14} true;
  assume {:verifier.code 0} true;
  call $i45 := myri10ge_send_cmd($p4, 15, $p1, 0);
  // WARNING: %69 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %5, i32 15, %struct.myri10ge_cmd* %2, i32 0), !dbg !8264, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12959, 16} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12959, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb32:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12961, 7} true;
  assume {:verifier.code 0} true;
  call $i47 := netdev_err.ref.ref($p0, .str.136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12963, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12967, 39} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12967, 39} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12967, 31} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i32($i44, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12967, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i1.i8($i50);
  // WARNING: %78 = zext i1 %77 to i8, !dbg !8278, !verifier.code !8141
  call {:cexpr "__cond___0"} boogie_si_record_i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12968, 15} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i8.i1($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12968, 26} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12968, 35} true;
  assume {:verifier.code 0} true;
  $i53 := $eq.i64(250, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12968, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb38, $bb39;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12968, 26} true;
  assume {:verifier.code 0} true;
  assume !(($i52 == 1));
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  $i54 := 250;
  goto $bb40;
$bb38:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12970, 5} true;
  assume {:verifier.code 0} true;
  $i54 := 1;
  goto $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12968, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i53 == 1));
  goto $bb37;
$bb40:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 16} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i8.i1($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 27} true;
  assume {:verifier.code 0} true;
  $i56 := 1;
  assume {:branchcond $i55} true;
  goto $bb41, $bb43;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 27} true;
  assume {:verifier.code 0} true;
  assume ($i55 == 1);
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 27} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i1.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 43} true;
  assume {:verifier.code 0} true;
  $i59 := $eq.i32($i58, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb44, $bb45;
$bb43:
  assume !(($i55 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 36} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i64($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12973, 27} true;
  assume {:verifier.code 0} true;
  $i56 := $i57;
  goto $bb42;
$bb44:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12976, 31} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12976, 7} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12977, 14} true;
  assume {:verifier.code 0} true;
  $p61 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12977, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12978, 7} true;
  assume {:verifier.code 0} true;
  $i62 := 250;
  goto $bb46;
$bb45:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb46:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12981, 46} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12981, 17} true;
  assume {:verifier.code 0} true;
  call $i64 := prepare_to_wait_event($p63, $p2, 2);
  // WARNING: %97 = call i64 @prepare_to_wait_event(%struct.__wait_queue_head* %96, %struct.__wait_queue* %3, i32 2), !dbg !8310, !verifier.code !8141
  call {:cexpr "tmp___3"} boogie_si_record_i64($i64);
  // WARNING: call void @llvm.dbg.value(metadata i64 %97, i64 0, metadata !13781, metadata !8144), !dbg !13782, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12983, 37} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12983, 37} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12983, 29} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i32($i44, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12983, 14} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i1.i8($i67);
  // WARNING: %101 = zext i1 %100 to i8, !dbg !8317, !verifier.code !8141
  call {:cexpr "__cond"} boogie_si_record_i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12985, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i8.i1($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12985, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12985, 37} true;
  assume {:verifier.code 0} true;
  $i70 := $eq.i64($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12985, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb50, $bb51;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12985, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  $i71 := $i62;
  goto $bb52;
$bb50:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12987, 7} true;
  assume {:verifier.code 0} true;
  $i71 := 1;
  goto $bb52;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12985, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i70 == 1));
  goto $bb49;
$bb52:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 18} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i8.i1($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 25} true;
  assume {:verifier.code 0} true;
  $i73 := 1;
  assume {:branchcond $i72} true;
  goto $bb53, $bb55;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 25} true;
  assume {:verifier.code 0} true;
  assume ($i72 == 1);
  goto $bb54;
$bb54:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 25} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i1.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 45} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb56, $bb57;
$bb55:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 38} true;
  assume {:verifier.code 0} true;
  $i74 := $eq.i64($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12990, 25} true;
  assume {:verifier.code 0} true;
  $i73 := $i74;
  goto $bb54;
$bb56:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12991, 9} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13001, 26} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13001, 7} true;
  assume {:verifier.code 0} true;
  call finish_wait($p78, $p2);
  // WARNING: call void @finish_wait(%struct.__wait_queue_head* %120, %struct.__wait_queue* %3), !dbg !8345, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13004, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12996, 19} true;
  assume {:verifier.code 0} true;
  call $i77 := schedule_timeout($i71);
  // WARNING: %118 = call i64 @schedule_timeout(i64 %.1), !dbg !8340, !verifier.code !8141
  call {:cexpr "__ret___0"} boogie_si_record_i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12998, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $i77;
  goto $bb46;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13007, 30} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13007, 30} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13007, 22} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i44, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13007, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13009, 7} true;
  assume {:verifier.code 0} true;
  call $i82 := netdev_err.ref.ref($p0, .str.137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13011, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13014, 3} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13018, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_disable($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13019, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_irq($p4);
  // WARNING: call void @myri10ge_free_irq(%struct.myri10ge_priv* %5), !dbg !8358, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 16} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 16} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i32($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $slt.i32(0, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 7} true;
  assume {:verifier.code 0} true;
  $i86 := 0;
  goto $bb68;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i85 == 1));
  goto $bb67;
$bb67:
  assume {:verifier.code 0} true;
  goto $bb72;
$bb68:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13030, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13025, 28} true;
  assume {:verifier.code 0} true;
  $p87 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13025, 28} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13025, 33} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13025, 31} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p88, $mul.ref($i89, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13025, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_rings($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13026, 9} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i86, 1);
  // WARNING: %140 = add nsw i32 %.167, 1, !dbg !8368, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 16} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $slt.i32($i91, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 7} true;
  assume {:verifier.code 0} true;
  $i86 := $i91;
  assume {:branchcond $i93} true;
  goto $bb70, $bb71;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 7} true;
  assume {:verifier.code 0} true;
  assume ($i93 == 1);
  goto $bb68;
$bb71:
  assume !(($i93 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13029, 7} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13034, 8} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13034, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13035, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const pci_choose_state: ref;
axiom (pci_choose_state == $sub.ref(0, 405705));
procedure  pci_choose_state($p0: ref, $i1: i32)
  returns ($r: i32);
const ldv_del_timer_sync_91: ref;
axiom (ldv_del_timer_sync_91 == $sub.ref(0, 406737));
procedure  ldv_del_timer_sync_91($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17350, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := del_timer_sync($p0);
  // WARNING: %2 = call i32 @del_timer_sync(%struct.timer_list* %0), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !13853, metadata !8144), !dbg !13854, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17352, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_del_timer_sync($i1, $p0);
  // WARNING: %3 = call i32 @ldv_del_timer_sync(i32 %2, %struct.timer_list* %0), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17354, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const local_bh_disable: ref;
axiom (local_bh_disable == $sub.ref(0, 407769));
procedure  local_bh_disable()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6603, 3} true;
  assume {:verifier.code 0} true;
  call __local_bh_disable_ip(0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6605, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 408801));
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32);
procedure  printk.ref.ref($p0: ref, p.1: ref)
  returns ($r: i32);
procedure  printk.ref($p0: ref)
  returns ($r: i32);
const myri10ge_ss_lock_napi: ref;
axiom (myri10ge_ss_lock_napi == $sub.ref(0, 409833));
procedure  myri10ge_ss_lock_napi($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i1;
  var $i15: i32;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $p27: ref;
  var $i26: i8;
  var $p28: ref;
  var $i29: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %0, i64 0, metadata !13870, metadata !8144), !dbg !13871, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9720, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9720, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_77($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9722, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9722, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9722, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9722, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9722, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9724, 31} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9724, 31} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9724, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, 1);
  // WARNING: %10 = and i32 %9, 1, !dbg !8161, !verifier.code !8146
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9725, 45} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9725, 45} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9725, 31} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9725, 11} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !8166, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9727, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9727, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9741, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9741, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, 1);
  assume {:verifier.code 0} true;
  $i26 := 1;
  goto $bb6;
$bb3:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9729, 7} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.7, 940);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9731, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9735, 39} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9735, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i1.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9735, 25} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9735, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv__builtin_expect($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9736, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9736, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9736, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i19, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9736, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9736, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i20);
  // WARNING: store i32 %25, i32* %26, align 8, !dbg !8183, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9738, 31} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9738, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9738, 47} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9738, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9738, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p25, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9740, 3} true;
  assume {:verifier.code 0} true;
  $i26 := 0;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9744, 28} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9744, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_78($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9746, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i8.i1($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9746, 3} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
}
const local_bh_enable: ref;
axiom (local_bh_enable == $sub.ref(0, 410865));
procedure  local_bh_enable()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6615, 3} true;
  assume {:verifier.code 0} true;
  call __local_bh_enable_ip(0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6617, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_stop_all_queues: ref;
axiom (netif_tx_stop_all_queues == $sub.ref(0, 411897));
procedure  netif_tx_stop_all_queues($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !13928, metadata !8144), !dbg !13929, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 912);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32(0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 7} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7924, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7917, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := netdev_get_tx_queue($p0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7919, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_queue($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7920, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i4, 1);
  // WARNING: %7 = add i32 %.01, 1, !dbg !8159, !verifier.code !8144
  call {:cexpr "i"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $ult.i32($i6, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i6;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 7} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb4;
$bb7:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7923, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7929, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 412929));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6247, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6247, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6248, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6248, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6249, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const prepare_to_wait_event: ref;
axiom (prepare_to_wait_event == $sub.ref(0, 413961));
procedure  prepare_to_wait_event($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64);
const schedule_timeout: ref;
axiom (schedule_timeout == $sub.ref(0, 414993));
procedure  schedule_timeout($i0: i64)
  returns ($r: i64);
const finish_wait: ref;
axiom (finish_wait == $sub.ref(0, 416025));
procedure  finish_wait($p0: ref, $p1: ref);
const netif_tx_disable: ref;
axiom (netif_tx_disable == $sub.ref(0, 417057));
procedure  netif_tx_disable($p0: ref)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i23: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8278, 3} true;
  assume {:verifier.code 0} true;
  call local_bh_disable();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8293, 5} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8404, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8316, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  call $i3 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8333, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8334, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  call $i1 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8327, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8328, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8345, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8345, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8346, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  call $i2 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8330, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8331, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb7:
  call $i4 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8336, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8337, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8340, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8341, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8343, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb10:
  // WARNING: call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !14052, metadata !8144), !dbg !14053, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 912);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $ult.i32(0, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb36, $bb37;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8360, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  call $i8 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8377, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8378, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  call $i6 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8371, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8372, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8389, 16} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8389, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8390, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb15:
  call $i7 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8374, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8375, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb16:
  call $i9 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8380, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8381, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8384, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8385, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb19:
  call $i13 := devirtbounce.1(0, cpu_number);
  // WARNING: %34 = call i32 @devirtbounce.1(i32 (i32*)* asm "movl %gs:${1:P},$0", "=r,*m,~{dirflag},~{fpsr},~{flags}", i32* @cpu_number)
  call {:cexpr "pfo_ret_____1"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8422, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  call $i11 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8415, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8416, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8434, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb22:
  call $i12 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8418, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8419, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb23:
  call $i14 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8424, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8425, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8428, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8429, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8431, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8448, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  call $i17 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8465, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8466, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  call $i15 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8459, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8460, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8477, 16} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8477, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8478, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb30:
  call $i16 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8462, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8463, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb31:
  call $i18 := devirtbounce.1(0, cpu_number);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8468, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u0, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8469, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8472, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8473, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8475, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8481, 3} true;
  assume {:verifier.code 0} true;
  call __bad_size_call_parameter();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8483, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8485, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb36:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 7} true;
  assume {:verifier.code 0} true;
  $i23 := 0;
  goto $bb39;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i22 == 1));
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb39:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8501, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8492, 9} true;
  assume {:verifier.code 0} true;
  call $p24 := netdev_get_tx_queue($p0, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8494, 3} true;
  assume {:verifier.code 0} true;
  call __netif_tx_lock($p24, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8495, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_queue($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8496, 3} true;
  assume {:verifier.code 0} true;
  call __netif_tx_unlock($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8497, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i23, 1);
  // WARNING: %61 = add i32 %.01, 1, !dbg !8252, !verifier.code !8144
  call {:cexpr "i"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 16} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 9} true;
  assume {:verifier.code 0} true;
  $i27 := $ult.i32($i25, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $i25;
  assume {:branchcond $i27} true;
  goto $bb41, $bb42;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 7} true;
  assume {:verifier.code 0} true;
  assume ($i27 == 1);
  goto $bb39;
$bb42:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8500, 7} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8506, 3} true;
  assume {:verifier.code 0} true;
  call local_bh_enable();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8508, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __netif_tx_lock: ref;
axiom (__netif_tx_lock == $sub.ref(0, 418089));
procedure  __netif_tx_lock($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.netdev_queue* %0, i64 0, metadata !14078, metadata !8144), !dbg !14079, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8012, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8012, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_46($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8013, 8} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8013, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8015, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_stop_queue: ref;
axiom (netif_tx_stop_queue == $sub.ref(0, 419121));
procedure  netif_tx_stop_queue($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7879, 19} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7879, 45} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7879, 45} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  // WARNING: %4 = zext i1 %3 to i32, !dbg !8150, !verifier.code !8146
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7880, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7880, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7880, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7880, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 0);
  // WARNING: %8 = call i64 @ldv__builtin_expect(i64 %7, i64 0), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7882, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7882, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7884, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.21, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7886, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7890, 47} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7890, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7890, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7890, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 0);
  // WARNING: %16 = call i64 @ldv__builtin_expect(i64 %15, i64 0), !dbg !8168, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7892, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7892, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7894, 5} true;
  assume {:verifier.code 0} true;
  call $i14 := printk.ref(.str.22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7896, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7905, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7901, 57} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7901, 3} true;
  assume {:verifier.code 0} true;
  call set_bit(0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7903, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 420153));
procedure  warn_slowpath_null($p0: ref, $i1: i32);
const ldv_spin_lock_46: ref;
axiom (ldv_spin_lock_46 == $sub.ref(0, 421185));
procedure  ldv_spin_lock_46($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17153, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock__xmit_lock_of_netdev_queue();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17154, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17156, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_lock__xmit_lock_of_netdev_queue: ref;
axiom (ldv_spin_lock__xmit_lock_of_netdev_queue == $sub.ref(0, 422217));
procedure  ldv_spin_lock__xmit_lock_of_netdev_queue()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18033, 68} true;
  assume {:verifier.code 0} true;
  $i0 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18033, 104} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18033, 104} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18033, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18034, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18034, 50} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18034, 50} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18034, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18035, 39} true;
  assume {:verifier.code 0} true;
  $M.14 := 2;
  call {:cexpr "ldv_spin__xmit_lock_of_netdev_queue"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18037, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_lock: ref;
axiom (spin_lock == $sub.ref(0, 423249));
procedure  spin_lock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6640, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6640, 45} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6640, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6642, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock: ref;
axiom (_raw_spin_lock == $sub.ref(0, 424281));
procedure  _raw_spin_lock($p0: ref);
const ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock: ref;
axiom (ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock == $sub.ref(0, 425313));
procedure  ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19895, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19895, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19897, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19899, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19902, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __local_bh_enable_ip: ref;
axiom (__local_bh_enable_ip == $sub.ref(0, 426345));
procedure  __local_bh_enable_ip($i0: i64, $i1: i32);
const ldv_spin_lock_77: ref;
axiom (ldv_spin_lock_77 == $sub.ref(0, 427377));
procedure  ldv_spin_lock_77($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17215, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_myri10ge_slice_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17216, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17218, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_78: ref;
axiom (ldv_spin_unlock_78 == $sub.ref(0, 428409));
procedure  ldv_spin_unlock_78($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17227, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_lock_of_myri10ge_slice_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17228, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17230, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_lock_of_myri10ge_slice_state: ref;
axiom (ldv_spin_unlock_lock_of_myri10ge_slice_state == $sub.ref(0, 429441));
procedure  ldv_spin_unlock_lock_of_myri10ge_slice_state()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18748, 70} true;
  assume {:verifier.code 0} true;
  $i0 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18748, 108} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18748, 108} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18748, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18749, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18749, 52} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18749, 52} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18749, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18750, 41} true;
  assume {:verifier.code 0} true;
  $M.15 := 1;
  call {:cexpr "ldv_spin_lock_of_myri10ge_slice_state"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18752, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_lock_lock_of_myri10ge_slice_state: ref;
axiom (ldv_spin_lock_lock_of_myri10ge_slice_state == $sub.ref(0, 430473));
procedure  ldv_spin_lock_lock_of_myri10ge_slice_state()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18735, 68} true;
  assume {:verifier.code 0} true;
  $i0 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18735, 106} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18735, 106} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18735, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18736, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18736, 52} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18736, 52} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18736, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18737, 41} true;
  assume {:verifier.code 0} true;
  $M.15 := 2;
  call {:cexpr "ldv_spin_lock_of_myri10ge_slice_state"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 18739, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __local_bh_disable_ip: ref;
axiom (__local_bh_disable_ip == $sub.ref(0, 431505));
procedure  __local_bh_disable_ip($i0: i64, $i1: i32);
const del_timer_sync: ref;
axiom (del_timer_sync == $sub.ref(0, 432537));
procedure  del_timer_sync($p0: ref)
  returns ($r: i32);
const ldv_del_timer_sync: ref;
axiom (ldv_del_timer_sync == $sub.ref(0, 433569));
procedure  ldv_del_timer_sync($i0: i32, $p1: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15597, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_instance_deregister_6_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15599, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_instance_deregister_6_1: ref;
axiom (ldv_dispatch_instance_deregister_6_1 == $sub.ref(0, 434601));
procedure  ldv_dispatch_instance_deregister_6_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15632, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const cancel_work_sync: ref;
axiom (cancel_work_sync == $sub.ref(0, 435633));
procedure  cancel_work_sync($p0: ref)
  returns ($r: i1);
const ldv_unregister_netdev_96: ref;
axiom (ldv_unregister_netdev_96 == $sub.ref(0, 436665));
procedure  ldv_unregister_netdev_96($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17425, 3} true;
  assume {:verifier.code 0} true;
  call unregister_netdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17426, 3} true;
  assume {:verifier.code 0} true;
  call ldv_unregister_netdev($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17428, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const iounmap: ref;
axiom (iounmap == $sub.ref(0, 437697));
procedure  iounmap($p0: ref);
const mtrr_del: ref;
axiom (mtrr_del == $sub.ref(0, 438729));
procedure  mtrr_del($i0: i32, $i1: i64, $i2: i64)
  returns ($r: i32);
const myri10ge_free_slices: ref;
axiom (myri10ge_free_slices == $sub.ref(0, 439761));
procedure  myri10ge_free_slices($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $i10: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14579, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14579, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14580, 28} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14580, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14580, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14580, 31} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14580, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14581, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14626, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32(0, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 7} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14615, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14588, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14588, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14588, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14588, 16} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p12, $mul.ref($i13, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14589, 27} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 216);
  $p16 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14589, 35} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14589, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14589, 41} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14589, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14591, 34} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14591, 34} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14591, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14591, 49} true;
  assume {:verifier.code 0} true;
  $i23 := $mul.i64($i22, 4);
  // WARNING: %28 = mul i64 %27, 4, !dbg !8179, !verifier.code !8146
  call {:cexpr "bytes"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14592, 28} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14592, 52} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 216);
  $p26 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14592, 60} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14592, 40} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14592, 71} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 216);
  $p30 := $add.ref($add.ref($add.ref($p12, $mul.ref($i13, 688)), 216), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14592, 79} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i64($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14592, 5} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p24, $i23, $p28, $i31, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14594, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 216);
  $p33 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14594, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p33, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14596, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14599, 27} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14599, 27} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14599, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14599, 36} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i64($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14599, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14602, 28} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14602, 52} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14602, 52} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14602, 40} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14602, 66} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14602, 66} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i64($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14602, 5} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p38, 64, $p41, $i43, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14603, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14603, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14605, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14609, 23} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14609, 3} true;
  assume {:verifier.code 0} true;
  call napi_hash_del($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14610, 24} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p12, $mul.ref($i13, 688)), 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14610, 3} true;
  assume {:verifier.code 0} true;
  call netif_napi_del($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14611, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i10, 1);
  // WARNING: %57 = add nsw i32 %.01, 1, !dbg !8212, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 16} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $slt.i32($i47, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $i47;
  assume {:branchcond $i49} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 7} true;
  assume {:verifier.code 0} true;
  assume ($i49 == 1);
  goto $bb8;
$bb17:
  assume !(($i49 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14614, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14620, 3} true;
  assume {:verifier.code 0} true;
  call synchronize_rcu();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14621, 30} true;
  assume {:verifier.code 0} true;
  $p50 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14621, 30} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14621, 9} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14621, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14622, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14622, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p53, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14624, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const dma_free_attrs: ref;
axiom (dma_free_attrs == $sub.ref(0, 440793));
procedure  dma_free_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i64, $p4: ref)
{
  var $p5: ref;
  var $i6: i64;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i1;
  var $i15: i1;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !14315, metadata !8144), !dbg !14316, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !14319, metadata !8144), !dbg !14320, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7329, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7331, 12} true;
  assume {:verifier.code 0} true;
  call $i6 := arch_local_save_flags();
  // WARNING: %7 = call i64 @arch_local_save_flags(), !dbg !8160, !verifier.code !8144
  call {:cexpr "_flags"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7332, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := arch_irqs_disabled_flags($i6);
  // WARNING: %8 = call i32 @arch_irqs_disabled_flags(i64 %7), !dbg !8163, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7333, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7333, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  // WARNING: %10 = zext i1 %9 to i32, !dbg !8166, !verifier.code !8144
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7334, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7334, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7334, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7334, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv__builtin_expect($i12, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !8171, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7336, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7336, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7338, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.121, 166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7341, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7345, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7345, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7345, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7345, 3} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7346, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_free_coherent($p0, $i1, $p2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7348, 28} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7348, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7348, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7348, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7348, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7352, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7352, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  call devirtbounce.11($p24, $p0, $i1, $p2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7354, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7357, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const set_fw_name: ref;
axiom (set_fw_name == $sub.ref(0, 441825));
procedure  set_fw_name($p0: ref, $p1: ref, $i2: i1)
{
  var $i3: i8;
  var $p4: ref;
  var $i5: i8;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i1;
  var $p11: ref;
  var $i12: i8;
$bb0:
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  // WARNING: %4 = zext i1 %2 to i8, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8929, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 484);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8929, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8929, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i8.i1($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8929, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8931, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8931, 32} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8931, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8933, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8936, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8936, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8937, 28} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i8.i1($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8937, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 484);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8937, 26} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8937, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8938, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free_netdev_97: ref;
axiom (ldv_free_netdev_97 == $sub.ref(0, 442857));
procedure  ldv_free_netdev_97($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17437, 3} true;
  assume {:verifier.code 0} true;
  call free_netdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17438, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17440, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_netdev: ref;
axiom (free_netdev == $sub.ref(0, 443889));
procedure  free_netdev($p0: ref);
const ldv_free_netdev: ref;
axiom (ldv_free_netdev == $sub.ref(0, 444921));
procedure  ldv_free_netdev($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16071, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16071, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16073, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const arch_local_save_flags: ref;
axiom (arch_local_save_flags == $sub.ref(0, 445953));
procedure  arch_local_save_flags()
  returns ($r: i64)
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !14418, metadata !8144), !dbg !14419, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !14420, metadata !8144), !dbg !14421, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !14422, metadata !8144), !dbg !14423, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !14424, metadata !8144), !dbg !14425, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6353, 64} true;
  assume {:verifier.code 0} true;
  $p0 := $load.ref($M.0, pv_irq_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6353, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6353, 69} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6353, 69} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6353, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6353, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8160, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6356, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6356, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  call devirtbounce.6(0, .str.122, 804, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6360, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  call $i7 := devirtbounce.12(0, 44, pv_irq_ops, 1);
  // WARNING: %11 = call i64 @devirtbounce.12(i64 (i64, i8**, i32)* asm sideeffect "771:\0A\09call *${2:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${1:c}\0A  .byte 772b-771b\0A  .short ${3:c}\0A.popsection\0A", "={ax},i,i,i,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}", i64 44, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 0, i32 0), i32 1)
  call {:cexpr "__eax"} boogie_si_record_i64($i7);
  // WARNING: call void @llvm.dbg.value(metadata i64 %11, i64 0, metadata !14426, metadata !8144), !dbg !14427, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6369, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const arch_irqs_disabled_flags: ref;
axiom (arch_irqs_disabled_flags == $sub.ref(0, 446985));
procedure  arch_irqs_disabled_flags($i0: i64)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6378, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $and.i64($i0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6378, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6378, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6378, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const debug_dma_free_coherent: ref;
axiom (debug_dma_free_coherent == $sub.ref(0, 448017));
procedure  debug_dma_free_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i64);
const napi_hash_del: ref;
axiom (napi_hash_del == $sub.ref(0, 449049));
procedure  napi_hash_del($p0: ref);
const netif_napi_del: ref;
axiom (netif_napi_del == $sub.ref(0, 450081));
procedure  netif_napi_del($p0: ref);
const synchronize_rcu: ref;
axiom (synchronize_rcu == $sub.ref(0, 451113));
procedure  synchronize_rcu()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  call synchronize_sched();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6713, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const synchronize_sched: ref;
axiom (synchronize_sched == $sub.ref(0, 452145));
procedure  synchronize_sched();
const unregister_netdev: ref;
axiom (unregister_netdev == $sub.ref(0, 453177));
procedure  unregister_netdev($p0: ref);
const ldv_unregister_netdev: ref;
axiom (ldv_unregister_netdev == $sub.ref(0, 454209));
procedure  ldv_unregister_netdev($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17106, 62} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17106, 62} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17106, 75} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17106, 75} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17106, 3} true;
  assume {:verifier.code 0} true;
  call ldv_unregister_netdev_stop_12_2($p5, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17108, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_deregister_12_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17110, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_unregister_netdev_stop_12_2: ref;
axiom (ldv_unregister_netdev_stop_12_2 == $sub.ref(0, 455241));
procedure  ldv_unregister_netdev_stop_12_2($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17120, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := myri10ge_close($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17122, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_deregister_12_1: ref;
axiom (ldv_dispatch_deregister_12_1 == $sub.ref(0, 456273));
procedure  ldv_dispatch_deregister_12_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15608, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_alloc_etherdev_mqs_93: ref;
axiom (ldv_alloc_etherdev_mqs_93 == $sub.ref(0, 457305));
procedure  ldv_alloc_etherdev_mqs_93($i0: i32, $i1: i32, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !14492, metadata !8144), !dbg !14493, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !14494, metadata !8144), !dbg !14495, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17383, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := alloc_etherdev_mqs($i0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17385, 13} true;
  assume {:verifier.code 0} true;
  call $p4 := ldv_alloc_etherdev_mqs($p3, $i0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17387, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const netif_msg_init: ref;
axiom (netif_msg_init == $sub.ref(0, 458337));
procedure  netif_msg_init($i0: i32, $i1: i32)
  returns ($r: i32)
{
  var $i2: i1;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !14513, metadata !8144), !dbg !14514, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7993, 34} true;
  assume {:verifier.code 0} true;
  $i2 := $ugt.i32($i0, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7993, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7994, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $i1;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8005, 1} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7998, 19} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7998, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7999, 5} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb3;
$bb6:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8003, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i32(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8003, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i5, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8003, 3} true;
  assume {:verifier.code 0} true;
  $i3 := $i6;
  goto $bb3;
}
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 459369));
procedure  __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref);
const pci_find_capability: ref;
axiom (pci_find_capability == $sub.ref(0, 460401));
procedure  pci_find_capability($p0: ref, $i1: i32)
  returns ($r: i32);
const pcie_set_readrq: ref;
axiom (pcie_set_readrq == $sub.ref(0, 461433));
procedure  pcie_set_readrq($p0: ref, $i1: i32)
  returns ($r: i32);
const myri10ge_mask_surprise_down: ref;
axiom (myri10ge_mask_surprise_down == $sub.ref(0, 462465));
procedure  myri10ge_mask_surprise_down($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14140, 19} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14140, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14140, 25} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14140, 25} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14141, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14141, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14141, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14142, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14160, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14147, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := pci_find_ext_capability($p5, 1);
  // WARNING: %12 = call i32 @pci_find_ext_capability(%struct.pci_dev* %6, i32 1), !dbg !8158, !verifier.code !8141
  call {:cexpr "cap"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14149, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14149, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14151, 65} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i32($i8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14151, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := pci_read_config_dword($p5, $i10, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14152, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14152, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i12, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14152, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p1, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14153, 66} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14153, 71} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14153, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := pci_write_config_dword($p5, $i14, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14155, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14158, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const pci_set_dma_mask: ref;
axiom (pci_set_dma_mask == $sub.ref(0, 463497));
procedure  pci_set_dma_mask($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !14571, metadata !8144), !dbg !14572, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8664, 29} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8664, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := dma_set_mask($p2, $i1);
  // WARNING: %4 = call i32 @dma_set_mask(%struct.device* %3, i64 %1), !dbg !8152, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8666, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const pci_set_consistent_dma_mask: ref;
axiom (pci_set_consistent_dma_mask == $sub.ref(0, 464529));
procedure  pci_set_consistent_dma_mask($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !14583, metadata !8144), !dbg !14584, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8675, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8675, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := dma_set_coherent_mask($p2, $i1);
  // WARNING: %4 = call i32 @dma_set_coherent_mask(%struct.device* %3, i64 %1), !dbg !8152, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8677, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const dma_alloc_attrs: ref;
axiom (dma_alloc_attrs == $sub.ref(0, 465561));
procedure  dma_alloc_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i32, $p4: ref)
  returns ($r: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !14595, metadata !8144), !dbg !14596, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !14599, metadata !8144), !dbg !14600, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7285, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7287, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i3, $sub.i32(0, 8));
  // WARNING: %7 = and i32 %3, -8, !dbg !8160, !verifier.code !8144
  call {:cexpr "gfp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7289, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7289, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7289, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7291, 3} true;
  assume {:verifier.code 0} true;
  $p9 := x86_dma_fallback_dev;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $p9 := $p0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7295, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := is_device_dma_capable($p9);
  // WARNING: %13 = call i32 @is_device_dma_capable(%struct.device* %.01), !dbg !8167, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7297, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7297, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7298, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7316, 1} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7302, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7302, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7302, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7302, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7305, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7310, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := dma_alloc_coherent_gfp_flags($p9, $i6);
  // WARNING: %25 = call i32 @dma_alloc_coherent_gfp_flags(%struct.device* %.01, i32 %7), !dbg !8183, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7311, 20} true;
  assume {:verifier.code 0} true;
  $p18 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7311, 20} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  call $p20 := devirtbounce.13($p19, $p9, $i1, $p2, $i17, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7312, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7312, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_alloc_coherent($p9, $i1, $i21, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7314, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $p20;
  goto $bb6;
}
const mtrr_add: ref;
axiom (mtrr_add == $sub.ref(0, 466593));
procedure  mtrr_add($i0: i64, $i1: i64, $i2: i32, $i3: i1)
  returns ($r: i32);
const ioremap_wc: ref;
axiom (ioremap_wc == $sub.ref(0, 467625));
procedure  ioremap_wc($i0: i64, $i1: i64)
  returns ($r: ref);
const readl: ref;
axiom (readl == $sub.ref(0, 468657));
procedure  readl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6773, 57} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  call $i2 := devirtbounce.1(0, $p1);
  // WARNING: %3 = call i32 @devirtbounce.1(i32 (i32*)* asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i32* %2)
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6774, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const memcpy_fromio: ref;
axiom (memcpy_fromio == $sub.ref(0, 469689));
procedure  memcpy_fromio($p0: ref, $p1: ref, $i2: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !14661, metadata !8144), !dbg !14662, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6813, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p0, $p1, $i2, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6815, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_read_mac_addr: ref;
axiom (myri10ge_read_mac_addr == $sub.ref(0, 470721));
procedure  myri10ge_read_mac_addr($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $i24: i64;
  var $i25: i8;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $i48: i1;
  var $p49: ref;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
  var $i57: i1;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i1;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $i65: i1;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i32;
  var $i66: i32;
  var $p71: ref;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $i75: i1;
  var $p76: ref;
  var $i77: i64;
  var $i78: i8;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: i64;
  var $i86: i64;
  var $i87: i1;
  var $p88: ref;
  var $i89: i64;
  var $i90: i8;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $i98: i64;
  var $i99: i1;
  var $p100: ref;
  var $i101: i64;
  var $i102: i8;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i64;
  var $i110: i64;
  var $i111: i1;
  var $p112: ref;
  var $i113: i64;
  var $i114: i8;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $i121: i64;
  var $i122: i64;
  var $i123: i1;
  var $p124: ref;
  var $i125: i64;
  var $i126: i8;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9066, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9066, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9066, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9067, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9067, 11} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9067, 43} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 28} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 34} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 39} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 39} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb39;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 58} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 42} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 64} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 62} true;
  assume {:verifier.code 0} true;
  $i65 := $ult.i64($i63, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb37, $bb38;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9071, 36} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9071, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := memcmp($p11, .str.54, 4);
  // WARNING: %14 = call i32 @memcmp(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i64 4), !dbg !8166, !verifier.code !8143
  call {:cexpr "tmp___0"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9073, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9073, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9074, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9074, 15} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9074, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9075, 28} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9075, 10} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9075, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p17, $p16);
  // WARNING: store i8* %19, i8** %20, align 8, !dbg !8178, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9091, 9} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9092, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 26} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 30} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p18, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 37} true;
  assume {:verifier.code 0} true;
  $i22 := $ugt.i64($i20, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb10, $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1);
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9080, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9145, 45} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9145, 45} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9145, 52} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p68, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9145, 3} true;
  assume {:verifier.code 0} true;
  call $i70 := dev_err.ref.ref($p69, .str.57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9147, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $sub.i32(0, 6);
  goto $bb40;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 42} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 11} true;
  assume {:verifier.code 0} true;
  call $i24 := simple_strtoul($p23, $p1, 16);
  // WARNING: %31 = call i64 @simple_strtoul(i8* %30, i8** %2, i32 16), !dbg !8193, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 24} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i64.i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 904);
  $p27 := $add.ref($p0, 904);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 11} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 15} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p29);
  // WARNING: store i8* %36, i8** %2, align 8, !dbg !8201, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9092, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 26} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 30} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 39} true;
  assume {:verifier.code 0} true;
  $i74 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 37} true;
  assume {:verifier.code 0} true;
  $i75 := $ugt.i64($i73, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb41, $bb42;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9097, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9101, 36} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9101, 13} true;
  assume {:verifier.code 0} true;
  call $i31 := memcmp($p30, .str.55, 3);
  // WARNING: %42 = call i32 @memcmp(i8* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i32 0, i32 0), i64 3), !dbg !8208, !verifier.code !8143
  call {:cexpr "tmp___1"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9103, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9103, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9104, 11} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9104, 15} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9104, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9105, 32} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9105, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9105, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p36, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9106, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9110, 36} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9110, 13} true;
  assume {:verifier.code 0} true;
  call $i38 := memcmp($p37, .str.56, 3);
  // WARNING: %52 = call i32 @memcmp(i8* %51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i64 3), !dbg !8224, !verifier.code !8143
  call {:cexpr "tmp___2"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9112, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9112, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9114, 11} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9114, 15} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p40, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9114, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9115, 57} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9115, 26} true;
  assume {:verifier.code 0} true;
  call $i43 := simple_strtoul($p42, $p1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9115, 10} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 912);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9115, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9117, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 23} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $p2i.ref.i64($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 29} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 27} true;
  assume {:verifier.code 0} true;
  $i48 := $ult.i64($i46, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i48 == 1));
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9124, 15} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9125, 11} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9125, 15} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9125, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9126, 30} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9126, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i8.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9126, 40} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9126, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb31, $bb32;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 23} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 27} true;
  assume {:verifier.code 0} true;
  $i51 := $ult.i64($i50, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb29, $bb30;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb27;
$bb30:
  assume !(($i51 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb31:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb32:
  assume !(($i57 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9129, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 29} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 28} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 34} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9123, 45} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 39} true;
  assume {:verifier.code 0} true;
  assume ($i61 == 1);
  goto $bb4;
$bb36:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 39} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb37:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9137, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb38:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9136, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9142, 3} true;
  assume {:verifier.code 0} true;
  $i66 := 0;
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9149, 1} true;
  assume {:verifier.code 0} true;
  $r := $i66;
  $exn := false;
  return;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume ($i75 == 1);
  goto $bb11;
$bb42:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 42} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 11} true;
  assume {:verifier.code 0} true;
  call $i77 := simple_strtoul($p76, $p1, 16);
  // WARNING: %109 = call i64 @simple_strtoul(i8* %108, i8** %2, i32 16), !dbg !8193, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 24} true;
  assume {:verifier.code 0} true;
  $i78 := $trunc.i64.i8($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 10} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 904);
  $p80 := $add.ref($add.ref($p0, 904), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p80, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 11} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 15} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p81, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p82);
  // WARNING: store i8* %114, i8** %2, align 8, !dbg !8201, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9092, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 26} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 30} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $p2i.ref.i64($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 39} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 37} true;
  assume {:verifier.code 0} true;
  $i87 := $ugt.i64($i85, $i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb45, $bb46;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume ($i87 == 1);
  goto $bb11;
$bb46:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 42} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 11} true;
  assume {:verifier.code 0} true;
  call $i89 := simple_strtoul($p88, $p1, 16);
  // WARNING: %124 = call i64 @simple_strtoul(i8* %123, i8** %2, i32 16), !dbg !8193, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 24} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i64.i8($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 10} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 904);
  $p92 := $add.ref($add.ref($p0, 904), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p92, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 11} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 15} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p93, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p94);
  // WARNING: store i8* %129, i8** %2, align 8, !dbg !8201, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9092, 7} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 26} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 30} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p95, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  $i97 := $p2i.ref.i64($p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 39} true;
  assume {:verifier.code 0} true;
  $i98 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 37} true;
  assume {:verifier.code 0} true;
  $i99 := $ugt.i64($i97, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb49, $bb50;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume ($i99 == 1);
  goto $bb11;
$bb50:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 42} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 11} true;
  assume {:verifier.code 0} true;
  call $i101 := simple_strtoul($p100, $p1, 16);
  // WARNING: %139 = call i64 @simple_strtoul(i8* %138, i8** %2, i32 16), !dbg !8193, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 24} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i64.i8($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 10} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0, 904);
  $p104 := $add.ref($add.ref($p0, 904), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p104, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 11} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 15} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p105, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p106);
  // WARNING: store i8* %144, i8** %2, align 8, !dbg !8201, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9092, 7} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 26} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 30} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  $i109 := $p2i.ref.i64($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 39} true;
  assume {:verifier.code 0} true;
  $i110 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 37} true;
  assume {:verifier.code 0} true;
  $i111 := $ugt.i64($i109, $i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb53, $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume ($i111 == 1);
  goto $bb11;
$bb54:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 42} true;
  assume {:verifier.code 0} true;
  $p112 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 11} true;
  assume {:verifier.code 0} true;
  call $i113 := simple_strtoul($p112, $p1, 16);
  // WARNING: %154 = call i64 @simple_strtoul(i8* %153, i8** %2, i32 16), !dbg !8193, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 24} true;
  assume {:verifier.code 0} true;
  $i114 := $trunc.i64.i8($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 10} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 904);
  $p116 := $add.ref($add.ref($p0, 904), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p116, $i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 11} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 15} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p117, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p118);
  // WARNING: store i8* %159, i8** %2, align 8, !dbg !8201, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9092, 7} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 26} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 30} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p119, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  $i121 := $p2i.ref.i64($p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 39} true;
  assume {:verifier.code 0} true;
  $i122 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 37} true;
  assume {:verifier.code 0} true;
  $i123 := $ugt.i64($i121, $i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb57, $bb58;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9079, 9} true;
  assume {:verifier.code 0} true;
  assume ($i123 == 1);
  goto $bb11;
$bb58:
  assume !(($i123 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 42} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9085, 11} true;
  assume {:verifier.code 0} true;
  call $i125 := simple_strtoul($p124, $p1, 16);
  // WARNING: %169 = call i64 @simple_strtoul(i8* %168, i8** %2, i32 16), !dbg !8193, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 24} true;
  assume {:verifier.code 0} true;
  $i126 := $trunc.i64.i8($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 10} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p0, 904);
  $p128 := $add.ref($add.ref($p0, 904), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9086, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p128, $i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 11} true;
  assume {:verifier.code 0} true;
  $p129 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 15} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p129, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9087, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p130);
  // WARNING: store i8* %174, i8** %2, align 8, !dbg !8201, !verifier.code !8143
  assume {:verifier.code 0} true;
  goto $bb16;
}
const myri10ge_select_firmware: ref;
axiom (myri10ge_select_firmware == $sub.ref(0, 471753));
procedure  myri10ge_select_firmware($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i16;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $i32: i16;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $i39: i1;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i1;
  var $i47: i32;
  var $i48: i32;
  var $i49: i16;
  var $i50: i32;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $i54: i64;
  var $i55: i64;
  var $i56: i1;
  var $p57: ref;
  var $i58: i32;
  var $i59: i1;
  var $p60: ref;
  var $i61: i32;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $i66: i1;
  var $p67: ref;
  var $i68: i32;
  var $i69: i64;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i1;
  var $p74: ref;
  var $i75: i32;
  var $i76: i64;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata i16* %2, metadata !14807, metadata !8144), !dbg !14808, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14030, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14030, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14030, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14032, 36} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14032, 36} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14032, 5} true;
  assume {:verifier.code 0} true;
  call $i6 := pcie_capability_read_word($p5, 18, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14033, 25} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14033, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14033, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $ashr.i32($i8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14033, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 63);
  // WARNING: %12 = and i32 %11, 63, !dbg !8163, !verifier.code !8143
  call {:cexpr "link_width"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14035, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $sle.i32($i10, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14035, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14048, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $M.16;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14048, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14048, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb7, $bb8;
$bb3:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14037, 51} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14037, 51} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14037, 58} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14037, 7} true;
  assume {:verifier.code 0} true;
  call $i15 := _dev_info.ref.ref.i32($p14, .str.58, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14039, 12} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14039, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14040, 24} true;
  assume {:verifier.code 0} true;
  $p17 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14040, 7} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14042, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14044, 7} true;
  assume {:verifier.code 0} true;
  call myri10ge_firmware_probe($p0);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14047, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14062, 61} true;
  assume {:verifier.code 0} true;
  $i32 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14062, 30} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i16.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14062, 66} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i33, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14062, 73} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14062, 73} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i1.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14062, 29} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14062, 9} true;
  assume {:verifier.code 0} true;
  call $i38 := ldv__builtin_expect($i37, 0);
  // WARNING: %48 = call i64 @ldv__builtin_expect(i64 %47, i64 0), !dbg !8212, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14064, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i64($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14064, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb10, $bb11;
$bb7:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14050, 49} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14050, 49} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14050, 56} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14050, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := _dev_info.ref.ref($p22, .str.59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14051, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14051, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14052, 22} true;
  assume {:verifier.code 0} true;
  $p25 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14052, 5} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14054, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14056, 49} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14056, 49} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14056, 56} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14056, 5} true;
  assume {:verifier.code 0} true;
  call $i29 := _dev_info.ref.ref($p28, .str.60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14057, 10} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14057, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14058, 22} true;
  assume {:verifier.code 0} true;
  $p31 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14058, 5} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p31, 0);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb10:
  assume ($i39 == 1);
  call devirtbounce.6(0, .str.7, 3414, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14068, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb11:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14074, 3} true;
  assume {:verifier.code 0} true;
  call __kernel_param_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14076, 23} true;
  assume {:verifier.code 0} true;
  $p40 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14076, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14076, 40} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i64($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14076, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14078, 39} true;
  assume {:verifier.code 0} true;
  $p43 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14078, 15} true;
  assume {:verifier.code 0} true;
  call $p44 := kstrdup($p43, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14081, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14081, 33} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i64($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14081, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  $i48 := 0;
  goto $bb18;
$bb15:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14084, 7} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p44, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14086, 5} true;
  assume {:verifier.code 0} true;
  $i47 := 1;
  goto $bb17;
$bb16:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  $i47 := 0;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14089, 3} true;
  assume {:verifier.code 0} true;
  $i48 := $i47;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14093, 65} true;
  assume {:verifier.code 0} true;
  $i49 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14093, 34} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i16.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14093, 70} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i50, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14093, 77} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14093, 77} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i1.i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14093, 33} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14093, 13} true;
  assume {:verifier.code 0} true;
  call $i55 := ldv__builtin_expect($i54, 0);
  // WARNING: %72 = call i64 @ldv__builtin_expect(i64 %71, i64 0), !dbg !8251, !verifier.code !8143
  call {:cexpr "tmp___1"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14095, 15} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i64($i55, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14095, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i56 == 1);
  call devirtbounce.6(0, .str.7, 3422, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14099, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb20:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14105, 3} true;
  assume {:verifier.code 0} true;
  call __kernel_param_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 12} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 956);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 12} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 25} true;
  assume {:verifier.code 0} true;
  $i59 := $ule.i32($i58, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 73} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 956);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 73} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 50} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i32.i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 50} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref(myri10ge_fw_names, $mul.ref($i62, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 50} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.21, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 34} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 87} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i64($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb25, $bb26;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i59 == 1));
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  $i80 := $i48;
  goto $bb30;
$bb25:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14109, 61} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 956);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14109, 61} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14109, 38} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i32.i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14109, 38} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref(myri10ge_fw_names, $mul.ref($i69, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14109, 38} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.21, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14109, 15} true;
  assume {:verifier.code 0} true;
  call $i72 := strlen($p71);
  // WARNING: %94 = call i64 @strlen(i8* %93), !dbg !8276, !verifier.code !8143
  call {:cexpr "tmp___2"} boogie_si_record_i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14111, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i64($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14111, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb27, $bb28;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14107, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb24;
$bb27:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14113, 47} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 956);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14113, 47} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14113, 24} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i32.i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14113, 24} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref(myri10ge_fw_names, $mul.ref($i76, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14113, 24} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.21, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14113, 7} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p78, 0);
  // WARNING: call void @set_fw_name(%struct.myri10ge_priv* %0, i8* %101, i1 zeroext false), !dbg !8286, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14116, 5} true;
  assume {:verifier.code 0} true;
  $i79 := 1;
  goto $bb29;
$bb28:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  $i79 := $i48;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14119, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $i79;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14122, 18} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14122, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14124, 49} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14124, 49} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14124, 56} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14125, 20} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14125, 20} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14124, 5} true;
  assume {:verifier.code 0} true;
  call $i87 := _dev_info.ref.ref.ref($p84, .str.61, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14127, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14130, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_load_firmware: ref;
axiom (myri10ge_load_firmware == $sub.ref(0, 472785));
procedure  myri10ge_load_firmware($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i32;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $i49: i32;
  var $i50: i32;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i32;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $i78: i1;
  var $i79: i1;
  var $i71: i32;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i32;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i32;
  var $i89: i32;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(64, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !14961, metadata !8144), !dbg !14962, !verifier.code !8146
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9463, 8} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i32($M.22, $p3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9464, 12} true;
  assume {:verifier.code 0} true;
  call $i4 := myri10ge_load_hotplug_firmware($p0, $p3);
  // WARNING: %5 = call i32 @myri10ge_load_hotplug_firmware(%struct.myri10ge_priv* %0, i32* %4), !dbg !8157, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9466, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9466, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9467, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9467, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9468, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i4;
  goto $bb5;
$bb4:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9562, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9473, 48} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9473, 48} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9473, 55} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9473, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := dev_warn.ref.ref($p10, .str.79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9475, 16} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i4, $sub.i32(0, 5));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9475, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9476, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i4;
  goto $bb5;
$bb8:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9481, 14} true;
  assume {:verifier.code 0} true;
  call $i13 := myri10ge_adopt_running_firmware($p0);
  // WARNING: %20 = call i32 @myri10ge_adopt_running_firmware(%struct.myri10ge_priv* %0), !dbg !8178, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9483, 16} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9483, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9485, 49} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9485, 49} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9485, 56} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9485, 7} true;
  assume {:verifier.code 0} true;
  call $i18 := dev_err.ref.ref($p17, .str.80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9487, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i13;
  goto $bb5;
$bb11:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9492, 49} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9492, 49} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9492, 56} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9492, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := _dev_info.ref.ref($p21, .str.81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9494, 14} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9494, 14} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9494, 26} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9494, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9496, 50} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9496, 50} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9496, 57} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9496, 7} true;
  assume {:verifier.code 0} true;
  call $i29 := dev_warn.ref.ref($p28, .str.82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9497, 50} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9497, 50} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9497, 57} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9497, 7} true;
  assume {:verifier.code 0} true;
  call $i33 := dev_warn.ref.ref($p32, .str.83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9498, 50} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9498, 50} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9498, 57} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9498, 7} true;
  assume {:verifier.code 0} true;
  call $i37 := dev_warn.ref.ref($p36, .str.84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9500, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9504, 5} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, .str.85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9505, 10} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9505, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9506, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_dummy_rdma($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9507, 14} true;
  assume {:verifier.code 0} true;
  call $i39 := myri10ge_get_firmware_capabilities($p0);
  // WARNING: %52 = call i32 @myri10ge_get_firmware_capabilities(%struct.myri10ge_priv* %0), !dbg !8214, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9509, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i39;
  goto $bb5;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9514, 9} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9514, 9} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9514, 15} true;
  assume {:verifier.code 0} true;
  $p42 := $p41;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9514, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, 0);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9516, 33} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9516, 33} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9516, 13} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i64.i32($i44);
  // WARNING: %60 = trunc i64 %59 to i32, !dbg !8221, !verifier.code !8143
  call {:cexpr "dma_low"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9517, 35} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9517, 35} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i64($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9517, 43} true;
  assume {:verifier.code 0} true;
  $i48 := $lshr.i64($i47, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9517, 14} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i64.i32($i48);
  // WARNING: %64 = trunc i64 %63 to i32, !dbg !8226, !verifier.code !8143
  call {:cexpr "dma_high"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9518, 9} true;
  assume {:verifier.code 0} true;
  call $i50 := __fswab32($i49);
  // WARNING: %65 = call i32 @__fswab32(i32 %64), !dbg !8229, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9519, 3} true;
  assume {:verifier.code 0} true;
  $p51 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9519, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p51, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9520, 13} true;
  assume {:verifier.code 0} true;
  call $i52 := __fswab32($i45);
  // WARNING: %67 = call i32 @__fswab32(i32 %60), !dbg !8234, !verifier.code !8143
  call {:cexpr "tmp___0"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9521, 3} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9521, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9522, 3} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9522, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p54, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9523, 3} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9523, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, 134221824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9524, 23} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.22, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9524, 28} true;
  assume {:verifier.code 0} true;
  $i57 := $sub.i32($i56, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9524, 13} true;
  assume {:verifier.code 0} true;
  call $i58 := __fswab32($i57);
  // WARNING: %73 = call i32 @__fswab32(i32 %72), !dbg !8245, !verifier.code !8143
  call {:cexpr "tmp___1"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9525, 3} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9525, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9526, 3} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9526, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, 134217728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9527, 3} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9527, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9528, 25} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9528, 25} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9528, 30} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p63, 16515072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9529, 36} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9529, 3} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p64, $p65, 8);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9531, 3} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  call devirtbounce(0);
  // WARNING: call void @devirtbounce(void ()* asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}")
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 13} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 13} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 19} true;
  assume {:verifier.code 0} true;
  $p68 := $p67;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 24} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i32($i69, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 39} true;
  assume {:verifier.code 0} true;
  $i71 := 0;
  goto $bb20;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 39} true;
  assume {:verifier.code 0} true;
  assume !(($i70 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9543, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9538, 28} true;
  assume {:verifier.code 0} true;
  $i72 := $shl.i32(1, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9538, 3} true;
  assume {:verifier.code 0} true;
  call msleep($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9539, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i71, 1);
  // WARNING: %88 = add nsw i32 %.012, 1, !dbg !8271, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 13} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 19} true;
  assume {:verifier.code 0} true;
  $p75 := $p74;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 19} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 24} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 44} true;
  assume {:verifier.code 0} true;
  $i78 := $sle.i32($i73, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 39} true;
  assume {:verifier.code 0} true;
  $i79 := $and.i1($i77, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 39} true;
  assume {:verifier.code 0} true;
  $i71 := $i73;
  assume {:branchcond $i79} true;
  goto $bb22, $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 39} true;
  assume {:verifier.code 0} true;
  assume ($i79 == 1);
  goto $bb20;
$bb23:
  assume !(($i79 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9542, 39} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9548, 13} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9548, 13} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9548, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $p81;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9548, 19} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9548, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $ne.i32($i83, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9548, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9550, 47} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9550, 47} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9550, 54} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p86, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9550, 5} true;
  assume {:verifier.code 0} true;
  call $i88 := dev_err.ref.ref($p87, .str.86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9552, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 6);
  goto $bb5;
$bb26:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9557, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_dummy_rdma($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9558, 12} true;
  assume {:verifier.code 0} true;
  call $i89 := myri10ge_get_firmware_capabilities($p0);
  // WARNING: %109 = call i32 @myri10ge_get_firmware_capabilities(%struct.myri10ge_priv* %0), !dbg !8289, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9560, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i89;
  goto $bb5;
}
const myri10ge_probe_slices: ref;
axiom (myri10ge_probe_slices == $sub.ref(0, 473817));
procedure  myri10ge_probe_slices($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i1;
  var $i20: i8;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i64;
  var $i56: i32;
  var $i57: i32;
  var $p58: ref;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $i68: i32;
  var $p69: ref;
  var $i70: i32;
  var $i71: i1;
  var $i72: i32;
  var $i73: i1;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $i77: i1;
  var $i78: i32;
  var $p79: ref;
  var $p80: ref;
  var $i81: i32;
  var $i82: i64;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i64;
  var $i89: i1;
  var $p90: ref;
  var $i91: i32;
  var $i92: i1;
  var $i94: i16;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $p98: ref;
  var $p99: ref;
  var $i100: i32;
  var $i101: i32;
  var $i102: i1;
  var $i93: i32;
  var $p103: ref;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $i107: i32;
  var $i108: i32;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
  var $i112: i64;
  var $i113: i1;
  var $i114: i8;
  var $i115: i1;
  var $i116: i32;
  var $i117: i1;
  var $p118: ref;
  var $i119: i32;
  var $i120: i1;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i32;
  var $i125: i32;
  var $i126: i1;
  var $i127: i1;
  var $i128: i1;
  var $p129: ref;
  var $i130: i32;
  var $i131: i1;
  var $p132: ref;
  var $p133: ref;
  var $i134: i64;
  var $i135: i1;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $i141: i1;
  var $i142: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14710, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14710, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14711, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14711, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14712, 11} true;
  assume {:verifier.code 0} true;
  call $i5 := netif_get_num_default_rss_queues();
  // WARNING: %6 = call i32 @netif_get_num_default_rss_queues(), !dbg !8161, !verifier.code !8143
  call {:cexpr "ncpus"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 8} true;
  assume {:verifier.code 0} true;
  $i6 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 28} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 33} true;
  assume {:verifier.code 0} true;
  assume ($i7 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14715, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb3:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 57} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 57} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 36} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 66} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 73} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 73} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 77} true;
  assume {:verifier.code 0} true;
  $i12 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 97} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 103} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 112} true;
  assume {:verifier.code 0} true;
  $i14 := $sle.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb9, $bb10;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 103} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 7} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb2;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14714, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb8;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14897, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14719, 17} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14719, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14720, 24} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 484);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14720, 24} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14720, 24} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i8.i1($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14720, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i8($i19);
  // WARNING: %27 = zext i1 %26 to i8, !dbg !8186, !verifier.code !8143
  call {:cexpr "old_allocated"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14721, 8} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 484);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14721, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14722, 23} true;
  assume {:verifier.code 0} true;
  $p22 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14722, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14722, 40} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14722, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14724, 49} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14724, 49} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14724, 56} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14725, 15} true;
  assume {:verifier.code 0} true;
  $p28 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14724, 5} true;
  assume {:verifier.code 0} true;
  call $i29 := _dev_info.ref.ref.ref($p27, .str.97, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14726, 22} true;
  assume {:verifier.code 0} true;
  $p30 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14726, 5} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14728, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14729, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14729, 49} true;
  assume {:verifier.code 0} true;
  $p32 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14729, 33} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14729, 30} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i31, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14729, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14739, 12} true;
  assume {:verifier.code 0} true;
  call $i37 := myri10ge_load_firmware($p0, 0);
  // WARNING: %50 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %0, i32 0), !dbg !8220, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14741, 14} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14741, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb19, $bb20;
$bb16:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14731, 22} true;
  assume {:verifier.code 0} true;
  $p35 := $M.24;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14731, 5} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14733, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14735, 22} true;
  assume {:verifier.code 0} true;
  $p36 := $M.25;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14735, 5} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p36, 0);
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb19:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14743, 49} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p3, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14743, 5} true;
  assume {:verifier.code 0} true;
  call $i40 := _dev_info.ref.ref($p39, .str.98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14745, 15} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i8.i1($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14745, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb21, $bb22;
$bb20:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb21:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14747, 7} true;
  assume {:verifier.code 0} true;
  call kfree($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14749, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14752, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14757, 3} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14757, 3} true;
  assume {:verifier.code 0} true;
  call $M.7 := $memset.i8($M.7, $p42, 0, 12, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14758, 12} true;
  assume {:verifier.code 0} true;
  call $i43 := myri10ge_send_cmd($p0, 1, $p1, 0);
  // WARNING: %62 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 1, %struct.myri10ge_cmd* %2, i32 0), !dbg !8241, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14760, 14} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14760, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14762, 47} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14762, 47} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14762, 54} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p46, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14762, 5} true;
  assume {:verifier.code 0} true;
  call $i48 := dev_err.ref.ref($p47, .str.43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14764, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14891, 8} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14891, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p140, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14892, 34} true;
  assume {:verifier.code 0} true;
  $i141 := $trunc.i8.i1($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14892, 3} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p16, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14893, 3} true;
  assume {:verifier.code 0} true;
  call $i142 := myri10ge_load_firmware($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14895, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14769, 36} true;
  assume {:verifier.code 0} true;
  $p49 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14769, 36} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.7, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14769, 42} true;
  assume {:verifier.code 0} true;
  $i51 := $udiv.i32($i50, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14769, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14769, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14770, 43} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14770, 43} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14770, 22} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14770, 15} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i64.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14770, 59} true;
  assume {:verifier.code 0} true;
  $i57 := $mul.i32($i56, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14770, 7} true;
  assume {:verifier.code 0} true;
  $p58 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14770, 13} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i32($M.7, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14771, 12} true;
  assume {:verifier.code 0} true;
  call $i59 := myri10ge_send_cmd($p0, 13, $p1, 0);
  // WARNING: %81 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 13, %struct.myri10ge_cmd* %2, i32 0), !dbg !8262, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14773, 14} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14773, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14775, 47} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14775, 47} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14775, 54} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14775, 5} true;
  assume {:verifier.code 0} true;
  call $i64 := dev_err.ref.ref($p63, .str.99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14777, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb30:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14782, 12} true;
  assume {:verifier.code 0} true;
  call $i65 := myri10ge_send_cmd($p0, 35, $p1, 0);
  // WARNING: %90 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 35, %struct.myri10ge_cmd* %2, i32 0), !dbg !8272, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14784, 14} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14784, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14785, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb33:
  assume !(($i66 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14787, 33} true;
  assume {:verifier.code 0} true;
  $p67 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14787, 33} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.7, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14787, 10} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14787, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i68);
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14789, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14789, 20} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14789, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14790, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb36:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14794, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14794, 27} true;
  assume {:verifier.code 0} true;
  $i73 := $eq.i32($i72, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14794, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14795, 25} true;
  assume {:verifier.code 0} true;
  $M.23 := $i5;
  call {:cexpr "myri10ge_max_slices"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14796, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14799, 12} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14799, 12} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14799, 25} true;
  assume {:verifier.code 0} true;
  $i76 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14799, 23} true;
  assume {:verifier.code 0} true;
  $i77 := $sgt.i32($i75, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14799, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14800, 23} true;
  assume {:verifier.code 0} true;
  $i78 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14800, 10} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14800, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14801, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14805, 31} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14805, 31} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14805, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i32.i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14805, 9} true;
  assume {:verifier.code 0} true;
  call $p83 := kcalloc($i82, 8, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14806, 23} true;
  assume {:verifier.code 0} true;
  $p84 := $bitcast.ref.ref($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14806, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14806, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p85, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14808, 28} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14808, 28} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14808, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14808, 41} true;
  assume {:verifier.code 0} true;
  $i89 := $eq.i64($i88, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14808, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14809, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14881, 28} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14881, 28} true;
  assume {:verifier.code 0} true;
  $p133 := $load.ref($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14881, 7} true;
  assume {:verifier.code 0} true;
  $i134 := $p2i.ref.i64($p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14881, 41} true;
  assume {:verifier.code 0} true;
  $i135 := $ne.i64($i134, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14881, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb84, $bb85;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 16} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 16} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i32($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 9} true;
  assume {:verifier.code 0} true;
  $i92 := $slt.i32(0, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 7} true;
  assume {:verifier.code 0} true;
  $i93 := 0;
  goto $bb51;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i92 == 1));
  goto $bb50;
$bb50:
  assume {:verifier.code 0} true;
  goto $bb55;
$bb51:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14820, 5} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14816, 52} true;
  assume {:verifier.code 0} true;
  $i94 := $trunc.i32.i16($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14816, 9} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14816, 9} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14816, 24} true;
  assume {:verifier.code 0} true;
  $i97 := $sext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14816, 22} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p96, $mul.ref($i97, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14816, 44} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p96, $mul.ref($i97, 8)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14816, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p99, $i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14817, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i32($i93, 1);
  // WARNING: %140 = add nsw i32 %.012, 1, !dbg !8334, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 16} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $slt.i32($i100, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 7} true;
  assume {:verifier.code 0} true;
  $i93 := $i100;
  assume {:branchcond $i102} true;
  goto $bb53, $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 7} true;
  assume {:verifier.code 0} true;
  assume ($i102 == 1);
  goto $bb51;
$bb54:
  assume !(($i102 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14819, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 12} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 12} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 23} true;
  assume {:verifier.code 0} true;
  $i105 := $sgt.i32($i104, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 7} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i105 == 1));
  goto $bb58;
$bb58:
  assume {:verifier.code 0} true;
  goto $bb83;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14875, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14827, 3} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14832, 48} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14832, 48} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14832, 27} true;
  assume {:verifier.code 0} true;
  $i112 := $sext.i32.i64($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14832, 13} true;
  assume {:verifier.code 0} true;
  call $i113 := is_power_of_2($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14832, 11} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.i1.i8($i113);
  // WARNING: %160 = zext i1 %159 to i8, !dbg !8351, !verifier.code !8143
  call {:cexpr "tmp___0"} boogie_si_record_i8($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14834, 7} true;
  assume {:verifier.code 0} true;
  $i115 := $trunc.i8.i1($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14834, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb63, $bb64;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14829, 26} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14829, 26} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14829, 37} true;
  assume {:verifier.code 0} true;
  $i108 := $sub.i32($i107, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14829, 8} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14829, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p109, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14829, 3} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb63:
  assume ($i115 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14836, 3} true;
  assume {:verifier.code 0} true;
  $i116 := 0;
  goto $bb65;
$bb64:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  $i116 := 1;
  goto $bb65;
$bb65:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14839, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $ne.i32($i116, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14839, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i117 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14840, 5} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb67:
  assume !(($i117 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14845, 12} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14845, 12} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14845, 23} true;
  assume {:verifier.code 0} true;
  $i120 := $eq.i32($i119, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14845, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i120 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14846, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb70:
  assume !(($i120 == 1));
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14851, 39} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14851, 39} true;
  assume {:verifier.code 0} true;
  $p122 := $load.ref($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14851, 58} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14851, 58} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14851, 12} true;
  assume {:verifier.code 0} true;
  call $i125 := pci_enable_msix($p3, $p122, $i124);
  // WARNING: %179 = call i32 @pci_enable_msix(%struct.pci_dev* %4, %struct.msix_entry* %176, i32 %178), !dbg !8375, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14853, 14} true;
  assume {:verifier.code 0} true;
  $i126 := $eq.i32($i125, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14853, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i126 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14855, 5} true;
  assume {:verifier.code 0} true;
  call pci_disable_msix($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14857, 15} true;
  assume {:verifier.code 0} true;
  $i127 := $trunc.i8.i1($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14857, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb74, $bb75;
$bb73:
  assume !(($i126 == 1));
  assume {:verifier.code 0} true;
  goto $bb77;
$bb74:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14859, 7} true;
  assume {:verifier.code 0} true;
  call kfree($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14861, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i127 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14864, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14868, 14} true;
  assume {:verifier.code 0} true;
  $i128 := $sgt.i32($i125, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14868, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i128} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i128 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14869, 10} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14869, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p129, $i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14870, 3} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume !(($i128 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14871, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 12} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i32($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 23} true;
  assume {:verifier.code 0} true;
  $i131 := $sgt.i32($i130, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb81, $bb82;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 7} true;
  assume {:verifier.code 0} true;
  assume ($i131 == 1);
  goto $bb59;
$bb82:
  assume !(($i131 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14874, 25} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb84:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14883, 32} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14883, 32} true;
  assume {:verifier.code 0} true;
  $p137 := $load.ref($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14883, 11} true;
  assume {:verifier.code 0} true;
  $p138 := $bitcast.ref.ref($p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14883, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14884, 10} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14884, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p139, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14886, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i135 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14881, 83} true;
  assume {:verifier.code 0} true;
  goto $bb27;
}
const myri10ge_alloc_slices: ref;
axiom (myri10ge_alloc_slices == $sub.ref(0, 474849));
procedure  myri10ge_alloc_slices($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i1;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i1;
  var $i18: i32;
  var $i14: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14639, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14639, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14640, 32} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14640, 32} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14640, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14640, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $mul.i64($i5, 832);
  // WARNING: %7 = mul i64 %6, 832, !dbg !8154, !verifier.code !8146
  call {:cexpr "bytes"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14641, 9} true;
  assume {:verifier.code 0} true;
  call $p7 := kzalloc($i6, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14642, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14642, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14642, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14644, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14644, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14644, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14644, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14644, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14645, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14694, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 16} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 16} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $slt.i32(0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 7} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14682, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14653, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14653, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14653, 18} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14653, 16} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p20, $mul.ref($i21, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14654, 32} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14654, 32} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14654, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14654, 47} true;
  assume {:verifier.code 0} true;
  $i26 := $mul.i64($i25, 4);
  // WARNING: %29 = mul i64 %28, 4, !dbg !8184, !verifier.code !8146
  call {:cexpr "bytes"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14655, 41} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14655, 59} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 216);
  $p29 := $add.ref($add.ref($add.ref($p20, $mul.ref($i21, 688)), 216), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14655, 13} true;
  assume {:verifier.code 0} true;
  call $p30 := dma_zalloc_coherent($p27, $i26, $p29, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14656, 23} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14656, 7} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 216);
  $p33 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14656, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p33, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14658, 27} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 216);
  $p35 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14658, 35} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14658, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14658, 41} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i64($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14658, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14659, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14690, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_free_slices($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14692, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 12);
  goto $bb3;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14665, 37} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14665, 55} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14665, 13} true;
  assume {:verifier.code 0} true;
  call $p41 := dma_alloc_attrs($p39, 64, $p40, 208, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14666, 18} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14666, 7} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14666, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p43, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14668, 27} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14668, 27} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14668, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $p2i.ref.i64($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14668, 36} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i64($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14668, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14669, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb15:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14674, 7} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14674, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p48, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14675, 18} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14675, 18} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14675, 7} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14675, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14676, 22} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14676, 22} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14676, 33} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14676, 56} true;
  assume {:verifier.code 0} true;
  $i55 := $M.26;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14676, 3} true;
  assume {:verifier.code 0} true;
  call netif_napi_add($p53, $p54, myri10ge_poll, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14677, 23} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p20, $mul.ref($i21, 688)), 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14677, 3} true;
  assume {:verifier.code 0} true;
  call napi_hash_add($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14678, 9} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i18, 1);
  // WARNING: %66 = add nsw i32 %.012, 1, !dbg !8229, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 16} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $slt.i32($i57, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $i57;
  assume {:branchcond $i59} true;
  goto $bb17, $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 7} true;
  assume {:verifier.code 0} true;
  assume ($i59 == 1);
  goto $bb8;
$bb18:
  assume !(($i59 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14681, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14687, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
}
const netif_set_real_num_rx_queues: ref;
axiom (netif_set_real_num_rx_queues == $sub.ref(0, 475881));
procedure  netif_set_real_num_rx_queues($p0: ref, $i1: i32)
  returns ($r: i32);
const pci_set_drvdata: ref;
axiom (pci_set_drvdata == $sub.ref(0, 476913));
procedure  pci_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8697, 34} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8697, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_dev_set_drvdata_59($p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8699, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const init_timer_key: ref;
axiom (init_timer_key == $sub.ref(0, 477945));
procedure  init_timer_key($p0: ref, $i1: i32, $p2: ref, $p3: ref);
const myri10ge_watchdog_timer: ref;
axiom (myri10ge_watchdog_timer == $sub.ref(0, 478977));
procedure  myri10ge_watchdog_timer($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i1;
  var $i15: i32;
  var $i60: i32;
  var $i61: i1;
  var $i62: i32;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i16;
  var $i68: i32;
  var $i69: i32;
  var $i70: i1;
  var $p71: ref;
  var $i72: i32;
  var $i73: i1;
  var $p74: ref;
  var $i75: i1;
  var $p76: ref;
  var $i77: i64;
  var $i78: i32;
  var $i79: i32;
  var $i80: i64;
  var $i81: i64;
  var $i82: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: %4 = alloca i16, align 2, !verifier.code !8141
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14501, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14502, 26} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14502, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14502, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14502, 31} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14502, 42} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14502, 42} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14502, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := __fswab32($i10);
  // WARNING: %12 = call i32 @__fswab32(i32 %11), !dbg !8159, !verifier.code !8141
  call {:cexpr "tmp"} boogie_si_record_i32($i11);
  // WARNING: call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !15507, metadata !8144), !dbg !15508, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14504, 18} true;
  assume {:verifier.code 0} true;
  $M.27 := $store.i32($M.27, $p2, 0);
  // WARNING: store i32 0, i32* %3, align 4, !dbg !8164, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14506, 16} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.i32($M.28, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 16} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 16} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.i32(0, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 27} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 27} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 30} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.28, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 43} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb20, $bb21;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14510, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14510, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14510, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14510, 16} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p17, $mul.ref($i18, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14511, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 88);
  $p21 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 88), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14511, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14511, 36} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14513, 40} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14513, 55} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14513, 55} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14513, 67} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14513, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_alloc_rx_pages($p4, $p24, $i27, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 13} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 88);
  $p29 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 22} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 37} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 88);
  $p32 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 46} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32($i30, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 53} true;
  assume {:verifier.code 0} true;
  $i35 := $M.29;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 50} true;
  assume {:verifier.code 0} true;
  $i36 := $sge.i32($i34, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14515, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb8:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14516, 11} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 88);
  $p38 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 88), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14516, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14517, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14520, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14523, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 152);
  $p40 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 152), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14523, 18} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14523, 34} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14523, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14525, 40} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14525, 53} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14525, 53} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14525, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_alloc_rx_pages($p4, $p43, $i45, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 13} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 152);
  $p47 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 20} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 35} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 152);
  $p50 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 152), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 42} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 29} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32($i48, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 49} true;
  assume {:verifier.code 0} true;
  $i53 := $M.29;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 46} true;
  assume {:verifier.code 0} true;
  $i54 := $sge.i32($i52, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14527, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14528, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p17, $mul.ref($i18, 688)), 152);
  $p56 := $add.ref($add.ref($add.ref($p17, $mul.ref($i18, 688)), 152), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14528, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14529, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14532, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14536, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_check_slice($p19, $p1, $p2, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14537, 9} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i15, 1);
  // WARNING: %70 = add nsw i32 %.01, 1, !dbg !8228, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 16} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $slt.i32($i57, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 27} true;
  assume {:verifier.code 0} true;
  $i15 := $i57;
  assume {:branchcond $i59} true;
  goto $bb18, $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 27} true;
  assume {:verifier.code 0} true;
  assume ($i59 == 1);
  goto $bb4;
$bb19:
  assume !(($i59 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 27} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb20:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14541, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb21:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14540, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14546, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.27, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14546, 22} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14546, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14548, 57} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p4, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14548, 57} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14548, 5} true;
  assume {:verifier.code 0} true;
  call $i66 := pci_read_config_word($p65, 4, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14550, 16} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14550, 10} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i16.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14550, 20} true;
  assume {:verifier.code 0} true;
  $i69 := $and.i32($i68, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14550, 25} true;
  assume {:verifier.code 0} true;
  $i70 := $eq.i32($i69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14550, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb25:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14551, 20} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.i32($M.28, $p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14552, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14555, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14558, 8} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p4, 476);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14558, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p71, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14559, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.28, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14559, 20} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14559, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14561, 26} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14561, 5} true;
  assume {:verifier.code 0} true;
  call $i75 := schedule_work($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14563, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i73 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14565, 29} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p4, 344);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14565, 61} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14565, 88} true;
  assume {:verifier.code 0} true;
  $i78 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14565, 114} true;
  assume {:verifier.code 0} true;
  $i79 := $mul.i32($i78, 250);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14565, 71} true;
  assume {:verifier.code 0} true;
  $i80 := $sext.i32.i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14565, 69} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i77, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14565, 5} true;
  assume {:verifier.code 0} true;
  call $i82 := ldv_mod_timer_92($p76, $i81);
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14568, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __init_work: ref;
axiom (__init_work == $sub.ref(0, 480009));
procedure  __init_work($p0: ref, $i1: i32);
const lockdep_init_map: ref;
axiom (lockdep_init_map == $sub.ref(0, 481041));
procedure  lockdep_init_map($p0: ref, $p1: ref, $p2: ref, $i3: i32);
const myri10ge_watchdog: ref;
axiom (myri10ge_watchdog == $sub.ref(0, 482073));
procedure  myri10ge_watchdog($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i16;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i16;
  var $i48: i32;
  var $i49: i1;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $i59: i32;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $p69: ref;
  var $i70: i32;
  var $i71: i32;
  var $i72: i1;
  var $i63: i32;
  var $i73: i32;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $p83: ref;
  var $i84: i32;
  var $i85: i32;
  var $p86: ref;
  var $i87: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i64;
  var $i91: i64;
  var $i92: i64;
  var $i93: i1;
  var $p94: ref;
  var $p95: ref;
  var $i96: i32;
  var $p97: ref;
  var $p98: ref;
  var $i99: i32;
  var $i40: i32;
  var $i100: i1;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $p107: ref;
  var $i108: i32;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14368, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14368, 40} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, $mul.ref($sub.ref(0, 264), 968));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14369, 16} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.i32($M.28, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14370, 18} true;
  assume {:verifier.code 0} true;
  $M.27 := $store.i32($M.27, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14371, 31} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14371, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14371, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14371, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14371, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14372, 55} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14372, 55} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14372, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := pci_read_config_word($p13, 4, $p3);
  // WARNING: %15 = call i32 @pci_read_config_word(%struct.pci_dev* %14, i32 4, i16* %4), !dbg !8178, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14375, 14} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14375, 8} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i16.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14375, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14375, 23} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14375, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14377, 14} true;
  assume {:verifier.code 0} true;
  call $i19 := myri10ge_read_reboot($p7);
  // WARNING: %21 = call i32 @myri10ge_read_reboot(%struct.myri10ge_priv* %8), !dbg !8187, !verifier.code !8141
  call {:cexpr "reboot"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14378, 50} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14378, 50} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14379, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $M.30;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14379, 47} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14379, 24} true;
  assume {:verifier.code 0} true;
  havoc $p24;
  assume ((($i23 == 1) ==> ($p24 == .str)) && (($i23 != 1) ==> ($p24 == .str.113)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14378, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := netdev_err.ref.ref.i32.ref($p21, .str.112, $i19, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14381, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $M.30;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14381, 32} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14381, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14397, 24} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14397, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14397, 28} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14397, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb8, $bb9;
$bb3:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14382, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14487, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14387, 5} true;
  assume {:verifier.code 0} true;
  call rtnl_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14388, 10} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 960);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14388, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, 1);
  // WARNING: store i32 1, i32* %33, align 8, !dbg !8205, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14390, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14390, 25} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14390, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := myri10ge_close($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14391, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $M.30;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14391, 53} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32($i32, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14391, 28} true;
  assume {:verifier.code 0} true;
  $M.30 := $i33;
  call {:cexpr "myri10ge_reset_recover"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14392, 10} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 960);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14392, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14393, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14393, 28} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14393, 5} true;
  assume {:verifier.code 0} true;
  call pci_restore_state($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14394, 25} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14394, 25} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14394, 5} true;
  assume {:verifier.code 0} true;
  call $i39 := pci_save_state($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14396, 3} true;
  assume {:verifier.code 0} true;
  $i40 := 1;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14462, 16} true;
  assume {:verifier.code 0} true;
  $i100 := $eq.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14462, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb31, $bb32;
$bb8:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14399, 59} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14399, 59} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14399, 7} true;
  assume {:verifier.code 0} true;
  call $i46 := pci_read_config_word($p45, 0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14401, 26} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14401, 11} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i16.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14401, 33} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i32($i48, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14401, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14403, 54} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14403, 54} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14403, 9} true;
  assume {:verifier.code 0} true;
  call $i52 := netdev_err.ref.ref($p51, .str.114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14405, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb11:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14409, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14413, 28} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p6, $mul.ref($sub.ref(0, 264), 968));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14413, 28} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14413, 33} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14413, 33} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14413, 44} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14413, 44} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14413, 11} true;
  assume {:verifier.code 0} true;
  call $i59 := __fswab32($i58);
  // WARNING: %70 = call i32 @__fswab32(i32 %69), !dbg !8243, !verifier.code !8141
  call {:cexpr "tmp"} boogie_si_record_i32($i59);
  // WARNING: call void @llvm.dbg.value(metadata i32 %70, i64 0, metadata !15723, metadata !8144), !dbg !15724, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %70, i64 0, metadata !15725, metadata !8144), !dbg !15726, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 18} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 18} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 11} true;
  assume {:verifier.code 0} true;
  $i62 := $slt.i32(0, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 9} true;
  assume {:verifier.code 0} true;
  $i63 := 0;
  goto $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i62 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14431, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14419, 15} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p6, $mul.ref($sub.ref(0, 264), 968));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14419, 15} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14420, 13} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p65, 524);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14420, 13} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14420, 19} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.i32($i67, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14420, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14422, 7} true;
  assume {:verifier.code 0} true;
  call myri10ge_check_slice($p65, $p1, $p2, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14423, 11} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p65, 524);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14423, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14425, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14428, 11} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i32($i63, 1);
  // WARNING: %84 = add nsw i32 %.02, 1, !dbg !8267, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 18} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 11} true;
  assume {:verifier.code 0} true;
  $i72 := $slt.i32($i70, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $i70;
  assume {:branchcond $i72} true;
  goto $bb22, $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 9} true;
  assume {:verifier.code 0} true;
  assume ($i72 == 1);
  goto $bb17;
$bb23:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14430, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14436, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i32($M.28, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14436, 22} true;
  assume {:verifier.code 0} true;
  $i74 := $eq.i32($i73, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14436, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14438, 18} true;
  assume {:verifier.code 0} true;
  $p75 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14438, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, .str.1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14439, 18} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14439, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p76, .str.115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14440, 18} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14440, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, .str.7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14441, 18} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14441, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, .str.116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14442, 18} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14442, 25} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14442, 25} true;
  assume {:verifier.code 0} true;
  $i81 := $and.i32($i80, $sub.i32(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14442, 25} true;
  assume {:verifier.code 0} true;
  $i82 := $or.i32($i81, 3656);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14442, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, $i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14443, 18} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14443, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i32($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14443, 24} true;
  assume {:verifier.code 0} true;
  $i85 := $and.i32($i84, $sub.i32(0, 66846721));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14443, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p83, $i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14444, 55} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14444, 55} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14444, 55} true;
  assume {:verifier.code 0} true;
  $i88 := $lshr.i32($i87, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14444, 55} true;
  assume {:verifier.code 0} true;
  $i89 := $and.i32($i88, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14444, 37} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i32.i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14444, 61} true;
  assume {:verifier.code 0} true;
  $i91 := $and.i64($i90, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14444, 17} true;
  assume {:verifier.code 0} true;
  call $i92 := ldv__builtin_expect($i91, 0);
  // WARNING: %110 = call i64 @ldv__builtin_expect(i64 %109, i64 0), !dbg !8291, !verifier.code !8141
  call {:cexpr "tmp___0"} boogie_si_record_i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14446, 19} true;
  assume {:verifier.code 0} true;
  $i93 := $ne.i64($i92, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14446, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb27, $bb28;
$bb26:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb27:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14448, 78} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14448, 78} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14448, 9} true;
  assume {:verifier.code 0} true;
  call $i96 := __dynamic_netdev_dbg.ref.ref.ref($p5, $p95, .str.116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14451, 7} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i93 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14454, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14459, 50} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14459, 50} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14459, 5} true;
  assume {:verifier.code 0} true;
  call $i99 := netdev_err.ref.ref($p98, .str.117);
  assume {:verifier.code 0} true;
  $i40 := 0;
  goto $bb7;
$bb31:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14464, 5} true;
  assume {:verifier.code 0} true;
  call rtnl_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14465, 25} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14465, 25} true;
  assume {:verifier.code 0} true;
  $p102 := $load.ref($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14465, 5} true;
  assume {:verifier.code 0} true;
  call $i103 := myri10ge_close($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14467, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14471, 12} true;
  assume {:verifier.code 0} true;
  call $i104 := myri10ge_load_firmware($p7, 1);
  // WARNING: %131 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %8, i32 1), !dbg !8315, !verifier.code !8141
  call {:cexpr "status"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14473, 14} true;
  assume {:verifier.code 0} true;
  $i105 := $ne.i32($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14473, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14475, 50} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14475, 50} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14475, 5} true;
  assume {:verifier.code 0} true;
  call $i108 := netdev_err.ref.ref($p107, .str.41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14477, 3} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i105 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14479, 24} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 264), 968)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14479, 24} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14479, 5} true;
  assume {:verifier.code 0} true;
  call $i111 := myri10ge_open($p110);
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14483, 3} true;
  assume {:verifier.code 0} true;
  call rtnl_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14485, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
}
const ldv_register_netdev_94: ref;
axiom (ldv_register_netdev_94 == $sub.ref(0, 483105));
procedure  ldv_register_netdev_94($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17399, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := register_netdev($p0);
  // WARNING: %2 = call i32 @register_netdev(%struct.net_device* %0), !dbg !8145, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !15820, metadata !8144), !dbg !15821, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17401, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_register_netdev($i1, $p0);
  // WARNING: %3 = call i32 @ldv_register_netdev(i32 %2, %struct.net_device* %0), !dbg !8153, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17403, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const _dev_info: ref;
axiom (_dev_info == $sub.ref(0, 484137));
procedure  _dev_info.ref.ref.ref($p0: ref, $p1: ref, p.2: ref)
  returns ($r: i32);
procedure  _dev_info.ref.ref.ref.ref($p0: ref, $p1: ref, p.2: ref, p.3: ref)
  returns ($r: i32);
procedure  _dev_info.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  _dev_info.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  _dev_info.ref.ref.ref.i32.i32.ref.ref($p0: ref, $p1: ref, p.2: ref, p.3: i32, p.4: i32, p.5: ref, p.6: ref)
  returns ($r: i32);
procedure  _dev_info.ref.ref.i32.i32.ref.ref($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: ref, p.5: ref)
  returns ($r: i32);
const ldv_free_netdev_95: ref;
axiom (ldv_free_netdev_95 == $sub.ref(0, 485169));
procedure  ldv_free_netdev_95($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17413, 3} true;
  assume {:verifier.code 0} true;
  call free_netdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17414, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17416, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const register_netdev: ref;
axiom (register_netdev == $sub.ref(0, 486201));
procedure  register_netdev($p0: ref)
  returns ($r: i32);
const ldv_register_netdev: ref;
axiom (ldv_register_netdev == $sub.ref(0, 487233));
procedure  ldv_register_netdev($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i19: i1;
  var $i20: i32;
  var $i18: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !15842, metadata !8144), !dbg !15843, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16942, 24} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_pre_register_netdev();
  // WARNING: %3 = call i32 @ldv_pre_register_netdev(), !dbg !8151, !verifier.code !8146
  call {:cexpr "ldv_10_ret_default"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16944, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %4 = call i32 @ldv_undef_int(), !dbg !8156, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16946, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16946, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16948, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16948, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16948, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16949, 83} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16949, 83} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16949, 96} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16949, 96} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16949, 26} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv_register_netdev_open_10_6($p10, $p1);
  // WARNING: %13 = call i32 @ldv_register_netdev_open_10_6(i32 (%struct.net_device*)* %12, %struct.net_device* %1), !dbg !8168, !verifier.code !8146
  call {:cexpr "ldv_10_ret_default"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16951, 11} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv_undef_int();
  // WARNING: %14 = call i32 @ldv_undef_int(), !dbg !8169, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16953, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16953, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16965, 35} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16965, 35} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16965, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i20);
  assume {:verifier.code 0} true;
  $i18 := $i2;
  goto $bb6;
$bb3:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16955, 37} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16955, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i1.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16955, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16956, 7} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_register_10_4($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16958, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16960, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16960, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16960, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i17);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16963, 3} true;
  assume {:verifier.code 0} true;
  $i18 := $i11;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16968, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const ldv_pre_register_netdev: ref;
axiom (ldv_pre_register_netdev == $sub.ref(0, 488265));
procedure  ldv_pre_register_netdev()
  returns ($r: i32);
const ldv_register_netdev_open_10_6: ref;
axiom (ldv_register_netdev_open_10_6 == $sub.ref(0, 489297));
procedure  ldv_register_netdev_open_10_6($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16979, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := myri10ge_open($p1);
  // WARNING: %3 = call i32 @myri10ge_open(%struct.net_device* %1), !dbg !8149, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16981, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_dispatch_register_10_4: ref;
axiom (ldv_dispatch_register_10_4 == $sub.ref(0, 490329));
procedure  ldv_dispatch_register_10_4($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15684, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15685, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15686, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15686, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15687, 41} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15687, 3} true;
  assume {:verifier.code 0} true;
  call ldv_net_dummy_resourceless_instance_1($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15689, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_net_dummy_resourceless_instance_1: ref;
axiom (ldv_net_dummy_resourceless_instance_1 == $sub.ref(0, 491361));
procedure  ldv_net_dummy_resourceless_instance_1($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16225, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16226, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16226, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16226, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16228, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16228, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16229, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16229, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16231, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $p7 := $u4;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16234, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16238, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv_undef_int();
  // WARNING: %12 = call i32 @ldv_undef_int(), !dbg !8162, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16241, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16241, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16242, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16354, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_36($u5, $p7, $u1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16357, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16246, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i8, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16246, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16247, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16360, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_35($u6, $p7, $u7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16363, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16251, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i8, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16251, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16252, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16367, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_32($u8, $p7, $u1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16370, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16256, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16256, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16257, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16375, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_31($u9, $p7, $u10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16378, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16261, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i8, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16261, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16262, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16384, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_30($u11, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16266, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i8, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16266, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16267, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16394, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_29($u12, $u13, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16397, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16271, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i8, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16271, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16272, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16405, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_28($u14, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16407, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16276, 11} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16276, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16277, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16417, 77} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($u15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16416, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_27($u16, $p7, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16419, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16281, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i8, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16281, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16282, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16429, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_26($u17, $p7, $u18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16432, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16286, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i8, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16286, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16287, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16443, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_23($u5, $p7, $u1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16446, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16291, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i8, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16291, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16292, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16458, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_22($u19, $u20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16460, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16296, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i8, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16296, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16297, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16473, 13} true;
  assume {:verifier.code 0} true;
  call $p33 := ldv_xmalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16475, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_19($u21, $p7, $u1, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16477, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16479, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16301, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i8, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16301, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16302, 5} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16493, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_16($u5, $p7, $u1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16496, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16306, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i8, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16306, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16307, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16511, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_15($u22, $p7, $u15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16514, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16311, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i8, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16311, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16312, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16530, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_14($u23, $p7, $u24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16533, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16316, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16316, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16317, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16550, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_13($u25, $p7, $u7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16553, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16321, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i8, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16321, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16322, 5} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb72;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16571, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_12($u11, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16573, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16326, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i8, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16326, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb73, $bb74;
$bb73:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16327, 5} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb74:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16592, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_11($u11, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16594, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16331, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i8, 19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16331, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16332, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16614, 13} true;
  assume {:verifier.code 0} true;
  call $p34 := ldv_xmalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16615, 33} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16616, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_8($u26, $p7, $u27, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16619, 12} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16619, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16621, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16336, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i8, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16336, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16337, 5} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb82:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb84;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16642, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_7($u28, $p7, $u29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16645, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16341, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i8, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16341, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $i8;
  assume {:branchcond $i29} true;
  goto $bb85, $bb86;
$bb85:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16342, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb86:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16667, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_3($u9, $p7, $u10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16670, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16346, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16346, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb89, $bb90;
$bb89:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16347, 5} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb92;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16692, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16695, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16696, 3} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16238, 9} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16701, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16699, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
}
const ldv_dummy_resourceless_instance_callback_1_36: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_36 == $sub.ref(0, 492393));
procedure  ldv_dummy_resourceless_instance_callback_1_36($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !16140, metadata !8144), !dbg !16141, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15960, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_phys_id($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15962, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_35: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_35 == $sub.ref(0, 493425));
procedure  ldv_dummy_resourceless_instance_callback_1_35($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15947, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_set_pauseparam($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15949, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_32: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_32 == $sub.ref(0, 494457));
procedure  ldv_dummy_resourceless_instance_callback_1_32($p0: ref, $p1: ref, $i2: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !16169, metadata !8144), !dbg !16170, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15934, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_set_msglevel($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15936, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_31: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_31 == $sub.ref(0, 495489));
procedure  ldv_dummy_resourceless_instance_callback_1_31($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15921, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_set_coalesce($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15923, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_30: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_30 == $sub.ref(0, 496521));
procedure  ldv_dummy_resourceless_instance_callback_1_30($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15908, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := eth_validate_addr($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15910, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_29: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_29 == $sub.ref(0, 497553));
procedure  ldv_dummy_resourceless_instance_callback_1_29($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15883, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_xmit($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15885, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_28: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_28 == $sub.ref(0, 498585));
procedure  ldv_dummy_resourceless_instance_callback_1_28($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15870, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_set_multicast_list($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15872, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_27: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_27 == $sub.ref(0, 499617));
procedure  ldv_dummy_resourceless_instance_callback_1_27($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15858, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_set_mac_address($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15860, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_26: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_26 == $sub.ref(0, 500649));
procedure  ldv_dummy_resourceless_instance_callback_1_26($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15845, 3} true;
  assume {:verifier.code 0} true;
  call $p3 := myri10ge_get_stats($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15847, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_23: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_23 == $sub.ref(0, 501681));
procedure  ldv_dummy_resourceless_instance_callback_1_23($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !16257, metadata !8144), !dbg !16258, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15832, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_change_mtu($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15834, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_22: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_22 == $sub.ref(0, 502713));
procedure  ldv_dummy_resourceless_instance_callback_1_22($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15819, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := myri10ge_busy_poll($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15821, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_19: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_19 == $sub.ref(0, 503745));
procedure  ldv_dummy_resourceless_instance_callback_1_19($p0: ref, $p1: ref, $i2: i32, $p3: ref)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !16284, metadata !8144), !dbg !16285, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15807, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_get_strings($p1, $i2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15809, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_16: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_16 == $sub.ref(0, 504777));
procedure  ldv_dummy_resourceless_instance_callback_1_16($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !16297, metadata !8144), !dbg !16298, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15793, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_get_sset_count($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15795, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_15: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_15 == $sub.ref(0, 505809));
procedure  ldv_dummy_resourceless_instance_callback_1_15($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15780, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_get_settings($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15782, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_14: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_14 == $sub.ref(0, 506841));
procedure  ldv_dummy_resourceless_instance_callback_1_14($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15767, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_get_ringparam($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15769, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_13: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_13 == $sub.ref(0, 507873));
procedure  ldv_dummy_resourceless_instance_callback_1_13($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15754, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_get_pauseparam($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15756, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_12: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_12 == $sub.ref(0, 508905));
procedure  ldv_dummy_resourceless_instance_callback_1_12($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15741, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := myri10ge_get_msglevel($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15743, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_11: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_11 == $sub.ref(0, 509937));
procedure  ldv_dummy_resourceless_instance_callback_1_11($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15729, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := ethtool_op_get_link($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15731, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_8: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_8 == $sub.ref(0, 510969));
procedure  ldv_dummy_resourceless_instance_callback_1_8($p0: ref, $p1: ref, $p2: ref, $p3: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15988, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_get_ethtool_stats($p1, $p2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15990, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_7: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_7 == $sub.ref(0, 512001));
procedure  ldv_dummy_resourceless_instance_callback_1_7($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15973, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_get_drvinfo($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15975, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_3: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_3 == $sub.ref(0, 513033));
procedure  ldv_dummy_resourceless_instance_callback_1_3($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15896, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_get_coalesce($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15898, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 514065));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17670, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17672, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17674, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_get_coalesce: ref;
axiom (myri10ge_get_coalesce == $sub.ref(0, 515097));
procedure  myri10ge_get_coalesce($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11245, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11246, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11247, 42} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11247, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11247, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11247, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11249, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const myri10ge_get_drvinfo: ref;
axiom (myri10ge_get_drvinfo == $sub.ref(0, 516129));
procedure  myri10ge_get_drvinfo($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11227, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11228, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11229, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11229, 11} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11229, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := strlcpy($p5, .str.1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11230, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11230, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11230, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := strlcpy($p8, .str.3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11231, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11231, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11231, 65} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p3, 760);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11231, 41} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11231, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := strlcpy($p11, $p13, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11232, 53} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11232, 53} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11232, 13} true;
  assume {:verifier.code 0} true;
  call $p17 := pci_name($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11233, 28} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11233, 11} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11233, 3} true;
  assume {:verifier.code 0} true;
  call $i20 := strlcpy($p19, $p17, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11235, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const strlcpy: ref;
axiom (strlcpy == $sub.ref(0, 517161));
procedure  strlcpy($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64);
const pci_name: ref;
axiom (pci_name == $sub.ref(0, 518193));
procedure  pci_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8708, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8708, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_name($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8710, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_name: ref;
axiom (dev_name == $sub.ref(0, 519225));
procedure  dev_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p8: ref;
  var $p9: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6840, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6840, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6840, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6840, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6840, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6841, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6841, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6841, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6850, 1} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6846, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6846, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := kobject_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6848, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p9;
  goto $bb3;
}
const kobject_name: ref;
axiom (kobject_name == $sub.ref(0, 520257));
procedure  kobject_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6755, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6755, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6755, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const myri10ge_get_ethtool_stats: ref;
axiom (myri10ge_get_ethtool_stats == $sub.ref(0, 521289));
procedure  myri10ge_get_ethtool_stats($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $i44: i32;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $i50: i32;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i32;
  var $p55: ref;
  var $i56: i32;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $i62: i64;
  var $i63: i32;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $i67: i32;
  var $p68: ref;
  var $i69: i32;
  var $i70: i64;
  var $i71: i64;
  var $p72: ref;
  var $i73: i32;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i64;
  var $i79: i1;
  var $i80: i32;
  var $i81: i64;
  var $i82: i64;
  var $p83: ref;
  var $i84: i32;
  var $p85: ref;
  var $i86: i32;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $i90: i32;
  var $p91: ref;
  var $i92: i32;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i32;
  var $i103: i32;
  var $i104: i64;
  var $i105: i64;
  var $p106: ref;
  var $i107: i32;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
  var $i112: i32;
  var $i113: i64;
  var $i114: i64;
  var $p115: ref;
  var $i116: i32;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $i120: i32;
  var $i121: i32;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i32;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: i32;
  var $i130: i32;
  var $i131: i64;
  var $i132: i64;
  var $p133: ref;
  var $i134: i32;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $i138: i32;
  var $i139: i32;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i32;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $i147: i32;
  var $i148: i32;
  var $i149: i64;
  var $i150: i64;
  var $p151: ref;
  var $i152: i32;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $i156: i32;
  var $i157: i32;
  var $i158: i64;
  var $i159: i64;
  var $p160: ref;
  var $i161: i32;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $i165: i32;
  var $i166: i32;
  var $i167: i64;
  var $i168: i64;
  var $p169: ref;
  var $i170: i32;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $i174: i32;
  var $i175: i32;
  var $i176: i64;
  var $i177: i64;
  var $p178: ref;
  var $i179: i32;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $i183: i32;
  var $i184: i32;
  var $i185: i64;
  var $i186: i64;
  var $p187: ref;
  var $i188: i32;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $i192: i32;
  var $i193: i32;
  var $i194: i64;
  var $i195: i64;
  var $p196: ref;
  var $i197: i32;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $i201: i32;
  var $i202: i32;
  var $i203: i64;
  var $i204: i64;
  var $p205: ref;
  var $p206: ref;
  var $i207: i32;
  var $i208: i1;
  var $p211: ref;
  var $p212: ref;
  var $i213: i64;
  var $p214: ref;
  var $i215: i32;
  var $i216: i64;
  var $i217: i64;
  var $p218: ref;
  var $i219: i32;
  var $p220: ref;
  var $p221: ref;
  var $i222: i32;
  var $i223: i64;
  var $i224: i64;
  var $p225: ref;
  var $i226: i32;
  var $p227: ref;
  var $p228: ref;
  var $i229: i32;
  var $i230: i64;
  var $i231: i64;
  var $p232: ref;
  var $i233: i32;
  var $p234: ref;
  var $p235: ref;
  var $i236: i32;
  var $i237: i64;
  var $i238: i64;
  var $p239: ref;
  var $i240: i32;
  var $p241: ref;
  var $p242: ref;
  var $i243: i32;
  var $i244: i64;
  var $i245: i64;
  var $p246: ref;
  var $i247: i32;
  var $p248: ref;
  var $p249: ref;
  var $i250: i32;
  var $i251: i64;
  var $i252: i64;
  var $p253: ref;
  var $i254: i32;
  var $p255: ref;
  var $p256: ref;
  var $i257: i32;
  var $i258: i64;
  var $i259: i64;
  var $p260: ref;
  var $i261: i32;
  var $p262: ref;
  var $p263: ref;
  var $i264: i32;
  var $i265: i64;
  var $i266: i64;
  var $p267: ref;
  var $i268: i32;
  var $p269: ref;
  var $p270: ref;
  var $i271: i32;
  var $i272: i64;
  var $i273: i64;
  var $p274: ref;
  var $i275: i32;
  var $p276: ref;
  var $p277: ref;
  var $i278: i32;
  var $i279: i64;
  var $i280: i64;
  var $p281: ref;
  var $i282: i32;
  var $p283: ref;
  var $i284: i64;
  var $i285: i64;
  var $p286: ref;
  var $i287: i32;
  var $p288: ref;
  var $i289: i64;
  var $i290: i64;
  var $p291: ref;
  var $i292: i32;
  var $p293: ref;
  var $i294: i64;
  var $i295: i64;
  var $p296: ref;
  var $i297: i32;
  var $p298: ref;
  var $i299: i64;
  var $i300: i64;
  var $p301: ref;
  var $i302: i32;
  var $i303: i32;
  var $i304: i1;
  var $i209: i32;
  var $i210: i32;
  var $p305: ref;
  var $p306: ref;
  var $i307: i64;
  var $p308: ref;
  var $p309: ref;
  var $p310: ref;
  var $i311: i64;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $i315: i64;
  var $p316: ref;
  var $p317: ref;
  var $p318: ref;
  var $i319: i64;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $i323: i64;
  var $p324: ref;
  var $p325: ref;
  var $p326: ref;
  var $i327: i64;
  var $p328: ref;
  var $p329: ref;
  var $p330: ref;
  var $i331: i64;
  var $p332: ref;
  var $p333: ref;
  var $p334: ref;
  var $i335: i64;
  var $p336: ref;
  var $p337: ref;
  var $p338: ref;
  var $i339: i64;
  var $p340: ref;
  var $p341: ref;
  var $p342: ref;
  var $i343: i64;
  var $p344: ref;
  var $p345: ref;
  var $p346: ref;
  var $i347: i64;
  var $p348: ref;
  var $p349: ref;
  var $p350: ref;
  var $i351: i64;
  var $p352: ref;
  var $p353: ref;
  var $p354: ref;
  var $i355: i64;
  var $p356: ref;
  var $p357: ref;
  var $p358: ref;
  var $i359: i64;
  var $p360: ref;
  var $p361: ref;
  var $p362: ref;
  var $i363: i64;
  var $p364: ref;
  var $p365: ref;
  var $p366: ref;
  var $i367: i64;
  var $p368: ref;
  var $p369: ref;
  var $p370: ref;
  var $i371: i64;
  var $p372: ref;
  var $p373: ref;
  var $p374: ref;
  var $i375: i64;
  var $p376: ref;
  var $p377: ref;
  var $p378: ref;
  var $i379: i64;
  var $p380: ref;
  var $p381: ref;
  var $p382: ref;
  var $i383: i64;
  var $p384: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(184, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11721, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11722, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11723, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11723, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, 184, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11724, 3} true;
  assume {:verifier.code 0} true;
  call $p7 := myri10ge_get_stats($p0, $p3);
  // WARNING: %8 = call %struct.net_device_stats* @myri10ge_get_stats(%struct.net_device* %0, %struct.net_device_stats* %4), !dbg !8160, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11732, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i64($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p2, $i9);
  // WARNING: store i64 %11, i64* %2, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p305 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p306 := $add.ref($p305, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i307 := $load.i64($M.0, $p306);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p308 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p308, $i307);
  // WARNING: store i64 %314, i64* %315, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11739, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i32(21, 1);
  // WARNING: %14 = add nsw i32 21, 1, !dbg !8172, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11740, 66} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11740, 66} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11740, 39} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11740, 12} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64(21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11740, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, $mul.ref($i14, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11740, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p15, $i13);
  // WARNING: store i64 %17, i64* %19, align 8, !dbg !8178, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11742, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i10, 1);
  // WARNING: %20 = add nsw i32 %14, 1, !dbg !8181, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11743, 66} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p5, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11743, 66} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11743, 39} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i32.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11743, 12} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11743, 10} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, $mul.ref($i20, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11743, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p21, $i19);
  // WARNING: store i64 %23, i64* %25, align 8, !dbg !8186, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11745, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i16, 1);
  // WARNING: %26 = add nsw i32 %20, 1, !dbg !8189, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 51} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 51} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 58} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 1540);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 58} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 39} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 12} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 10} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p2, $mul.ref($i28, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11746, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p29, $i27);
  // WARNING: store i64 %31, i64* %33, align 8, !dbg !8195, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11748, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i32($i22, 1);
  // WARNING: %34 = add nsw i32 %26, 1, !dbg !8198, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11749, 66} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p5, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11749, 66} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11749, 39} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11749, 12} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11749, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p2, $mul.ref($i34, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11749, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p35, $i33);
  // WARNING: store i64 %37, i64* %39, align 8, !dbg !8203, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11751, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i32($i30, 1);
  // WARNING: %40 = add nsw i32 %34, 1, !dbg !8206, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11752, 66} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p5, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11752, 66} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11752, 39} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11752, 12} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11752, 10} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p2, $mul.ref($i40, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11752, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p41, $i39);
  // WARNING: store i64 %43, i64* %45, align 8, !dbg !8211, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11754, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i36, 1);
  // WARNING: %46 = add nsw i32 %40, 1, !dbg !8214, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11755, 50} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p5, 936);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11755, 50} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11755, 39} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i32.i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11755, 12} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11755, 10} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p2, $mul.ref($i46, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11755, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p47, $i45);
  // WARNING: store i64 %49, i64* %51, align 8, !dbg !8219, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11757, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i32($i42, 1);
  // WARNING: %52 = add nsw i32 %46, 1, !dbg !8222, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11758, 50} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p5, 940);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11758, 50} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11758, 39} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11758, 12} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11758, 10} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p2, $mul.ref($i52, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11758, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p53, $i51);
  // WARNING: store i64 %55, i64* %57, align 8, !dbg !8227, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11760, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i48, 1);
  // WARNING: %58 = add nsw i32 %52, 1, !dbg !8230, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11761, 50} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p5, 944);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11761, 50} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11761, 39} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i32.i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11761, 12} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11761, 10} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p2, $mul.ref($i58, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11761, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p59, $i57);
  // WARNING: store i64 %61, i64* %63, align 8, !dbg !8235, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11763, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i32($i54, 1);
  // WARNING: %64 = add nsw i32 %58, 1, !dbg !8238, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11764, 66} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p5, 912);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11764, 66} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i64($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11764, 46} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i64.i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11764, 39} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i32.i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11764, 12} true;
  assume {:verifier.code 0} true;
  $i65 := $sext.i32.i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11764, 10} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p2, $mul.ref($i65, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11764, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p66, $i64);
  // WARNING: store i64 %68, i64* %70, align 8, !dbg !8244, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11766, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i60, 1);
  // WARNING: %71 = add nsw i32 %64, 1, !dbg !8247, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11767, 66} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p5, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11767, 66} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11767, 39} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11767, 12} true;
  assume {:verifier.code 0} true;
  $i71 := $sext.i32.i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11767, 10} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p2, $mul.ref($i71, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11767, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p72, $i70);
  // WARNING: store i64 %74, i64* %76, align 8, !dbg !8252, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11769, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $add.i32($i67, 1);
  // WARNING: %77 = add nsw i32 %71, 1, !dbg !8255, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 62} true;
  assume {:verifier.code 0} true;
  $p74 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 62} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 67} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 536);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 67} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 40} true;
  assume {:verifier.code 0} true;
  $i78 := $p2i.ref.i64($p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 75} true;
  assume {:verifier.code 0} true;
  $i79 := $ne.i64($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 75} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i1.i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 40} true;
  assume {:verifier.code 0} true;
  $i81 := $sext.i32.i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 12} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i32.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 10} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p2, $mul.ref($i82, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11770, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p83, $i81);
  // WARNING: store i64 %85, i64* %87, align 8, !dbg !8262, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11772, 9} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i73, 1);
  // WARNING: %88 = add nsw i32 %77, 1, !dbg !8265, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11773, 67} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11773, 67} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11773, 40} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i32.i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11773, 12} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11773, 10} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p2, $mul.ref($i88, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11773, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p89, $i87);
  // WARNING: store i64 %91, i64* %93, align 8, !dbg !8270, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11775, 9} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i32($i84, 1);
  // WARNING: %94 = add nsw i32 %88, 1, !dbg !8273, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11776, 51} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p5, 948);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11776, 51} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11776, 40} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i32.i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11776, 12} true;
  assume {:verifier.code 0} true;
  $i94 := $sext.i32.i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11776, 10} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p2, $mul.ref($i94, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11776, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p95, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11777, 13} true;
  assume {:verifier.code 0} true;
  $p96 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11777, 13} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %101, i64 0, metadata !16644, metadata !8144), !dbg !16645, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11779, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i90, 1);
  // WARNING: %102 = add nsw i32 %94, 1, !dbg !8284, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11780, 29} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11780, 29} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11780, 40} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p100, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11780, 40} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11780, 14} true;
  assume {:verifier.code 0} true;
  call $i103 := __fswab32($i102);
  // WARNING: %107 = call i32 @__fswab32(i32 %106), !dbg !8287, !verifier.code !8141
  call {:cexpr "tmp___14"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11781, 40} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i32.i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11781, 12} true;
  assume {:verifier.code 0} true;
  $i105 := $sext.i32.i64($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11781, 10} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p2, $mul.ref($i105, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11781, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p106, $i104);
  // WARNING: store i64 %108, i64* %110, align 8, !dbg !8293, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11783, 9} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i98, 1);
  // WARNING: %111 = add nsw i32 %102, 1, !dbg !8296, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11784, 29} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11784, 29} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11784, 40} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p109, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11784, 40} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11784, 14} true;
  assume {:verifier.code 0} true;
  call $i112 := __fswab32($i111);
  // WARNING: %116 = call i32 @__fswab32(i32 %115), !dbg !8299, !verifier.code !8141
  call {:cexpr "tmp___16"} boogie_si_record_i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11785, 40} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i32.i64($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11785, 12} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11785, 10} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p2, $mul.ref($i114, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11785, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p115, $i113);
  // WARNING: store i64 %117, i64* %119, align 8, !dbg !8305, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11787, 9} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i32($i107, 1);
  // WARNING: %120 = add nsw i32 %111, 1, !dbg !8308, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11788, 29} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11788, 29} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11788, 40} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p118, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11788, 40} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i32($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11788, 14} true;
  assume {:verifier.code 0} true;
  call $i121 := __fswab32($i120);
  // WARNING: %125 = call i32 @__fswab32(i32 %124), !dbg !8311, !verifier.code !8141
  call {:cexpr "tmp___18"} boogie_si_record_i32($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11789, 40} true;
  assume {:verifier.code 0} true;
  $i122 := $zext.i32.i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11789, 12} true;
  assume {:verifier.code 0} true;
  $i123 := $sext.i32.i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11789, 10} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p2, $mul.ref($i123, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11789, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p124, $i122);
  // WARNING: store i64 %126, i64* %128, align 8, !dbg !8317, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11791, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i32($i116, 1);
  // WARNING: %129 = add nsw i32 %120, 1, !dbg !8320, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11792, 29} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11792, 29} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11792, 40} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11792, 40} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11792, 14} true;
  assume {:verifier.code 0} true;
  call $i130 := __fswab32($i129);
  // WARNING: %134 = call i32 @__fswab32(i32 %133), !dbg !8323, !verifier.code !8141
  call {:cexpr "tmp___20"} boogie_si_record_i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11793, 40} true;
  assume {:verifier.code 0} true;
  $i131 := $zext.i32.i64($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11793, 12} true;
  assume {:verifier.code 0} true;
  $i132 := $sext.i32.i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11793, 10} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p2, $mul.ref($i132, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11793, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p133, $i131);
  // WARNING: store i64 %135, i64* %137, align 8, !dbg !8329, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11795, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $add.i32($i125, 1);
  // WARNING: %138 = add nsw i32 %129, 1, !dbg !8332, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11796, 29} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11796, 29} true;
  assume {:verifier.code 0} true;
  $p136 := $load.ref($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11796, 40} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p136, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11796, 40} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i32($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11796, 14} true;
  assume {:verifier.code 0} true;
  call $i139 := __fswab32($i138);
  // WARNING: %143 = call i32 @__fswab32(i32 %142), !dbg !8335, !verifier.code !8141
  call {:cexpr "tmp___22"} boogie_si_record_i32($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11797, 40} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.i32.i64($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11797, 12} true;
  assume {:verifier.code 0} true;
  $i141 := $sext.i32.i64($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11797, 10} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p2, $mul.ref($i141, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11797, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p142, $i140);
  // WARNING: store i64 %144, i64* %146, align 8, !dbg !8341, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11799, 9} true;
  assume {:verifier.code 0} true;
  $i143 := $add.i32($i134, 1);
  // WARNING: %147 = add nsw i32 %138, 1, !dbg !8344, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11800, 29} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11800, 29} true;
  assume {:verifier.code 0} true;
  $p145 := $load.ref($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11800, 40} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p145, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11800, 40} true;
  assume {:verifier.code 0} true;
  $i147 := $load.i32($M.0, $p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11800, 14} true;
  assume {:verifier.code 0} true;
  call $i148 := __fswab32($i147);
  // WARNING: %152 = call i32 @__fswab32(i32 %151), !dbg !8347, !verifier.code !8141
  call {:cexpr "tmp___24"} boogie_si_record_i32($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11801, 40} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i32.i64($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11801, 12} true;
  assume {:verifier.code 0} true;
  $i150 := $sext.i32.i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11801, 10} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p2, $mul.ref($i150, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11801, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p151, $i149);
  // WARNING: store i64 %153, i64* %155, align 8, !dbg !8353, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11803, 9} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i32($i143, 1);
  // WARNING: %156 = add nsw i32 %147, 1, !dbg !8356, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11804, 29} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11804, 29} true;
  assume {:verifier.code 0} true;
  $p154 := $load.ref($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11804, 40} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p154, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11804, 40} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11804, 14} true;
  assume {:verifier.code 0} true;
  call $i157 := __fswab32($i156);
  // WARNING: %161 = call i32 @__fswab32(i32 %160), !dbg !8359, !verifier.code !8141
  call {:cexpr "tmp___26"} boogie_si_record_i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11805, 40} true;
  assume {:verifier.code 0} true;
  $i158 := $zext.i32.i64($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11805, 12} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i32.i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11805, 10} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p2, $mul.ref($i159, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11805, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p160, $i158);
  // WARNING: store i64 %162, i64* %164, align 8, !dbg !8365, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11807, 9} true;
  assume {:verifier.code 0} true;
  $i161 := $add.i32($i152, 1);
  // WARNING: %165 = add nsw i32 %156, 1, !dbg !8368, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11808, 29} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11808, 29} true;
  assume {:verifier.code 0} true;
  $p163 := $load.ref($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11808, 40} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p163, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11808, 40} true;
  assume {:verifier.code 0} true;
  $i165 := $load.i32($M.0, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11808, 14} true;
  assume {:verifier.code 0} true;
  call $i166 := __fswab32($i165);
  // WARNING: %170 = call i32 @__fswab32(i32 %169), !dbg !8371, !verifier.code !8141
  call {:cexpr "tmp___28"} boogie_si_record_i32($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11809, 40} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.i32.i64($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11809, 12} true;
  assume {:verifier.code 0} true;
  $i168 := $sext.i32.i64($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11809, 10} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p2, $mul.ref($i168, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11809, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p169, $i167);
  // WARNING: store i64 %171, i64* %173, align 8, !dbg !8377, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11811, 9} true;
  assume {:verifier.code 0} true;
  $i170 := $add.i32($i161, 1);
  // WARNING: %174 = add nsw i32 %165, 1, !dbg !8380, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11812, 29} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11812, 29} true;
  assume {:verifier.code 0} true;
  $p172 := $load.ref($M.0, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11812, 40} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p172, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11812, 40} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i32($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11812, 14} true;
  assume {:verifier.code 0} true;
  call $i175 := __fswab32($i174);
  // WARNING: %179 = call i32 @__fswab32(i32 %178), !dbg !8383, !verifier.code !8141
  call {:cexpr "tmp___30"} boogie_si_record_i32($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11813, 40} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.i32.i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11813, 12} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i32.i64($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11813, 10} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p2, $mul.ref($i177, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11813, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p178, $i176);
  // WARNING: store i64 %180, i64* %182, align 8, !dbg !8389, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11815, 9} true;
  assume {:verifier.code 0} true;
  $i179 := $add.i32($i170, 1);
  // WARNING: %183 = add nsw i32 %174, 1, !dbg !8392, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11816, 29} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11816, 29} true;
  assume {:verifier.code 0} true;
  $p181 := $load.ref($M.0, $p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11816, 40} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p181, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11816, 40} true;
  assume {:verifier.code 0} true;
  $i183 := $load.i32($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11816, 14} true;
  assume {:verifier.code 0} true;
  call $i184 := __fswab32($i183);
  // WARNING: %188 = call i32 @__fswab32(i32 %187), !dbg !8395, !verifier.code !8141
  call {:cexpr "tmp___32"} boogie_si_record_i32($i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11817, 40} true;
  assume {:verifier.code 0} true;
  $i185 := $zext.i32.i64($i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11817, 12} true;
  assume {:verifier.code 0} true;
  $i186 := $sext.i32.i64($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11817, 10} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p2, $mul.ref($i186, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11817, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p187, $i185);
  // WARNING: store i64 %189, i64* %191, align 8, !dbg !8401, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11819, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $add.i32($i179, 1);
  // WARNING: %192 = add nsw i32 %183, 1, !dbg !8404, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11820, 29} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11820, 29} true;
  assume {:verifier.code 0} true;
  $p190 := $load.ref($M.0, $p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11820, 40} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p190, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11820, 40} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i32($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11820, 14} true;
  assume {:verifier.code 0} true;
  call $i193 := __fswab32($i192);
  // WARNING: %197 = call i32 @__fswab32(i32 %196), !dbg !8407, !verifier.code !8141
  call {:cexpr "tmp___34"} boogie_si_record_i32($i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11821, 40} true;
  assume {:verifier.code 0} true;
  $i194 := $zext.i32.i64($i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11821, 12} true;
  assume {:verifier.code 0} true;
  $i195 := $sext.i32.i64($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11821, 10} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p2, $mul.ref($i195, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11821, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p196, $i194);
  // WARNING: store i64 %198, i64* %200, align 8, !dbg !8413, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11823, 9} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i188, 1);
  // WARNING: %201 = add nsw i32 %192, 1, !dbg !8416, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11824, 29} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p97, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11824, 29} true;
  assume {:verifier.code 0} true;
  $p199 := $load.ref($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11824, 40} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p199, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11824, 40} true;
  assume {:verifier.code 0} true;
  $i201 := $load.i32($M.0, $p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11824, 14} true;
  assume {:verifier.code 0} true;
  call $i202 := __fswab32($i201);
  // WARNING: %206 = call i32 @__fswab32(i32 %205), !dbg !8419, !verifier.code !8141
  call {:cexpr "tmp___36"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11825, 40} true;
  assume {:verifier.code 0} true;
  $i203 := $zext.i32.i64($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11825, 12} true;
  assume {:verifier.code 0} true;
  $i204 := $sext.i32.i64($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11825, 10} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p2, $mul.ref($i204, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11825, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p205, $i203);
  // WARNING: store i64 %207, i64* %209, align 8, !dbg !8425, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 20} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p5, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 20} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i32($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 13} true;
  assume {:verifier.code 0} true;
  $i208 := $slt.i32(0, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i208} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i208 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 7} true;
  assume {:verifier.code 0} true;
  $i209, $i210 := $i197, 0;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i208 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11876, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11830, 13} true;
  assume {:verifier.code 0} true;
  $p211 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11830, 13} true;
  assume {:verifier.code 0} true;
  $p212 := $load.ref($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11830, 18} true;
  assume {:verifier.code 0} true;
  $i213 := $sext.i32.i64($i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11830, 16} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p212, $mul.ref($i213, 688));
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %217, i64 0, metadata !16644, metadata !8144), !dbg !16645, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11832, 9} true;
  assume {:verifier.code 0} true;
  $i215 := $add.i32($i209, 1);
  // WARNING: %218 = add nsw i32 %.13, 1, !dbg !8437, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11833, 40} true;
  assume {:verifier.code 0} true;
  $i216 := $sext.i32.i64($i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11833, 12} true;
  assume {:verifier.code 0} true;
  $i217 := $sext.i32.i64($i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11833, 10} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p2, $mul.ref($i217, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11833, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p218, $i216);
  // WARNING: store i64 %219, i64* %221, align 8, !dbg !8441, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11835, 9} true;
  assume {:verifier.code 0} true;
  $i219 := $add.i32($i215, 1);
  // WARNING: %222 = add nsw i32 %218, 1, !dbg !8444, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11836, 66} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p212, $mul.ref($i213, 688));
  $p221 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11836, 69} true;
  assume {:verifier.code 0} true;
  $i222 := $load.i32($M.0, $p221);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11836, 40} true;
  assume {:verifier.code 0} true;
  $i223 := $zext.i32.i64($i222);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11836, 12} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i32.i64($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11836, 10} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p2, $mul.ref($i224, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11836, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p225, $i223);
  // WARNING: store i64 %226, i64* %228, align 8, !dbg !8450, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11838, 9} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i32($i219, 1);
  // WARNING: %229 = add nsw i32 %222, 1, !dbg !8453, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11839, 66} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($p212, $mul.ref($i213, 688));
  $p228 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11839, 69} true;
  assume {:verifier.code 0} true;
  $i229 := $load.i32($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11839, 40} true;
  assume {:verifier.code 0} true;
  $i230 := $zext.i32.i64($i229);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11839, 12} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i32.i64($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11839, 10} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($p2, $mul.ref($i231, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11839, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p232, $i230);
  // WARNING: store i64 %233, i64* %235, align 8, !dbg !8459, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11841, 9} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i226, 1);
  // WARNING: %236 = add nsw i32 %229, 1, !dbg !8462, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i233);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11842, 66} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p212, $mul.ref($i213, 688));
  $p235 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11842, 69} true;
  assume {:verifier.code 0} true;
  $i236 := $load.i32($M.0, $p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11842, 40} true;
  assume {:verifier.code 0} true;
  $i237 := $zext.i32.i64($i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11842, 12} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i32.i64($i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11842, 10} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p2, $mul.ref($i238, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11842, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p239, $i237);
  // WARNING: store i64 %240, i64* %242, align 8, !dbg !8468, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11844, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $add.i32($i233, 1);
  // WARNING: %243 = add nsw i32 %236, 1, !dbg !8471, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11845, 66} true;
  assume {:verifier.code 0} true;
  $p241 := $add.ref($p212, $mul.ref($i213, 688));
  $p242 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11845, 69} true;
  assume {:verifier.code 0} true;
  $i243 := $load.i32($M.0, $p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11845, 40} true;
  assume {:verifier.code 0} true;
  $i244 := $zext.i32.i64($i243);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11845, 12} true;
  assume {:verifier.code 0} true;
  $i245 := $sext.i32.i64($i233);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11845, 10} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p2, $mul.ref($i245, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11845, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p246, $i244);
  // WARNING: store i64 %247, i64* %249, align 8, !dbg !8477, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11847, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i32($i240, 1);
  // WARNING: %250 = add nsw i32 %243, 1, !dbg !8480, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i247);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11848, 66} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 88);
  $p249 := $add.ref($add.ref($add.ref($p212, $mul.ref($i213, 688)), 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11848, 75} true;
  assume {:verifier.code 0} true;
  $i250 := $load.i32($M.0, $p249);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11848, 40} true;
  assume {:verifier.code 0} true;
  $i251 := $zext.i32.i64($i250);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11848, 12} true;
  assume {:verifier.code 0} true;
  $i252 := $sext.i32.i64($i240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11848, 10} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p2, $mul.ref($i252, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11848, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p253, $i251);
  // WARNING: store i64 %254, i64* %256, align 8, !dbg !8486, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11850, 9} true;
  assume {:verifier.code 0} true;
  $i254 := $add.i32($i247, 1);
  // WARNING: %257 = add nsw i32 %250, 1, !dbg !8489, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11851, 66} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 152);
  $p256 := $add.ref($add.ref($add.ref($p212, $mul.ref($i213, 688)), 152), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11851, 73} true;
  assume {:verifier.code 0} true;
  $i257 := $load.i32($M.0, $p256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11851, 40} true;
  assume {:verifier.code 0} true;
  $i258 := $zext.i32.i64($i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11851, 12} true;
  assume {:verifier.code 0} true;
  $i259 := $sext.i32.i64($i247);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11851, 10} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($p2, $mul.ref($i259, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11851, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p260, $i258);
  // WARNING: store i64 %261, i64* %263, align 8, !dbg !8495, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11853, 9} true;
  assume {:verifier.code 0} true;
  $i261 := $add.i32($i254, 1);
  // WARNING: %264 = add nsw i32 %257, 1, !dbg !8498, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i261);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11854, 66} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($p212, $mul.ref($i213, 688));
  $p263 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11854, 69} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i32($M.0, $p263);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11854, 40} true;
  assume {:verifier.code 0} true;
  $i265 := $zext.i32.i64($i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11854, 12} true;
  assume {:verifier.code 0} true;
  $i266 := $sext.i32.i64($i254);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11854, 10} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p2, $mul.ref($i266, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11854, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p267, $i265);
  // WARNING: store i64 %268, i64* %270, align 8, !dbg !8504, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11856, 9} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i32($i261, 1);
  // WARNING: %271 = add nsw i32 %264, 1, !dbg !8507, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i268);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11857, 66} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p212, $mul.ref($i213, 688));
  $p270 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11857, 69} true;
  assume {:verifier.code 0} true;
  $i271 := $load.i32($M.0, $p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11857, 40} true;
  assume {:verifier.code 0} true;
  $i272 := $zext.i32.i64($i271);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11857, 12} true;
  assume {:verifier.code 0} true;
  $i273 := $sext.i32.i64($i261);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11857, 10} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($p2, $mul.ref($i273, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11857, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p274, $i272);
  // WARNING: store i64 %275, i64* %277, align 8, !dbg !8513, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11859, 9} true;
  assume {:verifier.code 0} true;
  $i275 := $add.i32($i268, 1);
  // WARNING: %278 = add nsw i32 %271, 1, !dbg !8516, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i275);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11860, 66} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p212, $mul.ref($i213, 688));
  $p277 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11860, 69} true;
  assume {:verifier.code 0} true;
  $i278 := $load.i32($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11860, 40} true;
  assume {:verifier.code 0} true;
  $i279 := $zext.i32.i64($i278);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11860, 12} true;
  assume {:verifier.code 0} true;
  $i280 := $sext.i32.i64($i268);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11860, 10} true;
  assume {:verifier.code 0} true;
  $p281 := $add.ref($p2, $mul.ref($i280, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11860, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p281, $i279);
  // WARNING: store i64 %282, i64* %284, align 8, !dbg !8522, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11862, 9} true;
  assume {:verifier.code 0} true;
  $i282 := $add.i32($i275, 1);
  // WARNING: %285 = add nsw i32 %278, 1, !dbg !8525, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i282);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11863, 50} true;
  assume {:verifier.code 0} true;
  $p283 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11863, 50} true;
  assume {:verifier.code 0} true;
  $i284 := $load.i64($M.0, $p283);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11863, 12} true;
  assume {:verifier.code 0} true;
  $i285 := $sext.i32.i64($i275);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11863, 10} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($p2, $mul.ref($i285, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11863, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p286, $i284);
  // WARNING: store i64 %287, i64* %289, align 8, !dbg !8529, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11865, 9} true;
  assume {:verifier.code 0} true;
  $i287 := $add.i32($i282, 1);
  // WARNING: %290 = add nsw i32 %285, 1, !dbg !8532, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i287);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11866, 50} true;
  assume {:verifier.code 0} true;
  $p288 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11866, 50} true;
  assume {:verifier.code 0} true;
  $i289 := $load.i64($M.0, $p288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11866, 12} true;
  assume {:verifier.code 0} true;
  $i290 := $sext.i32.i64($i282);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11866, 10} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($p2, $mul.ref($i290, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11866, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p291, $i289);
  // WARNING: store i64 %292, i64* %294, align 8, !dbg !8536, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11868, 9} true;
  assume {:verifier.code 0} true;
  $i292 := $add.i32($i287, 1);
  // WARNING: %295 = add nsw i32 %290, 1, !dbg !8539, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i292);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11869, 50} true;
  assume {:verifier.code 0} true;
  $p293 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11869, 50} true;
  assume {:verifier.code 0} true;
  $i294 := $load.i64($M.0, $p293);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11869, 12} true;
  assume {:verifier.code 0} true;
  $i295 := $sext.i32.i64($i287);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11869, 10} true;
  assume {:verifier.code 0} true;
  $p296 := $add.ref($p2, $mul.ref($i295, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11869, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p296, $i294);
  // WARNING: store i64 %297, i64* %299, align 8, !dbg !8543, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11871, 9} true;
  assume {:verifier.code 0} true;
  $i297 := $add.i32($i292, 1);
  // WARNING: %300 = add nsw i32 %295, 1, !dbg !8546, !verifier.code !8141
  call {:cexpr "i"} boogie_si_record_i32($i297);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11872, 50} true;
  assume {:verifier.code 0} true;
  $p298 := $add.ref($add.ref($p212, $mul.ref($i213, 688)), 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11872, 50} true;
  assume {:verifier.code 0} true;
  $i299 := $load.i64($M.0, $p298);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11872, 12} true;
  assume {:verifier.code 0} true;
  $i300 := $sext.i32.i64($i292);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11872, 10} true;
  assume {:verifier.code 0} true;
  $p301 := $add.ref($p2, $mul.ref($i300, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11872, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p301, $i299);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11873, 17} true;
  assume {:verifier.code 0} true;
  $i302 := $add.i32($i210, 1);
  // WARNING: %305 = add nsw i32 %.012, 1, !dbg !8551, !verifier.code !8141
  call {:cexpr "slice"} boogie_si_record_i32($i302);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 20} true;
  assume {:verifier.code 0} true;
  $i303 := $load.i32($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 13} true;
  assume {:verifier.code 0} true;
  $i304 := $slt.i32($i302, $i303);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 7} true;
  assume {:verifier.code 0} true;
  $i209, $i210 := $i297, $i302;
  assume {:branchcond $i304} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 7} true;
  assume {:verifier.code 0} true;
  assume ($i304 == 1);
  goto $bb8;
$bb11:
  assume !(($i304 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11875, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11881, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p309 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($p309, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i311 := $load.i64($M.0, $p310);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p312, $i311);
  // WARNING: store i64 %319, i64* %320, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p313 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p313, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i315 := $load.i64($M.0, $p314);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p316 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p316, $i315);
  // WARNING: store i64 %324, i64* %325, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p317 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($p317, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i319 := $load.i64($M.0, $p318);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p320 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p320, $i319);
  // WARNING: store i64 %329, i64* %330, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p321 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p322 := $add.ref($p321, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i323 := $load.i64($M.0, $p322);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($p2, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p324, $i323);
  // WARNING: store i64 %334, i64* %335, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p325 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($p325, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i327 := $load.i64($M.0, $p326);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p328 := $add.ref($p2, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p328, $i327);
  // WARNING: store i64 %339, i64* %340, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p329 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($p329, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i331 := $load.i64($M.0, $p330);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p332 := $add.ref($p2, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p332, $i331);
  // WARNING: store i64 %344, i64* %345, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p333 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p334 := $add.ref($p333, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i335 := $load.i64($M.0, $p334);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p336 := $add.ref($p2, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p336, $i335);
  // WARNING: store i64 %349, i64* %350, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p337 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p338 := $add.ref($p337, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i339 := $load.i64($M.0, $p338);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p2, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p340, $i339);
  // WARNING: store i64 %354, i64* %355, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p341 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p342 := $add.ref($p341, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i343 := $load.i64($M.0, $p342);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p344 := $add.ref($p2, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p344, $i343);
  // WARNING: store i64 %359, i64* %360, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p345 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p346 := $add.ref($p345, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i347 := $load.i64($M.0, $p346);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p348 := $add.ref($p2, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p348, $i347);
  // WARNING: store i64 %364, i64* %365, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p349 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p350 := $add.ref($p349, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i351 := $load.i64($M.0, $p350);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p352 := $add.ref($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p352, $i351);
  // WARNING: store i64 %369, i64* %370, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p353 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p354 := $add.ref($p353, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i355 := $load.i64($M.0, $p354);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p356 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p356, $i355);
  // WARNING: store i64 %374, i64* %375, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p357 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p358 := $add.ref($p357, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i359 := $load.i64($M.0, $p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p360 := $add.ref($p2, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p360, $i359);
  // WARNING: store i64 %379, i64* %380, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p361 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p362 := $add.ref($p361, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i363 := $load.i64($M.0, $p362);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p364, $i363);
  // WARNING: store i64 %384, i64* %385, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p365 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p365, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i367 := $load.i64($M.0, $p366);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p368 := $add.ref($p2, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p368, $i367);
  // WARNING: store i64 %389, i64* %390, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p369 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p369, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i371 := $load.i64($M.0, $p370);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p372 := $add.ref($p2, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p372, $i371);
  // WARNING: store i64 %394, i64* %395, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p373 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p374 := $add.ref($p373, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i375 := $load.i64($M.0, $p374);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p376 := $add.ref($p2, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p376, $i375);
  // WARNING: store i64 %399, i64* %400, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p377 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p378 := $add.ref($p377, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i379 := $load.i64($M.0, $p378);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p380 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p380, $i379);
  // WARNING: store i64 %404, i64* %405, align 8, !dbg !8166, !verifier.code !8141
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11733, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 35} true;
  assume {:verifier.code 0} true;
  $p381 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 57} true;
  assume {:verifier.code 0} true;
  $p382 := $add.ref($p381, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 33} true;
  assume {:verifier.code 0} true;
  $i383 := $load.i64($M.0, $p382);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 10} true;
  assume {:verifier.code 0} true;
  $p384 := $add.ref($p2, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11729, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p384, $i383);
  // WARNING: store i64 %409, i64* %410, align 8, !dbg !8166, !verifier.code !8141
  assume {:verifier.code 0} true;
  goto $bb4;
}
const myri10ge_get_stats: ref;
axiom (myri10ge_get_stats == $sub.ref(0, 522321));
procedure  myri10ge_get_stats($p0: ref, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13637, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13638, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %4, i64 0, metadata !16932, metadata !8144), !dbg !16933, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32(0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 7} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13653, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13643, 68} true;
  assume {:verifier.code 0} true;
  $p8 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13643, 68} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13643, 73} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13643, 71} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p9, $mul.ref($i10, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13643, 93} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p9, $mul.ref($i10, 688)), 440);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13644, 30} true;
  assume {:verifier.code 0} true;
  $p13 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13644, 30} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  $p15 := $add.ref($add.ref($p9, $mul.ref($i10, 688)), 440);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13644, 77} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13644, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i14, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13644, 10} true;
  assume {:verifier.code 0} true;
  $p18 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13644, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13645, 30} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13645, 30} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  $p21 := $add.ref($add.ref($add.ref($p9, $mul.ref($i10, 688)), 440), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13645, 77} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13645, 41} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i20, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13645, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13645, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13646, 28} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13646, 28} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.0, $p25);
  $p27 := $add.ref($add.ref($add.ref($p9, $mul.ref($i10, 688)), 440), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13646, 73} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13646, 37} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i26, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13646, 10} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13646, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p30, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13647, 28} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13647, 28} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.0, $p31);
  $p33 := $add.ref($add.ref($add.ref($p9, $mul.ref($i10, 688)), 440), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13647, 73} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i64($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13647, 37} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i32, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13647, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13647, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13648, 30} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13648, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.0, $p37);
  $p39 := $add.ref($add.ref($add.ref($p9, $mul.ref($i10, 688)), 440), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13648, 77} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i64($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13648, 41} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i38, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13648, 10} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13648, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13649, 30} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13649, 30} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  $p45 := $add.ref($add.ref($add.ref($p9, $mul.ref($i10, 688)), 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13649, 77} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13649, 41} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i64($i44, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13649, 10} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13649, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13650, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i7, 1);
  // WARNING: %50 = add nsw i32 %.01, 1, !dbg !8197, !verifier.code !8144
  call {:cexpr "i"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 22} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $slt.i32($i49, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i49;
  assume {:branchcond $i51} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 7} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb4;
$bb7:
  assume !(($i51 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13652, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13658, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ethtool_op_get_link: ref;
axiom (ethtool_op_get_link == $sub.ref(0, 523353));
procedure  ethtool_op_get_link($p0: ref)
  returns ($r: i32);
const myri10ge_get_msglevel: ref;
axiom (myri10ge_get_msglevel == $sub.ref(0, 524385));
procedure  myri10ge_get_msglevel($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11905, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11906, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11908, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 952);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11908, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11908, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const myri10ge_get_pauseparam: ref;
axiom (myri10ge_get_pauseparam == $sub.ref(0, 525417));
procedure  myri10ge_get_pauseparam($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11276, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11277, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11278, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11278, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11279, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11279, 34} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11279, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11279, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11280, 34} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11280, 34} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11280, 10} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11280, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11282, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_get_ringparam: ref;
axiom (myri10ge_get_ringparam == $sub.ref(0, 526449));
procedure  myri10ge_get_ringparam($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11328, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11329, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11330, 46} true;
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11330, 46} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11330, 51} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 88);
  $p7 := $add.ref($add.ref($p5, 88), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11330, 60} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11330, 65} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i8, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11330, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11331, 41} true;
  assume {:verifier.code 0} true;
  $p11 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11331, 41} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11331, 46} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 152);
  $p14 := $add.ref($add.ref($p12, 152), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11331, 53} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11331, 58} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i15, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11331, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11331, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11332, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11332, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11333, 41} true;
  assume {:verifier.code 0} true;
  $p19 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11333, 41} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11333, 46} true;
  assume {:verifier.code 0} true;
  $p21 := $p20;
  $p22 := $add.ref($p20, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11333, 49} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11333, 54} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i23, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11333, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11333, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11334, 33} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11334, 33} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11334, 9} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11334, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11335, 28} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11335, 28} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11335, 9} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11335, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11336, 34} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11336, 34} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11336, 9} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11336, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11337, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11337, 28} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11337, 9} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11337, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11339, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_get_settings: ref;
axiom (myri10ge_get_settings == $sub.ref(0, 527481));
procedure  myri10ge_get_settings($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i8;
  var $i20: i32;
  var $i21: i1;
  var $i22: i64;
  var $p23: ref;
  var $p25: ref;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $i41: i32;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i1;
  var $p49: ref;
  var $p24: ref;
  var $i50: i64;
  var $i51: i1;
  var $p19: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11161, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11162, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11163, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11163, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11164, 3} true;
  assume {:verifier.code 0} true;
  call ethtool_cmd_speed_set($p1, 10000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11165, 8} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11165, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11166, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11166, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11168, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11168, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11168, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11170, 5} true;
  assume {:verifier.code 0} true;
  call $i10 := netdev_err.ref.ref($p0, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11172, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11218, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11193, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11194, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11180, 9} true;
  assume {:verifier.code 0} true;
  call $p11 := strchr($p7, 45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 27} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb9;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11184, 87} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3, 752);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11184, 87} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11184, 5} true;
  assume {:verifier.code 0} true;
  call $i16 := netdev_err.ref.ref.ref($p0, .str.6, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11186, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11191, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p11, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11194, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11180, 9} true;
  assume {:verifier.code 0} true;
  call $p46 := strchr($p17, 45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 27} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i64($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb22, $bb23;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11199, 28} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11199, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11199, 34} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11199, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i21 == 1);
  $i22 := $add.i64(1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11200, 15} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p24, $mul.ref($i22, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11201, 3} true;
  assume {:verifier.code 0} true;
  $p25 := $p23;
  goto $bb15;
$bb14:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  $p25 := $p19;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11204, 39} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i8($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11204, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11204, 45} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32($i27, 81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11204, 51} true;
  assume {:verifier.code 0} true;
  $i29 := $ule.i32($i28, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11204, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11205, 10} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11205, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p30, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11206, 27} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11206, 27} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11206, 37} true;
  assume {:verifier.code 0} true;
  $i33 := $or.i32($i32, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11206, 10} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11206, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11207, 29} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11207, 29} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11207, 41} true;
  assume {:verifier.code 0} true;
  $i37 := $or.i32($i36, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11207, 10} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11207, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11208, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i29 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11209, 10} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11209, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p39, $sub.i8(0, 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11211, 39} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11211, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11211, 45} true;
  assume {:verifier.code 0} true;
  $i42 := $sub.i32($i41, 82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11211, 51} true;
  assume {:verifier.code 0} true;
  $i43 := $ule.i32($i42, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11211, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11212, 10} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p1, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11212, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11213, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11214, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p1, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11214, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, 0);
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11216, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  assume ($i48 == 1);
  goto $bb8;
$bb23:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11191, 13} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p46, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11194, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11180, 9} true;
  assume {:verifier.code 0} true;
  call $p24 := strchr($p49, 45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 27} true;
  assume {:verifier.code 0} true;
  $i51 := $eq.i64($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb26, $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11182, 7} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb8;
$bb27:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11191, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p24, 1);
  assume {:verifier.code 0} true;
  goto $bb12;
}
const ethtool_cmd_speed_set: ref;
axiom (ethtool_cmd_speed_set == $sub.ref(0, 528513));
procedure  ethtool_cmd_speed_set($p0: ref, $i1: i32)
{
  var $i2: i16;
  var $p3: ref;
  var $i4: i32;
  var $i5: i16;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ethtool_cmd* %0, i64 0, metadata !17155, metadata !8144), !dbg !17156, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7653, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i16($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7653, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7653, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7654, 42} true;
  assume {:verifier.code 0} true;
  $i4 := $lshr.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7654, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7654, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7654, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p6, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7655, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const strchr: ref;
axiom (strchr == $sub.ref(0, 529545));
procedure  strchr($p0: ref, $i1: i32)
  returns ($r: ref);
const myri10ge_get_sset_count: ref;
axiom (myri10ge_get_sset_count == $sub.ref(0, 530577));
procedure  myri10ge_get_sset_count($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $p5: ref;
  var $i6: i32;
  var $i7: i64;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !17169, metadata !8144), !dbg !17170, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11640, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11641, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11644, 12} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11644, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11645, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11651, 55} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11651, 55} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11651, 34} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11651, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11651, 67} true;
  assume {:verifier.code 0} true;
  $i9 := $mul.i32($i8, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11651, 73} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i32($i9, 46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11651, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i10;
  goto $bb6;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11649, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11653, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 95);
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11657, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const myri10ge_get_strings: ref;
axiom (myri10ge_get_strings == $sub.ref(0, 531609));
procedure  myri10ge_get_strings($p0: ref, $i1: i32, $p2: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i10: i32;
  var $p11: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !17197, metadata !8144), !dbg !17198, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11596, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11597, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11600, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11600, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11601, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11608, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p2, myri10ge_gstrings_main_stats, 1472, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11609, 15} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 1472);
  // WARNING: call void @llvm.dbg.value(metadata i8* %11, i64 0, metadata !17201, metadata !8144), !dbg !17202, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32(0, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb6, $bb7;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11605, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11628, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb6:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 7} true;
  assume {:verifier.code 0} true;
  $i10, $p11 := 0, $p6;
  goto $bb9;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11621, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11615, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p11, myri10ge_gstrings_slice_stats, 448, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11616, 15} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 448);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11617, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i10, 1);
  // WARNING: %17 = add nsw i32 %.03, 1, !dbg !8176, !verifier.code !8144
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 16} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i13, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 7} true;
  assume {:verifier.code 0} true;
  $i10, $p11 := $i13, $p12;
  assume {:branchcond $i15} true;
  goto $bb11, $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb9;
$bb12:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11620, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11626, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11630, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_busy_poll: ref;
axiom (myri10ge_busy_poll == $sub.ref(0, 532641));
procedure  myri10ge_busy_poll($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i9: i1;
  var $i10: i8;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11011, 8} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11011, 46} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, $mul.ref($sub.ref(0, 352), 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11012, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 352), 688)), 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11012, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11013, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11013, 12} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11013, 23} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11013, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11014, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 1);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11044, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11019, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := myri10ge_ss_lock_poll($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11019, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i8($i9);
  // WARNING: %13 = zext i1 %12 to i8, !dbg !8163, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11021, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i8.i1($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11021, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11023, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb7;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := 1;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11026, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11026, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11027, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 2);
  goto $bb3;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11032, 15} true;
  assume {:verifier.code 0} true;
  call $i14 := myri10ge_clean_rx_done($p2, 4);
  // WARNING: %22 = call i32 @myri10ge_clean_rx_done(%struct.myri10ge_slice_state* %3, i32 4), !dbg !8178, !verifier.code !8144
  call {:cexpr "work_done"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11034, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11034, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11035, 29} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 352), 688)), 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11035, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11035, 45} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11035, 43} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i17, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11035, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 352), 688)), 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11035, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11036, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11037, 30} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 352), 688)), 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11037, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11037, 45} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11037, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 352), 688)), 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11037, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p24, $i23);
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11040, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_ss_unlock_poll($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11042, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i14;
  goto $bb3;
}
const myri10ge_ss_lock_poll: ref;
axiom (myri10ge_ss_lock_poll == $sub.ref(0, 533673));
procedure  myri10ge_ss_lock_poll($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i14: i8;
  var $p19: ref;
  var $i20: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %0, i64 0, metadata !17296, metadata !8144), !dbg !17297, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9782, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9782, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_bh_81($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9784, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9784, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9784, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9784, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9784, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9785, 21} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9785, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9785, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $or.i32($i7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9785, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9785, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, $i8);
  // WARNING: store i32 %10, i32* %11, align 8, !dbg !8162, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9787, 31} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9787, 31} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9787, 47} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9787, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9787, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9788, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9789, 21} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9789, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9789, 27} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i16, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9789, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9789, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, $i17);
  assume {:verifier.code 0} true;
  $i14 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9792, 31} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9792, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_bh_82($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9794, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i8.i1($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9794, 3} true;
  assume {:verifier.code 0} true;
  $r := $i20;
  $exn := false;
  return;
}
const myri10ge_clean_rx_done: ref;
axiom (myri10ge_clean_rx_done == $sub.ref(0, 534705));
procedure  myri10ge_clean_rx_done($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i16;
  var $i15: i32;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $i34: i16;
  var $i35: i32;
  var $i36: i16;
  var $i37: i16;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $p46: ref;
  var $p47: ref;
  var $i48: i16;
  var $i49: i32;
  var $i50: i16;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i64;
  var $i55: i64;
  var $i56: i64;
  var $i57: i64;
  var $i58: i64;
  var $i59: i32;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $p65: ref;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $i69: i16;
  var $i70: i32;
  var $i71: i1;
  var $i72: i1;
  var $i73: i1;
  var $i24: i32;
  var $i25: i32;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $i74: i64;
  var $i75: i64;
  var $i76: i32;
  var $i77: i32;
  var $i78: i32;
  var $i19: i64;
  var $i20: i64;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i32;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $i100: i32;
  var $i101: i1;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $i105: i32;
  var $p106: ref;
  var $p107: ref;
  var $i108: i32;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
  var $i112: i32;
  var $i113: i32;
  var $i114: i1;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %0, i64 0, metadata !17332, metadata !8144), !dbg !17333, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10829, 19} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10830, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10830, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %5, i64 0, metadata !17342, metadata !8144), !dbg !17343, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !17344, metadata !8144), !dbg !17345, !verifier.code !8146
  $p5 := $add.ref($add.ref($p0, 216), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10833, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  // WARNING: %7 = load i32, i32* %6, align 4, !dbg !8161, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i6);
  $p7 := $add.ref($add.ref($p0, 216), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10834, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  // WARNING: %9 = load i32, i32* %8, align 8, !dbg !8164, !verifier.code !8146
  call {:cexpr "cnt"} boogie_si_record_i32($i8);
  // WARNING: call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !17352, metadata !8144), !dbg !17353, !verifier.code !8146
  $p9 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 32} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 38} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p10, $mul.ref($i11, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 62} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p10, $mul.ref($i11, 4)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 62} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i16($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 69} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 88} true;
  assume {:verifier.code 0} true;
  $i17 := $slt.i32(0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i1($i16, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  $i19, $i20, $i21, $i22, $i23 := 0, 0, $i6, $i8, 0;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  $i24, $i25, $i26, $i27, $i28 := 0, $i8, $i6, 0, 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10853, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  $p29 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 35} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 43} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 41} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p30, $mul.ref($i31, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 65} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p30, $mul.ref($i31, 4)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 65} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i16($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i16.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 19} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i16($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10839, 9} true;
  assume {:verifier.code 0} true;
  call $i37 := __fswab16($i36);
  // WARNING: %28 = call zeroext i16 @__fswab16(i16 zeroext %27), !dbg !8185, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i16($i37);
  // WARNING: call void @llvm.dbg.value(metadata i16 %28, i64 0, metadata !17373, metadata !8144), !dbg !17374, !verifier.code !8146
  $p38 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10841, 13} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10841, 21} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10841, 19} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p39, $mul.ref($i40, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10841, 43} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p39, $mul.ref($i40, 4)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10841, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p42, 0);
  $p43 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 42} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 50} true;
  assume {:verifier.code 0} true;
  $i45 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 48} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p44, $mul.ref($i45, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 72} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p44, $mul.ref($i45, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 72} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i16($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 26} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i16.i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 26} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i16($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10842, 14} true;
  assume {:verifier.code 0} true;
  call $i51 := csum_unfold($i50);
  // WARNING: %42 = call i32 @csum_unfold(i16 zeroext %41), !dbg !8200, !verifier.code !8146
  call {:cexpr "checksum"} boogie_si_record_i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10843, 34} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i16.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10843, 13} true;
  assume {:verifier.code 0} true;
  call $i53 := myri10ge_rx_done($p0, $i52, $i51);
  // WARNING: %44 = call i32 @myri10ge_rx_done(%struct.myri10ge_slice_state* %0, i32 %43, i32 %42), !dbg !8204, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10844, 11} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i53);
  // WARNING: %45 = sext i32 %44 to i64, !dbg !8207, !verifier.code !8146
  call {:cexpr "rx_ok"} boogie_si_record_i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10845, 27} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i27, $i54);
  // WARNING: %46 = add i64 %.037, %45, !dbg !8210, !verifier.code !8146
  call {:cexpr "rx_packets"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10846, 33} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i16.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10846, 31} true;
  assume {:verifier.code 0} true;
  $i57 := $mul.i64($i54, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10846, 23} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i64($i28, $i57);
  // WARNING: %49 = add i64 %.046, %48, !dbg !8213, !verifier.code !8146
  call {:cexpr "rx_bytes"} boogie_si_record_i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10847, 13} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i32($i25, 1);
  // WARNING: %50 = add nsw i32 %.019, 1, !dbg !8214, !verifier.code !8146
  call {:cexpr "cnt"} boogie_si_record_i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10848, 21} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10848, 21} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10848, 36} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i61, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10848, 13} true;
  assume {:verifier.code 0} true;
  $i63 := $and.i32($i59, $i62);
  // WARNING: %54 = and i32 %50, %53, !dbg !8217, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10849, 25} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i24, 1);
  // WARNING: %55 = add nsw i32 %.010, 1, !dbg !8218, !verifier.code !8146
  call {:cexpr "work_done"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 32} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 40} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 38} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p65, $mul.ref($i66, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 62} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p65, $mul.ref($i66, 4)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 62} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i16($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i16.i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 69} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 88} true;
  assume {:verifier.code 0} true;
  $i72 := $slt.i32($i64, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  $i73 := $and.i1($i71, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  $i24, $i25, $i26, $i27, $i28, $i74, $i75, $i76, $i77, $i78 := $i64, $i59, $i63, $i55, $i58, $i58, $i55, $i63, $i59, $i64;
  assume {:branchcond $i73} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  assume ($i73 == 1);
  goto $bb4;
$bb7:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10852, 75} true;
  assume {:verifier.code 0} true;
  $i19, $i20, $i21, $i22, $i23 := $i74, $i75, $i76, $i77, $i78;
  goto $bb3;
$bb8:
  $p79 := $add.ref($add.ref($p0, 216), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10857, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, $i21);
  $p80 := $add.ref($add.ref($p0, 216), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10858, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p80, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10859, 30} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 440);
  $p82 := $add.ref($p0, 440);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10859, 36} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i64($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10859, 47} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10859, 7} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 440);
  $p86 := $add.ref($p0, 440);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10859, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p86, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10860, 28} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0, 440);
  $p88 := $add.ref($add.ref($p0, 440), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10860, 34} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i64($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10860, 43} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i64($i89, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10860, 7} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 440);
  $p92 := $add.ref($add.ref($p0, 440), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10860, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p92, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 11} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p0, 88);
  $p94 := $add.ref($add.ref($p0, 88), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 20} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i32($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 35} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p0, 88);
  $p97 := $add.ref($add.ref($p0, 88), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 44} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 29} true;
  assume {:verifier.code 0} true;
  $i99 := $sub.i32($i95, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 50} true;
  assume {:verifier.code 0} true;
  $i100 := $M.29;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 48} true;
  assume {:verifier.code 0} true;
  $i101 := $slt.i32($i99, $i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10861, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10863, 40} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10863, 55} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10863, 55} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10863, 67} true;
  assume {:verifier.code 0} true;
  $i105 := $add.i32($i104, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10863, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_alloc_rx_pages($p4, $p102, $i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10865, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 11} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0, 152);
  $p107 := $add.ref($add.ref($p0, 152), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 18} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 33} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p0, 152);
  $p110 := $add.ref($add.ref($p0, 152), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 40} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 27} true;
  assume {:verifier.code 0} true;
  $i112 := $sub.i32($i108, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 46} true;
  assume {:verifier.code 0} true;
  $i113 := $M.29;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 44} true;
  assume {:verifier.code 0} true;
  $i114 := $slt.i32($i112, $i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10868, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10870, 40} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10870, 53} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10870, 53} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10870, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_alloc_rx_pages($p4, $p115, $i117, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10872, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i114 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10875, 3} true;
  assume {:verifier.code 0} true;
  $r := $i23;
  $exn := false;
  return;
}
const myri10ge_ss_unlock_poll: ref;
axiom (myri10ge_ss_unlock_poll == $sub.ref(0, 535737));
procedure  myri10ge_ss_unlock_poll($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i1;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9804, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9804, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_bh_81($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9805, 29} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9805, 29} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9805, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 1);
  // WARNING: %5 = and i32 %4, 1, !dbg !8152, !verifier.code !8146
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9806, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9806, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9806, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9806, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv__builtin_expect($i7, 0);
  // WARNING: %9 = call i64 @ldv__builtin_expect(i64 %8, i64 0), !dbg !8157, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9808, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9808, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9810, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.7, 975);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9812, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9816, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9816, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9816, 23} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9816, 3} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv__builtin_expect($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9817, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9817, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9818, 31} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9818, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_bh_82($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9820, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_lock_bh_81: ref;
axiom (ldv_spin_lock_bh_81 == $sub.ref(0, 536769));
procedure  ldv_spin_lock_bh_81($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17239, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_myri10ge_slice_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17240, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_bh($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17242, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_bh_82: ref;
axiom (ldv_spin_unlock_bh_82 == $sub.ref(0, 537801));
procedure  ldv_spin_unlock_bh_82($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17251, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_lock_of_myri10ge_slice_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17252, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_bh($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17254, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_unlock_bh: ref;
axiom (spin_unlock_bh == $sub.ref(0, 538833));
procedure  spin_unlock_bh($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6693, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6693, 50} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6693, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_bh($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6695, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_bh: ref;
axiom (_raw_spin_unlock_bh == $sub.ref(0, 539865));
procedure  _raw_spin_unlock_bh($p0: ref);
const spin_lock_bh: ref;
axiom (spin_lock_bh == $sub.ref(0, 540897));
procedure  spin_lock_bh($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6654, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6654, 48} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6654, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock_bh($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6656, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock_bh: ref;
axiom (_raw_spin_lock_bh == $sub.ref(0, 541929));
procedure  _raw_spin_lock_bh($p0: ref);
const __fswab16: ref;
axiom (__fswab16 == $sub.ref(0, 542961));
procedure  __fswab16($i0: i16)
  returns ($r: i16)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i16;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i16;
  var $i8: i32;
  var $i9: i32;
  var $i10: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 36} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i16.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 46} true;
  assume {:verifier.code 0} true;
  $i2 := $shl.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i16($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i16.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 71} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 81} true;
  assume {:verifier.code 0} true;
  $i6 := $ashr.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 55} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 53} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i4, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6295, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const csum_unfold: ref;
axiom (csum_unfold == $sub.ref(0, 543993));
procedure  csum_unfold($i0: i16)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7036, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i16.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7036, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const myri10ge_rx_done: ref;
axiom (myri10ge_rx_done == $sub.ref(0, 545025));
procedure  myri10ge_rx_done($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p15: ref;
  var $i16: i32;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $p40: ref;
  var $i41: i1;
  var $i42: i8;
  var $i43: i1;
  var $p44: ref;
  var $p46: ref;
  var $p47: ref;
  var $p45: ref;
  var $i48: i64;
  var $i49: i1;
  var $i50: i32;
  var $i51: i64;
  var $i52: i64;
  var $i53: i1;
  var $p54: ref;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $p59: ref;
  var $i60: i1;
  var $p64: ref;
  var $p65: ref;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $p80: ref;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i1;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i1;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i64;
  var $p108: ref;
  var $p109: ref;
  var $i110: i32;
  var $i111: i1;
  var $i112: i32;
  var $p113: ref;
  var $i114: i32;
  var $i115: i32;
  var $p116: ref;
  var $p117: ref;
  var $i118: i32;
  var $p119: ref;
  var $i120: i32;
  var $i121: i32;
  var $i122: i32;
  var $i123: i32;
  var $i124: i1;
  var $i92: i32;
  var $i93: i32;
  var $i94: i32;
  var $p125: ref;
  var $i126: i32;
  var $i127: i32;
  var $p128: ref;
  var $p129: ref;
  var $i130: i32;
  var $i131: i32;
  var $p132: ref;
  var $i133: i32;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $i137: i32;
  var $i138: i32;
  var $p139: ref;
  var $p140: ref;
  var $i141: i64;
  var $i142: i64;
  var $i143: i1;
  var $p144: ref;
  var $i145: i16;
  var $i146: i16;
  var $i147: i16;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $i152: i64;
  var $p153: ref;
  var $p154: ref;
  var $i155: i64;
  var $i156: i64;
  var $i157: i64;
  var $i158: i16;
  var $i159: i32;
  var $i160: i16;
  var $p161: ref;
  var $i162: i1;
  var $p163: ref;
  var $i164: i32;
  var $i165: i1;
  var $p167: ref;
  var $i168: i32;
  var $i166: i32;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $i172: i32;
  var $i173: i64;
  var $p174: ref;
  var $p175: ref;
  var $i176: i32;
  var $i177: i32;
  var $p178: ref;
  var $p179: ref;
  var $i180: i32;
  var $i181: i32;
  var $p182: ref;
  var $p183: ref;
  var $i184: i32;
  var $i185: i32;
  var $p186: ref;
  var $p187: ref;
  var $i188: i32;
  var $i189: i32;
  var $p190: ref;
  var $i191: i16;
  var $p192: ref;
  var $i193: i32;
  var $p194: ref;
  var $i195: i32;
  var $i86: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_slice_state* %0, i64 0, metadata !17546, metadata !8144), !dbg !17547, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !17548, metadata !8144), !dbg !17549, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10598, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10598, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10599, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10599, 15} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10600, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10600, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10601, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10601, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10601, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $sle.i32($i1, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10601, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10602, 16} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10603, 18} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10603, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  // WARNING: %16 = load i32, i32* %15, align 4, !dbg !8170, !verifier.code !8146
  call {:cexpr "bytes"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10604, 3} true;
  assume {:verifier.code 0} true;
  $p15, $i16 := $p12, $i14;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10605, 16} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10606, 18} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10606, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  // WARNING: %20 = load i32, i32* %19, align 8, !dbg !8176, !verifier.code !8146
  call {:cexpr "bytes"} boogie_si_record_i32($i19);
  assume {:verifier.code 0} true;
  $p15, $i16 := $p17, $i19;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10609, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i1, 2);
  // WARNING: %22 = add nsw i32 %1, 2, !dbg !8177, !verifier.code !8146
  call {:cexpr "len"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10610, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10610, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10610, 23} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10610, 23} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10610, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i22, $i24);
  // WARNING: %27 = and i32 %24, %26, !dbg !8181, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10611, 57} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10611, 57} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10611, 64} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10611, 62} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p27, $mul.ref($i28, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10611, 86} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p27, $mul.ref($i28, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10611, 86} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10611, 9} true;
  assume {:verifier.code 0} true;
  call $p32 := lowmem_page_address($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 41} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 41} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 48} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 46} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p34, $mul.ref($i35, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 70} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p34, $mul.ref($i35, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 70} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 20} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10612, 18} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p32, $mul.ref($i39, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10613, 3} true;
  assume {:verifier.code 0} true;
  call llvm.prefetch($p40, 0, 3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10614, 13} true;
  assume {:verifier.code 0} true;
  call $i41 := myri10ge_ss_busy_polling($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10614, 11} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i1.i8($i41);
  // WARNING: %44 = zext i1 %43 to i8, !dbg !8201, !verifier.code !8146
  call {:cexpr "polling"} boogie_si_record_i8($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10616, 13} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i8.i1($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10616, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10618, 11} true;
  assume {:verifier.code 0} true;
  call $p44 := netdev_alloc_skb($p8, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10620, 3} true;
  assume {:verifier.code 0} true;
  $p45 := $p44;
  goto $bb6;
$bb5:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10622, 32} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10622, 11} true;
  assume {:verifier.code 0} true;
  call $p47 := napi_get_frags($p46);
  assume {:verifier.code 0} true;
  $p45 := $p47;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10626, 33} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10626, 53} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i64($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10626, 53} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i1.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10626, 33} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10626, 13} true;
  assume {:verifier.code 0} true;
  call $i52 := ldv__builtin_expect($i51, 0);
  // WARNING: %56 = call i64 @ldv__builtin_expect(i64 %55, i64 0), !dbg !8220, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10629, 15} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i64($i52, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10629, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10630, 32} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 440);
  $p55 := $add.ref($add.ref($p0, 440), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10630, 38} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i64($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10630, 49} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64($i56, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10630, 9} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 440);
  $p59 := $add.ref($add.ref($p0, 440), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10630, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p59, $i57);
  // WARNING: store i64 %62, i64* %64, align 8, !dbg !8231, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !17632, metadata !8144), !dbg !17633, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 19} true;
  assume {:verifier.code 0} true;
  $i60 := $sgt.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb9:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 9} true;
  assume {:verifier.code 0} true;
  $i61, $i62, $i63 := $i20, $i25, 0;
  goto $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i60 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10645, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10636, 38} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10636, 38} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10636, 45} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10636, 43} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p65, $mul.ref($i66, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10636, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_unmap_rx_page($p6, $p67, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10637, 19} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10637, 19} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10637, 26} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10637, 24} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p69, $mul.ref($i70, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10637, 48} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p69, $mul.ref($i70, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10637, 48} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10637, 5} true;
  assume {:verifier.code 0} true;
  call put_page($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10638, 19} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10638, 19} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10638, 23} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i75, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10638, 9} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10638, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p77, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10639, 15} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10639, 15} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10639, 25} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10639, 25} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10639, 19} true;
  assume {:verifier.code 0} true;
  $i82 := $and.i32($i79, $i81);
  // WARNING: %85 = and i32 %82, %84, !dbg !8255, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10640, 49} true;
  assume {:verifier.code 0} true;
  $i83 := $sub.i32($i61, 4096);
  // WARNING: %86 = sub i32 %.0211, 4096, !dbg !8256, !verifier.code !8146
  call {:cexpr "remainder"} boogie_si_record_i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10641, 11} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i32($i63, 1);
  // WARNING: %87 = add nsw i32 %.079, 1, !dbg !8257, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 19} true;
  assume {:verifier.code 0} true;
  $i85 := $sgt.i32($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 9} true;
  assume {:verifier.code 0} true;
  $i61, $i62, $i63 := $i83, $i82, $i84;
  assume {:branchcond $i85} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 9} true;
  assume {:verifier.code 0} true;
  assume ($i85 == 1);
  goto $bb12;
$bb15:
  assume !(($i85 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10644, 9} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10650, 5} true;
  assume {:verifier.code 0} true;
  $i86 := 0;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10715, 1} true;
  assume {:verifier.code 0} true;
  $r := $i86;
  $exn := false;
  return;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10655, 13} true;
  assume {:verifier.code 0} true;
  call $p87 := skb_end_pointer($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10656, 80} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10656, 80} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p88, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10656, 14} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p89);
  // WARNING: call void @llvm.dbg.value(metadata %struct.skb_frag_struct* %97, i64 0, metadata !17667, metadata !8144), !dbg !17668, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !17632, metadata !8144), !dbg !17633, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $sgt.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 7} true;
  assume {:verifier.code 0} true;
  $i92, $i93, $i94 := $i20, $i25, 0;
  goto $bb22;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i91 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb22:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10673, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10663, 36} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10663, 36} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10663, 43} true;
  assume {:verifier.code 0} true;
  $i97 := $sext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10663, 41} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p96, $mul.ref($i97, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10663, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_unmap_rx_page($p6, $p98, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 35} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 35} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 42} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 40} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p100, $mul.ref($i101, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 64} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p100, $mul.ref($i101, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 64} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 75} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 75} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 82} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 80} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p106, $mul.ref($i107, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 104} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p106, $mul.ref($i107, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 104} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10665, 35} true;
  assume {:verifier.code 0} true;
  $i111 := $ult.i32(4096, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10665, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10665, 29} true;
  assume {:verifier.code 0} true;
  $i112 := 4096;
  goto $bb26;
$bb25:
  assume !(($i111 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10665, 29} true;
  assume {:verifier.code 0} true;
  $i112 := $i92;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10665, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10664, 3} true;
  assume {:verifier.code 0} true;
  call skb_fill_page_desc($p45, $i94, $p104, $i110, $i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10666, 17} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10666, 17} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10666, 21} true;
  assume {:verifier.code 0} true;
  $i115 := $add.i32($i114, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10666, 7} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10666, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p116, $i115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10667, 13} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p15, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10667, 13} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i32($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10667, 23} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p15, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10667, 23} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i32($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10667, 17} true;
  assume {:verifier.code 0} true;
  $i121 := $and.i32($i118, $i120);
  // WARNING: %129 = and i32 %126, %128, !dbg !8300, !verifier.code !8146
  call {:cexpr "idx"} boogie_si_record_i32($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10668, 47} true;
  assume {:verifier.code 0} true;
  $i122 := $sub.i32($i92, 4096);
  // WARNING: %130 = sub i32 %.114, 4096, !dbg !8301, !verifier.code !8146
  call {:cexpr "remainder"} boogie_si_record_i32($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10669, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i32($i94, 1);
  // WARNING: %131 = add nsw i32 %.1812, 1, !dbg !8302, !verifier.code !8146
  call {:cexpr "i"} boogie_si_record_i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 17} true;
  assume {:verifier.code 0} true;
  $i124 := $sgt.i32($i122, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 7} true;
  assume {:verifier.code 0} true;
  $i92, $i93, $i94 := $i122, $i121, $i123;
  assume {:branchcond $i124} true;
  goto $bb27, $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 7} true;
  assume {:verifier.code 0} true;
  assume ($i124 == 1);
  goto $bb22;
$bb28:
  assume !(($i124 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10672, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10677, 37} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p90, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10677, 37} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.31, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10677, 49} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i32($i126, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10677, 13} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p90, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10677, 25} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i32($M.31, $p128, $i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10678, 30} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p90, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10678, 30} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i32($M.31, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10678, 35} true;
  assume {:verifier.code 0} true;
  $i131 := $sub.i32($i130, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10678, 13} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p90, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10678, 18} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i32($M.31, $p132, $i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10679, 13} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i20, $sub.i32(0, 2));
  // WARNING: %144 = add nsw i32 %22, -2, !dbg !8313, !verifier.code !8146
  call {:cexpr "len"} boogie_si_record_i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10680, 8} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p45, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10680, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p134, $i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10681, 8} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p45, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10681, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p135, $i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10682, 24} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p45, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10682, 24} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i32($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10682, 33} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i137, $i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10682, 8} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p45, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10682, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p139, $i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10683, 13} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p8, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10683, 13} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i64($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10683, 22} true;
  assume {:verifier.code 0} true;
  $i142 := $and.i64($i141, 4294967296);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10683, 39} true;
  assume {:verifier.code 0} true;
  $i143 := $ne.i64($i142, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10683, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i143 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10684, 10} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p45, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10684, 20} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i16($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10684, 20} true;
  assume {:verifier.code 0} true;
  $i146 := $and.i16($i145, $sub.i16(0, 13));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10684, 20} true;
  assume {:verifier.code 0} true;
  $i147 := $or.i16($i146, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10684, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p144, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10685, 10} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p45, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10685, 29} true;
  assume {:verifier.code 0} true;
  $p149 := $bitcast.ref.ref($p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10685, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10686, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i143 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10690, 25} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10690, 25} true;
  assume {:verifier.code 0} true;
  $p151 := $load.ref($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10690, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_vlan_rx($p151, $p40, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 43} true;
  assume {:verifier.code 0} true;
  $i152 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 67} true;
  assume {:verifier.code 0} true;
  $p153 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 67} true;
  assume {:verifier.code 0} true;
  $p154 := $load.ref($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 55} true;
  assume {:verifier.code 0} true;
  $i155 := $p2i.ref.i64($p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 53} true;
  assume {:verifier.code 0} true;
  $i156 := $sub.i64($i152, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 71} true;
  assume {:verifier.code 0} true;
  $i157 := $sdiv.i64($i156, 832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 35} true;
  assume {:verifier.code 0} true;
  $i158 := $trunc.i64.i16($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 28} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i16.i32($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 28} true;
  assume {:verifier.code 0} true;
  $i160 := $trunc.i32.i16($i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10691, 3} true;
  assume {:verifier.code 0} true;
  call skb_record_rx_queue($p45, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10692, 31} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10692, 3} true;
  assume {:verifier.code 0} true;
  call skb_mark_napi_id($p45, $p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10694, 13} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i8.i1($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10694, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i162} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i162 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 30} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p45, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 30} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i32($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 23} true;
  assume {:verifier.code 0} true;
  $i165 := $ult.i32(64, $i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i165} true;
  goto $bb35, $bb36;
$bb34:
  assume !(($i162 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10710, 26} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10710, 5} true;
  assume {:verifier.code 0} true;
  call $i195 := napi_gro_frags($p194);
  assume {:verifier.code 0} true;
  goto $bb38;
$bb35:
  assume ($i165 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 19} true;
  assume {:verifier.code 0} true;
  $i166 := 64;
  goto $bb37;
$bb36:
  assume !(($i165 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 47} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p45, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 47} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i32($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 19} true;
  assume {:verifier.code 0} true;
  $i166 := $i168;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10696, 19} true;
  assume {:verifier.code 0} true;
  // WARNING: %186 = phi i32 [ 64, %181 ], [ %184, %182 ], !dbg !8360, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10697, 15} true;
  assume {:verifier.code 0} true;
  call $p169 := skb_frag_page($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10698, 15} true;
  assume {:verifier.code 0} true;
  call $p170 := lowmem_page_address($p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10699, 52} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p90, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10699, 52} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i32($M.31, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10699, 26} true;
  assume {:verifier.code 0} true;
  $i173 := $zext.i32.i64($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10699, 24} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p170, $mul.ref($i173, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10700, 5} true;
  assume {:verifier.code 0} true;
  call skb_copy_to_linear_data($p45, $p174, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10701, 39} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p90, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10701, 39} true;
  assume {:verifier.code 0} true;
  $i176 := $load.i32($M.31, $p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10701, 51} true;
  assume {:verifier.code 0} true;
  $i177 := $add.i32($i176, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10701, 15} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p90, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10701, 27} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i32($M.31, $p178, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10702, 32} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p90, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10702, 32} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i32($M.31, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10702, 37} true;
  assume {:verifier.code 0} true;
  $i181 := $sub.i32($i180, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10702, 15} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p90, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10702, 20} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i32($M.31, $p182, $i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10703, 26} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p45, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10703, 26} true;
  assume {:verifier.code 0} true;
  $i184 := $load.i32($M.0, $p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10703, 35} true;
  assume {:verifier.code 0} true;
  $i185 := $sub.i32($i184, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10703, 10} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p45, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10703, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p186, $i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10704, 22} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p45, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10704, 22} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i32($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10704, 27} true;
  assume {:verifier.code 0} true;
  $i189 := $add.i32($i188, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10704, 10} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p45, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10704, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p190, $i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10705, 21} true;
  assume {:verifier.code 0} true;
  call $i191 := eth_type_trans($p45, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10705, 10} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p45, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10705, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p192, $i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10706, 5} true;
  assume {:verifier.code 0} true;
  call $i193 := netif_receive_skb($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10708, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10713, 3} true;
  assume {:verifier.code 0} true;
  $i86 := 1;
  goto $bb17;
}
const llvm.prefetch: ref;
axiom (llvm.prefetch == $sub.ref(0, 546057));
procedure  llvm.prefetch($p0: ref, $i1: i32, $i2: i32, $i3: i32);
const myri10ge_ss_busy_polling: ref;
axiom (myri10ge_ss_busy_polling == $sub.ref(0, 547089));
procedure  myri10ge_ss_busy_polling($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9830, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9830, 24} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9830, 30} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9830, 36} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9830, 36} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  // WARNING: %6 = zext i1 %5 to i32, !dbg !8151, !verifier.code !8146
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9831, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9831, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9831, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9831, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !8156, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9833, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9833, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9835, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.7, 982);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9837, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9841, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9841, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9841, 23} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9841, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9843, 16} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9843, 16} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9843, 22} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9843, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9843, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const netdev_alloc_skb: ref;
axiom (netdev_alloc_skb == $sub.ref(0, 548121));
procedure  netdev_alloc_skb($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !17834, metadata !8144), !dbg !17835, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7516, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := __netdev_alloc_skb($p0, $i1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7518, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const napi_get_frags: ref;
axiom (napi_get_frags == $sub.ref(0, 549153));
procedure  napi_get_frags($p0: ref)
  returns ($r: ref);
const skb_end_pointer: ref;
axiom (skb_end_pointer == $sub.ref(0, 550185));
procedure  skb_end_pointer($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7414, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7414, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7414, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7414, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7414, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7414, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7414, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const skb_fill_page_desc: ref;
axiom (skb_fill_page_desc == $sub.ref(0, 551217));
procedure  skb_fill_page_desc($p0: ref, $i1: i32, $p2: ref, $i3: i32, $i4: i32)
{
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !17858, metadata !8144), !dbg !17859, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata %struct.page* %2, i64 0, metadata !17862, metadata !8144), !dbg !17863, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !17864, metadata !8144), !dbg !17865, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7463, 3} true;
  assume {:verifier.code 0} true;
  call __skb_fill_page_desc($p0, $i1, $p2, $i3, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7464, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7465, 63} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7465, 47} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7465, 82} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7465, 47} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7465, 36} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7465, 36} true;
  assume {:verifier.code 0} true;
  $p11 := $p10;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7465, 45} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i8($M.31, $p11, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7467, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_vlan_rx: ref;
axiom (myri10ge_vlan_rx == $sub.ref(0, 552249));
procedure  myri10ge_vlan_rx($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i16;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i32;
  var $i17: i1;
  var $i18: i64;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i16;
  var $i29: i32;
  var $i30: i16;
  var $i31: i16;
  var $i32: i32;
  var $i33: i16;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $i53: i32;
  var $i54: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10547, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10548, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 22} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i64($i6, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 32} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 40} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 63} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 63} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i16($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 43} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i16.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 76} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 40} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10550, 26} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10550, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10550, 24} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10550, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10550, 56} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10550, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10549, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb3;
$bb6:
  assume ($i17 == 1);
  $i18 := $add.i64(2, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10552, 46} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, $mul.ref($i18, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10552, 14} true;
  assume {:verifier.code 0} true;
  call $i20 := csum_partial($p19, 4, 0);
  // WARNING: %23 = call i32 @csum_partial(i8* %22, i32 4, i32 0), !dbg !8179, !verifier.code !8146
  call {:cexpr "vsum"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10553, 52} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10553, 71} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10553, 71} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10553, 38} true;
  assume {:verifier.code 0} true;
  call $i24 := csum_sub($i23, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10553, 12} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p2, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10553, 31} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10553, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10555, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10559, 32} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p4, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10559, 32} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i16($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10559, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10559, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10559, 11} true;
  assume {:verifier.code 0} true;
  call $i31 := __fswab16($i30);
  // WARNING: %36 = call zeroext i16 @__fswab16(i16 zeroext %35), !dbg !8192, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i16($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10560, 38} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i16.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10560, 38} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i32.i16($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10560, 5} true;
  assume {:verifier.code 0} true;
  call $p34 := __vlan_hwaccel_put_tag($p2, 129, $i33);
  $i35 := $add.i64(2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10561, 24} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, $mul.ref($i35, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10561, 5} true;
  assume {:verifier.code 0} true;
  call llvm.memmove.p0i8.p0i8.i64($p36, $p3, 12, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10562, 21} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10562, 21} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10562, 25} true;
  assume {:verifier.code 0} true;
  $i39 := $sub.i32($i38, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10562, 10} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10562, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10563, 26} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p2, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10563, 26} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10563, 35} true;
  assume {:verifier.code 0} true;
  $i43 := $sub.i32($i42, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10563, 10} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p2, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10563, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10564, 15} true;
  assume {:verifier.code 0} true;
  call $p45 := skb_end_pointer($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10565, 78} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10565, 78} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p46, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10565, 12} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10566, 31} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p48, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10566, 31} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.31, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10566, 43} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10566, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p48, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10566, 23} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i32($M.31, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10567, 15} true;
  assume {:verifier.code 0} true;
  call $i53 := skb_frag_size($p48);
  // WARNING: %57 = call i32 @skb_frag_size(%struct.skb_frag_struct* %52), !dbg !8218, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10568, 37} true;
  assume {:verifier.code 0} true;
  $i54 := $sub.i32($i53, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10568, 5} true;
  assume {:verifier.code 0} true;
  call skb_frag_size_set($p48, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10570, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10573, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_record_rx_queue: ref;
axiom (skb_record_rx_queue == $sub.ref(0, 553281));
procedure  skb_record_rx_queue($p0: ref, $i1: i16)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i16;
  var $p5: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !17966, metadata !8144), !dbg !17967, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7622, 24} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i16.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7622, 48} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7622, 24} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i16($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7622, 8} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7622, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p5, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7623, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_mark_napi_id: ref;
axiom (skb_mark_napi_id == $sub.ref(0, 554313));
procedure  skb_mark_napi_id($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8873, 43} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8873, 43} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8873, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8873, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8873, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8874, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_frag_page: ref;
axiom (skb_frag_page == $sub.ref(0, 555345));
procedure  skb_frag_page($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7526, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7526, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.31, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7526, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const skb_copy_to_linear_data: ref;
axiom (skb_copy_to_linear_data == $sub.ref(0, 556377));
procedure  skb_copy_to_linear_data($p0: ref, $p1: ref, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !18003, metadata !8144), !dbg !18004, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7604, 23} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7604, 23} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7604, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7604, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p4, $p1, $i5, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7606, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const eth_type_trans: ref;
axiom (eth_type_trans == $sub.ref(0, 557409));
procedure  eth_type_trans($p0: ref, $p1: ref)
  returns ($r: i16);
const netif_receive_skb: ref;
axiom (netif_receive_skb == $sub.ref(0, 558441));
procedure  netif_receive_skb($p0: ref)
  returns ($r: i32);
const napi_gro_frags: ref;
axiom (napi_gro_frags == $sub.ref(0, 559473));
procedure  napi_gro_frags($p0: ref)
  returns ($r: i32);
const csum_partial: ref;
axiom (csum_partial == $sub.ref(0, 560505));
procedure  csum_partial($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32);
const csum_sub: ref;
axiom (csum_sub == $sub.ref(0, 561537));
procedure  csum_sub($i0: i32, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !18016, metadata !8144), !dbg !18017, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7026, 24} true;
  assume {:verifier.code 0} true;
  $i2 := $xor.i32($i1, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7026, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := csum_add($i0, $i2);
  // WARNING: %4 = call i32 @csum_add(i32 %0, i32 %3), !dbg !8152, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7028, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const __vlan_hwaccel_put_tag: ref;
axiom (__vlan_hwaccel_put_tag == $sub.ref(0, 562569));
procedure  __vlan_hwaccel_put_tag($p0: ref, $i1: i16, $i2: i16)
  returns ($r: ref)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i16;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !18030, metadata !8144), !dbg !18031, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !18032, metadata !8144), !dbg !18033, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8823, 8} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8823, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8824, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8824, 52} true;
  assume {:verifier.code 0} true;
  $i5 := $or.i32($i4, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8824, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i16($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8824, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8824, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8825, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const llvm.memmove.p0i8.p0i8.i64: ref;
axiom (llvm.memmove.p0i8.p0i8.i64 == $sub.ref(0, 563601));
procedure  llvm.memmove.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const skb_frag_size: ref;
axiom (skb_frag_size == $sub.ref(0, 564633));
procedure  skb_frag_size($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7396, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7396, 32} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.31, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7396, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const skb_frag_size_set: ref;
axiom (skb_frag_size_set == $sub.ref(0, 565665));
procedure  skb_frag_size_set($p0: ref, $i1: i32)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.skb_frag_struct* %0, i64 0, metadata !18056, metadata !8144), !dbg !18057, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7404, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7404, 14} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i32($M.31, $p2, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7405, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const csum_add: ref;
axiom (csum_add == $sub.ref(0, 566697));
procedure  csum_add($i0: i32, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !18065, metadata !8144), !dbg !18066, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !18067, metadata !8144), !dbg !18068, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7016, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i32($i0, $i1);
  // WARNING: %3 = add i32 %0, %1, !dbg !8151, !verifier.code !8146
  call {:cexpr "res"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7017, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32($i2, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7017, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7017, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i2, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7017, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const __skb_fill_page_desc: ref;
axiom (__skb_fill_page_desc == $sub.ref(0, 567729));
procedure  __skb_fill_page_desc($p0: ref, $i1: i32, $p2: ref, $i3: i32, $i4: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $i26: i16;
  var $i27: i16;
  var $i28: i16;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !18077, metadata !8144), !dbg !18078, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata %struct.page* %2, i64 0, metadata !18081, metadata !8144), !dbg !18082, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !18083, metadata !8144), !dbg !18084, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7441, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7442, 60} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7442, 60} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7442, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7442, 69} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7442, 67} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p8, $mul.ref($i9, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7443, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p8, $mul.ref($i9, 16));
  $p12 := $add.ref($p8, $mul.ref($i9, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7443, 16} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.ref($M.31, $p12, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7444, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p8, $mul.ref($i9, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7444, 21} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i32($M.31, $p13, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7445, 3} true;
  assume {:verifier.code 0} true;
  call skb_frag_size_set($p10, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7446, 10} true;
  assume {:verifier.code 0} true;
  call $p14 := compound_head($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, 16);
  $p16 := $add.ref($p14, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 57} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 57} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 57} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i8.i1($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 68} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 93} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p14, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 112} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 112} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 71} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 120} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 68} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7449, 10} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7449, 21} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i16($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7449, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i16($i26, $sub.i16(0, 5));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7449, 21} true;
  assume {:verifier.code 0} true;
  $i28 := $or.i16($i27, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7449, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p25, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7450, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7448, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7453, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const compound_head: ref;
axiom (compound_head == $sub.ref(0, 568761));
procedure  compound_head($p0: ref)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6880, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := PageTail($p0);
  // WARNING: %2 = call i32 @PageTail(%struct.page* %0), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6881, 41} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6881, 41} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6881, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6881, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8154, !verifier.code !8146
  call {:cexpr "tmp___2"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6883, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6883, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6885, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6885, 37} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6885, 37} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6887, 11} true;
  assume {:verifier.code 0} true;
  call $i10 := PageTail($p0);
  // WARNING: %12 = call i32 @PageTail(%struct.page* %0), !dbg !8166, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6888, 39} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6888, 39} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6888, 35} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6888, 15} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 1);
  // WARNING: %16 = call i64 @ldv__builtin_expect(i64 %15, i64 1), !dbg !8171, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6890, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6890, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6891, 7} true;
  assume {:verifier.code 0} true;
  $p16 := $p9;
  goto $bb5;
$bb4:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6900, 1} true;
  assume {:verifier.code 0} true;
  $r := $p16;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6895, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6898, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $p0;
  goto $bb5;
}
const __netdev_alloc_skb: ref;
axiom (__netdev_alloc_skb == $sub.ref(0, 569793));
procedure  __netdev_alloc_skb($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref);
const myri10ge_change_mtu: ref;
axiom (myri10ge_change_mtu == $sub.ref(0, 570825));
procedure  myri10ge_change_mtu($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $p18: ref;
  var $i8: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !18160, metadata !8144), !dbg !18161, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13814, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13815, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %4, i64 0, metadata !18170, metadata !8144), !dbg !18171, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13818, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $sle.i32($i1, 67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13818, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13818, 21} true;
  assume {:verifier.code 0} true;
  assume ($i4 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13820, 5} true;
  assume {:verifier.code 0} true;
  call $i7 := netdev_err.ref.ref.i32($p0, .str.10, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13822, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb6;
$bb3:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13818, 32} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i1, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13818, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i5, 9014);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13818, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13818, 7} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13841, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13827, 86} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13827, 86} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13827, 3} true;
  assume {:verifier.code 0} true;
  call $i11 := netdev_info.ref.ref.i32.i32($p0, .str.11, $i10, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13830, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13830, 12} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13830, 20} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13830, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13832, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := myri10ge_close($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13833, 10} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13833, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13834, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := myri10ge_open($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13836, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13837, 10} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13837, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, $i1);
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13839, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb6;
}
const myri10ge_set_mac_address: ref;
axiom (myri10ge_set_mac_address == $sub.ref(0, 571857));
procedure  myri10ge_set_mac_address($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $i8: i8;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i12: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13773, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13774, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13775, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13776, 54} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13776, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13776, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := is_valid_ether_addr($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13776, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i8($i7);
  // WARNING: %9 = zext i1 %8 to i8, !dbg !8161, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13778, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i8.i1($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13778, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13780, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13783, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13783, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13784, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 99);
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13805, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13789, 58} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13789, 45} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13789, 12} true;
  assume {:verifier.code 0} true;
  call $i15 := myri10ge_update_mac_address($p4, $p14);
  // WARNING: %20 = call i32 @myri10ge_update_mac_address(%struct.myri10ge_priv* %5, i8* %19), !dbg !8179, !verifier.code !8144
  call {:cexpr "status"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13791, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13791, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13793, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := netdev_err.ref.ref.i32($p0, .str.12, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13796, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $i15;
  goto $bb6;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13801, 23} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13801, 23} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13801, 56} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13801, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13801, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p19, $p21, 6, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13803, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb6;
}
const is_valid_ether_addr: ref;
axiom (is_valid_ether_addr == $sub.ref(0, 572889));
procedure  is_valid_ether_addr($p0: ref)
  returns ($r: i1)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i8;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8790, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := is_multicast_ether_addr($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8790, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !8150, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8792, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8792, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8794, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8797, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8797, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8799, 15} true;
  assume {:verifier.code 0} true;
  call $i6 := is_zero_ether_addr($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8799, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i8($i6);
  // WARNING: %11 = zext i1 %10 to i8, !dbg !8166, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8801, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i8.i1($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8801, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb12;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8803, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := 1;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8806, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8806, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8808, 5} true;
  assume {:verifier.code 0} true;
  $i11 := 1;
  goto $bb11;
$bb10:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8811, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i11;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8814, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8814, 3} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
}
const is_multicast_ether_addr: ref;
axiom (is_multicast_ether_addr == $sub.ref(0, 573921));
procedure  is_multicast_ether_addr($p0: ref)
  returns ($r: i1)
{
  var $i1: i8;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8777, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $load.i8($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8777, 12} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8777, 24} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8777, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8777, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const is_zero_ether_addr: ref;
axiom (is_zero_ether_addr == $sub.ref(0, 574953));
procedure  is_zero_ether_addr($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $p4: ref;
  var $i5: i16;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 69} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 89} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 67} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 52} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 50} true;
  assume {:verifier.code 0} true;
  $i7 := $or.i32($i2, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 96} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8769, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const myri10ge_xmit: ref;
axiom (myri10ge_xmit == $sub.ref(0, 575985));
procedure  myri10ge_xmit($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i8;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i16;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $i39: i1;
  var $p40: ref;
  var $i41: i32;
  var $i42: i32;
  var $p43: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $i51: i64;
  var $i52: i64;
  var $i53: i1;
  var $i54: i32;
  var $i55: i16;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i16;
  var $i61: i32;
  var $i62: i32;
  var $i63: i16;
  var $i64: i1;
  var $i65: i32;
  var $i66: i64;
  var $i67: i64;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i72: i32;
  var $i73: i1;
  var $i71: i1;
  var $i74: i32;
  var $i75: i64;
  var $i76: i64;
  var $i77: i1;
  var $i78: i32;
  var $i79: i1;
  var $i84: i32;
  var $i85: i32;
  var $i86: i8;
  var $i80: i16;
  var $i81: i16;
  var $i82: i8;
  var $i83: i8;
  var $i91: i32;
  var $i92: i32;
  var $i93: i8;
  var $i87: i16;
  var $i88: i16;
  var $i89: i8;
  var $i90: i8;
  var $i94: i16;
  var $i95: i16;
  var $i96: i8;
  var $i97: i8;
  var $i98: i1;
  var $i99: i32;
  var $i100: i32;
  var $i101: i32;
  var $i102: i32;
  var $i103: i1;
  var $i104: i8;
  var $i105: i1;
  var $i106: i32;
  var $i107: i16;
  var $i108: i32;
  var $p109: ref;
  var $i110: i32;
  var $i111: i1;
  var $i112: i32;
  var $i113: i64;
  var $i114: i64;
  var $i115: i1;
  var $i116: i32;
  var $i117: i16;
  var $i118: i16;
  var $p123: ref;
  var $i124: i32;
  var $i125: i1;
  var $i126: i32;
  var $i127: i32;
  var $i128: i8;
  var $p129: ref;
  var $i130: i32;
  var $i131: i1;
  var $i132: i32;
  var $i133: i64;
  var $i134: i64;
  var $i135: i1;
  var $i136: i32;
  var $i137: i1;
  var $p138: ref;
  var $p139: ref;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $i145: i8;
  var $i119: i16;
  var $i120: i16;
  var $i121: i32;
  var $i122: i8;
  var $i146: i32;
  var $p147: ref;
  var $i148: i32;
  var $p149: ref;
  var $i150: i32;
  var $i151: i32;
  var $p152: ref;
  var $p153: ref;
  var $i154: i64;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: i64;
  var $i162: i64;
  var $p163: ref;
  var $p164: ref;
  var $i165: i64;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $i170: i64;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $i176: i8;
  var $i177: i32;
  var $i178: i32;
  var $i179: i32;
  var $i180: i32;
  var $i181: i32;
  var $i182: i16;
  var $i183: i64;
  var $i184: i32;
  var $i185: i32;
  var $p186: ref;
  var $i187: i8;
  var $i188: i32;
  var $i189: i64;
  var $i190: i32;
  var $i191: i32;
  var $i192: i1;
  var $i207: i1;
  var $i208: i32;
  var $i209: i64;
  var $i210: i64;
  var $i211: i1;
  var $i212: i32;
  var $p213: ref;
  var $i214: i32;
  var $i215: i32;
  var $p216: ref;
  var $i217: i32;
  var $i218: i32;
  var $i219: i32;
  var $i220: i32;
  var $i221: i1;
  var $i222: i32;
  var $i223: i32;
  var $i224: i32;
  var $i225: i8;
  var $i226: i32;
  var $i227: i1;
  var $i228: i8;
  var $i229: i32;
  var $i230: i32;
  var $i231: i8;
  var $i232: i64;
  var $i233: i64;
  var $p234: ref;
  var $p235: ref;
  var $i236: i1;
  var $i237: i32;
  var $i238: i64;
  var $i239: i64;
  var $i240: i1;
  var $i241: i1;
  var $i242: i32;
  var $i243: i32;
  var $i244: i1;
  var $i245: i32;
  var $i246: i32;
  var $i247: i8;
  var $i248: i32;
  var $i249: i32;
  var $i250: i8;
  var $i251: i32;
  var $i252: i32;
  var $i253: i8;
  var $i254: i32;
  var $i255: i8;
  var $i256: i32;
  var $i257: i32;
  var $i258: i8;
  var $i259: i32;
  var $i260: i32;
  var $i261: i8;
  var $i262: i32;
  var $i263: i32;
  var $i264: i32;
  var $i265: i32;
  var $i266: i32;
  var $i267: i32;
  var $i273: i1;
  var $i274: i32;
  var $i275: i64;
  var $i276: i64;
  var $i277: i1;
  var $i278: i32;
  var $i279: i1;
  var $i280: i32;
  var $i281: i8;
  var $i282: i32;
  var $i283: i32;
  var $i284: i8;
  var $i285: i32;
  var $i286: i32;
  var $i287: i8;
  var $i288: i32;
  var $i268: i32;
  var $i269: i32;
  var $i270: i8;
  var $i271: i8;
  var $i272: i32;
  var $i289: i32;
  var $i290: i32;
  var $i291: i8;
  var $i292: i8;
  var $i293: i32;
  var $p294: ref;
  var $i295: i32;
  var $p296: ref;
  var $i297: i32;
  var $i298: i16;
  var $i299: i16;
  var $p300: ref;
  var $p301: ref;
  var $p302: ref;
  var $i303: i16;
  var $i304: i32;
  var $i305: i16;
  var $i306: i16;
  var $p307: ref;
  var $i308: i8;
  var $p309: ref;
  var $i310: i32;
  var $i311: i8;
  var $i312: i32;
  var $i313: i32;
  var $i314: i32;
  var $i315: i32;
  var $i316: i8;
  var $i317: i32;
  var $i318: i32;
  var $i319: i8;
  var $p320: ref;
  var $i321: i32;
  var $i322: i32;
  var $p323: ref;
  var $i324: i32;
  var $i325: i32;
  var $i326: i32;
  var $i327: i1;
  var $i328: i1;
  var $i330: i1;
  var $i331: i8;
  var $i332: i1;
  var $i333: i32;
  var $i334: i1;
  var $i329: i16;
  var $i335: i32;
  var $i336: i1;
  var $i337: i32;
  var $i338: i64;
  var $i339: i64;
  var $i340: i1;
  var $i341: i32;
  var $i342: i16;
  var $i343: i32;
  var $i344: i32;
  var $i345: i16;
  var $i346: i16;
  var $i347: i16;
  var $i348: i16;
  var $i349: i1;
  var $i199: i8;
  var $p200: ref;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i16;
  var $i205: i32;
  var $i206: i32;
  var $i350: i32;
  var $i351: i16;
  var $i352: i32;
  var $i353: i32;
  var $p354: ref;
  var $i355: i8;
  var $i193: i32;
  var $i194: i16;
  var $i195: i32;
  var $i196: i32;
  var $p197: ref;
  var $i198: i8;
  var $i356: i1;
  var $i357: i32;
  var $i358: i32;
  var $i359: i32;
  var $i360: i32;
  var $p361: ref;
  var $p362: ref;
  var $i363: i32;
  var $i364: i32;
  var $p365: ref;
  var $i366: i32;
  var $i367: i32;
  var $p368: ref;
  var $p369: ref;
  var $p370: ref;
  var $p371: ref;
  var $i372: i64;
  var $p373: ref;
  var $i374: i32;
  var $i375: i32;
  var $p376: ref;
  var $p377: ref;
  var $p378: ref;
  var $i379: i64;
  var $i380: i64;
  var $p381: ref;
  var $p382: ref;
  var $i383: i64;
  var $p384: ref;
  var $p385: ref;
  var $p386: ref;
  var $p387: ref;
  var $i388: i64;
  var $p389: ref;
  var $p390: ref;
  var $i391: i8;
  var $i392: i64;
  var $i393: i64;
  var $p394: ref;
  var $p395: ref;
  var $i396: i1;
  var $p397: ref;
  var $p398: ref;
  var $p399: ref;
  var $i400: i8;
  var $i401: i32;
  var $i402: i32;
  var $i403: i8;
  var $p404: ref;
  var $p405: ref;
  var $i406: i8;
  var $i407: i32;
  var $i408: i32;
  var $i409: i1;
  var $i410: i32;
  var $p411: ref;
  var $i412: i32;
  var $i413: i32;
  var $p414: ref;
  var $i415: i32;
  var $i416: i32;
  var $p417: ref;
  var $p418: ref;
  var $i419: i64;
  var $p420: ref;
  var $p421: ref;
  var $p422: ref;
  var $p423: ref;
  var $p424: ref;
  var $p425: ref;
  var $p426: ref;
  var $i427: i32;
  var $i428: i1;
  var $p429: ref;
  var $i430: i32;
  var $i431: i1;
  var $p432: ref;
  var $p433: ref;
  var $p434: ref;
  var $p435: ref;
  var $i436: i32;
  var $i437: i32;
  var $p438: ref;
  var $i439: i32;
  var $i440: i1;
  var $p441: ref;
  var $i442: i32;
  var $i443: i32;
  var $p444: ref;
  var $i445: i32;
  var $p446: ref;
  var $i447: i32;
  var $i448: i32;
  var $p449: ref;
  var $i450: i32;
  var $p451: ref;
  var $i452: i32;
  var $i453: i32;
  var $p454: ref;
  var $p455: ref;
  var $i456: i64;
  var $p457: ref;
  var $p458: ref;
  var $i459: i32;
  var $p460: ref;
  var $p461: ref;
  var $i462: i64;
  var $p463: ref;
  var $p464: ref;
  var $i465: i32;
  var $i466: i1;
  var $p467: ref;
  var $p468: ref;
  var $i469: i64;
  var $p470: ref;
  var $p471: ref;
  var $p472: ref;
  var $i473: i64;
  var $i474: i1;
  var $p475: ref;
  var $p476: ref;
  var $p477: ref;
  var $p478: ref;
  var $i479: i64;
  var $p480: ref;
  var $p481: ref;
  var $i482: i64;
  var $i483: i64;
  var $p484: ref;
  var $p485: ref;
  var $p486: ref;
  var $p487: ref;
  var $i488: i64;
  var $p489: ref;
  var $p490: ref;
  var $i491: i64;
  var $i492: i64;
  var $p493: ref;
  var $p494: ref;
  var $i495: i64;
  var $p496: ref;
  var $p497: ref;
  var $p498: ref;
  var $p499: ref;
  var $i500: i64;
  var $p501: ref;
  var $p502: ref;
  var $i503: i32;
  var $p504: ref;
  var $i505: i32;
  var $i506: i32;
  var $i507: i1;
  var $i508: i1;
  var $i509: i8;
  var $i510: i1;
  var $p511: ref;
  var $p512: ref;
  var $i513: i32;
  var $i514: i32;
  var $i515: i1;
  var $p516: ref;
  var $i517: i32;
  var $i518: i32;
  var $p519: ref;
  var $p520: ref;
  var $p521: ref;
  var $i522: i64;
  var $i523: i64;
  var $p524: ref;
  var $p525: ref;
  var $i44: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13192, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13193, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13194, 11} true;
  assume {:verifier.code 0} true;
  call $i4 := skb_get_queue_mapping($p0);
  // WARNING: %5 = call zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %0), !dbg !8155, !verifier.code !8144
  call {:cexpr "queue"} boogie_si_record_i16($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13195, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13195, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.32, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13195, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i16.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13195, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p6, $mul.ref($i7, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13196, 72} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13196, 72} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.33, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13196, 77} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13196, 18} true;
  assume {:verifier.code 0} true;
  call $p12 := netdev_get_tx_queue($p10, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13197, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p6, $mul.ref($i7, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13198, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  $p14 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13201, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.34, $p14);
  $p16 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13202, 16} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.35, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13202, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i32($i17, $sub.i32(0, 1));
  $p19 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13202, 34} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.36, $p19);
  $p21 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13202, 45} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.37, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13202, 39} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i32($i20, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13202, 27} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i32($i18, $i23);
  // WARNING: %26 = add nsw i32 %20, %25, !dbg !8182, !verifier.code !8144
  call {:cexpr "avail"} boogie_si_record_i32($i24);
  // WARNING: call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !18362, metadata !8144), !dbg !18363, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !18364, metadata !8144), !dbg !18365, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13205, 13} true;
  assume {:verifier.code 0} true;
  call $i25 := skb_is_gso($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13205, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i1.i8($i25);
  // WARNING: %28 = zext i1 %27 to i8, !dbg !8190, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i8($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13207, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i8.i1($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13207, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13209, 15} true;
  assume {:verifier.code 0} true;
  call $p28 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13210, 54} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13210, 54} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13210, 54} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i16($M.31, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13210, 11} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i16.i32($i31);
  // WARNING: %35 = zext i16 %34 to i32, !dbg !8202, !verifier.code !8144
  call {:cexpr "mss"} boogie_si_record_i32($i32);
  // WARNING: call void @llvm.dbg.value(metadata i32 %35, i64 0, metadata !18364, metadata !8144), !dbg !18365, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13213, 3} true;
  assume {:verifier.code 0} true;
  $i33, $i34 := $i32, 64;
  goto $bb4;
$bb3:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  $i33, $i34 := 0, 12;
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13217, 39} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i24, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13217, 39} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i1.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13217, 33} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13217, 13} true;
  assume {:verifier.code 0} true;
  call $i38 := ldv__builtin_expect($i37, 0);
  // WARNING: %41 = call i64 @ldv__builtin_expect(i64 %40, i64 0), !dbg !8207, !verifier.code !8144
  call {:cexpr "tmp___2"} boogie_si_record_i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13219, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i64($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13219, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i39 == 1);
  $p40 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13221, 26} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.38, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13221, 37} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i41, 1);
  $p43 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13221, 20} true;
  assume {:verifier.code 0} true;
  $M.38 := $store.i32($M.38, $p43, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13222, 5} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_queue($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13224, 5} true;
  assume {:verifier.code 0} true;
  $i44 := 16;
  goto $bb7;
$bb6:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13558, 1} true;
  assume {:verifier.code 0} true;
  $r := $i44;
  $exn := false;
  return;
$bb8:
  // WARNING: call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !18399, metadata !8144), !dbg !18400, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !18401, metadata !8144), !dbg !18402, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !18403, metadata !8144), !dbg !18404, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 50} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 71} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 48} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 33} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 80} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i32($i48, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 80} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i1.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 33} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13233, 13} true;
  assume {:verifier.code 0} true;
  call $i52 := ldv__builtin_expect($i51, 1);
  // WARNING: %57 = call i64 @ldv__builtin_expect(i64 %56, i64 1), !dbg !8234, !verifier.code !8144
  call {:cexpr "tmp___7"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13236, 15} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i64($i52, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13236, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13238, 15} true;
  assume {:verifier.code 0} true;
  call $i54 := skb_checksum_start_offset($p0);
  // WARNING: %60 = call i32 @skb_checksum_start_offset(%struct.sk_buff* %0), !dbg !8240, !verifier.code !8144
  call {:cexpr "tmp___3"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13239, 20} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  // WARNING: %61 = trunc i32 %60 to i16, !dbg !8245, !verifier.code !8144
  call {:cexpr "cksum_offset"} boogie_si_record_i16($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 25} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i16.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 57} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 76} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 95} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p58, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 95} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i16($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 46} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i16.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 44} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i56, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13240, 25} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i16($i62);
  // WARNING: %69 = trunc i32 %68 to i16, !dbg !8246, !verifier.code !8144
  call {:cexpr "pseudo_hdr_offset"} boogie_si_record_i16($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13241, 39} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13241, 39} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i1.i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13241, 35} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13241, 15} true;
  assume {:verifier.code 0} true;
  call $i67 := ldv__builtin_expect($i66, 0);
  // WARNING: %73 = call i64 @ldv__builtin_expect(i64 %72, i64 0), !dbg !8254, !verifier.code !8144
  call {:cexpr "tmp___5"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13243, 17} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.i64($i67, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13243, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  $i94, $i95, $i96, $i97 := 0, 0, 18, 0;
  goto $bb24;
$bb11:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 45} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i16.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 73} true;
  assume {:verifier.code 0} true;
  $i70 := $ugt.i32($i69, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 80} true;
  assume {:verifier.code 0} true;
  $i71 := 1;
  assume {:branchcond $i70} true;
  goto $bb13, $bb15;
$bb12:
  assume !(($i68 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13265, 21} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32(18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13265, 42} true;
  assume {:verifier.code 0} true;
  $i92 := $or.i32($i91, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13265, 15} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  // WARNING: %101 = trunc i32 %100 to i8, !dbg !8297, !verifier.code !8144
  call {:cexpr "flags"} boogie_si_record_i8($i93);
  assume {:verifier.code 0} true;
  $i87, $i88, $i89, $i90 := $i63, $i55, $i93, 4;
  goto $bb23;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 80} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 80} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i1.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 37} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 17} true;
  assume {:verifier.code 0} true;
  call $i76 := ldv__builtin_expect($i75, 0);
  // WARNING: %85 = call i64 @ldv__builtin_expect(i64 %84, i64 0), !dbg !8272, !verifier.code !8144
  call {:cexpr "tmp___6"} boogie_si_record_i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13248, 19} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i64($i76, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13248, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i70 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 83} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i16.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 116} true;
  assume {:verifier.code 0} true;
  $i73 := $ugt.i32($i72, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13245, 80} true;
  assume {:verifier.code 0} true;
  $i71 := $i73;
  goto $bb14;
$bb16:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13250, 19} true;
  assume {:verifier.code 0} true;
  call $i78 := skb_checksum_help($p0);
  // WARNING: %88 = call i32 @skb_checksum_help(%struct.sk_buff* %0), !dbg !8278, !verifier.code !8144
  call {:cexpr "tmp___4"} boogie_si_record_i32($i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13252, 21} true;
  assume {:verifier.code 0} true;
  $i79 := $ne.i32($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13252, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb18, $bb19;
$bb17:
  assume !(($i77 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13261, 23} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32(18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13261, 44} true;
  assume {:verifier.code 0} true;
  $i85 := $or.i32($i84, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13261, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i32.i8($i85);
  // WARNING: %96 = trunc i32 %95 to i8, !dbg !8292, !verifier.code !8144
  call {:cexpr "flags"} boogie_si_record_i8($i86);
  assume {:verifier.code 0} true;
  $i80, $i81, $i82, $i83 := $i63, $i55, $i86, 4;
  goto $bb22;
$bb18:
  assume ($i79 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13253, 11} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i79 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13553, 3} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_any($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13554, 30} true;
  assume {:verifier.code 0} true;
  $p520 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 440);
  $p521 := $add.ref($add.ref($add.ref($p6, $mul.ref($i7, 688)), 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13554, 36} true;
  assume {:verifier.code 0} true;
  $i522 := $load.i64($M.40, $p521);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13554, 47} true;
  assume {:verifier.code 0} true;
  $i523 := $add.i64($i522, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13554, 7} true;
  assume {:verifier.code 0} true;
  $p524 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 440);
  $p525 := $add.ref($add.ref($add.ref($p6, $mul.ref($i7, 688)), 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13554, 24} true;
  assume {:verifier.code 0} true;
  $M.40 := $store.i64($M.40, $p525, $i523);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13556, 3} true;
  assume {:verifier.code 0} true;
  $i44 := 0;
  goto $bb7;
$bb21:
  // WARNING: call void @llvm.dbg.value(metadata i16 0, i64 0, metadata !18399, metadata !8144), !dbg !18400, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13259, 7} true;
  assume {:verifier.code 0} true;
  $i80, $i81, $i82, $i83 := 0, 0, 18, 0;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13263, 5} true;
  assume {:verifier.code 0} true;
  $i87, $i88, $i89, $i90 := $i80, $i81, $i82, $i83;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13267, 3} true;
  assume {:verifier.code 0} true;
  $i94, $i95, $i96, $i97 := $i87, $i88, $i89, $i90;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.28 = phi i8 [ %.17, %102 ], [ 0, %103 ], !verifier.code !8144
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13271, 11} true;
  assume {:verifier.code 0} true;
  $i98 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13271, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13274, 15} true;
  assume {:verifier.code 0} true;
  call $i99 := skb_transport_offset($p0);
  // WARNING: %107 = call i32 @skb_transport_offset(%struct.sk_buff* %0), !dbg !8304, !verifier.code !8144
  call {:cexpr "tmp___8"} boogie_si_record_i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13275, 15} true;
  assume {:verifier.code 0} true;
  call $i100 := tcp_hdrlen($p0);
  // WARNING: %108 = call i32 @tcp_hdrlen(%struct.sk_buff* %0), !dbg !8309, !verifier.code !8144
  call {:cexpr "tmp___9"} boogie_si_record_i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13276, 48} true;
  assume {:verifier.code 0} true;
  $i101 := $add.i32($i99, $i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13276, 22} true;
  assume {:verifier.code 0} true;
  $i102 := $sub.i32(0, $i101);
  // WARNING: %110 = sub i32 0, %109, !dbg !8313, !verifier.code !8144
  call {:cexpr "cum_len"} boogie_si_record_i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13277, 16} true;
  assume {:verifier.code 0} true;
  call $i103 := skb_is_gso_v6($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13277, 14} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i1.i8($i103);
  // WARNING: %112 = zext i1 %111 to i8, !dbg !8315, !verifier.code !8144
  call {:cexpr "tmp___13"} boogie_si_record_i8($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13279, 15} true;
  assume {:verifier.code 0} true;
  $i105 := $trunc.i8.i1($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13279, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb27, $bb28;
$bb26:
  assume !(($i98 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13298, 12} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13298, 12} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13298, 16} true;
  assume {:verifier.code 0} true;
  $i125 := $ule.i32($i124, 1520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13298, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb34, $bb35;
$bb27:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13281, 18} true;
  assume {:verifier.code 0} true;
  call $i106 := tcp_hdrlen($p0);
  // WARNING: %115 = call i32 @tcp_hdrlen(%struct.sk_buff* %0), !dbg !8321, !verifier.code !8144
  call {:cexpr "tmp___10"} boogie_si_record_i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13282, 22} true;
  assume {:verifier.code 0} true;
  $i107 := $trunc.i32.i16($i106);
  // WARNING: %116 = trunc i32 %115 to i16, !dbg !8326, !verifier.code !8144
  call {:cexpr "cksum_offset"} boogie_si_record_i16($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13283, 45} true;
  assume {:verifier.code 0} true;
  $i108 := $sub.i32(0, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13283, 63} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p3, 932);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13283, 63} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.39, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13283, 56} true;
  assume {:verifier.code 0} true;
  $i111 := $ugt.i32($i108, $i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13283, 56} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i1.i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13283, 38} true;
  assume {:verifier.code 0} true;
  $i113 := $sext.i32.i64($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13283, 18} true;
  assume {:verifier.code 0} true;
  call $i114 := ldv__builtin_expect($i113, 0);
  // WARNING: %123 = call i64 @ldv__builtin_expect(i64 %122, i64 0), !dbg !8331, !verifier.code !8144
  call {:cexpr "tmp___12"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13285, 20} true;
  assume {:verifier.code 0} true;
  $i115 := $ne.i64($i114, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13285, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb29, $bb30;
$bb28:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  $i117 := $i95;
  goto $bb32;
$bb29:
  assume ($i115 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13287, 20} true;
  assume {:verifier.code 0} true;
  call $i116 := myri10ge_sw_tso($p0, $p1);
  // WARNING: %126 = call i32 @myri10ge_sw_tso(%struct.sk_buff* %0, %struct.net_device* %1), !dbg !8337, !verifier.code !8144
  call {:cexpr "tmp___11"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13289, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $i116;
  goto $bb7;
$bb30:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13293, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $i107;
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13296, 25} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i32.i16($i33);
  // WARNING: %131 = trunc i32 %.047 to i16, !dbg !8344, !verifier.code !8144
  call {:cexpr "pseudo_hdr_offset"} boogie_si_record_i16($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13297, 3} true;
  assume {:verifier.code 0} true;
  $i119, $i120, $i121, $i122 := $i118, $i117, $i102, 3;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13321, 9} true;
  assume {:verifier.code 0} true;
  call $i146 := skb_headlen($p0);
  // WARNING: %165 = call i32 @skb_headlen(%struct.sk_buff* %0), !dbg !8383, !verifier.code !8144
  call {:cexpr "len"} boogie_si_record_i32($i146);
  $p147 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13322, 13} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i32($M.37, $p147);
  $p149 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13322, 23} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i32($M.35, $p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13322, 17} true;
  assume {:verifier.code 0} true;
  $i151 := $and.i32($i148, $i150);
  // WARNING: %170 = and i32 %167, %169, !dbg !8389, !verifier.code !8144
  call {:cexpr "idx"} boogie_si_record_i32($i151);
  $p152 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13323, 8} true;
  assume {:verifier.code 0} true;
  $p153 := $load.ref($M.41, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13323, 15} true;
  assume {:verifier.code 0} true;
  $i154 := $sext.i32.i64($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13323, 13} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p153, $mul.ref($i154, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13323, 37} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p153, $mul.ref($i154, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13323, 41} true;
  assume {:verifier.code 0} true;
  $M.42 := $store.ref($M.42, $p156, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13324, 29} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13324, 29} true;
  assume {:verifier.code 0} true;
  $p158 := $load.ref($M.43, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13324, 48} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13324, 48} true;
  assume {:verifier.code 0} true;
  $p160 := $load.ref($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13324, 54} true;
  assume {:verifier.code 0} true;
  $i161 := $zext.i32.i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13324, 9} true;
  assume {:verifier.code 0} true;
  call $i162 := pci_map_single($p158, $p160, $i161, 1);
  // WARNING: %181 = call i64 @pci_map_single(%struct.pci_dev* %177, i8* %179, i64 %180, i32 1), !dbg !8400, !verifier.code !8144
  call {:cexpr "bus"} boogie_si_record_i64($i162);
  $p163 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13325, 8} true;
  assume {:verifier.code 0} true;
  $p164 := $load.ref($M.41, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13325, 15} true;
  assume {:verifier.code 0} true;
  $i165 := $sext.i32.i64($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13325, 13} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p164, $mul.ref($i165, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13325, 37} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($add.ref($p164, $mul.ref($i165, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13325, 41} true;
  assume {:verifier.code 0} true;
  $M.44 := $store.i64($M.44, $p167, $i162);
  $p168 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13326, 8} true;
  assume {:verifier.code 0} true;
  $p169 := $load.ref($M.41, $p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13326, 15} true;
  assume {:verifier.code 0} true;
  $i170 := $sext.i32.i64($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13326, 13} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p169, $mul.ref($i170, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13326, 37} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($add.ref($p169, $mul.ref($i170, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13326, 41} true;
  assume {:verifier.code 0} true;
  $M.45 := $store.i32($M.45, $p172, $i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13327, 14} true;
  assume {:verifier.code 0} true;
  call $p173 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13328, 58} true;
  assume {:verifier.code 0} true;
  $p174 := $bitcast.ref.ref($p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13328, 58} true;
  assume {:verifier.code 0} true;
  $p175 := $p174;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13328, 58} true;
  assume {:verifier.code 0} true;
  $i176 := $load.i8($M.31, $p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13328, 14} true;
  assume {:verifier.code 0} true;
  $i177 := $zext.i8.i32($i176);
  // WARNING: %196 = zext i8 %195 to i32, !dbg !8417, !verifier.code !8144
  call {:cexpr "frag_cnt"} boogie_si_record_i32($i177);
  // WARNING: call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !18597, metadata !8144), !dbg !18598, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !18599, metadata !8144), !dbg !18600, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !18601, metadata !8144), !dbg !18602, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13332, 3} true;
  assume {:verifier.code 0} true;
  $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $p186, $i187 := 0, 0, $i151, $i146, $i120, $i162, $i121, 0, $p15, $i122;
  goto $bb43;
$bb34:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13300, 19} true;
  assume {:verifier.code 0} true;
  $i126 := $zext.i8.i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13300, 40} true;
  assume {:verifier.code 0} true;
  $i127 := $or.i32($i126, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13300, 13} true;
  assume {:verifier.code 0} true;
  $i128 := $trunc.i32.i8($i127);
  // WARNING: %139 = trunc i32 %138 to i8, !dbg !8354, !verifier.code !8144
  call {:cexpr "flags"} boogie_si_record_i8($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13301, 41} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13301, 41} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i32($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13301, 45} true;
  assume {:verifier.code 0} true;
  $i131 := $ule.i32($i130, 59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13301, 45} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i1.i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13301, 36} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13301, 16} true;
  assume {:verifier.code 0} true;
  call $i134 := ldv__builtin_expect($i133, 0);
  // WARNING: %145 = call i64 @ldv__builtin_expect(i64 %144, i64 0), !dbg !8358, !verifier.code !8144
  call {:cexpr "tmp___15"} boogie_si_record_i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13303, 18} true;
  assume {:verifier.code 0} true;
  $i135 := $ne.i64($i134, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13303, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb36, $bb37;
$bb35:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  $i145 := $i96;
  goto $bb42;
$bb36:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13305, 18} true;
  assume {:verifier.code 0} true;
  call $i136 := skb_padto($p0, 60);
  // WARNING: %148 = call i32 @skb_padto(%struct.sk_buff* %0, i32 60), !dbg !8364, !verifier.code !8144
  call {:cexpr "tmp___14"} boogie_si_record_i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13307, 20} true;
  assume {:verifier.code 0} true;
  $i137 := $ne.i32($i136, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13307, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb38, $bb39;
$bb37:
  assume !(($i135 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb38:
  assume ($i137 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13308, 36} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 440);
  $p139 := $add.ref($add.ref($add.ref($p6, $mul.ref($i7, 688)), 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13308, 42} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i64($M.40, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13308, 53} true;
  assume {:verifier.code 0} true;
  $i141 := $add.i64($i140, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13308, 13} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 440);
  $p143 := $add.ref($add.ref($add.ref($p6, $mul.ref($i7, 688)), 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13308, 30} true;
  assume {:verifier.code 0} true;
  $M.40 := $store.i64($M.40, $p143, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13309, 9} true;
  assume {:verifier.code 0} true;
  $i44 := 0;
  goto $bb7;
$bb39:
  assume !(($i137 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13313, 12} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13313, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p144, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13314, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13317, 3} true;
  assume {:verifier.code 0} true;
  $i145 := $i128;
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i119, $i120, $i121, $i122 := $i94, $i95, 0, $i145;
  goto $bb33;
$bb43:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13335, 9} true;
  assume {:verifier.code 0} true;
  $i188 := $trunc.i64.i32($i183);
  // WARNING: %198 = trunc i64 %.027 to i32, !dbg !8427, !verifier.code !8144
  call {:cexpr "low"} boogie_si_record_i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13336, 44} true;
  assume {:verifier.code 0} true;
  $i189 := $lshr.i64($i183, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13336, 24} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i64.i32($i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13336, 14} true;
  assume {:verifier.code 0} true;
  call $i191 := __fswab32($i190);
  // WARNING: %201 = call i32 @__fswab32(i32 %200), !dbg !8433, !verifier.code !8144
  call {:cexpr "tmp___17"} boogie_si_record_i32($i191);
  // WARNING: call void @llvm.dbg.value(metadata i32 %201, i64 0, metadata !18613, metadata !8144), !dbg !18614, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 11} true;
  assume {:verifier.code 0} true;
  $i192 := $ne.i32($i181, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 7} true;
  assume {:verifier.code 0} true;
  $i193, $i194, $i195, $i196, $p197, $i198 := $i178, $i182, $i184, $i185, $p186, $i187;
  assume {:branchcond $i192} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i192 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 7} true;
  assume {:verifier.code 0} true;
  $i199, $p200, $i201, $i202, $i203, $i204, $i205, $i206 := $i187, $p186, $i185, $i184, $i188, $i182, $i181, $i178;
  goto $bb47;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i192 == 1));
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb47:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13439, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13342, 40} true;
  assume {:verifier.code 0} true;
  $i207 := $eq.i32($i206, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13342, 40} true;
  assume {:verifier.code 0} true;
  $i208 := $zext.i1.i32($i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13342, 34} true;
  assume {:verifier.code 0} true;
  $i209 := $sext.i32.i64($i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13342, 14} true;
  assume {:verifier.code 0} true;
  call $i210 := ldv__builtin_expect($i209, 0);
  // WARNING: %207 = call i64 @ldv__builtin_expect(i64 %206, i64 0), !dbg !8444, !verifier.code !8144
  call {:cexpr "tmp___18"} boogie_si_record_i64($i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13344, 16} true;
  assume {:verifier.code 0} true;
  $i211 := $ne.i64($i210, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13344, 7} true;
  assume {:verifier.code 0} true;
  $i212 := $i180;
  assume {:branchcond $i211} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i211 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13345, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i211 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13502, 19} true;
  assume {:verifier.code 0} true;
  $i445 := $add.i32($i212, 1);
  $p446 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13502, 30} true;
  assume {:verifier.code 0} true;
  $i447 := $load.i32($M.35, $p446);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13502, 24} true;
  assume {:verifier.code 0} true;
  $i448 := $and.i32($i445, $i447);
  // WARNING: %464 = and i32 %461, %463, !dbg !8747, !verifier.code !8144
  call {:cexpr "last_idx"} boogie_si_record_i32($i448);
  $p449 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13503, 13} true;
  assume {:verifier.code 0} true;
  $i450 := $load.i32($M.37, $p449);
  $p451 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13503, 23} true;
  assume {:verifier.code 0} true;
  $i452 := $load.i32($M.35, $p451);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13503, 17} true;
  assume {:verifier.code 0} true;
  $i453 := $and.i32($i450, $i452);
  // WARNING: %469 = and i32 %466, %468, !dbg !8752, !verifier.code !8144
  call {:cexpr "idx"} boogie_si_record_i32($i453);
  $p454 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13504, 8} true;
  assume {:verifier.code 0} true;
  $p455 := $load.ref($M.41, $p454);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13504, 15} true;
  assume {:verifier.code 0} true;
  $i456 := $sext.i32.i64($i453);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13504, 13} true;
  assume {:verifier.code 0} true;
  $p457 := $add.ref($p455, $mul.ref($i456, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13504, 37} true;
  assume {:verifier.code 0} true;
  $p458 := $add.ref($p455, $mul.ref($i456, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13504, 41} true;
  assume {:verifier.code 0} true;
  $M.42 := $store.ref($M.42, $p458, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13504, 3} true;
  assume {:verifier.code 0} true;
  $i459 := $i453;
  goto $bb104;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13349, 39} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13349, 39} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i32($M.46, $p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13349, 26} true;
  assume {:verifier.code 0} true;
  $i215 := $add.i32($i203, $i214);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13349, 68} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13349, 68} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i32($M.46, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13349, 61} true;
  assume {:verifier.code 0} true;
  $i218 := $sub.i32(0, $i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13349, 52} true;
  assume {:verifier.code 0} true;
  $i219 := $and.i32($i215, $i218);
  // WARNING: %218 = and i32 %214, %217, !dbg !8456, !verifier.code !8144
  call {:cexpr "boundary"} boogie_si_record_i32($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13350, 34} true;
  assume {:verifier.code 0} true;
  $i220 := $sub.i32($i219, $i203);
  // WARNING: %219 = sub i32 %218, %.02874, !dbg !8459, !verifier.code !8144
  call {:cexpr "seglen"} boogie_si_record_i32($i220);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13351, 29} true;
  assume {:verifier.code 0} true;
  $i221 := $ugt.i32($i220, $i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13351, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i221 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13353, 3} true;
  assume {:verifier.code 0} true;
  $i222 := $i205;
  goto $bb55;
$bb54:
  assume !(($i221 == 1));
  assume {:verifier.code 0} true;
  $i222 := $i220;
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13356, 16} true;
  assume {:verifier.code 0} true;
  $i223 := $zext.i8.i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13356, 37} true;
  assume {:verifier.code 0} true;
  $i224 := $and.i32($i223, 253);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13356, 16} true;
  assume {:verifier.code 0} true;
  $i225 := $trunc.i32.i8($i224);
  // WARNING: %226 = trunc i32 %225 to i8, !dbg !8467, !verifier.code !8144
  call {:cexpr "flags_next"} boogie_si_record_i8($i225);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13357, 26} true;
  assume {:verifier.code 0} true;
  $i226 := $add.i32($i202, $i222);
  // WARNING: %227 = add nsw i32 %.22675, %.020, !dbg !8471, !verifier.code !8144
  call {:cexpr "cum_len_next"} boogie_si_record_i32($i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13358, 11} true;
  assume {:verifier.code 0} true;
  $i227 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i227} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i227 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 74} true;
  assume {:verifier.code 0} true;
  $i228 := $trunc.i32.i8($i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 58} true;
  assume {:verifier.code 0} true;
  $i229 := $zext.i8.i32($i228);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 91} true;
  assume {:verifier.code 0} true;
  $i230 := $add.i32($i229, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 58} true;
  assume {:verifier.code 0} true;
  $i231 := $trunc.i32.i8($i230);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 15} true;
  assume {:verifier.code 0} true;
  $i232 := $sext.i32.i64($i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 12} true;
  assume {:verifier.code 0} true;
  $i233 := $sub.i64(0, $i232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 10} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p200, $mul.ref($i233, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 45} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($add.ref($p200, $mul.ref($i233, 16)), 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13360, 56} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p235, $i231);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13361, 44} true;
  assume {:verifier.code 0} true;
  $i236 := $sge.i32($i202, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13361, 44} true;
  assume {:verifier.code 0} true;
  $i237 := $zext.i1.i32($i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13361, 36} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i32.i64($i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13361, 16} true;
  assume {:verifier.code 0} true;
  call $i239 := ldv__builtin_expect($i238, 1);
  // WARNING: %241 = call i64 @ldv__builtin_expect(i64 %240, i64 1), !dbg !8489, !verifier.code !8144
  call {:cexpr "tmp___20"} boogie_si_record_i64($i239);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13363, 18} true;
  assume {:verifier.code 0} true;
  $i240 := $ne.i64($i239, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13363, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i240} true;
  goto $bb58, $bb59;
$bb57:
  assume !(($i227 == 1));
  assume {:verifier.code 0} true;
  $i289, $i290, $i291, $i292, $i293 := $i222, $i201, $i199, $i225, $i226;
  goto $bb64;
$bb58:
  assume ($i240 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13364, 27} true;
  assume {:verifier.code 0} true;
  $i241 := $sgt.i32($i226, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13364, 27} true;
  assume {:verifier.code 0} true;
  $i242 := $zext.i1.i32($i241);
  // WARNING: %245 = zext i1 %244 to i32, !dbg !8495, !verifier.code !8144
  call {:cexpr "chop"} boogie_si_record_i32($i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13365, 35} true;
  assume {:verifier.code 0} true;
  $i243 := $srem.i32($i226, $i33);
  // WARNING: %246 = srem i32 %227, %.047, !dbg !8499, !verifier.code !8144
  call {:cexpr "cum_len_next"} boogie_si_record_i32($i243);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13366, 36} true;
  assume {:verifier.code 0} true;
  $i244 := $eq.i32($i243, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13366, 36} true;
  assume {:verifier.code 0} true;
  $i245 := $zext.i1.i32($i244);
  // WARNING: %248 = zext i1 %247 to i32, !dbg !8500, !verifier.code !8144
  call {:cexpr "next_is_first"} boogie_si_record_i32($i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 21} true;
  assume {:verifier.code 0} true;
  $i246 := $sext.i8.i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 89} true;
  assume {:verifier.code 0} true;
  $i247 := $trunc.i32.i8($i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 73} true;
  assume {:verifier.code 0} true;
  $i248 := $zext.i8.i32($i247);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 111} true;
  assume {:verifier.code 0} true;
  $i249 := $mul.i32($i248, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 58} true;
  assume {:verifier.code 0} true;
  $i250 := $trunc.i32.i8($i249);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 51} true;
  assume {:verifier.code 0} true;
  $i251 := $sext.i8.i32($i250);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 49} true;
  assume {:verifier.code 0} true;
  $i252 := $or.i32($i246, $i251);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13367, 15} true;
  assume {:verifier.code 0} true;
  $i253 := $trunc.i32.i8($i252);
  // WARNING: %256 = trunc i32 %255 to i8, !dbg !8510, !verifier.code !8144
  call {:cexpr "flags"} boogie_si_record_i8($i253);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 26} true;
  assume {:verifier.code 0} true;
  $i254 := $sext.i8.i32($i225);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 99} true;
  assume {:verifier.code 0} true;
  $i255 := $trunc.i32.i8($i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 83} true;
  assume {:verifier.code 0} true;
  $i256 := $zext.i8.i32($i255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 130} true;
  assume {:verifier.code 0} true;
  $i257 := $mul.i32($i256, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 68} true;
  assume {:verifier.code 0} true;
  $i258 := $trunc.i32.i8($i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 61} true;
  assume {:verifier.code 0} true;
  $i259 := $sext.i8.i32($i258);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 59} true;
  assume {:verifier.code 0} true;
  $i260 := $or.i32($i254, $i259);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13368, 20} true;
  assume {:verifier.code 0} true;
  $i261 := $trunc.i32.i8($i260);
  // WARNING: %264 = trunc i32 %263 to i8, !dbg !8518, !verifier.code !8144
  call {:cexpr "flags_next"} boogie_si_record_i8($i261);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13369, 41} true;
  assume {:verifier.code 0} true;
  $i262 := $or.i32($i242, $i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13369, 33} true;
  assume {:verifier.code 0} true;
  $i263 := $sub.i32(0, $i262);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13369, 31} true;
  assume {:verifier.code 0} true;
  $i264 := $or.i32($i201, $i263);
  // WARNING: %267 = or i32 %.41976, %266, !dbg !8521, !verifier.code !8144
  call {:cexpr "rdma_count"} boogie_si_record_i32($i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13370, 41} true;
  assume {:verifier.code 0} true;
  $i265 := $xor.i32($i245, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13370, 39} true;
  assume {:verifier.code 0} true;
  $i266 := $and.i32($i242, $i265);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13370, 31} true;
  assume {:verifier.code 0} true;
  $i267 := $add.i32($i264, $i266);
  // WARNING: %270 = add nsw i32 %267, %269, !dbg !8524, !verifier.code !8144
  call {:cexpr "rdma_count"} boogie_si_record_i32($i267);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13371, 5} true;
  assume {:verifier.code 0} true;
  $i268, $i269, $i270, $i271, $i272 := $i222, $i267, $i253, $i261, $i243;
  goto $bb60;
$bb59:
  assume !(($i240 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13373, 51} true;
  assume {:verifier.code 0} true;
  $i273 := $sge.i32($i226, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13373, 51} true;
  assume {:verifier.code 0} true;
  $i274 := $zext.i1.i32($i273);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13373, 38} true;
  assume {:verifier.code 0} true;
  $i275 := $sext.i32.i64($i274);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13373, 18} true;
  assume {:verifier.code 0} true;
  call $i276 := ldv__builtin_expect($i275, 1);
  // WARNING: %275 = call i64 @ldv__builtin_expect(i64 %274, i64 1), !dbg !8530, !verifier.code !8144
  call {:cexpr "tmp___19"} boogie_si_record_i64($i276);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13375, 20} true;
  assume {:verifier.code 0} true;
  $i277 := $ne.i64($i276, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13375, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i277} true;
  goto $bb61, $bb62;
$bb60:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13385, 3} true;
  assume {:verifier.code 0} true;
  $i289, $i290, $i291, $i292, $i293 := $i268, $i269, $i270, $i271, $i272;
  goto $bb64;
$bb61:
  assume ($i277 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !18603, metadata !8144), !dbg !18604, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13378, 18} true;
  assume {:verifier.code 0} true;
  $i278 := $sub.i32(0, $i202);
  // WARNING: %278 = sub nsw i32 0, %.22675, !dbg !8536, !verifier.code !8144
  call {:cexpr "seglen"} boogie_si_record_i32($i278);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13379, 21} true;
  assume {:verifier.code 0} true;
  $i279 := $sle.i32($i33, 1520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13379, 21} true;
  assume {:verifier.code 0} true;
  $i280 := $zext.i1.i32($i279);
  // WARNING: %280 = zext i1 %279 to i32, !dbg !8538, !verifier.code !8144
  call {:cexpr "small"} boogie_si_record_i32($i280);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13380, 35} true;
  assume {:verifier.code 0} true;
  $i281 := $trunc.i32.i8($i280);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13380, 28} true;
  assume {:verifier.code 0} true;
  $i282 := $sext.i8.i32($i281);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13380, 56} true;
  assume {:verifier.code 0} true;
  $i283 := $or.i32($i282, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13380, 22} true;
  assume {:verifier.code 0} true;
  $i284 := $trunc.i32.i8($i283);
  // WARNING: %284 = trunc i32 %283 to i8, !dbg !8544, !verifier.code !8144
  call {:cexpr "flags_next"} boogie_si_record_i8($i284);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13381, 7} true;
  assume {:verifier.code 0} true;
  $i285, $i286, $i287, $i288 := $i278, $sub.i32(0, 1), $i284, 0;
  goto $bb63;
$bb62:
  assume !(($i277 == 1));
  assume {:verifier.code 0} true;
  $i285, $i286, $i287, $i288 := $i222, $i201, $i225, $i226;
  goto $bb63;
$bb63:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i268, $i269, $i270, $i271, $i272 := $i285, $i286, $i199, $i287, $i288;
  goto $bb60;
$bb64:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13389, 8} true;
  assume {:verifier.code 0} true;
  $p294 := $p200;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13389, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p294, $i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13390, 14} true;
  assume {:verifier.code 0} true;
  call $i295 := __fswab32($i203);
  // WARNING: %291 = call i32 @__fswab32(i32 %.02874), !dbg !8550, !verifier.code !8144
  call {:cexpr "tmp___21"} boogie_si_record_i32($i295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13391, 8} true;
  assume {:verifier.code 0} true;
  $p296 := $add.ref($p200, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13391, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p296, $i295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13392, 24} true;
  assume {:verifier.code 0} true;
  $i297 := $zext.i16.i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13392, 24} true;
  assume {:verifier.code 0} true;
  $i298 := $trunc.i32.i16($i297);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13392, 14} true;
  assume {:verifier.code 0} true;
  call $i299 := __fswab16($i298);
  // WARNING: %295 = call zeroext i16 @__fswab16(i16 zeroext %294), !dbg !8556, !verifier.code !8144
  call {:cexpr "tmp___22"} boogie_si_record_i16($i299);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13393, 8} true;
  assume {:verifier.code 0} true;
  $p300 := $add.ref($p200, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13393, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p300, $i299);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13394, 8} true;
  assume {:verifier.code 0} true;
  $p301 := $add.ref($p200, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13394, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p301, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13395, 8} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p200, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13395, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p302, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13396, 31} true;
  assume {:verifier.code 0} true;
  $i303 := $trunc.i32.i16($i289);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13396, 24} true;
  assume {:verifier.code 0} true;
  $i304 := $zext.i16.i32($i303);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13396, 24} true;
  assume {:verifier.code 0} true;
  $i305 := $trunc.i32.i16($i304);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13396, 14} true;
  assume {:verifier.code 0} true;
  call $i306 := __fswab16($i305);
  // WARNING: %302 = call zeroext i16 @__fswab16(i16 zeroext %301), !dbg !8567, !verifier.code !8144
  call {:cexpr "tmp___23"} boogie_si_record_i16($i306);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13397, 8} true;
  assume {:verifier.code 0} true;
  $p307 := $add.ref($p200, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13397, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p307, $i306);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13398, 23} true;
  assume {:verifier.code 0} true;
  $i308 := $trunc.i16.i8($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13398, 8} true;
  assume {:verifier.code 0} true;
  $p309 := $add.ref($p200, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13398, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p309, $i308);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 22} true;
  assume {:verifier.code 0} true;
  $i310 := $sext.i8.i32($i291);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 91} true;
  assume {:verifier.code 0} true;
  $i311 := $trunc.i32.i8($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 75} true;
  assume {:verifier.code 0} true;
  $i312 := $zext.i8.i32($i311);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 116} true;
  assume {:verifier.code 0} true;
  $i313 := $and.i32($i312, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 124} true;
  assume {:verifier.code 0} true;
  $i314 := $zext.i8.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 122} true;
  assume {:verifier.code 0} true;
  $i315 := $mul.i32($i313, $i314);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 59} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i8($i315);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 52} true;
  assume {:verifier.code 0} true;
  $i317 := $sext.i8.i32($i316);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 50} true;
  assume {:verifier.code 0} true;
  $i318 := $or.i32($i310, $i317);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 16} true;
  assume {:verifier.code 0} true;
  $i319 := $trunc.i32.i8($i318);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 8} true;
  assume {:verifier.code 0} true;
  $p320 := $add.ref($p200, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13399, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p320, $i319);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13400, 13} true;
  assume {:verifier.code 0} true;
  $i321 := $add.i32($i203, $i289);
  // WARNING: %317 = add i32 %.02874, %.323, !dbg !8587, !verifier.code !8144
  call {:cexpr "low"} boogie_si_record_i32($i321);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13401, 13} true;
  assume {:verifier.code 0} true;
  $i322 := $sub.i32($i205, $i289);
  // WARNING: %318 = sub i32 %.13971, %.323, !dbg !8588, !verifier.code !8144
  call {:cexpr "len"} boogie_si_record_i32($i322);
  // WARNING: call void @llvm.dbg.value(metadata i32 %318, i64 0, metadata !18564, metadata !8144), !dbg !18565, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %.2, i64 0, metadata !18478, metadata !8144), !dbg !18479, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13404, 13} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($p200, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13405, 17} true;
  assume {:verifier.code 0} true;
  $i324 := $add.i32($i206, 1);
  // WARNING: %320 = add nsw i32 %.15070, 1, !dbg !8590, !verifier.code !8144
  call {:cexpr "count"} boogie_si_record_i32($i324);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13406, 27} true;
  assume {:verifier.code 0} true;
  $i325 := $add.i32($i290, 1);
  // WARNING: %321 = add nsw i32 %.318, 1, !dbg !8591, !verifier.code !8144
  call {:cexpr "rdma_count"} boogie_si_record_i32($i325);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13408, 7} true;
  assume {:verifier.code 0} true;
  $i326 := $zext.i16.i32($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13408, 35} true;
  assume {:verifier.code 0} true;
  $i327 := $ne.i32($i326, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13408, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i327} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i327 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13409, 13} true;
  assume {:verifier.code 0} true;
  $i328 := $eq.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13409, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i328} true;
  goto $bb67, $bb68;
$bb66:
  assume !(($i327 == 1));
  assume {:verifier.code 0} true;
  $i348 := $i204;
  goto $bb80;
$bb67:
  assume ($i328 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13410, 7} true;
  assume {:verifier.code 0} true;
  $i329 := $i204;
  goto $bb69;
$bb68:
  assume !(($i328 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13413, 18} true;
  assume {:verifier.code 0} true;
  call $i330 := skb_is_gso_v6($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13413, 16} true;
  assume {:verifier.code 0} true;
  $i331 := $zext.i1.i8($i330);
  // WARNING: %329 = zext i1 %328 to i8, !dbg !8605, !verifier.code !8144
  call {:cexpr "tmp___25"} boogie_si_record_i8($i331);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13415, 11} true;
  assume {:verifier.code 0} true;
  $i332 := $trunc.i8.i1($i331);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13415, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i332} true;
  goto $bb70, $bb71;
$bb69:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13423, 40} true;
  assume {:verifier.code 0} true;
  $i335 := $zext.i16.i32($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13423, 59} true;
  assume {:verifier.code 0} true;
  $i336 := $sgt.i32($i335, $i289);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13423, 59} true;
  assume {:verifier.code 0} true;
  $i337 := $zext.i1.i32($i336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13423, 40} true;
  assume {:verifier.code 0} true;
  $i338 := $sext.i32.i64($i337);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13423, 20} true;
  assume {:verifier.code 0} true;
  call $i339 := ldv__builtin_expect($i338, 0);
  // WARNING: %341 = call i64 @ldv__builtin_expect(i64 %340, i64 0), !dbg !8624, !verifier.code !8144
  call {:cexpr "tmp___24"} boogie_si_record_i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13425, 22} true;
  assume {:verifier.code 0} true;
  $i340 := $ne.i64($i339, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13425, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i340} true;
  goto $bb75, $bb76;
$bb70:
  assume ($i332 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13417, 7} true;
  assume {:verifier.code 0} true;
  $i333 := 0;
  goto $bb72;
$bb71:
  assume !(($i332 == 1));
  assume {:verifier.code 0} true;
  $i333 := 1;
  goto $bb72;
$bb72:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13420, 11} true;
  assume {:verifier.code 0} true;
  $i334 := $ne.i32($i333, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13420, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i334} true;
  goto $bb73, $bb74;
$bb73:
  assume ($i334 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13420, 21} true;
  assume {:verifier.code 0} true;
  $i329 := $i204;
  goto $bb69;
$bb74:
  assume !(($i334 == 1));
  assume {:verifier.code 0} true;
  $i347 := $i204;
  goto $bb78;
$bb75:
  assume ($i340 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13426, 26} true;
  assume {:verifier.code 0} true;
  $i341 := $zext.i16.i32($i329);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13426, 54} true;
  assume {:verifier.code 0} true;
  $i342 := $trunc.i32.i16($i289);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13426, 47} true;
  assume {:verifier.code 0} true;
  $i343 := $zext.i16.i32($i342);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13426, 45} true;
  assume {:verifier.code 0} true;
  $i344 := $sub.i32($i341, $i343);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13426, 26} true;
  assume {:verifier.code 0} true;
  $i345 := $trunc.i32.i16($i344);
  // WARNING: %348 = trunc i32 %347 to i16, !dbg !8630, !verifier.code !8144
  call {:cexpr "cksum_offset"} boogie_si_record_i16($i345);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13427, 9} true;
  assume {:verifier.code 0} true;
  $i346 := $i345;
  goto $bb77;
$bb76:
  assume !(($i340 == 1));
  assume {:verifier.code 0} true;
  $i346 := 0;
  goto $bb77;
$bb77:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13430, 7} true;
  assume {:verifier.code 0} true;
  $i347 := $i346;
  goto $bb78;
$bb78:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13434, 3} true;
  assume {:verifier.code 0} true;
  $i348 := $i347;
  goto $bb80;
$bb80:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 11} true;
  assume {:verifier.code 0} true;
  $i349 := $ne.i32($i322, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 7} true;
  assume {:verifier.code 0} true;
  $i199, $p200, $i201, $i202, $i203, $i204, $i205, $i206, $i350, $i351, $i352, $i353, $p354, $i355 := $i292, $p323, $i325, $i293, $i321, $i348, $i322, $i324, $i324, $i348, $i293, $i325, $p323, $i292;
  assume {:branchcond $i349} true;
  goto $bb81, $bb82;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 7} true;
  assume {:verifier.code 0} true;
  assume ($i349 == 1);
  goto $bb47;
$bb82:
  assume !(($i349 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13438, 7} true;
  assume {:verifier.code 0} true;
  $i193, $i194, $i195, $i196, $p197, $i198 := $i350, $i351, $i352, $i353, $p354, $i355;
  goto $bb46;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13444, 16} true;
  assume {:verifier.code 0} true;
  $i356 := $eq.i32($i179, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13444, 7} true;
  assume {:verifier.code 0} true;
  $i357, $i358, $i359, $i360, $p361 := $i24, $i33, $i193, $i196, $p197;
  assume {:branchcond $i356} true;
  goto $bb84, $bb85;
$bb84:
  assume ($i356 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13445, 5} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i356 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13462, 56} true;
  assume {:verifier.code 0} true;
  $i391 := $trunc.i32.i8($i360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13462, 13} true;
  assume {:verifier.code 0} true;
  $i392 := $sext.i32.i64($i360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13462, 10} true;
  assume {:verifier.code 0} true;
  $i393 := $sub.i64(0, $i392);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13462, 8} true;
  assume {:verifier.code 0} true;
  $p394 := $add.ref($p361, $mul.ref($i393, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13462, 43} true;
  assume {:verifier.code 0} true;
  $p395 := $add.ref($add.ref($p361, $mul.ref($i393, 16)), 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13462, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p395, $i391);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13463, 11} true;
  assume {:verifier.code 0} true;
  $i396 := $ne.i32($i358, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13463, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i396} true;
  goto $bb88, $bb89;
$bb87:
  $p362 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13450, 22} true;
  assume {:verifier.code 0} true;
  $i363 := $load.i32($M.37, $p362);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13450, 16} true;
  assume {:verifier.code 0} true;
  $i364 := $add.i32($i193, $i363);
  $p365 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13450, 33} true;
  assume {:verifier.code 0} true;
  $i366 := $load.i32($M.35, $p365);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13450, 27} true;
  assume {:verifier.code 0} true;
  $i367 := $and.i32($i364, $i366);
  // WARNING: %369 = and i32 %366, %368, !dbg !8649, !verifier.code !8144
  call {:cexpr "idx"} boogie_si_record_i32($i367);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13451, 14} true;
  assume {:verifier.code 0} true;
  call $p368 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13452, 77} true;
  assume {:verifier.code 0} true;
  $p369 := $bitcast.ref.ref($p368);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13452, 77} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p369, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13452, 10} true;
  assume {:verifier.code 0} true;
  $p371 := $bitcast.ref.ref($p370);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13452, 86} true;
  assume {:verifier.code 0} true;
  $i372 := $sext.i32.i64($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13452, 84} true;
  assume {:verifier.code 0} true;
  $p373 := $add.ref($p371, $mul.ref($i372, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13453, 23} true;
  assume {:verifier.code 0} true;
  $i374 := $add.i32($i179, 1);
  // WARNING: %376 = add nsw i32 %.048, 1, !dbg !8659, !verifier.code !8144
  call {:cexpr "frag_idx"} boogie_si_record_i32($i374);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13454, 9} true;
  assume {:verifier.code 0} true;
  call $i375 := skb_frag_size($p373);
  // WARNING: %377 = call i32 @skb_frag_size(%struct.skb_frag_struct* %375), !dbg !8660, !verifier.code !8144
  call {:cexpr "len"} boogie_si_record_i32($i375);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13455, 34} true;
  assume {:verifier.code 0} true;
  $p376 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13455, 34} true;
  assume {:verifier.code 0} true;
  $p377 := $load.ref($M.43, $p376);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13455, 41} true;
  assume {:verifier.code 0} true;
  $p378 := $add.ref($p377, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13455, 79} true;
  assume {:verifier.code 0} true;
  $i379 := $zext.i32.i64($i375);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13455, 9} true;
  assume {:verifier.code 0} true;
  call $i380 := skb_frag_dma_map($p378, $p373, 0, $i379, 1);
  // WARNING: %382 = call i64 @skb_frag_dma_map(%struct.device* %380, %struct.skb_frag_struct* %375, i64 0, i64 %381, i32 1), !dbg !8664, !verifier.code !8144
  call {:cexpr "bus"} boogie_si_record_i64($i380);
  $p381 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13457, 8} true;
  assume {:verifier.code 0} true;
  $p382 := $load.ref($M.41, $p381);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13457, 15} true;
  assume {:verifier.code 0} true;
  $i383 := $sext.i32.i64($i367);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13457, 13} true;
  assume {:verifier.code 0} true;
  $p384 := $add.ref($p382, $mul.ref($i383, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13457, 37} true;
  assume {:verifier.code 0} true;
  $p385 := $add.ref($add.ref($p382, $mul.ref($i383, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13457, 41} true;
  assume {:verifier.code 0} true;
  $M.44 := $store.i64($M.44, $p385, $i380);
  $p386 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13458, 8} true;
  assume {:verifier.code 0} true;
  $p387 := $load.ref($M.41, $p386);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13458, 15} true;
  assume {:verifier.code 0} true;
  $i388 := $sext.i32.i64($i367);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13458, 13} true;
  assume {:verifier.code 0} true;
  $p389 := $add.ref($p387, $mul.ref($i388, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13458, 37} true;
  assume {:verifier.code 0} true;
  $p390 := $add.ref($add.ref($p387, $mul.ref($i388, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13458, 41} true;
  assume {:verifier.code 0} true;
  $M.45 := $store.i32($M.45, $p390, $i375);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13460, 3} true;
  assume {:verifier.code 0} true;
  $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $p186, $i187 := $i193, $i374, $i367, $i375, $i194, $i380, $i195, $i196, $p197, $i198;
  goto $bb43;
$bb88:
  assume ($i396 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13463, 17} true;
  assume {:verifier.code 0} true;
  $p397 := $p361;
  goto $bb90;
$bb89:
  assume !(($i396 == 1));
  assume {:verifier.code 0} true;
  goto $bb94;
$bb90:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13465, 15} true;
  assume {:verifier.code 0} true;
  $p398 := $add.ref($p397, $mul.ref($sub.ref(0, 1), 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13466, 44} true;
  assume {:verifier.code 0} true;
  $p399 := $add.ref($add.ref($p397, $mul.ref($sub.ref(0, 1), 16)), 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13466, 44} true;
  assume {:verifier.code 0} true;
  $i400 := $load.i8($M.0, $p399);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13466, 24} true;
  assume {:verifier.code 0} true;
  $i401 := $zext.i8.i32($i400);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13466, 50} true;
  assume {:verifier.code 0} true;
  $i402 := $or.i32($i401, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13466, 18} true;
  assume {:verifier.code 0} true;
  $i403 := $trunc.i32.i8($i402);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13466, 10} true;
  assume {:verifier.code 0} true;
  $p404 := $add.ref($add.ref($p397, $mul.ref($sub.ref(0, 1), 16)), 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13466, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p404, $i403);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13467, 21} true;
  assume {:verifier.code 0} true;
  $p405 := $add.ref($add.ref($p397, $mul.ref($sub.ref(0, 1), 16)), 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13467, 21} true;
  assume {:verifier.code 0} true;
  $i406 := $load.i8($M.0, $p405);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13467, 10} true;
  assume {:verifier.code 0} true;
  $i407 := $zext.i8.i32($i406);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13467, 27} true;
  assume {:verifier.code 0} true;
  $i408 := $and.i32($i407, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13467, 33} true;
  assume {:verifier.code 0} true;
  $i409 := $eq.i32($i408, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13467, 9} true;
  assume {:verifier.code 0} true;
  $p397 := $p398;
  assume {:branchcond $i409} true;
  goto $bb91, $bb92;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13467, 9} true;
  assume {:verifier.code 0} true;
  assume ($i409 == 1);
  goto $bb90;
$bb92:
  assume !(($i409 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13473, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13477, 17} true;
  assume {:verifier.code 0} true;
  $i410 := $add.i32($i359, $sub.i32(0, 1));
  $p411 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13477, 29} true;
  assume {:verifier.code 0} true;
  $i412 := $load.i32($M.37, $p411);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13477, 23} true;
  assume {:verifier.code 0} true;
  $i413 := $add.i32($i410, $i412);
  $p414 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13477, 40} true;
  assume {:verifier.code 0} true;
  $i415 := $load.i32($M.35, $p414);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13477, 34} true;
  assume {:verifier.code 0} true;
  $i416 := $and.i32($i413, $i415);
  // WARNING: %424 = and i32 %421, %423, !dbg !8707, !verifier.code !8144
  call {:cexpr "idx"} boogie_si_record_i32($i416);
  $p417 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13478, 8} true;
  assume {:verifier.code 0} true;
  $p418 := $load.ref($M.41, $p417);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13478, 15} true;
  assume {:verifier.code 0} true;
  $i419 := $sext.i32.i64($i416);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13478, 13} true;
  assume {:verifier.code 0} true;
  $p420 := $add.ref($p418, $mul.ref($i419, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13478, 37} true;
  assume {:verifier.code 0} true;
  $p421 := $add.ref($add.ref($p418, $mul.ref($i419, 32)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13478, 42} true;
  assume {:verifier.code 0} true;
  $M.47 := $store.i32($M.47, $p421, 1);
  $p422 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13479, 31} true;
  assume {:verifier.code 0} true;
  $p423 := $load.ref($M.34, $p422);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13479, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_submit_req($p13, $p423, $i359);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 13} true;
  assume {:verifier.code 0} true;
  $p424 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 13} true;
  assume {:verifier.code 0} true;
  $p425 := $load.ref($M.33, $p424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 19} true;
  assume {:verifier.code 0} true;
  $p426 := $add.ref($p425, 916);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 19} true;
  assume {:verifier.code 0} true;
  $i427 := $load.i32($M.0, $p426);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 38} true;
  assume {:verifier.code 0} true;
  $i428 := $ugt.i32($i427, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i428} true;
  goto $bb95, $bb96;
$bb95:
  assume ($i428 == 1);
  $p429 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 50} true;
  assume {:verifier.code 0} true;
  $i430 := $load.i32($M.48, $p429);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 63} true;
  assume {:verifier.code 0} true;
  $i431 := $eq.i32($i430, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i431} true;
  goto $bb98, $bb99;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 43} true;
  assume {:verifier.code 0} true;
  assume !(($i428 == 1));
  goto $bb97;
$bb97:
  assume {:verifier.code 0} true;
  goto $bb100;
$bb98:
  assume ($i431 == 1);
  $p432 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13483, 22} true;
  assume {:verifier.code 0} true;
  $M.48 := $store.i32($M.48, $p432, 1);
  $p433 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13484, 29} true;
  assume {:verifier.code 0} true;
  $p434 := $load.ref($M.49, $p433);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13484, 5} true;
  assume {:verifier.code 0} true;
  call put_be32(16777216, $p434);
  call devirtbounce(0);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13488, 3} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13481, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i431 == 1));
  goto $bb97;
$bb100:
  $p435 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13491, 23} true;
  assume {:verifier.code 0} true;
  $i436 := $load.i32($M.50, $p435);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13491, 33} true;
  assume {:verifier.code 0} true;
  $i437 := $add.i32($i436, 1);
  $p438 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13491, 17} true;
  assume {:verifier.code 0} true;
  $M.50 := $store.i32($M.50, $p438, $i437);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13492, 13} true;
  assume {:verifier.code 0} true;
  $i439 := $sub.i32($i357, $i359);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13492, 21} true;
  assume {:verifier.code 0} true;
  $i440 := $sle.i32($i439, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13492, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i440} true;
  goto $bb101, $bb102;
$bb101:
  assume ($i440 == 1);
  $p441 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13494, 26} true;
  assume {:verifier.code 0} true;
  $i442 := $load.i32($M.38, $p441);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13494, 37} true;
  assume {:verifier.code 0} true;
  $i443 := $add.i32($i442, 1);
  $p444 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13494, 20} true;
  assume {:verifier.code 0} true;
  $M.38 := $store.i32($M.38, $p444, $i443);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13495, 5} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_queue($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13497, 3} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume !(($i440 == 1));
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13500, 3} true;
  assume {:verifier.code 0} true;
  $i44 := 0;
  goto $bb7;
$bb104:
  assume {:verifier.code 0} true;
  $p460 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13506, 14} true;
  assume {:verifier.code 0} true;
  $p461 := $load.ref($M.41, $p460);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13506, 21} true;
  assume {:verifier.code 0} true;
  $i462 := $sext.i32.i64($i459);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13506, 19} true;
  assume {:verifier.code 0} true;
  $p463 := $add.ref($p461, $mul.ref($i462, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13506, 43} true;
  assume {:verifier.code 0} true;
  $p464 := $add.ref($add.ref($p461, $mul.ref($i462, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13506, 43} true;
  assume {:verifier.code 0} true;
  $i465 := $load.i32($M.45, $p464);
  // WARNING: %481 = load i32, i32* %480, align 8, !dbg !8762, !verifier.code !8144
  call {:cexpr "len"} boogie_si_record_i32($i465);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13507, 11} true;
  assume {:verifier.code 0} true;
  $i466 := $ne.i32($i465, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13507, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i466} true;
  goto $bb105, $bb106;
$bb105:
  assume ($i466 == 1);
  $p467 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 30} true;
  assume {:verifier.code 0} true;
  $p468 := $load.ref($M.41, $p467);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 37} true;
  assume {:verifier.code 0} true;
  $i469 := $sext.i32.i64($i459);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 35} true;
  assume {:verifier.code 0} true;
  $p470 := $add.ref($p468, $mul.ref($i469, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 59} true;
  assume {:verifier.code 0} true;
  $p471 := $add.ref($p468, $mul.ref($i469, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 59} true;
  assume {:verifier.code 0} true;
  $p472 := $load.ref($M.42, $p471);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 9} true;
  assume {:verifier.code 0} true;
  $i473 := $p2i.ref.i64($p472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 63} true;
  assume {:verifier.code 0} true;
  $i474 := $ne.i64($i473, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13508, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i474} true;
  goto $bb107, $bb108;
$bb106:
  assume !(($i466 == 1));
  assume {:verifier.code 0} true;
  goto $bb110;
$bb107:
  assume ($i474 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 29} true;
  assume {:verifier.code 0} true;
  $p475 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 29} true;
  assume {:verifier.code 0} true;
  $p476 := $load.ref($M.43, $p475);
  $p477 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 40} true;
  assume {:verifier.code 0} true;
  $p478 := $load.ref($M.41, $p477);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 47} true;
  assume {:verifier.code 0} true;
  $i479 := $sext.i32.i64($i459);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 45} true;
  assume {:verifier.code 0} true;
  $p480 := $add.ref($p478, $mul.ref($i479, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 69} true;
  assume {:verifier.code 0} true;
  $p481 := $add.ref($add.ref($p478, $mul.ref($i479, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 69} true;
  assume {:verifier.code 0} true;
  $i482 := $load.i64($M.44, $p481);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 74} true;
  assume {:verifier.code 0} true;
  $i483 := $zext.i32.i64($i465);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13510, 7} true;
  assume {:verifier.code 0} true;
  call pci_unmap_single($p476, $i482, $i483, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13513, 5} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb108:
  assume !(($i474 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 27} true;
  assume {:verifier.code 0} true;
  $p484 := $add.ref($p3, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 27} true;
  assume {:verifier.code 0} true;
  $p485 := $load.ref($M.43, $p484);
  $p486 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 38} true;
  assume {:verifier.code 0} true;
  $p487 := $load.ref($M.41, $p486);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 45} true;
  assume {:verifier.code 0} true;
  $i488 := $sext.i32.i64($i459);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 43} true;
  assume {:verifier.code 0} true;
  $p489 := $add.ref($p487, $mul.ref($i488, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 67} true;
  assume {:verifier.code 0} true;
  $p490 := $add.ref($add.ref($p487, $mul.ref($i488, 32)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 67} true;
  assume {:verifier.code 0} true;
  $i491 := $load.i64($M.44, $p490);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 72} true;
  assume {:verifier.code 0} true;
  $i492 := $zext.i32.i64($i465);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13515, 7} true;
  assume {:verifier.code 0} true;
  call pci_unmap_page($p485, $i491, $i492, 1);
  assume {:verifier.code 0} true;
  goto $bb109;
$bb109:
  $p493 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13519, 10} true;
  assume {:verifier.code 0} true;
  $p494 := $load.ref($M.41, $p493);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13519, 17} true;
  assume {:verifier.code 0} true;
  $i495 := $sext.i32.i64($i459);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13519, 15} true;
  assume {:verifier.code 0} true;
  $p496 := $add.ref($p494, $mul.ref($i495, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13519, 39} true;
  assume {:verifier.code 0} true;
  $p497 := $add.ref($add.ref($p494, $mul.ref($i495, 32)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13519, 43} true;
  assume {:verifier.code 0} true;
  $M.45 := $store.i32($M.45, $p497, 0);
  $p498 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13520, 10} true;
  assume {:verifier.code 0} true;
  $p499 := $load.ref($M.41, $p498);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13520, 17} true;
  assume {:verifier.code 0} true;
  $i500 := $sext.i32.i64($i459);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13520, 15} true;
  assume {:verifier.code 0} true;
  $p501 := $add.ref($p499, $mul.ref($i500, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13520, 39} true;
  assume {:verifier.code 0} true;
  $p502 := $add.ref($p499, $mul.ref($i500, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13520, 43} true;
  assume {:verifier.code 0} true;
  $M.42 := $store.ref($M.42, $p502, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13521, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13524, 14} true;
  assume {:verifier.code 0} true;
  $i503 := $add.i32($i459, 1);
  $p504 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13524, 25} true;
  assume {:verifier.code 0} true;
  $i505 := $load.i32($M.35, $p504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13524, 19} true;
  assume {:verifier.code 0} true;
  $i506 := $and.i32($i503, $i505);
  // WARNING: %528 = and i32 %525, %527, !dbg !8807, !verifier.code !8144
  call {:cexpr "idx"} boogie_si_record_i32($i506);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13525, 11} true;
  assume {:verifier.code 0} true;
  $i507 := $ne.i32($i506, $i448);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13525, 7} true;
  assume {:verifier.code 0} true;
  $i459 := $i506;
  assume {:branchcond $i507} true;
  goto $bb111, $bb112;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13525, 7} true;
  assume {:verifier.code 0} true;
  assume ($i507 == 1);
  goto $bb104;
$bb112:
  assume !(($i507 == 1));
  assume {:verifier.code 0} true;
  goto $bb113;
$bb113:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13531, 14} true;
  assume {:verifier.code 0} true;
  call $i508 := skb_is_gso($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13531, 12} true;
  assume {:verifier.code 0} true;
  $i509 := $zext.i1.i8($i508);
  // WARNING: %533 = zext i1 %532 to i8, !dbg !8813, !verifier.code !8144
  call {:cexpr "tmp___28"} boogie_si_record_i8($i509);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13533, 13} true;
  assume {:verifier.code 0} true;
  $i510 := $trunc.i8.i1($i509);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13533, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i510} true;
  goto $bb114, $bb115;
$bb114:
  assume ($i510 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13535, 50} true;
  assume {:verifier.code 0} true;
  $p511 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13535, 50} true;
  assume {:verifier.code 0} true;
  $p512 := $load.ref($M.33, $p511);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13535, 5} true;
  assume {:verifier.code 0} true;
  call $i513 := netdev_err.ref.ref($p512, .str.20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13537, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb115:
  assume !(($i510 == 1));
  assume {:verifier.code 0} true;
  goto $bb116;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13542, 14} true;
  assume {:verifier.code 0} true;
  call $i514 := skb_linearize($p0);
  // WARNING: %541 = call i32 @skb_linearize(%struct.sk_buff* %0), !dbg !8824, !verifier.code !8144
  call {:cexpr "tmp___29"} boogie_si_record_i32($i514);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13544, 16} true;
  assume {:verifier.code 0} true;
  $i515 := $ne.i32($i514, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13544, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i515} true;
  goto $bb117, $bb118;
$bb117:
  assume ($i515 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13545, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb118:
  assume !(($i515 == 1));
  assume {:verifier.code 0} true;
  goto $bb119;
$bb119:
  $p516 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13549, 24} true;
  assume {:verifier.code 0} true;
  $i517 := $load.i32($M.51, $p516);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13549, 35} true;
  assume {:verifier.code 0} true;
  $i518 := $add.i32($i517, 1);
  $p519 := $add.ref($add.ref($p6, $mul.ref($i7, 688)), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13549, 18} true;
  assume {:verifier.code 0} true;
  $M.51 := $store.i32($M.51, $p519, $i518);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13550, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
}
const skb_get_queue_mapping: ref;
axiom (skb_get_queue_mapping == $sub.ref(0, 577017));
procedure  skb_get_queue_mapping($p0: ref)
  returns ($r: i16)
{
  var $p1: ref;
  var $i2: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7614, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7614, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7614, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const skb_is_gso: ref;
axiom (skb_is_gso == $sub.ref(0, 578049));
procedure  skb_is_gso($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $i5: i32;
  var $i6: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7632, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7634, 59} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7634, 59} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7634, 59} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.31, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7634, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7634, 68} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7634, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const skb_checksum_start_offset: ref;
axiom (skb_checksum_start_offset == $sub.ref(0, 579081));
procedure  skb_checksum_start_offset($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i16;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7493, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := skb_headroom($p0);
  // WARNING: %2 = call i32 @skb_headroom(%struct.sk_buff* %0), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7495, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7495, 57} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7495, 76} true;
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7495, 76} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7495, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7495, 87} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32($i6, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7495, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const skb_checksum_help: ref;
axiom (skb_checksum_help == $sub.ref(0, 580113));
procedure  skb_checksum_help($p0: ref)
  returns ($r: i32);
const skb_transport_offset: ref;
axiom (skb_transport_offset == $sub.ref(0, 581145));
procedure  skb_transport_offset($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i32;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7504, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := skb_transport_header($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 34} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 18} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 76} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 76} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 64} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 46} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32($i3, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7506, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const tcp_hdrlen: ref;
axiom (tcp_hdrlen == $sub.ref(0, 582177));
procedure  tcp_hdrlen($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i16;
  var $i4: i16;
  var $i5: i16;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8751, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := tcp_hdr($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8753, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8753, 38} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8753, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $lshr.i16($i3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8753, 38} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i16($i4, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8753, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8753, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i32($i6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8753, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const skb_is_gso_v6: ref;
axiom (skb_is_gso_v6 == $sub.ref(0, 583209));
procedure  skb_is_gso_v6($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7643, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7645, 51} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7645, 51} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7645, 51} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.31, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7645, 12} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7645, 60} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7645, 66} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7645, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const myri10ge_sw_tso: ref;
axiom (myri10ge_sw_tso == $sub.ref(0, 584241));
procedure  myri10ge_sw_tso($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $i11: i64;
  var $i12: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p13: ref;
  var $i28: i16;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13572, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13573, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13574, 36} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13574, 36} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13574, 45} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i64($i5, $sub.i64(0, 1048577));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13574, 10} true;
  assume {:verifier.code 0} true;
  call $p7 := skb_gso_segment($p0, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13575, 20} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13575, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := IS_ERR($p8);
  // WARNING: %10 = call i64 @IS_ERR(i8* %9), !dbg !8161, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13577, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13577, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13578, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13620, 13} true;
  assume {:verifier.code 0} true;
  call $i28 := skb_get_queue_mapping($p0);
  // WARNING: %40 = call zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %0), !dbg !8205, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i16($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13621, 13} true;
  assume {:verifier.code 0} true;
  $p29 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13621, 13} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.52, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13621, 18} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13621, 16} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p30, $mul.ref($i31, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13622, 3} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_any($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13623, 30} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p30, $mul.ref($i31, 688)), 440);
  $p34 := $add.ref($add.ref($add.ref($p30, $mul.ref($i31, 688)), 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13623, 36} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.53, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13623, 47} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13623, 7} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p30, $mul.ref($i31, 688)), 440);
  $p38 := $add.ref($add.ref($add.ref($p30, $mul.ref($i31, 688)), 440), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13623, 24} true;
  assume {:verifier.code 0} true;
  $M.53 := $store.i64($M.53, $p38, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13625, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 28} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  $p13 := $p7;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13610, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13586, 16} true;
  assume {:verifier.code 0} true;
  $p14 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13586, 16} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13587, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13587, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13588, 12} true;
  assume {:verifier.code 0} true;
  call $i17 := myri10ge_xmit($p13, $p1);
  // WARNING: %21 = call i32 @myri10ge_xmit(%struct.sk_buff* %.013, %struct.net_device* %1), !dbg !8179, !verifier.code !8144
  call {:cexpr "status"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13590, 20} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13590, 7} true;
  assume {:verifier.code 0} true;
  $p19, $p20 := $p13, $p15;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i18 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13592, 5} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_any($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13594, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13594, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13594, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb12:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13597, 20} true;
  assume {:verifier.code 0} true;
  $p23 := $p20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13597, 20} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13598, 13} true;
  assume {:verifier.code 0} true;
  $p25 := $p20;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13598, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p25, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13599, 7} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_any($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13601, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13604, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 28} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  $p13 := $p15;
  assume {:branchcond $i27} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  assume ($i27 == 1);
  goto $bb8;
$bb17:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13609, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13615, 3} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_any($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13617, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13627, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const skb_padto: ref;
axiom (skb_padto == $sub.ref(0, 585273));
procedure  skb_padto($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i10: i32;
  var $i11: i32;
  var $i9: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !19188, metadata !8144), !dbg !19189, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7551, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7551, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  // WARNING: %4 = load i32, i32* %3, align 8, !dbg !8149, !verifier.code !8146
  call {:cexpr "size"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7552, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $uge.i32($i3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7552, 34} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7552, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7552, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 1);
  // WARNING: %8 = call i64 @ldv__builtin_expect(i64 %7, i64 1), !dbg !8156, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7554, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7554, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7555, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7564, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7560, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32($i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7560, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := skb_pad($p0, $i10);
  // WARNING: %14 = call i32 @skb_pad(%struct.sk_buff* %0, i32 %13), !dbg !8166, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7562, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i11;
  goto $bb3;
}
const skb_headlen: ref;
axiom (skb_headlen == $sub.ref(0, 586305));
procedure  skb_headlen($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7430, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7430, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7430, 57} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7430, 57} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7430, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32($i2, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7430, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const pci_map_single: ref;
axiom (pci_map_single == $sub.ref(0, 587337));
procedure  pci_map_single($p0: ref, $p1: ref, $i2: i64, $i3: i32)
  returns ($r: i64)
{
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !19227, metadata !8144), !dbg !19228, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !19229, metadata !8144), !dbg !19230, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 52} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 30} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 104} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 30} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 30} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8613, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := dma_map_single_attrs($p7, $p1, $i2, $i3, $0.ref);
  // WARNING: %12 = call i64 @dma_map_single_attrs(%struct.device* %11, i8* %1, i64 %2, i32 %3, %struct.__anonstruct_sigset_t_178* null), !dbg !8164, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8616, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const skb_frag_dma_map: ref;
axiom (skb_frag_dma_map == $sub.ref(0, 588369));
procedure  skb_frag_dma_map($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32)
  returns ($r: i64)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.skb_frag_struct* %1, i64 0, metadata !19253, metadata !8144), !dbg !19254, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !19255, metadata !8144), !dbg !19256, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !19257, metadata !8144), !dbg !19258, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7537, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := skb_frag_page($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7538, 51} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7538, 51} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.31, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7538, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7538, 63} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7538, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := dma_map_page($p0, $p5, $i9, $i3, $i4);
  // WARNING: %11 = call i64 @dma_map_page(%struct.device* %0, %struct.page* %6, i64 %10, i64 %3, i32 %4), !dbg !8163, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7540, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const myri10ge_submit_req: ref;
axiom (myri10ge_submit_req == $sub.ref(0, 589401));
procedure  myri10ge_submit_req($p0: ref, $p1: ref, $i2: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $p51: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.mcp_kreq_ether_send* %1, i64 0, metadata !19278, metadata !8144), !dbg !19279, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13076, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13076, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.37, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13076, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13076, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.35, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13076, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i4, $i6);
  // WARNING: %8 = and i32 %5, %7, !dbg !8155, !verifier.code !8147
  call {:cexpr "idx"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13077, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13077, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  // WARNING: %10 = load i8, i8* %9, align 1, !dbg !8158, !verifier.code !8147
  call {:cexpr "last_flags"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13078, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13078, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, 0);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13080, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13080, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.54, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13080, 22} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13080, 20} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p12, $mul.ref($i13, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13083, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i32($i7, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13083, 23} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13083, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.35, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13083, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i15, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13083, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i2, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32(0, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 9} true;
  assume {:verifier.code 0} true;
  $i21, $p22, $p23 := 0, $p14, $p1;
  assume {:branchcond $i20} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13103, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_submit_req_backwards($p0, $p1, $i2);
  // WARNING: call void @myri10ge_submit_req_backwards(%struct.myri10ge_tx_buf* %0, %struct.mcp_kreq_ether_send* %1, i32 %2), !dbg !8194, !verifier.code !8147
  assume {:verifier.code 0} true;
  $i36, $p37, $p38 := 0, $p14, $p1;
  goto $bb11;
$bb3:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 9} true;
  assume {:verifier.code 0} true;
  $p24, $p25, $i26 := $p1, $p14, 0;
  goto $bb6;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13096, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13088, 22} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13088, 36} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13088, 5} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p27, $p28, 4);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13090, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p24, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13091, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p25, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13092, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i32($i26, 2);
  // WARNING: %28 = add nsw i32 %.035, 2, !dbg !8190, !verifier.code !8147
  call {:cexpr "i"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 11} true;
  assume {:verifier.code 0} true;
  $i32 := $slt.i32($i31, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 9} true;
  assume {:verifier.code 0} true;
  $p24, $p25, $i26, $i33, $p34, $p35 := $p29, $p30, $i31, $i31, $p30, $p29;
  assume {:branchcond $i32} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 9} true;
  assume {:verifier.code 0} true;
  assume ($i32 == 1);
  goto $bb6;
$bb9:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13095, 9} true;
  assume {:verifier.code 0} true;
  $i21, $p22, $p23 := $i33, $p34, $p35;
  goto $bb5;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13101, 3} true;
  assume {:verifier.code 0} true;
  $i36, $p37, $p38 := $i21, $p22, $p23;
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13107, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i36, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13107, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13109, 22} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13109, 36} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13109, 5} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p40, $p41, 2);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13112, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13116, 8} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13116, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13117, 14} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13117, 28} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13117, 12} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13117, 36} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13117, 50} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p46, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13117, 3} true;
  assume {:verifier.code 0} true;
  call put_be32($i45, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13118, 17} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13118, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.37, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13118, 21} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i32($i49, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13118, 7} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13118, 11} true;
  assume {:verifier.code 0} true;
  $M.37 := $store.i32($M.37, $p51, $i50);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13121, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_linearize: ref;
axiom (skb_linearize == $sub.ref(0, 590433));
procedure  skb_linearize($p0: ref)
  returns ($r: i32)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7584, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := skb_is_nonlinear($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7584, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !8148, !verifier.code !8144
  call {:cexpr "tmp___2"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7586, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7586, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7588, 15} true;
  assume {:verifier.code 0} true;
  call $i4 := __skb_linearize($p0);
  // WARNING: %6 = call i32 @__skb_linearize(%struct.sk_buff* %0), !dbg !8154, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !19365, metadata !8144), !dbg !19366, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7591, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7594, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const skb_is_nonlinear: ref;
axiom (skb_is_nonlinear == $sub.ref(0, 591465));
procedure  skb_is_nonlinear($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7422, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7422, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7422, 40} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7422, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const __skb_linearize: ref;
axiom (__skb_linearize == $sub.ref(0, 592497));
procedure  __skb_linearize($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7571, 42} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7571, 42} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7571, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := __pskb_pull_tail($p0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7573, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7573, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7573, 11} true;
  assume {:verifier.code 0} true;
  havoc $i6;
  assume ((($i5 == 1) ==> ($i6 == 0)) && (($i5 != 1) ==> ($i6 == $sub.i32(0, 12))));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7573, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __pskb_pull_tail: ref;
axiom (__pskb_pull_tail == $sub.ref(0, 593529));
procedure  __pskb_pull_tail($p0: ref, $i1: i32)
  returns ($r: ref);
const myri10ge_submit_req_backwards: ref;
axiom (myri10ge_submit_req_backwards == $sub.ref(0, 594561));
procedure  myri10ge_submit_req_backwards($p0: ref, $p1: ref, $i2: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i7: i32;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $i20: i1;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.mcp_kreq_ether_send* %1, i64 0, metadata !19393, metadata !8144), !dbg !19394, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13045, 23} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13045, 23} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.37, $p3);
  // WARNING: %5 = load i32, i32* %4, align 4, !dbg !8152, !verifier.code !8147
  call {:cexpr "starting_slot"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $sgt.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $i2;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13057, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13049, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32($i6, 1);
  // WARNING: %8 = sub nsw i32 %.01, 1, !dbg !8159, !verifier.code !8147
  call {:cexpr "cnt"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13050, 24} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i4, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13050, 37} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13050, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.35, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13050, 31} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i32($i8, $i10);
  // WARNING: %12 = and i32 %9, %11, !dbg !8163, !verifier.code !8147
  call {:cexpr "idx"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.54, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 20} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 40} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 38} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p14, $mul.ref($i15, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 61} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 83} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 81} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p17, $mul.ref($i18, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13051, 3} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p16, $p19, 2);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $sgt.i32($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $i7;
  assume {:branchcond $i20} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 7} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb4;
$bb7:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13056, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13062, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_map_single_attrs: ref;
axiom (dma_map_single_attrs == $sub.ref(0, 595593));
procedure  dma_map_single_attrs($p0: ref, $p1: ref, $i2: i64, $i3: i32, $p4: ref)
  returns ($r: i64)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !19427, metadata !8144), !dbg !19428, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !19429, metadata !8144), !dbg !19430, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7092, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7094, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7094, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p1, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7095, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := valid_dma_direction($i3);
  // WARNING: %8 = call i32 @valid_dma_direction(i32 %3), !dbg !8164, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7096, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7096, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7096, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7096, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  // WARNING: %12 = call i64 @ldv__builtin_expect(i64 %11, i64 0), !dbg !8169, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7098, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7098, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  call devirtbounce.6(0, .str.8, 19, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7102, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7108, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7108, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := __phys_addr($i13);
  // WARNING: %18 = call i64 @__phys_addr(i64 %17), !dbg !8180, !verifier.code !8146
  call {:cexpr "tmp___2"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7109, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7109, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7109, 77} true;
  assume {:verifier.code 0} true;
  $i17 := $lshr.i64($i14, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7109, 66} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i17, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7110, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7110, 49} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i64($i19, 4095);
  call $i21 := devirtbounce.9($p16, $p0, $p18, $i20, $i2, $i3, $p4);
  // WARNING: %25 = call i64 @devirtbounce.9(i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.__anonstruct_sigset_t_178*)* %20, %struct.device* %0, %struct.page* %22, i64 %24, i64 %2, i32 %3, %struct.__anonstruct_sigset_t_178* %4)
  call {:cexpr "addr"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7111, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7111, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := __phys_addr($i22);
  // WARNING: %27 = call i64 @__phys_addr(i64 %26), !dbg !8191, !verifier.code !8146
  call {:cexpr "tmp___3"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7112, 70} true;
  assume {:verifier.code 0} true;
  $i24 := $lshr.i64($i23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7112, 59} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i24, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7112, 78} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7112, 98} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i64($i26, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7112, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p25, $i27, $i2, $i3, $i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7115, 3} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
}
const __phys_addr: ref;
axiom (__phys_addr == $sub.ref(0, 596625));
procedure  __phys_addr($i0: i64)
  returns ($r: i64);
const skb_pad: ref;
axiom (skb_pad == $sub.ref(0, 597657));
procedure  skb_pad($p0: ref, $i1: i32)
  returns ($r: i32);
const skb_gso_segment: ref;
axiom (skb_gso_segment == $sub.ref(0, 598689));
procedure  skb_gso_segment($p0: ref, $i1: i64)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !19483, metadata !8144), !dbg !19484, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8523, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := __skb_gso_segment($p0, $i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8525, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const IS_ERR: ref;
axiom (IS_ERR == $sub.ref(0, 599721));
procedure  IS_ERR($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17131, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_is_err($p0);
  // WARNING: %2 = call i64 @ldv_is_err(i8* %0), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17133, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const __skb_gso_segment: ref;
axiom (__skb_gso_segment == $sub.ref(0, 600753));
procedure  __skb_gso_segment($p0: ref, $i1: i64, $i2: i1)
  returns ($r: ref);
const tcp_hdr: ref;
axiom (tcp_hdr == $sub.ref(0, 601785));
procedure  tcp_hdr($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8740, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := skb_transport_header($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8742, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8742, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const skb_transport_header: ref;
axiom (skb_transport_header == $sub.ref(0, 602817));
procedure  skb_transport_header($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7484, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7484, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7484, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7484, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7484, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7484, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7484, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const skb_headroom: ref;
axiom (skb_headroom == $sub.ref(0, 603849));
procedure  skb_headroom($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i32;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 39} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i64.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 75} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 75} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 63} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 47} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 45} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32($i4, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7476, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const eth_validate_addr: ref;
axiom (eth_validate_addr == $sub.ref(0, 604881));
procedure  eth_validate_addr($p0: ref)
  returns ($r: i32);
const myri10ge_set_coalesce: ref;
axiom (myri10ge_set_coalesce == $sub.ref(0, 605913));
procedure  myri10ge_set_coalesce($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11260, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11261, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11262, 38} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11262, 38} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11262, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11262, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11263, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p3, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11263, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11263, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := __fswab32($i8);
  // WARNING: %10 = call i32 @__fswab32(i32 %9), !dbg !8159, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11264, 26} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p3, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11264, 26} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11264, 3} true;
  assume {:verifier.code 0} true;
  call put_be32($i9, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11266, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const myri10ge_set_msglevel: ref;
axiom (myri10ge_set_msglevel == $sub.ref(0, 606945));
procedure  myri10ge_set_msglevel($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !19559, metadata !8144), !dbg !19560, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11891, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11892, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11893, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 952);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11893, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11895, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_set_pauseparam: ref;
axiom (myri10ge_set_pauseparam == $sub.ref(0, 607977));
procedure  myri10ge_set_pauseparam($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $i12: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11294, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11295, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11297, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11297, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11297, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11297, 39} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11297, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i5, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11297, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11299, 55} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11299, 55} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11299, 15} true;
  assume {:verifier.code 0} true;
  call $i11 := myri10ge_change_pause($p3, $i10);
  // WARNING: %13 = call i32 @myri10ge_change_pause(%struct.myri10ge_priv* %4, i32 %12), !dbg !8163, !verifier.code !8144
  call {:cexpr "tmp___0"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11301, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $i11;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11320, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11305, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11305, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11305, 39} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p3, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11305, 39} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11305, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i14, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11305, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11307, 55} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11307, 55} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11307, 15} true;
  assume {:verifier.code 0} true;
  call $i20 := myri10ge_change_pause($p3, $i19);
  // WARNING: %24 = call i32 @myri10ge_change_pause(%struct.myri10ge_priv* %4, i32 %23), !dbg !8175, !verifier.code !8144
  call {:cexpr "tmp___1"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11309, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $i20;
  goto $bb3;
$bb6:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11313, 14} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11313, 14} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11313, 22} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11313, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11314, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 22);
  goto $bb3;
$bb9:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11318, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb3;
}
const myri10ge_phys_id: ref;
axiom (myri10ge_phys_id == $sub.ref(0, 609009));
procedure  myri10ge_phys_id($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i8: i32;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !19620, metadata !8144), !dbg !19621, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11981, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11982, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11985, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11985, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11986, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11998, 8} true;
  assume {:verifier.code 0} true;
  call $i6 := myri10ge_led($p3, 1);
  // WARNING: %14 = call i32 @myri10ge_led(%struct.myri10ge_priv* %4, i32 1), !dbg !8167, !verifier.code !8144
  call {:cexpr "rc"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12000, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i6;
  goto $bb10;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11990, 28} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11990, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11991, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12003, 8} true;
  assume {:verifier.code 0} true;
  call $i8 := myri10ge_led($p3, 0);
  // WARNING: %16 = call i32 @myri10ge_led(%struct.myri10ge_priv* %4, i32 0), !dbg !8172, !verifier.code !8144
  call {:cexpr "rc"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12005, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb10;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11995, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12007, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12011, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 12009, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb10;
}
const myri10ge_led: ref;
axiom (myri10ge_led == $sub.ref(0, 610041));
procedure  myri10ge_led($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $i17: i1;
  var $i18: i32;
  var $i19: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i64;
  var $i27: i64;
  var $i28: i64;
  var $i29: i1;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i20: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.myri10ge_priv* %0, i64 0, metadata !19656, metadata !8144), !dbg !19657, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11928, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11928, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11928, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 152);
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %5, i64 0, metadata !19664, metadata !8144), !dbg !19665, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11930, 45} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11930, 45} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11930, 50} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11930, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := readl($p7);
  // WARNING: %9 = call i32 @readl(i8* %8), !dbg !8159, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11931, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := __fswab32($i8);
  // WARNING: %10 = call i32 @__fswab32(i32 %9), !dbg !8162, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11932, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i32.i64($i9);
  // WARNING: %11 = zext i32 %10 to i64, !dbg !8165, !verifier.code !8146
  call {:cexpr "hdr_off"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 16} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i64($i10, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 23} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 30} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 30} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11937, 13} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i64.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11936, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := dev_err.ref.ref.i32($p4, .str.24, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11939, 5} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i32(0, 5);
  goto $bb6;
$bb3:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 41} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i10, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 72} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 72} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 51} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 49} true;
  assume {:verifier.code 0} true;
  $i17 := $ugt.i64($i13, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11934, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1);
  goto $bb2;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11972, 1} true;
  assume {:verifier.code 0} true;
  $r := $i20;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11944, 50} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11944, 50} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11944, 55} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, $mul.ref($i10, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11944, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := readl($p23);
  // WARNING: %28 = call i32 @readl(i8* %27), !dbg !8186, !verifier.code !8146
  call {:cexpr "tmp___1"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11945, 13} true;
  assume {:verifier.code 0} true;
  call $i25 := __fswab32($i24);
  // WARNING: %29 = call i32 @__fswab32(i32 %28), !dbg !8189, !verifier.code !8146
  call {:cexpr "tmp___2"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11946, 13} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i32.i64($i25);
  // WARNING: %30 = zext i32 %29 to i64, !dbg !8192, !verifier.code !8146
  call {:cexpr "hdr_len"} boogie_si_record_i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11947, 25} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i10, 184);
  // WARNING: %31 = add i64 %11, 184, !dbg !8195, !verifier.code !8146
  call {:cexpr "pattern_off"} boogie_si_record_i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11949, 30} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i26, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11949, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $uge.i64($i27, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11949, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11951, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := _dev_info.ref.ref($p4, .str.25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11953, 5} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i32(0, 22);
  goto $bb6;
$bb9:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11957, 10} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11957, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11959, 52} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11959, 52} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11959, 72} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i27, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11959, 57} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p33, $mul.ref($i34, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11959, 15} true;
  assume {:verifier.code 0} true;
  call $i36 := readl($p35);
  // WARNING: %44 = call i32 @readl(i8* %43), !dbg !8214, !verifier.code !8146
  call {:cexpr "tmp___3"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11960, 15} true;
  assume {:verifier.code 0} true;
  call $i37 := __fswab32($i36);
  // WARNING: %45 = call i32 @__fswab32(i32 %44), !dbg !8217, !verifier.code !8146
  call {:cexpr "tmp___4"} boogie_si_record_i32($i37);
  // WARNING: call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !19729, metadata !8144), !dbg !19730, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11963, 3} true;
  assume {:verifier.code 0} true;
  $i38 := $i37;
  goto $bb13;
$bb12:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(0, 2);
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11967, 13} true;
  assume {:verifier.code 0} true;
  call $i39 := __fswab32($i38);
  // WARNING: %48 = call i32 @__fswab32(i32 %.01), !dbg !8221, !verifier.code !8146
  call {:cexpr "tmp___5"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11968, 44} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11968, 44} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11968, 49} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, $mul.ref($i27, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11968, 3} true;
  assume {:verifier.code 0} true;
  call writel($i39, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 11970, 3} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  goto $bb6;
}
const writel: ref;
axiom (writel == $sub.ref(0, 611073));
procedure  writel($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6782, 58} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  call devirtbounce.4(0, $i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6783, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const myri10ge_read_reboot: ref;
axiom (myri10ge_read_reboot == $sub.ref(0, 612105));
procedure  myri10ge_read_reboot($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14290, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14290, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14291, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 920);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14291, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  // WARNING: %6 = load i32, i32* %5, align 8, !dbg !8154, !verifier.code !8143
  call {:cexpr "vs"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14292, 60} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14292, 3} true;
  assume {:verifier.code 0} true;
  call $i7 := pci_write_config_byte($p3, $i6, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14293, 61} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14293, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := pci_write_config_dword($p3, $i8, $sub.i32(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14294, 60} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i32($i5, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14294, 3} true;
  assume {:verifier.code 0} true;
  call $i11 := pci_read_config_dword($p3, $i10, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14296, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14296, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const myri10ge_check_slice: ref;
axiom (myri10ge_check_slice == $sub.ref(0, 613137));
procedure  myri10ge_check_slice($p0: ref, $p1: ref, $p2: ref, $i3: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $p73: ref;
  var $i74: i32;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $i78: i1;
  var $i79: i32;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $i83: i32;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: i32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
  var $p92: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32* %2, i64 0, metadata !19779, metadata !8144), !dbg !19780, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14308, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14308, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14309, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14309, 43} true;
  assume {:verifier.code 0} true;
  $p7 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14309, 43} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14309, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14309, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64($i6, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14309, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $sdiv.i64($i10, 832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14309, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i11);
  // WARNING: %13 = trunc i64 %12 to i32, !dbg !8162, !verifier.code !8146
  call {:cexpr "slice"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 12} true;
  assume {:verifier.code 0} true;
  $p13 := $p0;
  $p14 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 26} true;
  assume {:verifier.code 0} true;
  $p16 := $p0;
  $p17 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i15, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 41} true;
  assume {:verifier.code 0} true;
  $p20 := $p0;
  $p21 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 44} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 56} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 56} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 49} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i22, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 74} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb4:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 81} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 516);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 81} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 104} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 104} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 97} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i27, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 74} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb3;
$bb6:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14311, 36} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p5, 476);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14311, 36} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14311, 22} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i3, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14311, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14310, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb3;
$bb8:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14313, 13} true;
  assume {:verifier.code 0} true;
  call $i34 := net_ratelimit();
  // WARNING: %39 = call i32 @net_ratelimit(), !dbg !8188, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14315, 15} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14315, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i33 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 34} true;
  assume {:verifier.code 0} true;
  $p39 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 34} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 39} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 37} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p40, $mul.ref($i41, 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 63} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p40, $mul.ref($i41, 688)), 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 63} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 74} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 74} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14325, 17} true;
  assume {:verifier.code 0} true;
  call $i47 := __fswab32($i46);
  // WARNING: %56 = call i32 @__fswab32(i32 %55), !dbg !8209, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14326, 53} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14326, 53} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 30} true;
  assume {:verifier.code 0} true;
  $p50 := $p0;
  $p51 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 33} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 51} true;
  assume {:verifier.code 0} true;
  $p53 := $p0;
  $p54 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 54} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 63} true;
  assume {:verifier.code 0} true;
  $p56 := $p0;
  $p57 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 66} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 76} true;
  assume {:verifier.code 0} true;
  $p59 := $p0;
  $p60 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14327, 79} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14328, 23} true;
  assume {:verifier.code 0} true;
  $p62 := $p0;
  $p63 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14328, 26} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14326, 7} true;
  assume {:verifier.code 0} true;
  call $i65 := netdev_warn.ref.ref.i32.i32.i32.i32.i32.i32.i32($p49, .str.111, $i12, $i52, $i55, $i58, $i61, $i64, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14329, 21} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.i32($M.28, $p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14330, 11} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 524);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14330, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p66, 1);
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14317, 55} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14317, 55} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14317, 9} true;
  assume {:verifier.code 0} true;
  call $i38 := netdev_warn.ref.ref.i32($p37, .str.110, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14320, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14323, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14333, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 11} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 11} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 35} true;
  assume {:verifier.code 0} true;
  $p69 := $p0;
  $p70 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 38} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 28} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i68, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb15, $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 43} true;
  assume {:verifier.code 0} true;
  assume ($i72 == 1);
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14337, 23} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.27, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14337, 39} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14337, 21} true;
  assume {:verifier.code 0} true;
  $M.27 := $store.i32($M.27, $p2, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14338, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb17:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 50} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 50} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 74} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p0, 216);
  $p76 := $add.ref($add.ref($p0, 216), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 82} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 67} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i32($i74, $i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb18, $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14336, 7} true;
  assume {:verifier.code 0} true;
  assume ($i78 == 1);
  goto $bb16;
$bb19:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14341, 30} true;
  assume {:verifier.code 0} true;
  $p81 := $p0;
  $p82 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14341, 33} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14341, 7} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14341, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p84, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14342, 29} true;
  assume {:verifier.code 0} true;
  $p85 := $p0;
  $p86 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14342, 32} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14342, 7} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 516);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14342, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p88, $i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14343, 30} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p0, 216);
  $p90 := $add.ref($add.ref($p0, 216), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14343, 38} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i32($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14343, 7} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14343, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p92, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14344, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __dynamic_netdev_dbg: ref;
axiom (__dynamic_netdev_dbg == $sub.ref(0, 614169));
procedure  __dynamic_netdev_dbg.ref.ref.ref($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const net_ratelimit: ref;
axiom (net_ratelimit == $sub.ref(0, 615201));
procedure  net_ratelimit()
  returns ($r: i32);
const pci_write_config_byte: ref;
axiom (pci_write_config_byte == $sub.ref(0, 616233));
procedure  pci_write_config_byte($p0: ref, $i1: i32, $i2: i8)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i8;
  var $i9: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !19891, metadata !8144), !dbg !19892, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !19893, metadata !8144), !dbg !19894, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8569, 40} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8569, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8569, 50} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8569, 50} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8569, 64} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8569, 64} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8569, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := pci_bus_write_config_byte($p4, $i6, $i1, $i8);
  // WARNING: %10 = call i32 @pci_bus_write_config_byte(%struct.pci_bus* %5, i32 %7, i32 %1, i8 zeroext %9), !dbg !8156, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8571, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const pci_write_config_dword: ref;
axiom (pci_write_config_dword == $sub.ref(0, 617265));
procedure  pci_write_config_dword($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !19909, metadata !8144), !dbg !19910, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !19911, metadata !8144), !dbg !19912, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8581, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8581, 41} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8581, 51} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8581, 51} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8581, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := pci_bus_write_config_dword($p4, $i6, $i1, $i2);
  // WARNING: %8 = call i32 @pci_bus_write_config_dword(%struct.pci_bus* %5, i32 %7, i32 %1, i32 %2), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8583, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const pci_read_config_dword: ref;
axiom (pci_read_config_dword == $sub.ref(0, 618297));
procedure  pci_read_config_dword($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !19926, metadata !8144), !dbg !19927, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8557, 40} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8557, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8557, 50} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8557, 50} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8557, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := pci_bus_read_config_dword($p4, $i6, $i1, $p2);
  // WARNING: %8 = call i32 @pci_bus_read_config_dword(%struct.pci_bus* %5, i32 %7, i32 %1, i32* %2), !dbg !8155, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8559, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const pci_bus_read_config_dword: ref;
axiom (pci_bus_read_config_dword == $sub.ref(0, 619329));
procedure  pci_bus_read_config_dword($p0: ref, $i1: i32, $i2: i32, $p3: ref)
  returns ($r: i32);
const pci_bus_write_config_dword: ref;
axiom (pci_bus_write_config_dword == $sub.ref(0, 620361));
procedure  pci_bus_write_config_dword($p0: ref, $i1: i32, $i2: i32, $i3: i32)
  returns ($r: i32);
const pci_bus_write_config_byte: ref;
axiom (pci_bus_write_config_byte == $sub.ref(0, 621393));
procedure  pci_bus_write_config_byte($p0: ref, $i1: i32, $i2: i32, $i3: i8)
  returns ($r: i32);
const ldv_mod_timer_92: ref;
axiom (ldv_mod_timer_92 == $sub.ref(0, 622425));
procedure  ldv_mod_timer_92($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.timer_list* %0, i64 0, metadata !19943, metadata !8144), !dbg !19944, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17366, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := mod_timer($p0, $i1);
  // WARNING: %3 = call i32 @mod_timer(%struct.timer_list* %0, i64 %1), !dbg !8149, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !19950, metadata !8144), !dbg !19951, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17368, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_mod_timer($i2, $p0, $i1);
  // WARNING: %4 = call i32 @ldv_mod_timer(i32 %3, %struct.timer_list* %0, i64 %1), !dbg !8157, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17370, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const mod_timer: ref;
axiom (mod_timer == $sub.ref(0, 623457));
procedure  mod_timer($p0: ref, $i1: i64)
  returns ($r: i32);
const ldv_mod_timer: ref;
axiom (ldv_mod_timer == $sub.ref(0, 624489));
procedure  ldv_mod_timer($i0: i32, $p1: ref, $i2: i64)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.timer_list* %1, i64 0, metadata !19964, metadata !8144), !dbg !19965, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16159, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %4 = call i32 @ldv_undef_int(), !dbg !8151, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16161, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16161, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16163, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16163, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16163, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16165, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_instance_register_9_2($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16167, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16170, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16170, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16170, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16172, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16176, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_instance_register_9_2: ref;
axiom (ldv_dispatch_instance_register_9_2 == $sub.ref(0, 625521));
procedure  ldv_dispatch_instance_register_9_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15642, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15643, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15644, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15644, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15645, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15645, 3} true;
  assume {:verifier.code 0} true;
  call ldv_timer_timer_instance_4($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15647, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_timer_timer_instance_4: ref;
axiom (ldv_timer_timer_instance_4 == $sub.ref(0, 626553));
procedure  ldv_timer_timer_instance_4($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17073, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17074, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17074, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17074, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17076, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17076, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17077, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17077, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17079, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $p7 := $u30;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17083, 3} true;
  assume {:verifier.code 0} true;
  call ldv_switch_to_interrupt_context();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17085, 51} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17085, 51} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17085, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17085, 60} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17085, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17087, 65} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p7, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17087, 65} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17087, 103} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p7, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17087, 103} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17087, 5} true;
  assume {:verifier.code 0} true;
  call ldv_timer_instance_callback_4_2($p13, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17089, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17093, 3} true;
  assume {:verifier.code 0} true;
  call ldv_switch_to_process_context();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17095, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_timer_instance_callback_4_2: ref;
axiom (ldv_timer_instance_callback_4_2 == $sub.ref(0, 627585));
procedure  ldv_timer_instance_callback_4_2($p0: ref, $i1: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata void (i64)* %0, i64 0, metadata !20044, metadata !8144), !dbg !20045, !verifier.code !8146
  call devirtbounce.14($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17064, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dev_set_drvdata_59: ref;
axiom (ldv_dev_set_drvdata_59 == $sub.ref(0, 628617));
procedure  ldv_dev_set_drvdata_59($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17204, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_dev_set_drvdata($p0, $p1);
  // WARNING: %3 = call i32 @ldv_dev_set_drvdata(%struct.device* %0, i8* %1), !dbg !8149, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17206, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_dev_set_drvdata: ref;
axiom (ldv_dev_set_drvdata == $sub.ref(0, 629649));
procedure  ldv_dev_set_drvdata($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17517, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_xzalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17518, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17518, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17518, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17519, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17519, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17519, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17519, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17521, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_xzalloc: ref;
axiom (ldv_xzalloc == $sub.ref(0, 630681));
procedure  ldv_xzalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17801, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17803, 14} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17803, 34} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17803, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17803, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17804, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv_is_err($p1);
  // WARNING: %6 = call i64 @ldv_is_err(i8* %2), !dbg !8157, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17805, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17805, 22} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17805, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17807, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const dma_zalloc_coherent: ref;
axiom (dma_zalloc_coherent == $sub.ref(0, 631713));
procedure  dma_zalloc_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i32)
  returns ($r: ref)
{
  var $i4: i32;
  var $p5: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !20100, metadata !8144), !dbg !20101, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !20104, metadata !8144), !dbg !20105, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7385, 53} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i3, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7385, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := dma_alloc_attrs($p0, $i1, $p2, $i4, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7388, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const myri10ge_poll: ref;
axiom (myri10ge_poll == $sub.ref(0, 632745));
procedure  myri10ge_poll($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $i10: i8;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i14: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.napi_struct* %0, i64 0, metadata !20118, metadata !8144), !dbg !20119, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10964, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10964, 46} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, $mul.ref($sub.ref(0, 352), 688));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10965, 12} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 352), 688)), 432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10965, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10965, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10965, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10965, 30} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10965, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10967, 5} true;
  assume {:verifier.code 0} true;
  call myri10ge_update_dca($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10969, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10973, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := myri10ge_ss_lock_napi($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10973, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i8($i9);
  // WARNING: %14 = zext i1 %13 to i8, !dbg !8165, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10975, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i8.i1($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10975, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10977, 3} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := 1;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10980, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10981, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $i1;
  goto $bb9;
$bb8:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10999, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10986, 15} true;
  assume {:verifier.code 0} true;
  call $i15 := myri10ge_clean_rx_done($p3, $i1);
  // WARNING: %23 = call i32 @myri10ge_clean_rx_done(%struct.myri10ge_slice_state* %4, i32 %1), !dbg !8180, !verifier.code !8144
  call {:cexpr "work_done"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10987, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_ss_unlock_napi($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10989, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10989, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10991, 5} true;
  assume {:verifier.code 0} true;
  call napi_complete($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10992, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 352), 688)), 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10992, 29} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10992, 5} true;
  assume {:verifier.code 0} true;
  call put_be32(50331648, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10994, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 10997, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i15;
  goto $bb9;
}
const netif_napi_add: ref;
axiom (netif_napi_add == $sub.ref(0, 633777));
procedure  netif_napi_add($p0: ref, $p1: ref, $p2: ref, $i3: i32);
const napi_hash_add: ref;
axiom (napi_hash_add == $sub.ref(0, 634809));
procedure  napi_hash_add($p0: ref);
const myri10ge_ss_unlock_napi: ref;
axiom (myri10ge_ss_unlock_napi == $sub.ref(0, 635841));
procedure  myri10ge_ss_unlock_napi($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $i12: i1;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9756, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9756, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_77($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9757, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9757, 24} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9757, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9757, 36} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9757, 36} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  // WARNING: %7 = zext i1 %6 to i32, !dbg !8153, !verifier.code !8146
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9758, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9758, 43} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9758, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9758, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0);
  // WARNING: %11 = call i64 @ldv__builtin_expect(i64 %10, i64 0), !dbg !8158, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9760, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9760, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9762, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.7, 953);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9764, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9768, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9768, 37} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i1.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9768, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9768, 3} true;
  assume {:verifier.code 0} true;
  call $i15 := ldv__builtin_expect($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9769, 7} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9769, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9770, 28} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9770, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_78($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9772, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const napi_complete: ref;
axiom (napi_complete == $sub.ref(0, 636873));
procedure  napi_complete($p0: ref);
const netif_get_num_default_rss_queues: ref;
axiom (netif_get_num_default_rss_queues == $sub.ref(0, 637905));
procedure  netif_get_num_default_rss_queues()
  returns ($r: i32);
const kcalloc: ref;
axiom (kcalloc == $sub.ref(0, 638937));
procedure  kcalloc($i0: i64, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i32;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !20207, metadata !8144), !dbg !20208, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !20209, metadata !8144), !dbg !20210, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7003, 38} true;
  assume {:verifier.code 0} true;
  $i3 := $or.i32($i2, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7003, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := kmalloc_array($i0, $i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7005, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const kmalloc_array: ref;
axiom (kmalloc_array == $sub.ref(0, 639969));
procedure  kmalloc_array($i0: i64, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i1;
  var $i4: i64;
  var $i5: i1;
  var $i7: i64;
  var $p8: ref;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !20221, metadata !8144), !dbg !20222, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !20223, metadata !8144), !dbg !20224, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6986, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6986, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6986, 47} true;
  assume {:verifier.code 0} true;
  $i4 := $udiv.i64($sub.i64(0, 1), $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6986, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $ugt.i64($i0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6986, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6986, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6987, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6986, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6996, 1} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6992, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6992, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := __kmalloc($i7, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6994, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $p8;
  goto $bb6;
}
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 641001));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref);
const myri10ge_load_hotplug_firmware: ref;
axiom (myri10ge_load_hotplug_firmware == $sub.ref(0, 642033));
procedure  myri10ge_load_hotplug_firmware($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i32;
  var $i30: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i1;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i1;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i64;
  var $i61: i32;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $i65: i1;
  var $p67: ref;
  var $p68: ref;
  var $i69: i64;
  var $i70: i32;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $i74: i64;
  var $i75: i64;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i64;
  var $p81: ref;
  var $i82: i1;
  var $i83: i32;
  var $i84: i32;
  var $i85: i64;
  var $p86: ref;
  var $p87: ref;
  var $i88: i8;
  var $i89: i32;
  var $i90: i64;
  var $p91: ref;
  var $p92: ref;
  var $i93: i64;
  var $i94: i1;
  var $i66: i32;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $p98: ref;
  var $i99: i64;
  var $i100: i1;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $i106: i64;
  var $p107: ref;
  var $p108: ref;
  var $i109: i64;
  var $i110: i32;
  var $i111: i1;
  var $p112: ref;
  var $p113: ref;
  var $i114: i64;
  var $i115: i32;
  var $i116: i32;
  var $p117: ref;
  var $p118: ref;
  var $i119: i64;
  var $i120: i32;
  var $i31: i32;
  var $p121: ref;
  var $i13: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9263, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9263, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9263, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9264, 56} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9264, 56} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9264, 12} true;
  assume {:verifier.code 0} true;
  call $i8 := request_firmware($p2, $p7, $p5);
  // WARNING: %9 = call i32 @request_firmware(%struct.firmware** %3, i8* %8, %struct.device* %6), !dbg !8166, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9266, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9266, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9269, 18} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9269, 18} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9268, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := dev_err.ref.ref.ref($p5, .str.87, $p11);
  // WARNING: %14 = call i32 (%struct.device*, i8*, ...) @dev_err(%struct.device* %6, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.87, i32 0, i32 0), i8* %13), !dbg !8175, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9272, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9360, 3} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 23} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 27} true;
  assume {:verifier.code 0} true;
  $p15 := $p14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 27} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 57} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 57} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 67} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i18, $sub.i32(0, 1048576));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 35} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 32} true;
  assume {:verifier.code 0} true;
  $i21 := $uge.i64($i16, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 79} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 79} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9278, 79} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9278, 83} true;
  assume {:verifier.code 0} true;
  $p27 := $p26;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9278, 83} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9278, 73} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i64.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9278, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := dev_err.ref.ref.i32($p5, .str.88, $i29);
  // WARNING: %35 = call i32 (%struct.device*, i8*, ...) @dev_err(%struct.device* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.88, i32 0, i32 0), i32 %34), !dbg !8195, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9281, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 22);
  goto $bb10;
$bb7:
  assume !(($i21 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 98} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 102} true;
  assume {:verifier.code 0} true;
  $p23 := $p22;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 102} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 107} true;
  assume {:verifier.code 0} true;
  $i25 := $ule.i64($i24, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9276, 7} true;
  assume {:verifier.code 0} true;
  assume ($i25 == 1);
  goto $bb6;
$bb9:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9357, 20} true;
  assume {:verifier.code 0} true;
  $p121 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9357, 3} true;
  assume {:verifier.code 0} true;
  call release_firmware($p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9358, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i31;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9286, 31} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9286, 35} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9286, 35} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9286, 21} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9286, 40} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9286, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9286, 9} true;
  assume {:verifier.code 0} true;
  call $i38 := __fswab32($i37);
  // WARNING: %44 = call i32 @__fswab32(i32 %43), !dbg !8203, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9287, 16} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  // WARNING: %45 = zext i32 %44 to i64, !dbg !8206, !verifier.code !8143
  call {:cexpr "hdr_offset"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i64($i39, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 26} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb12, $bb14;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 33} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9291, 5} true;
  assume {:verifier.code 0} true;
  call $i47 := dev_err.ref.ref($p5, .str.89);
  // WARNING: %55 = call i32 (%struct.device*, i8*, ...) @dev_err(%struct.device* %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.89, i32 0, i32 0)), !dbg !8219, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9294, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 22);
  goto $bb10;
$bb14:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 47} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i39, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 73} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 77} true;
  assume {:verifier.code 0} true;
  $p44 := $p43;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 77} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i64($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 55} true;
  assume {:verifier.code 0} true;
  $i46 := $ugt.i64($i42, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb15, $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9289, 7} true;
  assume {:verifier.code 0} true;
  assume ($i46 == 1);
  goto $bb13;
$bb16:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9299, 35} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9299, 39} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p48, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9299, 39} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9299, 44} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p50, $mul.ref($i39, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9299, 9} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9300, 12} true;
  assume {:verifier.code 0} true;
  call $i53 := myri10ge_validate_firmware($p0, $p52);
  // WARNING: %63 = call i32 @myri10ge_validate_firmware(%struct.myri10ge_priv* %0, %struct.mcp_gen_header* %62), !dbg !8230, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9302, 14} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9303, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $i53;
  goto $bb10;
$bb19:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9308, 56} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9308, 60} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9308, 60} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9308, 66} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9308, 70} true;
  assume {:verifier.code 0} true;
  $p59 := $p58;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9308, 70} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i64($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9308, 9} true;
  assume {:verifier.code 0} true;
  call $i61 := crc32_le($sub.i32(0, 1), $p57, $i60);
  // WARNING: %74 = call i32 @crc32_le(i32 -1, i8* %70, i64 %73), !dbg !8241, !verifier.code !8143
  call {:cexpr "crc"} boogie_si_record_i32($i61);
  // WARNING: call void @llvm.dbg.value(metadata i32 %74, i64 0, metadata !20344, metadata !8144), !dbg !20345, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 43} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 47} true;
  assume {:verifier.code 0} true;
  $p63 := $p62;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 47} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i64($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 25} true;
  assume {:verifier.code 0} true;
  $i65 := $ult.i64(0, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 7} true;
  assume {:verifier.code 0} true;
  $i66 := 0;
  goto $bb24;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9324, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9315, 26} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9315, 30} true;
  assume {:verifier.code 0} true;
  $p68 := $p67;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9315, 30} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i64($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9315, 11} true;
  assume {:verifier.code 0} true;
  $i70 := $trunc.i64.i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9315, 35} true;
  assume {:verifier.code 0} true;
  $i71 := $sub.i32($i70, $i66);
  // WARNING: %84 = sub i32 %83, %.02, !dbg !8257, !verifier.code !8143
  call {:cexpr "_min2"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 34} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 34} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 42} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i32.i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 60} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i64($i74, 1048576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 39} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p73, $mul.ref($i75, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 91} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 95} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 95} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 102} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i32.i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 100} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p79, $mul.ref($i80, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9317, 37} true;
  assume {:verifier.code 0} true;
  $i82 := $ult.i32(256, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9317, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i82 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9317, 31} true;
  assume {:verifier.code 0} true;
  $i83 := 256;
  goto $bb28;
$bb27:
  assume !(($i82 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9317, 31} true;
  assume {:verifier.code 0} true;
  $i83 := $i71;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9317, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9317, 62} true;
  assume {:verifier.code 0} true;
  $i84 := $udiv.i32($i83, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9317, 20} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i32.i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9316, 3} true;
  assume {:verifier.code 0} true;
  call __iowrite64_copy($p76, $p81, $i85);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9319, 39} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9319, 39} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9319, 3} true;
  assume {:verifier.code 0} true;
  call $i88 := readb($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9320, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i32($i66, 256);
  // WARNING: %105 = add i32 %.02, 256, !dbg !8281, !verifier.code !8143
  call {:cexpr "i"} boogie_si_record_i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i32.i64($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 43} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 47} true;
  assume {:verifier.code 0} true;
  $p92 := $p91;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 47} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i64($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 25} true;
  assume {:verifier.code 0} true;
  $i94 := $ult.i64($i90, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $i89;
  assume {:branchcond $i94} true;
  goto $bb29, $bb30;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 7} true;
  assume {:verifier.code 0} true;
  assume ($i94 == 1);
  goto $bb24;
$bb30:
  assume !(($i94 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9323, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9329, 21} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9329, 25} true;
  assume {:verifier.code 0} true;
  $p96 := $p95;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9329, 25} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i64($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9329, 13} true;
  assume {:verifier.code 0} true;
  call $p98 := vmalloc($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9332, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9332, 35} true;
  assume {:verifier.code 0} true;
  $i100 := $eq.i64($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9332, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9334, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 12);
  goto $bb10;
$bb33:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9339, 68} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9339, 68} true;
  assume {:verifier.code 0} true;
  $p102 := $load.ref($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9339, 73} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p102, 1048576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9340, 17} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9340, 21} true;
  assume {:verifier.code 0} true;
  $p105 := $p104;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9340, 21} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i64($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9339, 3} true;
  assume {:verifier.code 0} true;
  call memcpy_fromio($p98, $p103, $i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9341, 76} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9341, 80} true;
  assume {:verifier.code 0} true;
  $p108 := $p107;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9341, 80} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i64($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9341, 16} true;
  assume {:verifier.code 0} true;
  call $i110 := crc32_le($sub.i32(0, 1), $p98, $i109);
  // WARNING: %132 = call i32 @crc32_le(i32 -1, i8* %117, i64 %131), !dbg !8307, !verifier.code !8143
  call {:cexpr "reread_crc"} boogie_si_record_i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9342, 3} true;
  assume {:verifier.code 0} true;
  call vfree($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9344, 11} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i32($i61, $i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9344, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9347, 28} true;
  assume {:verifier.code 0} true;
  $p112 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9347, 32} true;
  assume {:verifier.code 0} true;
  $p113 := $p112;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9347, 32} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i64($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9347, 13} true;
  assume {:verifier.code 0} true;
  $i115 := $trunc.i64.i32($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9346, 5} true;
  assume {:verifier.code 0} true;
  call $i116 := dev_err.ref.ref.i32.i32.i32($p5, .str.90, $i115, $i110, $i61);
  // WARNING: %139 = call i32 (%struct.device*, i8*, ...) @dev_err(%struct.device* %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.90, i32 0, i32 0), i32 %138, i32 %132, i32 %74), !dbg !8319, !verifier.code !8143
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9350, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 5);
  goto $bb10;
$bb36:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9354, 26} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9354, 30} true;
  assume {:verifier.code 0} true;
  $p118 := $p117;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9354, 30} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i64($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9354, 11} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i64.i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9354, 9} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i32($M.22, $p1, $i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9354, 3} true;
  assume {:verifier.code 0} true;
  $i31 := $i53;
  goto $bb10;
}
const myri10ge_adopt_running_firmware: ref;
axiom (myri10ge_adopt_running_firmware == $sub.ref(0, 643065));
procedure  myri10ge_adopt_running_firmware($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $i44: i32;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $i19: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9376, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9376, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9376, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 152);
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %4, i64 0, metadata !20440, metadata !8144), !dbg !20441, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9378, 45} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9378, 45} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9378, 50} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9378, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := readl($p6);
  // WARNING: %8 = call i32 @readl(i8* %7), !dbg !8157, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9379, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := __fswab32($i7);
  // WARNING: %9 = call i32 @__fswab32(i32 %8), !dbg !8160, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9380, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i32.i64($i8);
  // WARNING: %10 = zext i32 %9 to i64, !dbg !8163, !verifier.code !8146
  call {:cexpr "hdr_offset"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i64($i9, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 26} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 33} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9385, 13} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i64.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9384, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := dev_err.ref.ref.i32($p3, .str.24, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9387, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32(0, 5);
  goto $bb6;
$bb3:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 47} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i9, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 78} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 78} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 57} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 55} true;
  assume {:verifier.code 0} true;
  $i16 := $ugt.i64($i12, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9382, 7} true;
  assume {:verifier.code 0} true;
  assume ($i16 == 1);
  goto $bb2;
$bb5:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9416, 1} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9392, 13} true;
  assume {:verifier.code 0} true;
  call $p20 := kmalloc(192, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9393, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9395, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9395, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9395, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9396, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32(0, 12);
  goto $bb6;
$bb9:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9401, 17} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9401, 61} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9401, 61} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9401, 66} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, $mul.ref($i9, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9401, 3} true;
  assume {:verifier.code 0} true;
  call memcpy_fromio($p24, $p27, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9402, 12} true;
  assume {:verifier.code 0} true;
  call $i28 := myri10ge_validate_firmware($p0, $p21);
  // WARNING: %35 = call i32 @myri10ge_validate_firmware(%struct.myri10ge_priv* %0, %struct.mcp_gen_header* %25), !dbg !8199, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9403, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9403, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 27} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 39} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 888);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 25} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 72} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i64($i32, 17179869185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 89} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 97} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 97} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 109} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i32($i35, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 114} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 89} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb14:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 122} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 122} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 134} true;
  assume {:verifier.code 0} true;
  $i39 := $sle.i32($i38, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 114} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb13;
$bb16:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9407, 10} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 900);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9407, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9409, 19} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 888);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9409, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9409, 38} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 892);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9409, 38} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9409, 57} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9409, 57} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9408, 5} true;
  assume {:verifier.code 0} true;
  call $i47 := dev_warn.ref.ref.i32.i32.i32($p3, .str.95, $i42, $i44, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9411, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9405, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i39 == 1));
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9414, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i28;
  goto $bb6;
}
const myri10ge_get_firmware_capabilities: ref;
axiom (myri10ge_get_firmware_capabilities == $sub.ref(0, 644097));
procedure  myri10ge_get_firmware_capabilities($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $p19: ref;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $p23: ref;
  var $i18: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9424, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9424, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 65545);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9425, 12} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_send_cmd($p0, 44, $p1, 0);
  // WARNING: %4 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 44, %struct.myri10ge_cmd* %2, i32 0), !dbg !8158, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9427, 14} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9427, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9428, 25} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9428, 25} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.7, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9428, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 932);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9428, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9429, 26} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9429, 26} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9429, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $or.i32($i9, 1048576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9429, 10} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9429, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9430, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9434, 12} true;
  assume {:verifier.code 0} true;
  call $i12 := myri10ge_send_cmd($p0, 12, $p1, 0);
  // WARNING: %16 = call i32 @myri10ge_send_cmd(%struct.myri10ge_priv* %0, i32 12, %struct.myri10ge_cmd* %2, i32 0), !dbg !8173, !verifier.code !8143
  call {:cexpr "status"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9436, 14} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9436, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9438, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9438, 47} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9438, 54} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9438, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := dev_err.ref.ref($p16, .str.96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9440, 5} true;
  assume {:verifier.code 0} true;
  $i18 := $sub.i32(0, 6);
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9447, 1} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9444, 37} true;
  assume {:verifier.code 0} true;
  $p19 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9444, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.7, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9444, 43} true;
  assume {:verifier.code 0} true;
  $i21 := $udiv.i32($i20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9444, 49} true;
  assume {:verifier.code 0} true;
  $i22 := $mul.i32($i21, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9444, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9444, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9445, 3} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb6;
}
const kmalloc: ref;
axiom (kmalloc == $sub.ref(0, 645129));
procedure  kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !20561, metadata !8144), !dbg !20562, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6976, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := __kmalloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6978, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const myri10ge_validate_firmware: ref;
axiom (myri10ge_validate_firmware == $sub.ref(0, 646161));
procedure  myri10ge_validate_firmware($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9216, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9216, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9216, 24} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9217, 28} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9217, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9217, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := __fswab32($i6);
  // WARNING: %8 = call i32 @__fswab32(i32 %7), !dbg !8156, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9219, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 1163151392);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9219, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9221, 26} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9221, 26} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9221, 11} true;
  assume {:verifier.code 0} true;
  call $i11 := __fswab32($i10);
  // WARNING: %13 = call i32 @__fswab32(i32 %12), !dbg !8165, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9222, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := dev_err.ref.ref.i32($p4, .str.91, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9224, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9244, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9229, 27} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 760);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9229, 11} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9229, 64} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9229, 40} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9229, 3} true;
  assume {:verifier.code 0} true;
  call $p18 := strncpy($p15, $p17, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9230, 34} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 760);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9230, 10} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9230, 66} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 888);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9230, 87} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 892);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9231, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9230, 3} true;
  assume {:verifier.code 0} true;
  call $i24 := sscanf.ref.ref.ref.ref.ref($p20, .str.92, $p21, $p22, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9233, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9233, 38} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 888);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9233, 24} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i64($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9233, 71} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i27, 17179869185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9233, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9235, 90} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 760);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9235, 74} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9235, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := dev_err.ref.ref.ref($p4, .str.93, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9236, 5} true;
  assume {:verifier.code 0} true;
  call $i32 := dev_err.ref.ref.i32.i32($p4, .str.94, 1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9238, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 22);
  goto $bb3;
$bb6:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 9242, 3} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb3;
}
const strncpy: ref;
axiom (strncpy == $sub.ref(0, 647193));
procedure  strncpy($p0: ref, $p1: ref, $i2: i64)
  returns ($r: ref);
const sscanf: ref;
axiom (sscanf == $sub.ref(0, 648225));
procedure  sscanf.ref.ref.ref.ref.ref($p0: ref, $p1: ref, p.2: ref, p.3: ref, p.4: ref)
  returns ($r: i32);
const request_firmware: ref;
axiom (request_firmware == $sub.ref(0, 649257));
procedure  request_firmware($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const crc32_le: ref;
axiom (crc32_le == $sub.ref(0, 650289));
procedure  crc32_le($i0: i32, $p1: ref, $i2: i64)
  returns ($r: i32);
const readb: ref;
axiom (readb == $sub.ref(0, 651321));
procedure  readb($p0: ref)
  returns ($r: i8)
{
  var $i1: i8;
$bb0:
  call $i1 := devirtbounce.15(0, $p0);
  // WARNING: %2 = call i8 @devirtbounce.15(i8 (i8*)* asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i8* %0)
  call {:cexpr "ret"} boogie_si_record_i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 6765, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const vmalloc: ref;
axiom (vmalloc == $sub.ref(0, 652353));
procedure  vmalloc($i0: i64)
  returns ($r: ref);
const vfree: ref;
axiom (vfree == $sub.ref(0, 653385));
procedure  vfree($p0: ref);
const release_firmware: ref;
axiom (release_firmware == $sub.ref(0, 654417));
procedure  release_firmware($p0: ref);
const myri10ge_firmware_probe: ref;
axiom (myri10ge_firmware_probe == $sub.ref(0, 655449));
procedure  myri10ge_firmware_probe($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13954, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13954, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13955, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13956, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13956, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13957, 12} true;
  assume {:verifier.code 0} true;
  call $i5 := pcie_get_readrq($p2);
  // WARNING: %6 = call i32 @pcie_get_readrq(%struct.pci_dev* %3), !dbg !8157, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13959, 14} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13959, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13961, 5} true;
  assume {:verifier.code 0} true;
  call $i7 := dev_err.ref.ref.i32($p3, .str.63, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13964, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14011, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14011, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14012, 20} true;
  assume {:verifier.code 0} true;
  $p21 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14012, 3} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14014, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13968, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i5, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13968, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13970, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := dev_warn.ref.ref.i32($p3, .str.64, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13972, 10} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13972, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13974, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13978, 20} true;
  assume {:verifier.code 0} true;
  $p11 := $M.17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13978, 3} true;
  assume {:verifier.code 0} true;
  call set_fw_name($p0, $p11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13979, 12} true;
  assume {:verifier.code 0} true;
  call $i12 := myri10ge_load_firmware($p0, 1);
  // WARNING: %19 = call i32 @myri10ge_load_firmware(%struct.myri10ge_priv* %0, i32 1), !dbg !8179, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13981, 14} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13981, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13982, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13987, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_enable_ecrc($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13988, 12} true;
  assume {:verifier.code 0} true;
  call $i14 := myri10ge_dma_test($p0, 32);
  // WARNING: %24 = call i32 @myri10ge_dma_test(%struct.myri10ge_priv* %0, i32 32), !dbg !8187, !verifier.code !8146
  call {:cexpr "status"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13990, 14} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13990, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13991, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14016, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13995, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i14, $sub.i32(0, 7));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13995, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13997, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := dev_warn.ref.ref.i32($p3, .str.65, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13999, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14002, 14} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i14, $sub.i32(0, 38));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14002, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14004, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := dev_warn.ref.ref($p3, .str.66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14006, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 14002, 18} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const __kernel_param_lock: ref;
axiom (__kernel_param_lock == $sub.ref(0, 656481));
procedure  __kernel_param_lock();
const kstrdup: ref;
axiom (kstrdup == $sub.ref(0, 657513));
procedure  kstrdup($p0: ref, $i1: i32)
  returns ($r: ref);
const __kernel_param_unlock: ref;
axiom (__kernel_param_unlock == $sub.ref(0, 658545));
procedure  __kernel_param_unlock();
const strlen: ref;
axiom (strlen == $sub.ref(0, 659577));
procedure  strlen($p0: ref)
  returns ($r: i64);
const pcie_get_readrq: ref;
axiom (pcie_get_readrq == $sub.ref(0, 660609));
procedure  pcie_get_readrq($p0: ref)
  returns ($r: i32);
const myri10ge_enable_ecrc: ref;
axiom (myri10ge_enable_ecrc == $sub.ref(0, 661641));
procedure  myri10ge_enable_ecrc($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i64;
  var $i14: i1;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i1;
  var $p25: ref;
  var $p26: ref;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $i45: i32;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $p52: ref;
  var $i53: i32;
  var $i54: i32;
  var $i55: i32;
  var $i56: i32;
  var $i57: i1;
  var $i58: i32;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $p63: ref;
  var $i64: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13860, 19} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13860, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13860, 26} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13860, 26} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13860, 32} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13860, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13861, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13861, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13861, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $M.55;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 28} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 33} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13863, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 36} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 59} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13862, 7} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb2;
$bb5:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13945, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13868, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := pci_pcie_type($p7);
  // WARNING: %20 = call i32 @pci_pcie_type(%struct.pci_dev* %8), !dbg !8169, !verifier.code !8143
  call {:cexpr "tmp___3"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13870, 15} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13870, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13871, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $M.55;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13871, 30} true;
  assume {:verifier.code 0} true;
  $i18 := $sgt.i32($i17, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13871, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $p46 := $p7;
  goto $bb25;
$bb10:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 25} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 25} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 31} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 31} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 34} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 75} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb12, $bb14;
$bb11:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13900, 17} true;
  assume {:verifier.code 0} true;
  call $p44 := pci_name($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13901, 7} true;
  assume {:verifier.code 0} true;
  call $i45 := dev_err.ref.ref.ref($p10, .str.69, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13904, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 75} true;
  assume {:verifier.code 0} true;
  assume ($i24 == 1);
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13878, 9} true;
  assume {:verifier.code 0} true;
  call $i37 := dev_err.ref.ref($p10, .str.67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13880, 9} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb14:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 75} true;
  assume {:verifier.code 0} true;
  $p25, $p26 := $p22, $p7;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 78} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 109} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 106} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i64($i34, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb19, $bb20;
$bb16:
  assume ($i39 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 25} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13875, 31} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 11} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 34} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i64($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 75} true;
  assume {:verifier.code 0} true;
  $p25, $p26 := $p31, $p27;
  assume {:branchcond $i33} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 75} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 75} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb15;
$bb19:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13876, 11} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb20:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13885, 13} true;
  assume {:verifier.code 0} true;
  call $i38 := pci_pcie_type($p25);
  // WARNING: %48 = call i32 @pci_pcie_type(%struct.pci_dev* %40), !dbg !8201, !verifier.code !8143
  call {:cexpr "tmp"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13887, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13887, 11} true;
  assume {:verifier.code 0} true;
  $p27, $p40 := $p25, $p25;
  assume {:branchcond $i39} true;
  goto $bb16, $bb22;
$bb22:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13893, 17} true;
  assume {:verifier.code 0} true;
  call $p41 := pci_name($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13894, 17} true;
  assume {:verifier.code 0} true;
  call $p42 := pci_name($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13895, 7} true;
  assume {:verifier.code 0} true;
  call $i43 := _dev_info.ref.ref.ref.ref($p10, .str.68, $p42, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13898, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13906, 3} true;
  assume {:verifier.code 0} true;
  $p46 := $p40;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13910, 9} true;
  assume {:verifier.code 0} true;
  call $i47 := pci_find_ext_capability($p46, 1);
  // WARNING: %61 = call i32 @pci_find_ext_capability(%struct.pci_dev* %.1, i32 1), !dbg !8225, !verifier.code !8143
  call {:cexpr "cap"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13912, 11} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i32($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13912, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13913, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb27:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13918, 69} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i47, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13918, 9} true;
  assume {:verifier.code 0} true;
  call $i50 := pci_read_config_dword($p46, $i49, $p1);
  // WARNING: %67 = call i32 @pci_read_config_dword(%struct.pci_dev* %.1, i32 %66, i32* %2), !dbg !8236, !verifier.code !8143
  call {:cexpr "ret"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13920, 11} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i32($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13920, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13922, 15} true;
  assume {:verifier.code 0} true;
  call $p52 := pci_name($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13923, 5} true;
  assume {:verifier.code 0} true;
  call $i53 := dev_err.ref.ref.ref($p10, .str.70, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13925, 5} true;
  assume {:verifier.code 0} true;
  call $i54 := dev_err.ref.ref($p10, .str.71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13927, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb30:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13931, 8} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13931, 16} true;
  assume {:verifier.code 0} true;
  $i56 := $and.i32($i55, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13931, 23} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13931, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13932, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb33:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13937, 13} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13937, 21} true;
  assume {:verifier.code 0} true;
  $i59 := $or.i32($i58, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13937, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p1, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13938, 64} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i32($i47, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13938, 70} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13938, 3} true;
  assume {:verifier.code 0} true;
  call $i62 := pci_write_config_dword($p46, $i60, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13939, 13} true;
  assume {:verifier.code 0} true;
  call $p63 := pci_name($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13940, 3} true;
  assume {:verifier.code 0} true;
  call $i64 := _dev_info.ref.ref.ref($p10, .str.72, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 13943, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const pci_pcie_type: ref;
axiom (pci_pcie_type == $sub.ref(0, 662673));
procedure  pci_pcie_type($p0: ref)
  returns ($r: i32)
{
  var $i1: i16;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8727, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := pcie_caps_reg($p0);
  // WARNING: %2 = call zeroext i16 @pcie_caps_reg(%struct.pci_dev* %0), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i16($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8729, 12} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i16.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8729, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8729, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $ashr.i32($i3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8729, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const pci_find_ext_capability: ref;
axiom (pci_find_ext_capability == $sub.ref(0, 663705));
procedure  pci_find_ext_capability($p0: ref, $i1: i32)
  returns ($r: i32);
const pcie_caps_reg: ref;
axiom (pcie_caps_reg == $sub.ref(0, 664737));
procedure  pcie_caps_reg($p0: ref)
  returns ($r: i16)
{
  var $p1: ref;
  var $i2: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8718, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8718, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 8718, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const memcmp: ref;
axiom (memcmp == $sub.ref(0, 665769));
procedure  memcmp($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32);
const simple_strtoul: ref;
axiom (simple_strtoul == $sub.ref(0, 666801));
procedure  simple_strtoul($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64);
const is_device_dma_capable: ref;
axiom (is_device_dma_capable == $sub.ref(0, 667833));
procedure  is_device_dma_capable($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i5: i1;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 1136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 41} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 74} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 84} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 1136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 84} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 77} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 94} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:verifier.code 0} true;
  $i5 := $i9;
  goto $bb3;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 74} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 74} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7052, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const dma_alloc_coherent_gfp_flags: ref;
axiom (dma_alloc_coherent_gfp_flags == $sub.ref(0, 668865));
procedure  dma_alloc_coherent_gfp_flags($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !20873, metadata !8144), !dbg !20874, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7258, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := dma_alloc_coherent_mask($p0, $i1);
  // WARNING: %3 = call i64 @dma_alloc_coherent_mask(%struct.device* %0, i32 %1), !dbg !8149, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i64($i2);
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !20880, metadata !8144), !dbg !20881, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7261, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $ule.i64($i2, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7261, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7262, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i1, 1);
  // WARNING: %6 = or i32 %1, 1, !dbg !8159, !verifier.code !8146
  call {:cexpr "gfp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7263, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i5 := $i1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7266, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i64($i2, 4294967295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7266, 54} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7266, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7266, 68} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7266, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7266, 54} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  $i10 := $i5;
  goto $bb9;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7267, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i5, 4);
  // WARNING: %14 = or i32 %.0, 4, !dbg !8169, !verifier.code !8146
  call {:cexpr "gfp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7268, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7266, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb6;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7271, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const debug_dma_alloc_coherent: ref;
axiom (debug_dma_alloc_coherent == $sub.ref(0, 669897));
procedure  debug_dma_alloc_coherent($p0: ref, $i1: i64, $i2: i64, $p3: ref);
const dma_alloc_coherent_mask: ref;
axiom (dma_alloc_coherent_mask == $sub.ref(0, 670929));
procedure  dma_alloc_coherent_mask($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
  var $i8: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !20904, metadata !8144), !dbg !20905, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !20906, metadata !8144), !dbg !20907, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7242, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 1144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7242, 35} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.0, $p2);
  // WARNING: %4 = load i64, i64* %3, align 8, !dbg !8151, !verifier.code !8146
  call {:cexpr "dma_mask"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7243, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7243, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7244, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7244, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7244, 16} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == 16777215)) && (($i6 != 1) ==> ($i7 == 4294967295)));
  // WARNING: %9 = select i1 %8, i64 16777215, i64 4294967295, !dbg !8158, !verifier.code !8146
  call {:cexpr "dma_mask"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7245, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i8 := $i3;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7248, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const dma_set_coherent_mask: ref;
axiom (dma_set_coherent_mask == $sub.ref(0, 671961));
procedure  dma_set_coherent_mask($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $p5: ref;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !20921, metadata !8144), !dbg !20922, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7366, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := dma_supported($p0, $i1);
  // WARNING: %3 = call i32 @dma_supported(%struct.device* %0, i64 %1), !dbg !8147, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7368, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7368, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7369, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $sub.i32(0, 5);
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7376, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7373, 8} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 1144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7373, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 7374, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
}
const dma_supported: ref;
axiom (dma_supported == $sub.ref(0, 672993));
procedure  dma_supported($p0: ref, $i1: i64)
  returns ($r: i32);
const dma_set_mask: ref;
axiom (dma_set_mask == $sub.ref(0, 674025));
procedure  dma_set_mask($p0: ref, $i1: i64)
  returns ($r: i32);
const alloc_etherdev_mqs: ref;
axiom (alloc_etherdev_mqs == $sub.ref(0, 675057));
procedure  alloc_etherdev_mqs($i0: i32, $i1: i32, $i2: i32)
  returns ($r: ref);
const ldv_alloc_etherdev_mqs: ref;
axiom (ldv_alloc_etherdev_mqs == $sub.ref(0, 676089));
procedure  ldv_alloc_etherdev_mqs($p0: ref, $i1: i32, $i2: i32, $i3: i32)
  returns ($r: ref)
{
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !20942, metadata !8144), !dbg !20943, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !20944, metadata !8144), !dbg !20945, !verifier.code !8146
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !20946, metadata !8144), !dbg !20947, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15548, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := ldv_undef_int();
  // WARNING: %5 = call i32 @ldv_undef_int(), !dbg !8153, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15550, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15552, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := ldv_xmalloc(3200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15553, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15555, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15558, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $0.ref;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15563, 1} true;
  assume {:verifier.code 0} true;
  $r := $p8;
  $exn := false;
  return;
}
const ldv_EMGentry_init_myri10ge_init_module_17_7: ref;
axiom (ldv_EMGentry_init_myri10ge_init_module_17_7 == $sub.ref(0, 677121));
procedure  ldv_EMGentry_init_myri10ge_init_module_17_7($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15508, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := myri10ge_init_module();
  // WARNING: %2 = call i32 @myri10ge_init_module(), !dbg !8147, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15510, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const myri10ge_init_module: ref;
axiom (myri10ge_init_module == $sub.ref(0, 678153));
procedure  myri10ge_init_module()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15332, 3} true;
  assume {:verifier.code 0} true;
  call $i0 := printk.ref.ref(.str.2, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15334, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15334, 25} true;
  assume {:verifier.code 0} true;
  $i2 := $sgt.i32($i1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15334, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15336, 82} true;
  assume {:verifier.code 0} true;
  $i3 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15336, 5} true;
  assume {:verifier.code 0} true;
  call $i4 := printk.ref.i32(.str.4, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15337, 23} true;
  assume {:verifier.code 0} true;
  $M.8 := 4;
  call {:cexpr "myri10ge_rss_hash"} boogie_si_record_i32(4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15339, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15343, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dca_register_notify_98(myri10ge_dca_notifier);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15345, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15345, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15345, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15346, 25} true;
  assume {:verifier.code 0} true;
  $M.23 := 32;
  call {:cexpr "myri10ge_max_slices"} boogie_si_record_i32(32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15347, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15351, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv___pci_register_driver_99(myri10ge_driver, __this_module, .str.1);
  // WARNING: %14 = call i32 @ldv___pci_register_driver_99(%struct.pci_driver* @myri10ge_driver, %struct.module* @__this_module, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0)), !dbg !8164, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15353, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const ldv_dca_register_notify_98: ref;
axiom (ldv_dca_register_notify_98 == $sub.ref(0, 679185));
procedure  ldv_dca_register_notify_98($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17449, 3} true;
  assume {:verifier.code 0} true;
  call dca_register_notify($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17450, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dca_register_notify($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17452, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv___pci_register_driver_99: ref;
axiom (ldv___pci_register_driver_99 == $sub.ref(0, 680217));
procedure  ldv___pci_register_driver_99($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17464, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __pci_register_driver($p0, $p1, $p2);
  // WARNING: %4 = call i32 @__pci_register_driver(%struct.pci_driver* %0, %struct.module* %1, i8* %2), !dbg !8151, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !21029, metadata !8144), !dbg !21030, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17466, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := ldv___pci_register_driver($i3, $p0, $p1, $p2);
  // WARNING: %5 = call i32 @ldv___pci_register_driver(i32 %4, %struct.pci_driver* %0, %struct.module* %1, i8* %2), !dbg !8159, !verifier.code !8146
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17469, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const __pci_register_driver: ref;
axiom (__pci_register_driver == $sub.ref(0, 681249));
procedure  __pci_register_driver($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const ldv___pci_register_driver: ref;
axiom (ldv___pci_register_driver == $sub.ref(0, 682281));
procedure  ldv___pci_register_driver($i0: i32, $p1: ref, $p2: ref, $p3: ref)
  returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15521, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := ldv_undef_int();
  // WARNING: %5 = call i32 @ldv_undef_int(), !dbg !8153, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15523, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15523, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15525, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15525, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15525, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15527, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_register_14_2($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15529, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15532, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15532, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15532, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15534, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15538, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_register_14_2: ref;
axiom (ldv_dispatch_register_14_2 == $sub.ref(0, 683313));
procedure  ldv_dispatch_register_14_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15699, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15700, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15701, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15701, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15702, 26} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15702, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_pci_instance_2($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15704, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_pci_instance_2: ref;
axiom (ldv_pci_pci_instance_2 == $sub.ref(0, 684345));
procedure  ldv_pci_pci_instance_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i1;
  var $i22: i32;
  var $i23: i1;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $i31: i1;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i1;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16797, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.ldv_struct_pci_instance_2* %3, i64 0, metadata !21094, metadata !8144), !dbg !21095, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16799, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16799, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16799, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16801, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16801, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16802, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16802, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16804, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $p6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $p8 := $u31;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16808, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := ldv_xmalloc(2936);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16809, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16810, 13} true;
  assume {:verifier.code 0} true;
  call $p11 := ldv_xmalloc(32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16811, 45} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16817, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_undef_int();
  // WARNING: %16 = call i32 @ldv_undef_int(), !dbg !8178, !verifier.code !8141
  call {:cexpr "tmp___2"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16840, 14} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16840, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16841, 14} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16841, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16843, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16821, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pre_probe();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16822, 134} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16822, 134} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16822, 25} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_pci_instance_probe_2_17($p16, $p10, $p12);
  // WARNING: %21 = call i32 @ldv_pci_instance_probe_2_17(i32 (%struct.pci_dev*, %struct.pci_device_id*)* %20, %struct.pci_dev* %13, %struct.pci_device_id* %15), !dbg !8189, !verifier.code !8141
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16824, 25} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv_post_probe($i17);
  // WARNING: %22 = call i32 @ldv_post_probe(i32 %21), !dbg !8190, !verifier.code !8141
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16825, 15} true;
  assume {:verifier.code 0} true;
  call $i19 := ldv_undef_int();
  // WARNING: %23 = call i32 @ldv_undef_int(), !dbg !8191, !verifier.code !8141
  call {:cexpr "tmp___1"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16827, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16827, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16829, 36} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16829, 36} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i1.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16829, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16831, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16834, 36} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16834, 36} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16834, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16836, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16848, 13} true;
  assume {:verifier.code 0} true;
  call $i29 := ldv_undef_int();
  // WARNING: %37 = call i32 @ldv_undef_int(), !dbg !8214, !verifier.code !8141
  call {:cexpr "tmp___3"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16851, 15} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16851, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb15, $bb16;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16817, 13} true;
  assume {:verifier.code 0} true;
  call $i25 := ldv_undef_int();
  // WARNING: %31 = call i32 @ldv_undef_int(), !dbg !8178, !verifier.code !8141
  call {:cexpr "tmp___2"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 15} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 7} true;
  assume {:verifier.code 0} true;
  assume ($i26 == 1);
  goto $bb7;
$bb13:
  assume !(($i26 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16819, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16918, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb15:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16852, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16868, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16856, 15} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i29, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16856, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $i29;
  assume {:branchcond $i31} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16857, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16871, 80} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16871, 80} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16871, 23} true;
  assume {:verifier.code 0} true;
  $p36 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16871, 23} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.56, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16871, 23} true;
  assume {:verifier.code 0} true;
  call $i38 := ldv_pci_instance_suspend_2_8($p35, $p10, $i37);
  // WARNING: %56 = call i32 @ldv_pci_instance_suspend_2_8(i32 (%struct.pci_dev*, i32)* %53, %struct.pci_dev* %13, i32 %55), !dbg !8238, !verifier.code !8141
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16873, 23} true;
  assume {:verifier.code 0} true;
  call $i39 := ldv_filter_err_code($i38);
  // WARNING: %57 = call i32 @ldv_filter_err_code(i32 %56), !dbg !8239, !verifier.code !8141
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16875, 51} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p8, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16875, 51} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16875, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16875, 64} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16875, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb29, $bb30;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16861, 15} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16861, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16862, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16899, 51} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p8, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16899, 51} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16899, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16899, 60} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i64($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16899, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb35, $bb36;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16866, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16912, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16913, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16848, 13} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb29:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16878, 87} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p8, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16878, 87} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16878, 25} true;
  assume {:verifier.code 0} true;
  $p46 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16878, 25} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.56, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16878, 25} true;
  assume {:verifier.code 0} true;
  call $i48 := ldv_pci_instance_suspend_late_2_7($p45, $p10, $i47);
  // WARNING: %67 = call i32 @ldv_pci_instance_suspend_late_2_7(i32 (%struct.pci_dev*, i32)* %64, %struct.pci_dev* %13, i32 %66), !dbg !8248, !verifier.code !8141
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16881, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $i48;
  goto $bb31;
$bb30:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  $i49 := $i39;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16885, 23} true;
  assume {:verifier.code 0} true;
  call $i50 := ldv_filter_err_code($i49);
  // WARNING: %70 = call i32 @ldv_filter_err_code(i32 %.0), !dbg !8250, !verifier.code !8141
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16887, 51} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p8, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16887, 51} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16887, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16887, 64} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16887, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16889, 67} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p8, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16889, 67} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16889, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_resume_early_2_6($p56, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16891, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16895, 59} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p8, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16895, 59} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16895, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_resume_2_5($p58, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16897, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb35:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16901, 63} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p8, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16901, 63} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16901, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_shutdown_2_3($p64, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16903, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16907, 60} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16907, 60} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16907, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_release_2_2($p66, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16909, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16916, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
}
const ldv_pre_probe: ref;
axiom (ldv_pre_probe == $sub.ref(0, 685377));
procedure  ldv_pre_probe();
const ldv_pci_instance_probe_2_17: ref;
axiom (ldv_pci_instance_probe_2_17 == $sub.ref(0, 686409));
procedure  ldv_pci_instance_probe_2_17($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16709, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := myri10ge_probe($p1, $p2);
  // WARNING: %4 = call i32 @myri10ge_probe(%struct.pci_dev* %1, %struct.pci_device_id* %2), !dbg !8151, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16711, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv_post_probe: ref;
axiom (ldv_post_probe == $sub.ref(0, 687441));
procedure  ldv_post_probe($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17619, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_filter_positive_int($i0);
  // WARNING: %2 = call i32 @ldv_filter_positive_int(i32 %0), !dbg !8145, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17621, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_pci_instance_suspend_2_8: ref;
axiom (ldv_pci_instance_suspend_2_8 == $sub.ref(0, 688473));
procedure  ldv_pci_instance_suspend_2_8($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:verifier.code 0} true;
  $M.57 := $store.i32($M.57, $p4, $i2);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16765, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16765, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.57, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16765, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := myri10ge_suspend($p1, $i6);
  // WARNING: %8 = call i32 @myri10ge_suspend(%struct.pci_dev* %1, i32 %7), !dbg !8154, !verifier.code !8146
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16767, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const ldv_filter_err_code: ref;
axiom (ldv_filter_err_code == $sub.ref(0, 689505));
procedure  ldv_filter_err_code($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17630, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_filter_positive_int($i0);
  // WARNING: %2 = call i32 @ldv_filter_positive_int(i32 %0), !dbg !8145, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17632, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_pci_instance_suspend_late_2_7: ref;
axiom (ldv_pci_instance_suspend_late_2_7 == $sub.ref(0, 690537));
procedure  ldv_pci_instance_suspend_late_2_7($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:verifier.code 0} true;
  $M.58 := $store.i32($M.58, $p4, $i2);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16777, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16777, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.58, $p5);
  call $i7 := devirtbounce.16($p0, $p1, $i6);
  // WARNING: %8 = call i32 @devirtbounce.16(i32 (%struct.pci_dev*, i32)* %0, %struct.pci_dev* %1, i32 %7)
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16779, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const ldv_pci_instance_resume_early_2_6: ref;
axiom (ldv_pci_instance_resume_early_2_6 == $sub.ref(0, 691569));
procedure  ldv_pci_instance_resume_early_2_6($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.17($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16744, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_instance_resume_2_5: ref;
axiom (ldv_pci_instance_resume_2_5 == $sub.ref(0, 692601));
procedure  ldv_pci_instance_resume_2_5($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16731, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := myri10ge_resume($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16733, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_instance_shutdown_2_3: ref;
axiom (ldv_pci_instance_shutdown_2_3 == $sub.ref(0, 693633));
procedure  ldv_pci_instance_shutdown_2_3($p0: ref, $p1: ref)
{
$bb0:
  call devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16755, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_instance_release_2_2: ref;
axiom (ldv_pci_instance_release_2_2 == $sub.ref(0, 694665));
procedure  ldv_pci_instance_release_2_2($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16720, 3} true;
  assume {:verifier.code 0} true;
  call myri10ge_remove($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16722, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_filter_positive_int: ref;
axiom (ldv_filter_positive_int == $sub.ref(0, 695697));
procedure  ldv_filter_positive_int($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17597, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $sle.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17597, 18} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17597, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17599, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const dca_register_notify: ref;
axiom (dca_register_notify == $sub.ref(0, 696729));
procedure  dca_register_notify($p0: ref);
const ldv_dca_register_notify: ref;
axiom (ldv_dca_register_notify == $sub.ref(0, 697761));
procedure  ldv_dca_register_notify($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15571, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_register_16_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15573, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_register_16_1: ref;
axiom (ldv_dispatch_register_16_1 == $sub.ref(0, 698793));
procedure  ldv_dispatch_register_16_1($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15714, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15715, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15716, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15716, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15717, 59} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15717, 3} true;
  assume {:verifier.code 0} true;
  call ldv_struct_notifier_block_dummy_resourceless_instance_3($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 15719, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_struct_notifier_block_dummy_resourceless_instance_3: ref;
axiom (ldv_struct_notifier_block_dummy_resourceless_instance_3 == $sub.ref(0, 699825));
procedure  ldv_struct_notifier_block_dummy_resourceless_instance_3($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17027, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17028, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17028, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17028, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17030, 51} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17030, 51} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17031, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17031, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17033, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $p7 := $u32;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17040, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv_undef_int();
  // WARNING: %11 = call i32 @ldv_undef_int(), !dbg !8161, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17051, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17044, 35} true;
  assume {:verifier.code 0} true;
  call $p10 := ldv_xmalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17045, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_3_3($u33, $p7, $u34, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17047, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17040, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv_undef_int();
  // WARNING: %15 = call i32 @ldv_undef_int(), !dbg !8161, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 7} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb7;
$bb9:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17042, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const ldv_dummy_resourceless_instance_callback_3_3: ref;
axiom (ldv_dummy_resourceless_instance_callback_3_3 == $sub.ref(0, 700857));
procedure  ldv_dummy_resourceless_instance_callback_3_3($p0: ref, $p1: ref, $i2: i64, $p3: ref)
{
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.notifier_block* %1, i64 0, metadata !21405, metadata !8144), !dbg !21406, !verifier.code !8146
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16002, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := myri10ge_notify_dca($p1, $i2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16004, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_entry_EMGentry_17: ref;
axiom (ldv_entry_EMGentry_17 == $sub.ref(0, 701889));
procedure  ldv_entry_EMGentry_17($p0: ref)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16016, 24} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_EMGentry_init_myri10ge_init_module_17_7($u35);
  // WARNING: %2 = call i32 @ldv_EMGentry_init_myri10ge_init_module_17_7(i32 ()* undef), !dbg !8145, !verifier.code !8144
  call {:cexpr "ldv_17_ret_default"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16017, 24} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_post_init($i1);
  // WARNING: %3 = call i32 @ldv_post_init(i32 %2), !dbg !8150, !verifier.code !8144
  call {:cexpr "ldv_17_ret_default"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16018, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %4 = call i32 @ldv_undef_int(), !dbg !8151, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16020, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16020, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16022, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16022, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16022, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16023, 5} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16024, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16026, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16029, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16029, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16029, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16030, 5} true;
  assume {:verifier.code 0} true;
  call ldv_EMGentry_exit_myri10ge_cleanup_module_17_2($u36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16031, 5} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16032, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16034, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16038, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_post_init: ref;
axiom (ldv_post_init == $sub.ref(0, 702921));
procedure  ldv_post_init($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17608, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_filter_positive_int($i0);
  // WARNING: %2 = call i32 @ldv_filter_positive_int(i32 %0), !dbg !8145, !verifier.code !8144
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 17610, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 703953));
procedure  ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19787, 71} true;
  assume {:verifier.code 0} true;
  $i0 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19787, 107} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19787, 107} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19787, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19788, 71} true;
  assume {:verifier.code 0} true;
  $i3 := $M.59;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19788, 109} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19788, 109} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19788, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19789, 71} true;
  assume {:verifier.code 0} true;
  $i6 := $M.60;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19789, 106} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19789, 106} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19789, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19790, 71} true;
  assume {:verifier.code 0} true;
  $i9 := $M.61;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19790, 96} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19790, 96} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19790, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19791, 71} true;
  assume {:verifier.code 0} true;
  $i12 := $M.62;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19791, 85} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19791, 85} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i1.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19791, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19792, 71} true;
  assume {:verifier.code 0} true;
  $i15 := $M.63;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19792, 101} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19792, 101} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19792, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19793, 71} true;
  assume {:verifier.code 0} true;
  $i18 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19793, 109} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19793, 109} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19793, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19794, 71} true;
  assume {:verifier.code 0} true;
  $i21 := $M.64;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19794, 100} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19794, 100} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i1.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19794, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19795, 71} true;
  assume {:verifier.code 0} true;
  $i24 := $M.65;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19795, 104} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19795, 104} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i1.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19795, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19796, 71} true;
  assume {:verifier.code 0} true;
  $i27 := $M.66;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19796, 110} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i27, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19796, 110} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i1.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19796, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19797, 71} true;
  assume {:verifier.code 0} true;
  $i30 := $M.67;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19797, 84} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19797, 84} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i1.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19797, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19798, 71} true;
  assume {:verifier.code 0} true;
  $i33 := $M.68;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19798, 106} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i33, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19798, 106} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i1.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19798, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19799, 71} true;
  assume {:verifier.code 0} true;
  $i36 := $M.69;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19799, 100} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19799, 100} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i1.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19799, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19800, 71} true;
  assume {:verifier.code 0} true;
  $i39 := $M.70;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19800, 102} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i39, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19800, 102} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i1.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19800, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19801, 71} true;
  assume {:verifier.code 0} true;
  $i42 := $M.71;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19801, 109} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19801, 109} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i1.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19801, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19803, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit: ref;
axiom (ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit == $sub.ref(0, 704985));
procedure  ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19940, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19940, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19942, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19944, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 19947, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 706017));
procedure {:entrypoint} main()
  returns ($r: i32)
{
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16045, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16045, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16046, 3} true;
  assume {:verifier.code 0} true;
  call ldv_entry_EMGentry_17($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-myricom-myri10ge-myri10ge_true-unreach-call.cil-Sq370B.c", 16048, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 707049));
procedure  ldv_initialize();
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 708081));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !21523, metadata !8144), !dbg !21524, !verifier.code !8146
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 709113));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 710145));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 711177));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 712209));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 713241));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 714273));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 715305));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 716337));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 717369));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 718401));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 719433));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 720465));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !8141, !verifier.code !8142
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 721497));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 722529));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 723561));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 724593));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 725625));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 726657));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 727689));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 728721));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 729753));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 730785));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 731817));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 732849));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 733881));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 734913));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 735945));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 736977));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const calloc: ref;
axiom (calloc == $sub.ref(0, 738009));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !21556, metadata !8144), !dbg !21557, !verifier.code !8146
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 739041));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 740073));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 741105));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 742137));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 743169));
procedure  __SMACK_static_init()
{
$bb0:
  $M.72 := 0;
  $M.73 := 0;
  $M.74 := 0;
  $M.75 := 0;
  $M.76 := 0;
  $M.77 := 0;
  $M.78 := 0;
  $M.79 := 0;
  $M.80 := $0.ref;
  $M.81 := 0;
  $M.82 := $0.ref;
  $M.83 := 0;
  $M.84 := $0.ref;
  $M.85 := 0;
  $M.86 := $0.ref;
  $M.87 := 0;
  $M.88 := $0.ref;
  $M.89 := 0;
  $M.90 := $0.ref;
  $M.71 := 1;
  call {:cexpr "ldv_spin_tx_global_lock_of_net_device"} boogie_si_record_i32(1);
  $M.70 := 1;
  call {:cexpr "ldv_spin_slock_of_NOT_ARG_SIGN"} boogie_si_record_i32(1);
  $M.69 := 1;
  call {:cexpr "ldv_spin_sk_dst_lock_of_sock"} boogie_si_record_i32(1);
  $M.68 := 1;
  call {:cexpr "ldv_spin_siglock_of_sighand_struct"} boogie_si_record_i32(1);
  $M.67 := 1;
  call {:cexpr "ldv_spin_ptl"} boogie_si_record_i32(1);
  $M.66 := 1;
  call {:cexpr "ldv_spin_node_size_lock_of_pglist_data"} boogie_si_record_i32(1);
  $M.65 := 1;
  call {:cexpr "ldv_spin_lru_lock_of_netns_frags"} boogie_si_record_i32(1);
  $M.64 := 1;
  call {:cexpr "ldv_spin_lock_of_res_counter"} boogie_si_record_i32(1);
  $M.15 := 1;
  call {:cexpr "ldv_spin_lock_of_myri10ge_slice_state"} boogie_si_record_i32(1);
  $M.63 := 1;
  call {:cexpr "ldv_spin_lock_of_NOT_ARG_SIGN"} boogie_si_record_i32(1);
  $M.62 := 1;
  call {:cexpr "ldv_spin_lock"} boogie_si_record_i32(1);
  $M.61 := 1;
  call {:cexpr "ldv_spin_i_lock_of_inode"} boogie_si_record_i32(1);
  $M.60 := 1;
  call {:cexpr "ldv_spin_alloc_lock_of_task_struct"} boogie_si_record_i32(1);
  $M.59 := 1;
  call {:cexpr "ldv_spin_addr_list_lock_of_net_device"} boogie_si_record_i32(1);
  $M.14 := 1;
  call {:cexpr "ldv_spin__xmit_lock_of_netdev_queue"} boogie_si_record_i32(1);
  $M.9 := $sub.i32(0, 1);
  call {:cexpr "myri10ge_small_bytes"} boogie_si_record_i32($sub.i32(0, 1));
  $M.30 := 1;
  call {:cexpr "myri10ge_reset_recover"} boogie_si_record_i32(1);
  $M.0 := $store.ref($M.0, myri10ge_ethtool_ops, myri10ge_get_settings);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 16), myri10ge_get_drvinfo);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 56), myri10ge_get_msglevel);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 64), myri10ge_set_msglevel);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 80), ethtool_op_get_link);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 112), myri10ge_get_coalesce);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 120), myri10ge_set_coalesce);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 128), myri10ge_get_ringparam);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 144), myri10ge_get_pauseparam);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 152), myri10ge_set_pauseparam);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 168), myri10ge_get_strings);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 176), myri10ge_phys_id);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 184), myri10ge_get_ethtool_stats);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 216), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 224), myri10ge_get_sset_count);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 232), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 240), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 248), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 256), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 264), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 272), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 280), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 288), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 296), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 320), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 328), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 336), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 344), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 352), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_ethtool_ops, 360), $0.ref);
  $M.10 := 1;
  call {:cexpr "myri10ge_watchdog_timeout"} boogie_si_record_i32(1);
  $M.0 := $store.ref($M.0, myri10ge_netdev_ops, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 16), myri10ge_open);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 24), myri10ge_close);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 32), myri10ge_xmit);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 56), myri10ge_set_multicast_list);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 64), myri10ge_set_mac_address);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 72), eth_validate_addr);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 96), myri10ge_change_mtu);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 120), myri10ge_get_stats);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 176), myri10ge_busy_poll);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 216), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 224), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 232), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 240), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 248), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 256), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 264), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 272), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 280), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 288), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 296), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 320), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 328), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 336), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 344), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 352), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 360), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 368), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 376), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 384), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 392), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 400), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 408), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 416), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 424), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 432), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 440), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 448), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 456), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_netdev_ops, 464), $0.ref);
  $M.5 := 9000;
  call {:cexpr "myri10ge_initial_mtu"} boogie_si_record_i32(9000);
  $M.26 := 64;
  call {:cexpr "myri10ge_napi_weight"} boogie_si_record_i32(64);
  $M.11 := 1;
  call {:cexpr "myri10ge_msi"} boogie_si_record_i32(1);
  $M.25 := .str.101;
  $M.24 := .str.100;
  $M.21 := $store.ref($M.21, myri10ge_fw_names, $0.ref);
  $M.21 := $store.ref($M.21, $add.ref(myri10ge_fw_names, 8), $0.ref);
  $M.21 := $store.ref($M.21, $add.ref(myri10ge_fw_names, 16), $0.ref);
  $M.21 := $store.ref($M.21, $add.ref(myri10ge_fw_names, 24), $0.ref);
  $M.21 := $store.ref($M.21, $add.ref(myri10ge_fw_names, 32), $0.ref);
  $M.21 := $store.ref($M.21, $add.ref(myri10ge_fw_names, 40), $0.ref);
  $M.21 := $store.ref($M.21, $add.ref(myri10ge_fw_names, 48), $0.ref);
  $M.21 := $store.ref($M.21, $add.ref(myri10ge_fw_names, 56), $0.ref);
  $M.20 := $0.ref;
  $M.91 := $store.i8($M.91, __param_str_myri10ge_fw_name, 109);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 1), 121);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 2), 114);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 3), 105);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 4), 49);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 5), 48);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 6), 103);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 7), 101);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 8), 95);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 9), 102);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 10), 119);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 11), 95);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 12), 110);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 13), 97);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 14), 109);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 15), 101);
  $M.91 := $store.i8($M.91, $add.ref(__param_str_myri10ge_fw_name, 16), 0);
  $M.92 := __param_str_myri10ge_fw_name;
  $M.93 := param_ops_charp;
  $M.19 := 420;
  $M.94 := $sub.i16(0, 1);
  $M.95 := myri10ge_fw_name;
  $M.18 := .str.78;
  $M.55 := 1;
  call {:cexpr "myri10ge_ecrc_enable"} boogie_si_record_i32(1);
  $M.17 := .str.62;
  $M.16 := 0;
  call {:cexpr "myri10ge_force_firmware"} boogie_si_record_i32(0);
  $M.4 := $sub.i32(0, 1);
  call {:cexpr "myri10ge_debug"} boogie_si_record_i32($sub.i32(0, 1));
  $M.3 := 75;
  call {:cexpr "myri10ge_intr_coal_delay"} boogie_si_record_i32(75);
  $M.2 := 1;
  call {:cexpr "myri10ge_flow_control"} boogie_si_record_i32(1);
  $M.13 := 1048576;
  call {:cexpr "myri10ge_max_irq_loops"} boogie_si_record_i32(1048576);
  $M.12 := 1;
  call {:cexpr "myri10ge_deassert_wait"} boogie_si_record_i32(1);
  $M.1 := 1;
  call {:cexpr "myri10ge_dca"} boogie_si_record_i32(1);
  $M.29 := 256;
  call {:cexpr "myri10ge_fill_thresh"} boogie_si_record_i32(256);
  $M.0 := $store.i8($M.0, myri10ge_gstrings_slice_stats, 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 1), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 2), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 3), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 4), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 5), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 6), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 7), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 8), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 9), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 10), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 11), 32);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 12), 115);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 13), 108);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 14), 105);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 15), 99);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 16), 101);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 17), 32);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 18), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 19), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 20), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 21), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 22), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 23), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 24), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 25), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 26), 45);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 27), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 28), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 29), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 30), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 32), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 4), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 5), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 7), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 8), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 9), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 10), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 11), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 32), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 64), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 4), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 5), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 7), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 9), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 64), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 96), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 3), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 4), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 5), 113);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 96), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 128), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 3), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 6), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 128), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 160), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 3), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 4), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 5), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 6), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 7), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 9), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 10), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 11), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 160), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 192), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 3), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 5), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 7), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 8), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 9), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 192), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 224), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 1), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 2), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 3), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 4), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 5), 113);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 6), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 8), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 9), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 224), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 256), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 1), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 4), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 5), 113);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 6), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 8), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 9), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 256), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 288), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 3), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 6), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 7), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 8), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 9), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 10), 122);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 11), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 12), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 288), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 320), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 3), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 6), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 8), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 9), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 10), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 11), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 13), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 14), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 15), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 16), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 17), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 320), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 352), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 3), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 6), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 8), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 9), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 10), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 11), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 13), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 14), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 15), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 16), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 17), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 352), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 384), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 3), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 4), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 5), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 6), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 8), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 9), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 10), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 11), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 13), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 14), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 15), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 16), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 384), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_slice_stats, 416), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 3), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 4), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 5), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 6), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 8), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 9), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 10), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 11), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 13), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 14), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 15), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_slice_stats, 416), 31), 0);
  $M.0 := $store.i8($M.0, myri10ge_gstrings_main_stats, 114);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1), 120);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 3), 112);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 4), 97);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 5), 99);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 6), 107);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 8), 116);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 9), 115);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 10), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 11), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 12), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 13), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 14), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 15), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 16), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 17), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 18), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 19), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 20), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 21), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 22), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 23), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 25), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 26), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 27), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 28), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 29), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 30), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 32), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 4), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 6), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 8), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 9), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 32), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 64), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 3), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 4), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 5), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 6), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 7), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 64), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 96), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 3), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 4), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 5), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 6), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 7), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 96), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 128), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 3), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 5), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 7), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 8), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 128), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 160), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 3), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 5), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 7), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 8), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 160), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 192), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 3), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 5), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 6), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 7), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 9), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 192), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 224), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 3), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 5), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 6), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 7), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 9), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 224), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 256), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 1), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 2), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 3), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 6), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 7), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 8), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 256), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 288), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 1), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 2), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 3), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 5), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 6), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 8), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 9), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 288), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 320), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 3), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 4), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 6), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 8), 104);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 13), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 14), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 15), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 320), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 352), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 3), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 4), 118);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 6), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 10), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 11), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 13), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 352), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 384), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 3), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 8), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 10), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 12), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 384), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 416), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 3), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 5), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 6), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 9), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 10), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 12), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 13), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 14), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 416), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 448), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 3), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 5), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 10), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 11), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 13), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 448), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 480), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 3), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 5), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 6), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 8), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 13), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 14), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 15), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 480), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 512), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 3), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 4), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 5), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 6), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 9), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 11), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 13), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 14), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 15), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 16), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 512), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 544), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 3), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 4), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 5), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 6), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 7), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 11), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 13), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 14), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 15), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 16), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 544), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 576), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 3), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 5), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 10), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 11), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 13), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 576), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 608), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 3), 104);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 4), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 5), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 6), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 8), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 9), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 10), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 11), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 13), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 14), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 15), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 16), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 17), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 18), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 608), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 640), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 3), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 4), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 8), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 13), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 14), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 15), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 640), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 672), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 3), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 5), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 6), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 7), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 8), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 10), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 672), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 704), 87);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 1), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 704), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 736), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 2), 113);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 736), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 768), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 768), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 800), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 1), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 2), 73);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 3), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 800), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 832), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 1), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 2), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 3), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 4), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 5), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 6), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 7), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 9), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 10), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 11), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 12), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 13), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 14), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 832), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 864), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 2), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 3), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 4), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 5), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 7), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 8), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 10), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 11), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 13), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 14), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 15), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 864), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 896), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 1), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 2), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 3), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 4), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 5), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 6), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 7), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 8), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 9), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 11), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 12), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 13), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 14), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 15), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 16), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 17), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 18), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 19), 66);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 20), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 896), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 928), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 1), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 2), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 3), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 4), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 5), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 7), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 8), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 9), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 10), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 11), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 928), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 960), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 1), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 2), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 3), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 4), 104);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 5), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 7), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 11), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 12), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 13), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 14), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 960), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 992), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 1), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 2), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 3), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 4), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 5), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 6), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 7), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 8), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 9), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 11), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 12), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 13), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 14), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 15), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 16), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 17), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 18), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 19), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 992), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1024), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 1), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 2), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 3), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 4), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 6), 118);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 7), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 8), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 9), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 11), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 13), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 14), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 15), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 16), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 17), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1024), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1056), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 1), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 2), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 3), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 4), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 6), 104);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 7), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 8), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 9), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 11), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1056), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1088), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 1), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 2), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 3), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 4), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 5), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 6), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1088), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1120), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 8), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 9), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 10), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 11), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 13), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 14), 118);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 15), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 16), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 17), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 18), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 19), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 20), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1120), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1152), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 8), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 9), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 10), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 11), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 12), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 13), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 14), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 15), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 16), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 17), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 18), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 19), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 20), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 21), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 22), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 23), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 24), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 25), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 26), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 27), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 28), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 29), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1152), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1184), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 8), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 9), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 10), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 11), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 12), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1184), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1216), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 8), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 9), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 10), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 11), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 12), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 13), 104);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 14), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1216), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1248), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 8), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 9), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 10), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 11), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 12), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 13), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 14), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 15), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 16), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1248), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1280), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 8), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 9), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 10), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 11), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 12), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 13), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 14), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 15), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 16), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 17), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 18), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 19), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 20), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 21), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 22), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 23), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1280), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1312), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 8), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 9), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 10), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 11), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 12), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 13), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 14), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 15), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 16), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 17), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 18), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 19), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 20), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 21), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 22), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 23), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 24), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 25), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1312), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1344), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 8), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 9), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 10), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 11), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1344), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1376), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 9), 118);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 13), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 14), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1376), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1408), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 8), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 9), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 11), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 12), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 13), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 14), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 15), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 16), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 17), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 18), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 19), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 20), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 21), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 22), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1408), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(myri10ge_gstrings_main_stats, 1440), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 1), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 2), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 3), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 4), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 6), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 8), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 9), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 11), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 12), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 13), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 14), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 15), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 16), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 17), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 18), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 19), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 20), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_gstrings_main_stats, 1440), 31), 0);
  $M.23 := 1;
  call {:cexpr "myri10ge_max_slices"} boogie_si_record_i32(1);
  $M.8 := 5;
  call {:cexpr "myri10ge_rss_hash"} boogie_si_record_i32(5);
  $M.0 := $store.i32($M.0, myri10ge_pci_tbl, 5313);
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_pci_tbl, 4), 8);
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_pci_tbl, 8), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_pci_tbl, 12), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_pci_tbl, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_pci_tbl, 20), 0);
  $M.0 := $store.i64($M.0, $add.ref(myri10ge_pci_tbl, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_pci_tbl, 32), 5313);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 32), 4), 9);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 32), 8), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 32), 12), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 32), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 32), 20), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 32), 24), 0);
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_pci_tbl, 64), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 64), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 64), 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 64), 12), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 64), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 64), 20), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(myri10ge_pci_tbl, 64), 24), 0);
  $M.0 := $store.ref($M.0, myri10ge_driver, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 16), .str.1);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 24), myri10ge_pci_tbl);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 32), myri10ge_probe);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 40), myri10ge_remove);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 48), myri10ge_suspend);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 72), myri10ge_resume);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_driver, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(myri10ge_driver, 104), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 104), 112), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_driver, 224), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_driver, 224), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(myri10ge_driver, 224), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 224), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 224), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(myri10ge_driver, 224), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(myri10ge_driver, 224), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(myri10ge_driver, 224), 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(myri10ge_driver, 224), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(myri10ge_driver, 224), 24), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(myri10ge_driver, 224), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(myri10ge_driver, 224), 72), 8), $0.ref);
  $M.0 := $store.ref($M.0, myri10ge_dca_notifier, myri10ge_notify_dca);
  $M.0 := $store.ref($M.0, $add.ref(myri10ge_dca_notifier, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(myri10ge_dca_notifier, 16), 0);
  $M.0 := $store.i8($M.0, .str.1, 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 1), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 3), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 4), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 6), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 8), 0);
  $M.96 := $store.i8($M.96, .str.107, 37);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 1), 115);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 2), 58);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 3), 115);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 4), 108);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 5), 105);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 6), 99);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 7), 101);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 8), 45);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 9), 37);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 10), 100);
  $M.96 := $store.i8($M.96, $add.ref(.str.107, 11), 0);
  $M.0 := $store.i8($M.0, .str.48, 69);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 1), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 2), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 3), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 4), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 6), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 7), 0);
  $M.0 := $store.i8($M.0, .str.49, 68);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 1), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 2), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 3), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 4), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 5), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 6), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 7), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 8), 0);
  $M.0 := $store.i8($M.0, .str.51, 77);
  $M.0 := $store.i8($M.0, $add.ref(.str.51, 1), 83);
  $M.0 := $store.i8($M.0, $add.ref(.str.51, 2), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.51, 3), 0);
  $M.0 := $store.i8($M.0, .str.52, 120);
  $M.0 := $store.i8($M.0, $add.ref(.str.52, 1), 80);
  $M.0 := $store.i8($M.0, $add.ref(.str.52, 2), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.52, 3), 67);
  $M.0 := $store.i8($M.0, $add.ref(.str.52, 4), 0);
  $M.0 := $store.i8($M.0, .str.85, 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 1), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 2), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 3), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 4), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 6), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.85, 7), 0);
  $M.97 := $store.i8($M.97, .str.92, 37);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 1), 100);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 2), 46);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 3), 37);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 4), 100);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 5), 46);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 6), 37);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 7), 100);
  $M.97 := $store.i8($M.97, $add.ref(.str.92, 8), 0);
  $M.98 := $store.i8($M.98, .str.54, 77);
  $M.98 := $store.i8($M.98, $add.ref(.str.54, 1), 65);
  $M.98 := $store.i8($M.98, $add.ref(.str.54, 2), 67);
  $M.98 := $store.i8($M.98, $add.ref(.str.54, 3), 61);
  $M.98 := $store.i8($M.98, $add.ref(.str.54, 4), 0);
  $M.99 := $store.i8($M.99, .str.55, 80);
  $M.99 := $store.i8($M.99, $add.ref(.str.55, 1), 67);
  $M.99 := $store.i8($M.99, $add.ref(.str.55, 2), 61);
  $M.99 := $store.i8($M.99, $add.ref(.str.55, 3), 0);
  $M.100 := $store.i8($M.100, .str.56, 83);
  $M.100 := $store.i8($M.100, $add.ref(.str.56, 1), 78);
  $M.100 := $store.i8($M.100, $add.ref(.str.56, 2), 61);
  $M.100 := $store.i8($M.100, $add.ref(.str.56, 3), 0);
  $M.0 := $store.i8($M.0, .str.62, 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 1), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 3), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 4), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 6), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 8), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 9), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 10), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 11), 104);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 13), 122);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 14), 56);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 15), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 16), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 17), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 18), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 19), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.62, 20), 0);
  $M.0 := $store.i8($M.0, .str.78, 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 1), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 3), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 4), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 6), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 8), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 9), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 10), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 11), 104);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 12), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 13), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 14), 122);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 15), 56);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 16), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 17), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 18), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 19), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 20), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.78, 21), 0);
  $M.0 := $store.i8($M.0, .str.100, 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 1), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 3), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 4), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 6), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 8), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 9), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 10), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 11), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 13), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 14), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 15), 104);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 16), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 17), 122);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 18), 56);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 19), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 20), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 21), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 22), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 23), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.100, 24), 0);
  $M.0 := $store.i8($M.0, .str.101, 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 1), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 2), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 3), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 4), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 5), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 6), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 7), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 8), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 9), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 10), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 11), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 13), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 14), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 15), 104);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 16), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 17), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 18), 122);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 19), 56);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 20), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 21), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 22), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 23), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 24), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.101, 25), 0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 744201));
procedure  devirtbounce(funcPtr: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 745233));
procedure  devirtbounce.1(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i21 := $eq.ref(eth_validate_addr, $p0);
  assume {:branchcond $i21} true;
  goto $bb8, $bb15;
$bb2:
  assume ($i15 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := myri10ge_resume($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i16 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := myri10ge_open($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i17 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := myri10ge_close($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i18 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := ethtool_op_get_link($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i19 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := myri10ge_get_msglevel($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i20 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := myri10ge_busy_poll($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume ($i21 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call $i14 := eth_validate_addr($p13);
  $r := $i14;
  $exn := false;
  return;
$bb9:
  assume !(($i15 == 1));
  assume false;
$bb10:
  assume !(($i16 == 1));
  $i15 := $eq.ref(myri10ge_resume, $p0);
  assume {:branchcond $i15} true;
  goto $bb2, $bb9;
$bb11:
  assume !(($i17 == 1));
  $i16 := $eq.ref(myri10ge_open, $p0);
  assume {:branchcond $i16} true;
  goto $bb3, $bb10;
$bb12:
  assume !(($i18 == 1));
  $i17 := $eq.ref(myri10ge_close, $p0);
  assume {:branchcond $i17} true;
  goto $bb4, $bb11;
$bb13:
  assume !(($i19 == 1));
  $i18 := $eq.ref(ethtool_op_get_link, $p0);
  assume {:branchcond $i18} true;
  goto $bb5, $bb12;
$bb14:
  assume !(($i20 == 1));
  $i19 := $eq.ref(myri10ge_get_msglevel, $p0);
  assume {:branchcond $i19} true;
  goto $bb6, $bb13;
$bb15:
  assume !(($i21 == 1));
  $i20 := $eq.ref(myri10ge_busy_poll, $p0);
  assume {:branchcond $i20} true;
  goto $bb7, $bb14;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 746265));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i9 := $eq.ref(myri10ge_get_ringparam, $p0);
  assume {:branchcond $i9} true;
  goto $bb4, $bb7;
$bb2:
  assume ($i7 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg1);
  call myri10ge_get_drvinfo($p1, $p2);
  $exn := false;
  return;
$bb3:
  assume ($i8 == 1);
  $p3 := $bitcast.ref.ref(arg);
  $p4 := $bitcast.ref.ref(arg1);
  call myri10ge_get_pauseparam($p3, $p4);
  $exn := false;
  return;
$bb4:
  assume ($i9 == 1);
  $p5 := $bitcast.ref.ref(arg);
  $p6 := $bitcast.ref.ref(arg1);
  call myri10ge_get_ringparam($p5, $p6);
  $exn := false;
  return;
$bb5:
  assume !(($i7 == 1));
  assume false;
$bb6:
  assume !(($i8 == 1));
  $i7 := $eq.ref(myri10ge_get_drvinfo, $p0);
  assume {:branchcond $i7} true;
  goto $bb2, $bb5;
$bb7:
  assume !(($i9 == 1));
  $i8 := $eq.ref(myri10ge_get_pauseparam, $p0);
  assume {:branchcond $i8} true;
  goto $bb3, $bb6;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 747297));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i3 := $eq.ref(myri10ge_get_strings, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg2);
  call myri10ge_get_strings($p1, arg1, $p2);
  $exn := false;
  return;
$bb3:
  assume !(($i3 == 1));
  assume false;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 748329));
procedure  devirtbounce.4(funcPtr: ref, arg: i32, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 749361));
procedure  devirtbounce.5(funcPtr: ref, arg: i8, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 750393));
procedure  devirtbounce.6(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 751425));
procedure  devirtbounce.7(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 752457));
procedure  devirtbounce.8(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 753489));
procedure  devirtbounce.9(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: i64, arg4: i32, arg5: ref)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.10: ref;
axiom (devirtbounce.10 == $sub.ref(0, 754521));
procedure  devirtbounce.10(funcPtr: ref, arg: i32, arg1: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(myri10ge_intr, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := myri10ge_intr(arg, arg1);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
const devirtbounce.11: ref;
axiom (devirtbounce.11 == $sub.ref(0, 755553));
procedure  devirtbounce.11(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i64, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.12: ref;
axiom (devirtbounce.12 == $sub.ref(0, 756585));
procedure  devirtbounce.12(funcPtr: ref, arg: i64, arg1: ref, arg2: i32)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.13: ref;
axiom (devirtbounce.13 == $sub.ref(0, 757617));
procedure  devirtbounce.13(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i32, arg4: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.14: ref;
axiom (devirtbounce.14 == $sub.ref(0, 758649));
procedure  devirtbounce.14(funcPtr: ref, arg: i64)
{
  var $p0: ref;
  var $i1: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i1 := $eq.ref(myri10ge_watchdog_timer, $p0);
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  call myri10ge_watchdog_timer(arg);
  $exn := false;
  return;
$bb3:
  assume !(($i1 == 1));
  assume false;
}
const devirtbounce.15: ref;
axiom (devirtbounce.15 == $sub.ref(0, 759681));
procedure  devirtbounce.15(funcPtr: ref, arg: ref)
  returns ($r: i8)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.16: ref;
axiom (devirtbounce.16 == $sub.ref(0, 760713));
procedure  devirtbounce.16(funcPtr: ref, arg: ref, arg1: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i14 := $eq.ref(myri10ge_poll, $p0);
  assume {:branchcond $i14} true;
  goto $bb6, $bb11;
$bb2:
  assume ($i10 == 1);
  call $i1 := myri10ge_suspend(arg, arg1);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i11 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call $i3 := myri10ge_get_sset_count($p2, arg1);
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume ($i12 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call $i5 := myri10ge_change_mtu($p4, arg1);
  $r := $i5;
  $exn := false;
  return;
$bb5:
  assume ($i13 == 1);
  $p6 := $bitcast.ref.ref(arg);
  call $i7 := myri10ge_phys_id($p6, arg1);
  $r := $i7;
  $exn := false;
  return;
$bb6:
  assume ($i14 == 1);
  $p8 := $bitcast.ref.ref(arg);
  call $i9 := myri10ge_poll($p8, arg1);
  $r := $i9;
  $exn := false;
  return;
$bb7:
  assume !(($i10 == 1));
  assume false;
$bb8:
  assume !(($i11 == 1));
  $i10 := $eq.ref(myri10ge_suspend, $p0);
  assume {:branchcond $i10} true;
  goto $bb2, $bb7;
$bb9:
  assume !(($i12 == 1));
  $i11 := $eq.ref(myri10ge_get_sset_count, $p0);
  assume {:branchcond $i11} true;
  goto $bb3, $bb8;
$bb10:
  assume !(($i13 == 1));
  $i12 := $eq.ref(myri10ge_change_mtu, $p0);
  assume {:branchcond $i12} true;
  goto $bb4, $bb9;
$bb11:
  assume !(($i14 == 1));
  $i13 := $eq.ref(myri10ge_phys_id, $p0);
  assume {:branchcond $i13} true;
  goto $bb5, $bb10;
}
const devirtbounce.17: ref;
axiom (devirtbounce.17 == $sub.ref(0, 761745));
procedure  devirtbounce.17(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i20 := $eq.ref(eth_validate_addr, $p0);
  assume {:branchcond $i20} true;
  goto $bb8, $bb15;
$bb2:
  assume ($i14 == 1);
  call $i1 := myri10ge_resume(arg);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i15 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call $i3 := myri10ge_open($p2);
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume ($i16 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call $i5 := myri10ge_close($p4);
  $r := $i5;
  $exn := false;
  return;
$bb5:
  assume ($i17 == 1);
  $p6 := $bitcast.ref.ref(arg);
  call $i7 := ethtool_op_get_link($p6);
  $r := $i7;
  $exn := false;
  return;
$bb6:
  assume ($i18 == 1);
  $p8 := $bitcast.ref.ref(arg);
  call $i9 := myri10ge_get_msglevel($p8);
  $r := $i9;
  $exn := false;
  return;
$bb7:
  assume ($i19 == 1);
  $p10 := $bitcast.ref.ref(arg);
  call $i11 := myri10ge_busy_poll($p10);
  $r := $i11;
  $exn := false;
  return;
$bb8:
  assume ($i20 == 1);
  $p12 := $bitcast.ref.ref(arg);
  call $i13 := eth_validate_addr($p12);
  $r := $i13;
  $exn := false;
  return;
$bb9:
  assume !(($i14 == 1));
  assume false;
$bb10:
  assume !(($i15 == 1));
  $i14 := $eq.ref(myri10ge_resume, $p0);
  assume {:branchcond $i14} true;
  goto $bb2, $bb9;
$bb11:
  assume !(($i16 == 1));
  $i15 := $eq.ref(myri10ge_open, $p0);
  assume {:branchcond $i15} true;
  goto $bb3, $bb10;
$bb12:
  assume !(($i17 == 1));
  $i16 := $eq.ref(myri10ge_close, $p0);
  assume {:branchcond $i16} true;
  goto $bb4, $bb11;
$bb13:
  assume !(($i18 == 1));
  $i17 := $eq.ref(ethtool_op_get_link, $p0);
  assume {:branchcond $i17} true;
  goto $bb5, $bb12;
$bb14:
  assume !(($i19 == 1));
  $i18 := $eq.ref(myri10ge_get_msglevel, $p0);
  assume {:branchcond $i18} true;
  goto $bb6, $bb13;
$bb15:
  assume !(($i20 == 1));
  $i19 := $eq.ref(myri10ge_busy_poll, $p0);
  assume {:branchcond $i19} true;
  goto $bb7, $bb14;
}
const devirtbounce.18: ref;
axiom (devirtbounce.18 == $sub.ref(0, 762777));
procedure  devirtbounce.18(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i5 := $eq.ref(myri10ge_watchdog, $p0);
  assume {:branchcond $i5} true;
  goto $bb4, $bb7;
$bb2:
  assume ($i3 == 1);
  call myri10ge_remove(arg);
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call myri10ge_set_multicast_list($p1);
  $exn := false;
  return;
$bb4:
  assume ($i5 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call myri10ge_watchdog($p2);
  $exn := false;
  return;
$bb5:
  assume !(($i3 == 1));
  assume false;
$bb6:
  assume !(($i4 == 1));
  $i3 := $eq.ref(myri10ge_remove, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb5;
$bb7:
  assume !(($i5 == 1));
  $i4 := $eq.ref(myri10ge_set_multicast_list, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb6;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

const $u0: ref;
const $u1: i32;
const $u10: ref;
const $u11: ref;
const $u12: ref;
const $u13: ref;
const $u14: ref;
const $u15: ref;
const $u16: ref;
const $u17: ref;
const $u18: ref;
const $u19: ref;
const $u2: ref;
const $u20: ref;
const $u21: ref;
const $u22: ref;
const $u23: ref;
const $u24: ref;
const $u25: ref;
const $u26: ref;
const $u27: ref;
const $u28: ref;
const $u29: ref;
const $u3: ref;
const $u30: ref;
const $u31: ref;
const $u32: ref;
const $u33: ref;
const $u34: i64;
const $u35: ref;
const $u36: ref;
const $u4: ref;
const $u5: ref;
const $u6: ref;
const $u7: ref;
const $u8: ref;
const $u9: ref;
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
