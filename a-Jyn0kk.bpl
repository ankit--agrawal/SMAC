// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out.c --verifier-options  /bopt:z3opt:SMT.MBQI=false /di /doNotUseLabels /noInitPruning /nonUniformUnfolding /trackAllVars /useArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (131 regions)
var $M.0: [ref] i8;
var $M.1: [ref] i8;
var $M.2: i32;
var $M.3: [ref] i8;
var $M.4: [ref] ref;
var $M.5: [ref] ref;
var $M.6: [ref] i64;
var $M.7: [ref] i64;
var $M.8: [ref] ref;
var $M.9: [ref] ref;
var $M.10: [ref] i64;
var $M.11: [ref] i64;
var $M.12: [ref] ref;
var $M.13: [ref] ref;
var $M.14: [ref] i64;
var $M.15: [ref] i64;
var $M.16: [ref] ref;
var $M.17: [ref] ref;
var $M.18: [ref] i64;
var $M.19: [ref] i64;
var $M.20: [ref] i8;
var $M.21: [ref] ref;
var $M.22: [ref] i64;
var $M.23: [ref] i64;
var $M.24: [ref] ref;
var $M.25: [ref] ref;
var $M.26: [ref] i64;
var $M.27: [ref] i64;
var $M.28: [ref] ref;
var $M.29: [ref] ref;
var $M.30: [ref] ref;
var $M.31: [ref] i64;
var $M.32: [ref] i64;
var $M.33: [ref] ref;
var $M.34: [ref] ref;
var $M.35: [ref] i64;
var $M.36: [ref] i64;
var $M.37: [ref] ref;
var $M.38: [ref] ref;
var $M.39: [ref] i64;
var $M.40: [ref] i64;
var $M.41: [ref] ref;
var $M.42: [ref] ref;
var $M.43: [ref] i64;
var $M.44: [ref] i64;
var $M.45: [ref] i32;
var $M.46: [ref] i32;
var $M.47: [ref] i8;
var $M.48: [ref] ref;
var $M.49: [ref] ref;
var $M.50: [ref] i64;
var $M.51: [ref] i64;
var $M.52: [ref] i8;
var $M.53: [ref] ref;
var $M.54: [ref] ref;
var $M.55: [ref] i64;
var $M.56: [ref] i64;
var $M.57: [ref] ref;
var $M.58: [ref] ref;
var $M.59: [ref] ref;
var $M.60: [ref] ref;
var $M.61: [ref] i32;
var $M.62: [ref] i32;
var $M.63: [ref] i32;
var $M.64: [ref] i32;
var $M.65: [ref] i8;
var $M.66: [ref] ref;
var $M.67: [ref] i32;
var $M.68: [ref] i64;
var $M.69: [ref] i32;
var $M.70: [ref] i32;
var $M.71: [ref] i32;
var $M.72: [ref] i32;
var $M.73: [ref] i32;
var $M.74: [ref] ref;
var $M.75: [ref] i32;
var $M.76: [ref] i32;
var $M.77: [ref] i32;
var $M.78: [ref] i16;
var $M.79: [ref] i16;
var $M.80: [ref] i8;
var $M.81: [ref] i8;
var $M.82: [ref] i8;
var $M.83: [ref] i32;
var $M.84: [ref] i32;
var $M.85: [ref] i32;
var $M.86: [ref] i8;
var $M.87: [ref] ref;
var $M.88: [ref] ref;
var $M.89: [ref] ref;
var $M.90: [ref] ref;
var $M.91: [ref] i64;
var $M.92: [ref] i64;
var $M.93: ref;
var $M.94: i32;
var $M.95: ref;
var $M.96: ref;
var $M.97: [ref] i8;
var $M.98: ref;
var $M.99: i32;
var $M.100: i32;
var $M.101: i32;
var $M.102: i32;
var $M.103: i32;
var $M.104: i32;
var $M.105: i32;
var $M.106: i32;
var $M.107: i32;
var $M.108: ref;
var $M.109: ref;
var $M.110: i32;
var $M.111: i32;
var $M.112: ref;
var $M.113: ref;
var $M.114: i32;
var $M.115: [ref] i8;
var $M.116: i32;
var $M.117: i64;
var $M.118: ref;
var $M.119: [ref] i8;
var $M.120: [ref] i8;
var $M.121: [ref] i8;
var $M.122: [ref] i8;
var $M.123: i64;
var $M.124: ref;
var $M.125: i64;
var $M.126: ref;
var $M.127: i64;
var $M.128: ref;
var $M.129: [ref] i8;
var $M.130: [ref] i8;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 513663));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32808));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const ib_uverbs_idr_lock: ref;
axiom (ib_uverbs_idr_lock == $sub.ref(0, 2124));
const .str: ref;
axiom (.str == $sub.ref(0, 3167));
const ib_uverbs_pd_idr: ref;
axiom (ib_uverbs_pd_idr == $sub.ref(0, 4303));
const {:count 22} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 5349));
const ib_uverbs_mr_idr: ref;
axiom (ib_uverbs_mr_idr == $sub.ref(0, 6485));
const {:count 22} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 7531));
const ib_uverbs_mw_idr: ref;
axiom (ib_uverbs_mw_idr == $sub.ref(0, 8667));
const {:count 22} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 9713));
const ib_uverbs_ah_idr: ref;
axiom (ib_uverbs_ah_idr == $sub.ref(0, 10849));
const {:count 22} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 11895));
const ib_uverbs_cq_idr: ref;
axiom (ib_uverbs_cq_idr == $sub.ref(0, 13031));
const {:count 22} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 14077));
const ib_uverbs_qp_idr: ref;
axiom (ib_uverbs_qp_idr == $sub.ref(0, 15213));
const {:count 22} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 16259));
const ib_uverbs_srq_idr: ref;
axiom (ib_uverbs_srq_idr == $sub.ref(0, 17395));
const {:count 23} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 18442));
const ib_uverbs_xrcd_idr: ref;
axiom (ib_uverbs_xrcd_idr == $sub.ref(0, 19578));
const {:count 24} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 20626));
const ib_uverbs_rule_idr: ref;
axiom (ib_uverbs_rule_idr == $sub.ref(0, 21762));
const {:count 24} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 22810));
const uverbs_event_fops_group1: ref;
axiom (uverbs_event_fops_group1 == $sub.ref(0, 23842));
const uverbs_event_fops_group2: ref;
axiom (uverbs_event_fops_group2 == $sub.ref(0, 24874));
const uverbs_fops_group1: ref;
axiom (uverbs_fops_group1 == $sub.ref(0, 25906));
const uverbs_fops_group2: ref;
axiom (uverbs_fops_group2 == $sub.ref(0, 26938));
const uverbs_mmap_fops_group1: ref;
axiom (uverbs_mmap_fops_group1 == $sub.ref(0, 27970));
const uverbs_mmap_fops_group2: ref;
axiom (uverbs_mmap_fops_group2 == $sub.ref(0, 29002));
const uverbs_client_group0: ref;
axiom (uverbs_client_group0 == $sub.ref(0, 30034));
const ldv_state_variable_6: ref;
axiom (ldv_state_variable_6 == $sub.ref(0, 31062));
const ldv_state_variable_3: ref;
axiom (ldv_state_variable_3 == $sub.ref(0, 32090));
const ldv_state_variable_7: ref;
axiom (ldv_state_variable_7 == $sub.ref(0, 33118));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 34146));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 35174));
const ldv_state_variable_4: ref;
axiom (ldv_state_variable_4 == $sub.ref(0, 36202));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 37230));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 38258));
const ldv_state_variable_5: ref;
axiom (ldv_state_variable_5 == $sub.ref(0, 39286));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 40314));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 41342));
const ldv_retval_2: ref;
axiom (ldv_retval_2 == $sub.ref(0, 42370));
const ldv_retval_3: ref;
axiom (ldv_retval_3 == $sub.ref(0, 43398));
const __ksymtab_ib_copy_ah_attr_to_user: ref;
axiom (__ksymtab_ib_copy_ah_attr_to_user == $sub.ref(0, 44438));
const {:count 24} __kstrtab_ib_copy_ah_attr_to_user: ref;
axiom (__kstrtab_ib_copy_ah_attr_to_user == $sub.ref(0, 45486));
const {:count 27} __kstrtab_ib_copy_path_rec_from_user: ref;
axiom (__kstrtab_ib_copy_path_rec_from_user == $sub.ref(0, 46537));
const {:count 25} __kstrtab_ib_copy_path_rec_to_user: ref;
axiom (__kstrtab_ib_copy_path_rec_to_user == $sub.ref(0, 47586));
const {:count 24} __kstrtab_ib_copy_qp_attr_to_user: ref;
axiom (__kstrtab_ib_copy_qp_attr_to_user == $sub.ref(0, 48634));
const srq_lock_class: ref;
axiom (srq_lock_class == $sub.ref(0, 49682));
const rule_lock_class: ref;
axiom (rule_lock_class == $sub.ref(0, 50730));
const ah_lock_class: ref;
axiom (ah_lock_class == $sub.ref(0, 51778));
const qp_lock_class: ref;
axiom (qp_lock_class == $sub.ref(0, 52826));
const cq_lock_class: ref;
axiom (cq_lock_class == $sub.ref(0, 53874));
const mw_lock_class: ref;
axiom (mw_lock_class == $sub.ref(0, 54922));
const mr_lock_class: ref;
axiom (mr_lock_class == $sub.ref(0, 55970));
const xrcd_lock_class: ref;
axiom (xrcd_lock_class == $sub.ref(0, 57018));
const pd_lock_class: ref;
axiom (pd_lock_class == $sub.ref(0, 58066));
const class_attr_abi_version: ref;
axiom (class_attr_abi_version == $sub.ref(0, 59146));
const uverbs_client: ref;
axiom (uverbs_client == $sub.ref(0, 60210));
const dev_attr_abi_version: ref;
axiom (dev_attr_abi_version == $sub.ref(0, 61282));
const dev_attr_ibdev: ref;
axiom (dev_attr_ibdev == $sub.ref(0, 62354));
const uverbs_class: ref;
axiom (uverbs_class == $sub.ref(0, 63386));
const uverbs_fops: ref;
axiom (uverbs_fops == $sub.ref(0, 64634));
const uverbs_mmap_fops: ref;
axiom (uverbs_mmap_fops == $sub.ref(0, 65882));
const overflow_map: ref;
axiom (overflow_map == $sub.ref(0, 66914));
const overflow_maj: ref;
axiom (overflow_maj == $sub.ref(0, 67942));
const dev_map: ref;
axiom (dev_map == $sub.ref(0, 68974));
const map_lock: ref;
axiom (map_lock == $sub.ref(0, 70070));
const {:count 52} uverbs_ex_cmd_table: ref;
axiom (uverbs_ex_cmd_table == $sub.ref(0, 71510));
const {:count 41} uverbs_cmd_table: ref;
axiom (uverbs_cmd_table == $sub.ref(0, 72862));
const uverbs_event_fops: ref;
axiom (uverbs_event_fops == $sub.ref(0, 74110));
const ldv_module_refcounter: ref;
axiom (ldv_module_refcounter == $sub.ref(0, 75138));
const __ksymtab_ib_copy_path_rec_from_user: ref;
axiom (__ksymtab_ib_copy_path_rec_from_user == $sub.ref(0, 76178));
const __ksymtab_ib_copy_path_rec_to_user: ref;
axiom (__ksymtab_ib_copy_path_rec_to_user == $sub.ref(0, 77218));
const __ksymtab_ib_copy_qp_attr_to_user: ref;
axiom (__ksymtab_ib_copy_qp_attr_to_user == $sub.ref(0, 78258));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32776));
const {:count 21} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 79303));
const {:count 216} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 80543));
const {:count 33} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 81600));
const __preempt_count: ref;
axiom (__preempt_count == $sub.ref(0, 32784));
const {:count 13} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 82637));
const {:count 20} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 83681));
const {:count 25} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 84730));
const {:count 20} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 85774));
const {:count 18} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 86816));
const {:count 10} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 87850));
const {:count 17} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 88891));
const {:count 215} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 90130));
const {:count 27} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 91181));
const {:count 22} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 92227));
const {:count 25} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 93276));
const {:count 44} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 94344));
const rcu_lock_map: ref;
axiom (rcu_lock_map == $sub.ref(0, 32792));
const current_task: ref;
axiom (current_task == $sub.ref(0, 32800));
const {:count 42} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 95410));
const {:count 60} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 96494));
const {:count 9} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 97527));
const {:count 13} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 98564));
const cpu_tss: ref;
axiom (cpu_tss == $sub.ref(0, 32808));
const {:count 6} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 99594));
const {:count 4} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 100622));
const {:count 12} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 101658));
const {:count 4} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 102686));
const {:count 7} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 103717));
const {:count 29} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 104770));
const {:count 9} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 105803));
const {:count 17} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 106844));
const {:count 54} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 107922));
const {:count 9} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 108955));
const {:count 2} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 109981));
const {:count 46} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 111051));
const {:count 53} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 112128));
const {:count 52} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 113204));
const {:count 39} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 114267));
const {:count 14} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 115305));
const {:count 14} .str.2.49: ref;
axiom (.str.2.49 == $sub.ref(0, 116343));
const ib_copy_ah_attr_to_user: ref;
axiom (ib_copy_ah_attr_to_user == $sub.ref(0, 117375));
procedure  ib_copy_ah_attr_to_user($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i8;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i8;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i16;
  var $p33: ref;
  var $p34: ref;
  var $i35: i8;
  var $p36: ref;
  var $p37: ref;
  var $i38: i8;
  var $p39: ref;
  var $p40: ref;
  var $i41: i8;
  var $p42: ref;
  var $p43: ref;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $p48: ref;
  var $p49: ref;
  var $i50: i8;
  var $p51: ref;
  var $p52: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12741, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12741, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12741, 61} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  $p6 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12741, 70} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12741, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12741, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p4, $p8, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12742, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $p1;
  $p10 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12742, 34} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12742, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $p0;
  $p13 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12742, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12743, 30} true;
  assume {:verifier.code 0} true;
  $p14 := $p1;
  $p15 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12743, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12743, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $p0;
  $p18 := $add.ref($p0, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12743, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12744, 29} true;
  assume {:verifier.code 0} true;
  $p19 := $p1;
  $p20 := $add.ref($p1, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12744, 33} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12744, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $p0;
  $p23 := $add.ref($p0, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12744, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p23, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12745, 33} true;
  assume {:verifier.code 0} true;
  $p24 := $p1;
  $p25 := $add.ref($p1, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12745, 37} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i8($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12745, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $p0;
  $p28 := $add.ref($p0, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12745, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p28, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12746, 26} true;
  assume {:verifier.code 0} true;
  $p29 := $p0;
  $p30 := $add.ref($p0, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12746, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p30, 0, 1, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12747, 20} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12747, 20} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i16($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12747, 8} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12747, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12748, 18} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12748, 18} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12748, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12748, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12749, 29} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12749, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i8($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12749, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12749, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12750, 27} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p1, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12750, 27} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i8($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12750, 8} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12750, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12751, 40} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12751, 40} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12751, 20} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12751, 49} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i45, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12751, 20} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12751, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12751, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12752, 24} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p1, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12752, 24} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12752, 8} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12752, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p51, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12753, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12753, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12754, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 118407));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 119439));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 120471));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const ib_copy_qp_attr_to_user: ref;
axiom (ib_copy_qp_attr_to_user == $sub.ref(0, 121503));
procedure  ib_copy_qp_attr_to_user($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i16;
  var $p55: ref;
  var $p56: ref;
  var $i57: i16;
  var $p58: ref;
  var $p59: ref;
  var $i60: i8;
  var $p61: ref;
  var $p62: ref;
  var $i63: i8;
  var $p64: ref;
  var $p65: ref;
  var $i66: i8;
  var $p67: ref;
  var $p68: ref;
  var $i69: i8;
  var $p70: ref;
  var $p71: ref;
  var $i72: i8;
  var $p73: ref;
  var $p74: ref;
  var $i75: i8;
  var $p76: ref;
  var $p77: ref;
  var $i78: i8;
  var $p79: ref;
  var $p80: ref;
  var $i81: i8;
  var $p82: ref;
  var $p83: ref;
  var $i84: i8;
  var $p85: ref;
  var $p86: ref;
  var $i87: i8;
  var $p88: ref;
  var $p89: ref;
  var $i90: i8;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12771, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12771, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12771, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12771, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12772, 36} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12772, 36} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12772, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12772, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12773, 32} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12773, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12773, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12773, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12774, 38} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12774, 38} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12774, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12774, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12775, 20} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12775, 20} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12775, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12775, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12776, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12776, 22} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12776, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12776, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12777, 22} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12777, 22} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12777, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12777, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12778, 27} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12778, 27} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12778, 8} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12778, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12779, 39} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12779, 39} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12779, 8} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12779, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12780, 27} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 36);
  $p30 := $add.ref($p1, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12780, 31} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12780, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12780, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12781, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 36);
  $p34 := $add.ref($add.ref($p1, 36), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12781, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12781, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12781, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12782, 28} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 36);
  $p38 := $add.ref($add.ref($p1, 36), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12782, 32} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12782, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12782, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12783, 28} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p1, 36);
  $p42 := $add.ref($add.ref($p1, 36), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12783, 32} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12783, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12783, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12784, 31} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p1, 36);
  $p46 := $add.ref($add.ref($p1, 36), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12784, 35} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12784, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12784, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12785, 34} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12785, 50} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12785, 3} true;
  assume {:verifier.code 0} true;
  call ib_copy_ah_attr_to_user($p49, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12786, 34} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12786, 54} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p1, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12786, 3} true;
  assume {:verifier.code 0} true;
  call ib_copy_ah_attr_to_user($p51, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12787, 26} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12787, 26} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i16($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12787, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12787, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12788, 30} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p1, 138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12788, 30} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i16($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12788, 8} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12788, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12789, 35} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p1, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12789, 35} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i8($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12789, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12789, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p61, $i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12790, 27} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p1, 141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12790, 27} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12790, 8} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12790, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12791, 29} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p1, 142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12791, 29} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i8($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12791, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12791, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p67, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12792, 34} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p1, 143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12792, 34} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12792, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12792, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12793, 29} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p1, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12793, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12793, 8} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12793, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p73, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12794, 24} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p1, 145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12794, 24} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i8($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12794, 8} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12794, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p76, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12795, 23} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p1, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12795, 23} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i8($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12795, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12795, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12796, 25} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p1, 147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12796, 25} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i8($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12796, 8} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12796, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12797, 25} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p1, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12797, 25} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i8($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12797, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12797, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p85, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12798, 28} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p1, 149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12798, 28} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i8($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12798, 8} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12798, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p88, $i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12799, 27} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p1, 150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12799, 27} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i8($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12799, 8} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12799, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p91, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12800, 26} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12800, 3} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12800, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p93, 0, 5, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12801, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_copy_path_rec_to_user: ref;
axiom (ib_copy_path_rec_to_user == $sub.ref(0, 122535));
procedure  ib_copy_path_rec_to_user($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i16;
  var $p14: ref;
  var $p15: ref;
  var $i16: i16;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $i25: i8;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $i37: i16;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $p44: ref;
  var $p45: ref;
  var $i46: i8;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $i50: i8;
  var $p51: ref;
  var $p52: ref;
  var $i53: i8;
  var $p54: ref;
  var $p55: ref;
  var $i56: i8;
  var $p57: ref;
  var $p58: ref;
  var $i59: i8;
  var $p60: ref;
  var $p61: ref;
  var $i62: i8;
  var $p63: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12818, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12818, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12818, 57} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12818, 62} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12818, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12818, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p3, $p6, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12819, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12819, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12819, 57} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12819, 62} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12819, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12819, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p8, $p11, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12820, 20} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12820, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12820, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12820, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12821, 20} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12821, 20} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i16($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12821, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12821, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12822, 35} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12822, 35} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12822, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12822, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12823, 26} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12823, 26} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12823, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12823, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12824, 25} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12824, 25} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12824, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12824, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12825, 29} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12825, 29} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12825, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12825, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12826, 34} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12826, 34} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12826, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12826, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12827, 25} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12827, 25} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12827, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12827, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12828, 20} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12828, 20} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i16($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12828, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12828, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12829, 18} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1, 66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12829, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12829, 8} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12829, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12830, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, 67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12830, 28} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12830, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12830, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12831, 27} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p1, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12831, 27} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12831, 14} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12831, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12831, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12832, 29} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p1, 69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12832, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12832, 8} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12832, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p51, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12833, 20} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p1, 70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12833, 20} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i8($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12833, 8} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12833, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p54, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12834, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p1, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12834, 32} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12834, 8} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12834, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12835, 26} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p1, 73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12835, 26} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12835, 8} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12835, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12836, 41} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1, 71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12836, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i8($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12836, 8} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12836, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12837, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_copy_path_rec_from_user: ref;
axiom (ib_copy_path_rec_from_user == $sub.ref(0, 123567));
procedure  ib_copy_path_rec_from_user($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i16;
  var $p14: ref;
  var $p15: ref;
  var $i16: i16;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $i25: i8;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $i37: i16;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i8;
  var $p48: ref;
  var $p49: ref;
  var $i50: i8;
  var $p51: ref;
  var $p52: ref;
  var $i53: i8;
  var $p54: ref;
  var $p55: ref;
  var $i56: i8;
  var $p57: ref;
  var $p58: ref;
  var $i59: i8;
  var $p60: ref;
  var $p61: ref;
  var $i62: i8;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12855, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12855, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12855, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12855, 61} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12855, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12855, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p4, $p6, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12856, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12856, 31} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12856, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12856, 61} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12856, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12856, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p9, $p11, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12857, 20} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12857, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12857, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12857, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12858, 20} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12858, 20} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i16($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12858, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12858, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12859, 33} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12859, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12859, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12859, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12860, 26} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12860, 26} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12860, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12860, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12861, 25} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12861, 25} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12861, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12861, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12862, 29} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12862, 29} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12862, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12862, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12863, 32} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12863, 32} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12863, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12863, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12864, 25} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12864, 25} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12864, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12864, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12865, 20} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12865, 20} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i16($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12865, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12865, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12866, 18} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1, 57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12866, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12866, 8} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12866, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12867, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, 58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12867, 28} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12867, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12867, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12868, 24} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12868, 24} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12868, 14} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12868, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12868, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12869, 29} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p1, 59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12869, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12869, 8} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12869, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p51, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12870, 20} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p1, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12870, 20} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i8($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12870, 8} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12870, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p54, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12871, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p1, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12871, 32} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12871, 8} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12871, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12872, 26} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p1, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12872, 26} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12872, 8} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12872, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12873, 41} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1, 61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12873, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i8($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12873, 8} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12873, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12874, 26} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12874, 3} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12874, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p65, 0, 6, $zext.i32.i64(2), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12875, 26} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12875, 3} true;
  assume {:verifier.code 0} true;
  $p67 := $bitcast.ref.ref($p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12875, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p67, 0, 6, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12876, 8} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12876, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p68, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12877, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const no_llseek: ref;
axiom (no_llseek == $sub.ref(0, 124599));
procedure  no_llseek($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i64);
const ib_uverbs_event_read: ref;
axiom (ib_uverbs_event_read == $sub.ref(0, 125631));
procedure  ib_uverbs_event_read($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $i28: i64;
  var $i30: i1;
  var $i31: i64;
  var $i32: i64;
  var $i33: i32;
  var $i34: i1;
  var $i29: i64;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $i51: i64;
  var $i52: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i64;
  var $i61: i1;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p53: ref;
  var $i54: i32;
  var $p69: ref;
  var $i70: i64;
  var $i71: i1;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $i75: i1;
  var $i76: i32;
  var $i77: i32;
  var $p78: ref;
  var $i79: i64;
  var $i17: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6216, metadata !5829), !dbg !6217, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6329, 47} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6329, 47} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6329, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_uverbs_event_file* %8, i64 0, metadata !6238, metadata !5829), !dbg !6239, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6331, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6331, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6378, 61} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6378, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := list_empty($p9);
  // WARNING: %11 = call i32 @list_empty(%struct.list_head* %10), !dbg !5839, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6380, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6334, 27} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6334, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6335, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6335, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6335, 22} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6335, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6336, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i64(0, 11);
  goto $bb8;
$bb7:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6417, 1} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6341, 3} true;
  assume {:verifier.code 0} true;
  call __might_sleep(.str.23, 334, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6343, 61} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6343, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := list_empty($p18);
  // WARNING: %23 = call i32 @list_empty(%struct.list_head* %22), !dbg !5858, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6344, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6344, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6346, 29} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6346, 5} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6347, 12} true;
  assume {:verifier.code 0} true;
  $p22 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6347, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6349, 41} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p7, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6349, 11} true;
  assume {:verifier.code 0} true;
  call $i24 := prepare_to_wait_event($p23, $p4, 1);
  // WARNING: %29 = call i64 @prepare_to_wait_event(%struct.__wait_queue_head* %28, %struct.__wait_queue* %5, i32 1), !dbg !5872, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i24);
  // WARNING: call void @llvm.dbg.value(metadata i64 %29, i64 0, metadata !6279, metadata !5829), !dbg !6280, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6351, 63} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6351, 15} true;
  assume {:verifier.code 0} true;
  call $i26 := list_empty($p25);
  // WARNING: %31 = call i32 @list_empty(%struct.list_head* %30), !dbg !5878, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb12, $bb14;
$bb11:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  $i37 := 0;
  goto $bb23;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 9} true;
  assume {:verifier.code 0} true;
  assume ($i27 == 1);
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6353, 7} true;
  assume {:verifier.code 0} true;
  $i29 := 0;
  goto $bb17;
$bb14:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $i24;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb16:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6366, 25} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p7, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6366, 5} true;
  assume {:verifier.code 0} true;
  call finish_wait($p35, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6367, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i64.i32($i29);
  // WARNING: %46 = trunc i64 %.01 to i32, !dbg !5894, !verifier.code !5806
  call {:cexpr "__ret"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6368, 3} true;
  assume {:verifier.code 0} true;
  $i37 := $i36;
  goto $bb23;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6357, 15} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6357, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $i28;
  assume {:branchcond $i30} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.lcssa6 = phi i64 [ %35, %36 ], !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6359, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $i31;
  goto $bb17;
$bb20:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6363, 5} true;
  assume {:verifier.code 0} true;
  call schedule();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6349, 11} true;
  assume {:verifier.code 0} true;
  call $i32 := prepare_to_wait_event($p23, $p4, 1);
  // WARNING: %41 = call i64 @prepare_to_wait_event(%struct.__wait_queue_head* %28, %struct.__wait_queue* %5, i32 1), !dbg !5872, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i32);
  // WARNING: call void @llvm.dbg.value(metadata i64 %41, i64 0, metadata !6279, metadata !5829), !dbg !6280, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6351, 15} true;
  assume {:verifier.code 0} true;
  call $i33 := list_empty($p25);
  // WARNING: %42 = call i32 @list_empty(%struct.list_head* %30), !dbg !5878, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $i32;
  assume {:branchcond $i34} true;
  goto $bb16, $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6352, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb15;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6371, 13} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6371, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6372, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i64(0, 512);
  goto $bb8;
$bb25:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6376, 25} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6376, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6378, 13} true;
  assume {:verifier.code 0} true;
  call $i40 := list_empty($p9);
  // WARNING: %54 = call i32 @list_empty(%struct.list_head* %10), !dbg !5839, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 15} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb27, $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 7} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb4;
$bb28:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6379, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6384, 46} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p7, 192);
  $p43 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6384, 57} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6385, 11} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6385, 44} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, $mul.ref($sub.ref(0, 16), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6386, 13} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p7, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6386, 13} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6386, 22} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6386, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6388, 3} true;
  assume {:verifier.code 0} true;
  $i50 := 16;
  goto $bb32;
$bb31:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  $i50 := 8;
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6391, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6391, 24} true;
  assume {:verifier.code 0} true;
  $i52 := $ugt.i64($i51, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6391, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6394, 3} true;
  assume {:verifier.code 0} true;
  $p53, $i54 := $0.ref, $sub.i32(0, 22);
  goto $bb35;
$bb34:
  assume !(($i52 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6395, 20} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p7, 192);
  $p56 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6395, 31} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6395, 5} true;
  assume {:verifier.code 0} true;
  call list_del($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6396, 32} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p45, $mul.ref($sub.ref(0, 16), 56)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6396, 32} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6396, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6396, 40} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i64($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6396, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb36, $bb37;
$bb35:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6403, 27} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6403, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6404, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $p2i.ref.i64($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6404, 29} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i64($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6404, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb39, $bb40;
$bb36:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6397, 36} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p45, $mul.ref($sub.ref(0, 16), 56)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6397, 36} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6397, 27} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6397, 45} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i32($i64, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6397, 16} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p45, $mul.ref($sub.ref(0, 16), 56)), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6397, 16} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6397, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p67, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6398, 25} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p45, $mul.ref($sub.ref(0, 16), 56)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6398, 7} true;
  assume {:verifier.code 0} true;
  call list_del($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6399, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  $p53, $i54 := $p46, 0;
  goto $bb35;
$bb39:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6405, 41} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6405, 64} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6405, 15} true;
  assume {:verifier.code 0} true;
  call $i74 := copy_to_user($p1, $p72, $i73);
  // WARNING: %98 = call i64 @copy_to_user(i8* %1, i8* %96, i64 %97), !dbg !5954, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6406, 17} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i64($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6406, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  $i77 := $i54;
  goto $bb44;
$bb41:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6408, 5} true;
  assume {:verifier.code 0} true;
  $i76 := $sub.i32(0, 14);
  goto $bb43;
$bb42:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  $i76 := $i50;
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6411, 3} true;
  assume {:verifier.code 0} true;
  $i77 := $i76;
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6414, 9} true;
  assume {:verifier.code 0} true;
  $p78 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6414, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6415, 11} true;
  assume {:verifier.code 0} true;
  $i79 := $sext.i32.i64($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6415, 3} true;
  assume {:verifier.code 0} true;
  $i17 := $i79;
  goto $bb8;
}
const ib_uverbs_event_poll: ref;
axiom (ib_uverbs_event_poll == $sub.ref(0, 126663));
procedure  ib_uverbs_event_poll($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.poll_table_struct* %1, i64 0, metadata !6377, metadata !5829), !dbg !6378, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6426, 47} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6426, 47} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6426, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6427, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6427, 3} true;
  assume {:verifier.code 0} true;
  call poll_wait($p0, $p5, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6428, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6428, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6429, 57} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6429, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := list_empty($p7);
  // WARNING: %9 = call i32 @list_empty(%struct.list_head* %8), !dbg !5824, !verifier.code !5809
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6430, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6430, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6432, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 65;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6435, 27} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6435, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6436, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const ib_uverbs_event_close: ref;
axiom (ib_uverbs_event_close == $sub.ref(0, 127695));
procedure  ib_uverbs_event_close($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i1;
  var $p22: ref;
  var $p23: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $p50: ref;
  var $i51: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6460, 47} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6460, 47} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6460, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6461, 25} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6461, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6462, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6462, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6463, 46} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 192);
  $p8 := $add.ref($p4, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6463, 57} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6464, 11} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6464, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, $mul.ref($sub.ref(0, 16), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6465, 51} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p10, $mul.ref($sub.ref(0, 16), 56)), 16);
  $p13 := $add.ref($add.ref($p10, $mul.ref($sub.ref(0, 16), 56)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6465, 56} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6466, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6466, 46} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, $mul.ref($sub.ref(0, 16), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p10, $mul.ref($sub.ref(0, 16), 56)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 67} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p4, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 42} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i18, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  $p22, $p23 := $p16, $p11;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6480, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6469, 30} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6469, 30} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6469, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6469, 38} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6469, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6470, 23} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p23, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6470, 5} true;
  assume {:verifier.code 0} true;
  call list_del($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6471, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6474, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6474, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6476, 49} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p22, 16);
  $p31 := $add.ref($p22, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6476, 54} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6477, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6477, 46} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, $mul.ref($sub.ref(0, 16), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 33} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p22, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 39} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i64($i36, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  $p22, $p23 := $p34, $p22;
  assume {:branchcond $i37} true;
  goto $bb9, $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  assume ($i37 == 1);
  goto $bb4;
$bb10:
  assume !(($i37 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6479, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6484, 27} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6484, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6485, 13} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6485, 13} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6485, 22} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6485, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6486, 42} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6486, 42} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6486, 56} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6486, 5} true;
  assume {:verifier.code 0} true;
  call $i45 := ib_unregister_event_handler($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6487, 23} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6487, 23} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6487, 37} true;
  assume {:verifier.code 0} true;
  $p48 := $p47;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6487, 5} true;
  assume {:verifier.code 0} true;
  call $i49 := kref_put($p48, ib_uverbs_release_file);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6488, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6491, 20} true;
  assume {:verifier.code 0} true;
  $p50 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6491, 3} true;
  assume {:verifier.code 0} true;
  call $i51 := kref_put($p50, ib_uverbs_release_event_file);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6492, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ib_uverbs_event_fasync: ref;
axiom (ib_uverbs_event_fasync == $sub.ref(0, 128727));
procedure  ib_uverbs_event_fasync($i0: i32, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %1, i64 0, metadata !6478, metadata !5829), !dbg !6479, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6445, 47} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6445, 47} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6445, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6446, 45} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6446, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := fasync_helper($i0, $p1, $i2, $p6);
  // WARNING: %8 = call i32 @fasync_helper(i32 %0, %struct.file* %1, i32 %2, %struct.fasync_struct** %7), !dbg !5820, !verifier.code !5809
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6447, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const fasync_helper: ref;
axiom (fasync_helper == $sub.ref(0, 129759));
procedure  fasync_helper($i0: i32, $p1: ref, $i2: i32, $p3: ref)
  returns ($r: i32);
const spin_lock_irq: ref;
axiom (spin_lock_irq == $sub.ref(0, 130791));
procedure  spin_lock_irq($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5263, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5263, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5263, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5264, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_del: ref;
axiom (list_del == $sub.ref(0, 131823));
procedure  list_del($p0: ref);
const kfree: ref;
axiom (kfree == $sub.ref(0, 132855));
procedure  kfree($p0: ref);
const spin_unlock_irq: ref;
axiom (spin_unlock_irq == $sub.ref(0, 133887));
procedure  spin_unlock_irq($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5281, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5281, 51} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5281, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5282, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_unregister_event_handler: ref;
axiom (ib_unregister_event_handler == $sub.ref(0, 134919));
procedure  ib_unregister_event_handler($p0: ref)
  returns ($r: i32);
const ib_uverbs_release_file: ref;
axiom (ib_uverbs_release_file == $sub.ref(0, 135951));
procedure  ib_uverbs_release_file($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6303, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6304, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6304, 28} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6304, 37} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6304, 37} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6304, 46} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6304, 46} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6304, 3} true;
  assume {:verifier.code 0} true;
  call ldv_module_put_5($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6305, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6305, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6305, 30} true;
  assume {:verifier.code 0} true;
  $p10 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6305, 3} true;
  assume {:verifier.code 0} true;
  call $i11 := kref_put($p10, ib_uverbs_release_dev);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6306, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6306, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6307, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kref_put: ref;
axiom (kref_put == $sub.ref(0, 136983));
procedure  kref_put($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5388, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := kref_sub($p0, 1, $p1);
  // WARNING: %3 = call i32 @kref_sub(%struct.qspinlock* %0, i32 1, void (%struct.qspinlock*)* %1), !dbg !5814, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5389, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ib_uverbs_release_event_file: ref;
axiom (ib_uverbs_release_event_file == $sub.ref(0, 138015));
procedure  ib_uverbs_release_event_file($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5917, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5918, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5918, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5919, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kref_sub: ref;
axiom (kref_sub == $sub.ref(0, 139047));
procedure  kref_sub($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i64;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.qspinlock* %0, i64 0, metadata !6556, metadata !5829), !dbg !6557, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5365, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5365, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5365, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  // WARNING: %6 = zext i1 %5 to i32, !dbg !5818, !verifier.code !5811
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5366, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5366, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5366, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5366, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !5823, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5367, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5367, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5368, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.20, 71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5369, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5372, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5372, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5372, 23} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5372, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5373, 54} true;
  assume {:verifier.code 0} true;
  $p15 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5373, 13} true;
  assume {:verifier.code 0} true;
  call $i16 := atomic_sub_and_test($i1, $p15);
  // WARNING: %20 = call i32 @atomic_sub_and_test(i32 %1, %struct.__anonstruct_atomic_t_6* %19), !dbg !5836, !verifier.code !5811
  call {:cexpr "tmp___0"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5374, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5374, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i17 == 1);
  call devirtbounce($p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5376, 5} true;
  assume {:verifier.code 0} true;
  $i18 := 1;
  goto $bb6;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5382, 1} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5380, 3} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb6;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 140079));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !6595, metadata !5829), !dbg !6596, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5532, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 141111));
procedure  warn_slowpath_null($p0: ref, $i1: i32);
const atomic_sub_and_test: ref;
axiom (atomic_sub_and_test == $sub.ref(0, 142143));
procedure  atomic_sub_and_test($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: %3 = alloca i8, align 1, !verifier.code !5809
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5190, 142} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  call devirtbounce.3(0, $p3, $p2, $i0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5192, 32} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5192, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5192, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5192, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5192, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const ldv_module_put_5: ref;
axiom (ldv_module_put_5 == $sub.ref(0, 143175));
procedure  ldv_module_put_5($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7827, 3} true;
  assume {:verifier.code 0} true;
  call ldv_module_put($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7828, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_uverbs_release_dev: ref;
axiom (ib_uverbs_release_dev == $sub.ref(0, 144207));
procedure  ib_uverbs_release_dev($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5905, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5906, 19} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5906, 3} true;
  assume {:verifier.code 0} true;
  call complete_($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5907, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const complete_: ref;
axiom (complete_ == $sub.ref(0, 145239));
procedure  complete_($p0: ref);
const ldv_module_put: ref;
axiom (ldv_module_put == $sub.ref(0, 146271));
procedure  ldv_module_put($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12981, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12981, 30} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12981, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12982, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12982, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $sle.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12982, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12983, 7} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12984, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12987, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12987, 51} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12987, 27} true;
  assume {:verifier.code 0} true;
  $M.2 := $i6;
  call {:cexpr "ldv_module_refcounter"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12988, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12991, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 147303));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12895, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12897, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12899, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irq: ref;
axiom (_raw_spin_unlock_irq == $sub.ref(0, 148335));
procedure  _raw_spin_unlock_irq($p0: ref);
const _raw_spin_lock_irq: ref;
axiom (_raw_spin_lock_irq == $sub.ref(0, 149367));
procedure  _raw_spin_lock_irq($p0: ref);
const poll_wait: ref;
axiom (poll_wait == $sub.ref(0, 150399));
procedure  poll_wait($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 8} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 26} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 63} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 85} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 85} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 66} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 92} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5678, 155} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 63} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5678, 158} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5678, 187} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5678, 155} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5679, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5679, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  call devirtbounce.4($p12, $p0, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5680, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5676, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5683, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_empty: ref;
axiom (list_empty == $sub.ref(0, 151431));
procedure  list_empty($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5140, 62} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5140, 62} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5140, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5140, 71} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5140, 68} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i3, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5140, 68} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5140, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __might_sleep: ref;
axiom (__might_sleep == $sub.ref(0, 152463));
procedure  __might_sleep($p0: ref, $i1: i32, $i2: i32);
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 153495));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5119, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5119, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5120, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5120, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5121, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const prepare_to_wait_event: ref;
axiom (prepare_to_wait_event == $sub.ref(0, 154527));
procedure  prepare_to_wait_event($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64);
const schedule: ref;
axiom (schedule == $sub.ref(0, 155559));
procedure  schedule();
const finish_wait: ref;
axiom (finish_wait == $sub.ref(0, 156591));
procedure  finish_wait($p0: ref, $p1: ref);
const copy_to_user: ref;
axiom (copy_to_user == $sub.ref(0, 157623));
procedure  copy_to_user($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i1;
  var $i8: i64;
  var $i9: i1;
  var $i7: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6716, metadata !5829), !dbg !6717, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5658, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.i32($p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5658, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  // WARNING: %5 = sext i32 %4 to i64, !dbg !5816, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5659, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  // WARNING: %6 = trunc i64 %5 to i32, !dbg !5820, !verifier.code !5811
  call {:cexpr "sz"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5660, 3} true;
  assume {:verifier.code 0} true;
  call __might_fault(.str.40, 732);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 48} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 48} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 1);
  // WARNING: %15 = call i64 @ldv__builtin_expect(i64 %14, i64 1), !dbg !5833, !verifier.code !5811
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5662, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5662, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 51} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.i64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5661, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb2;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5663, 33} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5663, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := _copy_to_user($p0, $p1, $i14);
  // WARNING: %19 = call i64 @_copy_to_user(i8* %0, i8* %1, i32 %18), !dbg !5841, !verifier.code !5811
  call {:cexpr "n"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5664, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5665, 5} true;
  assume {:verifier.code 0} true;
  call __copy_to_user_overflow();
  assume {:verifier.code 0} true;
  $i16 := $i2;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5667, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
}
const __builtinx_object_size: ref;
axiom (__builtinx_object_size == $sub.ref(0, 158655));
procedure  __builtinx_object_size()
  returns ($r: i32);
procedure  __builtinx_object_size.ref.i32(p.0: ref, p.1: i32)
  returns ($r: i32);
const __might_fault: ref;
axiom (__might_fault == $sub.ref(0, 159687));
procedure  __might_fault($p0: ref, $i1: i32);
const _copy_to_user: ref;
axiom (_copy_to_user == $sub.ref(0, 160719));
procedure  _copy_to_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64);
const __copy_to_user_overflow: ref;
axiom (__copy_to_user_overflow == $sub.ref(0, 161751));
procedure  __copy_to_user_overflow();
const ib_uverbs_get_context: ref;
axiom (ib_uverbs_get_context == $sub.ref(0, 162783));
procedure  ib_uverbs_get_context($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i1;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i1;
  var $i43: i8;
  var $i44: i1;
  var $p45: ref;
  var $i46: i64;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $p74: ref;
  var $i75: i32;
  var $i76: i1;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i32;
  var $p82: ref;
  var $i83: i32;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i1;
  var $i89: i8;
  var $i90: i1;
  var $p91: ref;
  var $i92: i64;
  var $i93: i32;
  var $p95: ref;
  var $i96: i64;
  var $p97: ref;
  var $p98: ref;
  var $i99: i64;
  var $i100: i1;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $i118: i1;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $i125: i32;
  var $p126: ref;
  var $i127: i64;
  var $i101: i32;
  var $i94: i32;
  var $p128: ref;
  var $i129: i32;
  var $i73: i32;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $i24: i32;
  var $p135: ref;
  var $i136: i64;
  var $i15: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(224, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6753, metadata !5829), !dbg !6754, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !6755, metadata !5829), !dbg !6756, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8736, 18} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8736, 18} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8736, 27} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8736, 27} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8737, 30} true;
  assume {:verifier.code 0} true;
  $i14 := $ule.i32($i3, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8737, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8738, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8850, 1} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8742, 24} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8742, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := copy_from_user($p16, $p1, 8);
  // WARNING: %20 = call i64 @copy_from_user(i8* %19, i8* %1, i64 8), !dbg !5847, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8743, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8743, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8744, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8748, 29} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8748, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8749, 29} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8749, 29} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8749, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8749, 38} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8749, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8751, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(0, 22);
  goto $bb10;
$bb9:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8847, 24} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8847, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8848, 11} true;
  assume {:verifier.code 0} true;
  $i136 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8848, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i136;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8755, 37} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8755, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8755, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p26, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8756, 47} true;
  assume {:verifier.code 0} true;
  $p27 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8756, 47} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8756, 56} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8756, 18} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8756, 9} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8756, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p31, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8757, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8757, 40} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i64($i32, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8757, 9} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8757, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p34, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8758, 18} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8758, 42} true;
  assume {:verifier.code 0} true;
  $i36 := $sub.i64($i35, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8758, 9} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8758, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p37, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8759, 24} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p13, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8759, 24} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  call $p40 := devirtbounce.5($p39, $p13, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8760, 20} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8760, 13} true;
  assume {:verifier.code 0} true;
  call $i42 := IS_ERR($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8760, 11} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i1.i8($i42);
  // WARNING: %51 = zext i1 %50 to i8, !dbg !5887, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i8($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8761, 13} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i8.i1($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8761, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8762, 23} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8762, 15} true;
  assume {:verifier.code 0} true;
  call $i46 := PTR_ERR($p45);
  // WARNING: %55 = call i64 @PTR_ERR(i8* %54), !dbg !5895, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8763, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i64.i32($i46);
  // WARNING: %56 = trunc i64 %55 to i32, !dbg !5898, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8764, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $i47;
  goto $bb10;
$bb13:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8768, 13} true;
  assume {:verifier.code 0} true;
  $p48 := $p40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8768, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p48, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8769, 30} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p40, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8769, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8770, 30} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p40, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8770, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8771, 30} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p40, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8771, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8772, 30} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p40, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8772, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8773, 30} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p40, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8773, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8774, 30} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p40, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8774, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8775, 30} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p40, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8775, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8776, 30} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p40, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8776, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8777, 30} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p40, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8777, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8778, 3} true;
  assume {:verifier.code 0} true;
  call rcu_read_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8779, 13} true;
  assume {:verifier.code 0} true;
  call $p58 := get_current();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8780, 42} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p58, 2192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8780, 42} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.3, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8780, 20} true;
  assume {:verifier.code 0} true;
  call $p61 := get_task_pid($p60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8780, 13} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p40, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8780, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p62, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8781, 3} true;
  assume {:verifier.code 0} true;
  call rcu_read_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8782, 13} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p40, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8782, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8783, 19} true;
  assume {:verifier.code 0} true;
  $p64 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8783, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p64, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8784, 13} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p40, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8784, 25} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8784, 25} true;
  assume {:verifier.code 0} true;
  $p67 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8784, 25} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p66, $p67, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8785, 28} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p40, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8785, 3} true;
  assume {:verifier.code 0} true;
  call __init_rwsem($p68, .str.13, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8786, 13} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p40, 392);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8786, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8787, 30} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p40, 376);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8787, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8788, 9} true;
  assume {:verifier.code 0} true;
  call $i71 := ib_query_device($p13, $p7);
  // WARNING: %82 = call i32 @ib_query_device(%struct.ib_device* %14, %struct.ib_device_attr* %8), !dbg !5941, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8789, 11} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8789, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8790, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $i71;
  goto $bb17;
$bb16:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8844, 21} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p40, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8844, 21} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8844, 3} true;
  assume {:verifier.code 0} true;
  call put_pid($p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8845, 13} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p13, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8845, 13} true;
  assume {:verifier.code 0} true;
  $p133 := $load.ref($M.0, $p132);
  call $i134 := devirtbounce.6($p133, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8845, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i73;
  goto $bb10;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8794, 16} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p7, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8794, 16} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8794, 33} true;
  assume {:verifier.code 0} true;
  $i76 := $sge.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8794, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8795, 15} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p40, 336);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8795, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8796, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8799, 42} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8799, 42} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8799, 51} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p79, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8799, 51} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8799, 8} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8799, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8800, 9} true;
  assume {:verifier.code 0} true;
  call $i83 := get_unused_fd_flags(524288);
  // WARNING: %99 = call i32 @get_unused_fd_flags(i32 524288), !dbg !5959, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8801, 11} true;
  assume {:verifier.code 0} true;
  $i84 := $slt.i32($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8801, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8802, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $i83;
  goto $bb17;
$bb23:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8806, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8806, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p85, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8807, 10} true;
  assume {:verifier.code 0} true;
  call $p86 := ib_uverbs_alloc_event_file($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8808, 20} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8808, 13} true;
  assume {:verifier.code 0} true;
  call $i88 := IS_ERR($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8808, 11} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i1.i8($i88);
  // WARNING: %108 = zext i1 %107 to i8, !dbg !5972, !verifier.code !5806
  call {:cexpr "tmp___4"} boogie_si_record_i8($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8809, 13} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i8.i1($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8809, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8810, 23} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8810, 15} true;
  assume {:verifier.code 0} true;
  call $i92 := PTR_ERR($p91);
  // WARNING: %112 = call i64 @PTR_ERR(i8* %111), !dbg !5980, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8811, 11} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i64.i32($i92);
  // WARNING: %113 = trunc i64 %112 to i32, !dbg !5983, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8812, 5} true;
  assume {:verifier.code 0} true;
  $i94 := $i93;
  goto $bb27;
$bb26:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8842, 22} true;
  assume {:verifier.code 0} true;
  $p128 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8842, 22} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8842, 3} true;
  assume {:verifier.code 0} true;
  call put_unused_fd($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8842, 3} true;
  assume {:verifier.code 0} true;
  $i73 := $i94;
  goto $bb17;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8816, 38} true;
  assume {:verifier.code 0} true;
  $p95 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8816, 38} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i64($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8816, 26} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8816, 48} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8816, 13} true;
  assume {:verifier.code 0} true;
  call $i99 := copy_to_user($p97, $p98, 8);
  // WARNING: %120 = call i64 @copy_to_user(i8* %118, i8* %119, i64 8), !dbg !5988, !verifier.code !5806
  call {:cexpr "tmp___5"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8817, 15} true;
  assume {:verifier.code 0} true;
  $i100 := $ne.i64($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8817, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8819, 5} true;
  assume {:verifier.code 0} true;
  $i101 := $sub.i32(0, 14);
  goto $bb31;
$bb30:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8840, 3} true;
  assume {:verifier.code 0} true;
  call fput($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8840, 3} true;
  assume {:verifier.code 0} true;
  $i94 := $i101;
  goto $bb27;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8823, 59} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p86, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8823, 59} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8823, 22} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8823, 9} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8823, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p105, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8824, 39} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8824, 39} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8824, 48} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8824, 48} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8824, 9} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 184);
  $p111 := $add.ref($p0, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8824, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p111, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8825, 9} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 184);
  $p113 := $add.ref($add.ref($p0, 184), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8825, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p113, ib_uverbs_event_handler);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8826, 26} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0, 184);
  $p115 := $add.ref($add.ref($p0, 184), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8826, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8827, 43} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8827, 9} true;
  assume {:verifier.code 0} true;
  call $i117 := ib_register_event_handler($p116);
  // WARNING: %140 = call i32 @ib_register_event_handler(%struct.ib_event_handler* %139), !dbg !6009, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8828, 11} true;
  assume {:verifier.code 0} true;
  $i118 := $ne.i32($i117, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8828, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i118 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8829, 5} true;
  assume {:verifier.code 0} true;
  $i101 := $i117;
  goto $bb31;
$bb34:
  assume !(($i118 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8833, 25} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8833, 25} true;
  assume {:verifier.code 0} true;
  $p120 := $load.ref($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8833, 38} true;
  assume {:verifier.code 0} true;
  $p121 := $p120;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8833, 3} true;
  assume {:verifier.code 0} true;
  call kref_get___0($p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8834, 24} true;
  assume {:verifier.code 0} true;
  $p122 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8834, 3} true;
  assume {:verifier.code 0} true;
  call kref_get___0($p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8835, 9} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8835, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p123, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8836, 19} true;
  assume {:verifier.code 0} true;
  $p124 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8836, 19} true;
  assume {:verifier.code 0} true;
  $i125 := $load.i32($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8836, 3} true;
  assume {:verifier.code 0} true;
  call fd_install($i125, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8837, 24} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8837, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8838, 11} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8838, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i127;
  goto $bb3;
}
const ib_uverbs_query_device: ref;
axiom (ib_uverbs_query_device == $sub.ref(0, 163815));
procedure  ib_uverbs_query_device($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $i26: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(176, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(224, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6986, metadata !5829), !dbg !6987, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !6988, metadata !5829), !dbg !6989, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8911, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i32($i3, 175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8911, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8912, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8938, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8916, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8916, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p9, $p1, 8);
  // WARNING: %13 = call i64 @copy_from_user(i8* %12, i8* %1, i64 8), !dbg !5877, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8917, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8917, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8918, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8922, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8922, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8922, 41} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8922, 41} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8922, 9} true;
  assume {:verifier.code 0} true;
  call $i16 := ib_query_device($p15, $p6);
  // WARNING: %22 = call i32 @ib_query_device(%struct.ib_device* %21, %struct.ib_device_attr* %7), !dbg !5887, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8923, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8923, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8924, 13} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8924, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i18;
  goto $bb3;
$bb9:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8928, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8928, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p19, 0, 176, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8929, 3} true;
  assume {:verifier.code 0} true;
  call copy_query_dev_fields($p0, $p5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8930, 38} true;
  assume {:verifier.code 0} true;
  $p20 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8930, 38} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8930, 26} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8930, 48} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8930, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := copy_to_user($p22, $p23, 176);
  // WARNING: %33 = call i64 @copy_to_user(i8* %31, i8* %32, i64 176), !dbg !5901, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8931, 15} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8931, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8932, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb12:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8936, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8936, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i26;
  goto $bb3;
}
const ib_uverbs_query_port: ref;
axiom (ib_uverbs_query_port == $sub.ref(0, 164847));
procedure  ib_uverbs_query_port($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i8;
  var $i20: i32;
  var $i21: i1;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i8;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i8;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $i52: i16;
  var $p53: ref;
  var $p54: ref;
  var $i55: i16;
  var $p56: ref;
  var $p57: ref;
  var $i58: i16;
  var $p59: ref;
  var $p60: ref;
  var $i61: i8;
  var $p62: ref;
  var $p63: ref;
  var $i64: i8;
  var $p65: ref;
  var $p66: ref;
  var $i67: i8;
  var $p68: ref;
  var $p69: ref;
  var $i70: i8;
  var $p71: ref;
  var $p72: ref;
  var $i73: i8;
  var $p74: ref;
  var $p75: ref;
  var $i76: i8;
  var $p77: ref;
  var $p78: ref;
  var $i79: i8;
  var $p80: ref;
  var $p81: ref;
  var $i82: i8;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i8;
  var $i90: i32;
  var $i91: i8;
  var $i92: i32;
  var $i93: i8;
  var $p94: ref;
  var $p95: ref;
  var $i96: i64;
  var $p97: ref;
  var $p98: ref;
  var $i99: i64;
  var $i100: i1;
  var $i101: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(48, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7091, metadata !5829), !dbg !7092, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7093, metadata !5829), !dbg !7094, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8951, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i32($i3, 39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8951, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8952, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8998, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8956, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8956, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p9, $p1, 16);
  // WARNING: %13 = call i64 @copy_from_user(i8* %12, i8* %1, i64 16), !dbg !5861, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8957, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8957, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8958, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 30} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 30} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 39} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 39} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 57} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 57} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 47} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 47} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8962, 9} true;
  assume {:verifier.code 0} true;
  call $i20 := ib_query_port($p15, $i19, $p6);
  // WARNING: %26 = call i32 @ib_query_port(%struct.ib_device* %21, i8 zeroext %25, %struct.ib_port_attr* %7), !dbg !5873, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8963, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8963, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8964, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8964, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i22;
  goto $bb3;
$bb9:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8968, 3} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8968, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p23, 0, 40, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8969, 28} true;
  assume {:verifier.code 0} true;
  $p24 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8969, 28} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8969, 16} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8969, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p5, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8969, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8970, 30} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8970, 30} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8970, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8970, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p5, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8970, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8971, 33} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8971, 33} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8971, 21} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i8($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8971, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p5, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8971, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8972, 35} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p6, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8972, 35} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8972, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8972, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8973, 30} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8973, 30} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8973, 8} true;
  assume {:verifier.code 0} true;
  $p41 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8973, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8974, 26} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p6, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8974, 26} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8974, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8974, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8975, 29} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8975, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8975, 8} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8975, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8976, 30} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p6, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8976, 30} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8976, 8} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p5, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8976, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8977, 28} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p6, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8977, 28} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i16($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8977, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p5, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8977, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p53, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8978, 19} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p6, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8978, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i16($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8978, 8} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p5, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8978, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p56, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8979, 22} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p6, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8979, 22} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i16($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8979, 8} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8979, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p59, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8980, 19} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p6, 38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8980, 19} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i8($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8980, 8} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p5, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8980, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p62, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8981, 26} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p6, 39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8981, 26} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i8($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8981, 8} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p5, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8981, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8982, 21} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p6, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8982, 21} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8982, 8} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p5, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8982, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8983, 30} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p6, 41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8983, 30} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i8($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8983, 8} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8983, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p71, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8984, 31} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p6, 42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8984, 31} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i8($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8984, 8} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p5, 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8984, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p74, $i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8985, 28} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p6, 43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8985, 28} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i8($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8985, 8} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p5, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8985, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p77, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8986, 28} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p6, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8986, 28} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i8($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8986, 8} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p5, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8986, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p80, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8987, 26} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p6, 45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8987, 26} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i8($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8987, 8} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p5, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8987, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p83, $i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 45} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 45} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 54} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p85, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 54} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 72} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 72} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 62} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 62} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i32.i8($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8988, 13} true;
  assume {:verifier.code 0} true;
  call $i92 := rdma_port_get_link_layer($p87, $i91);
  // WARNING: %101 = call i32 @rdma_port_get_link_layer(%struct.ib_device* %96, i8 zeroext %100), !dbg !5947, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8989, 21} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8989, 8} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p5, 37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8989, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8990, 38} true;
  assume {:verifier.code 0} true;
  $p95 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8990, 38} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i64($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8990, 26} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8990, 48} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8990, 13} true;
  assume {:verifier.code 0} true;
  call $i99 := copy_to_user($p97, $p98, 40);
  // WARNING: %108 = call i64 @copy_to_user(i8* %106, i8* %107, i64 40), !dbg !5956, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8991, 15} true;
  assume {:verifier.code 0} true;
  $i100 := $ne.i64($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8991, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8992, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb12:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8996, 11} true;
  assume {:verifier.code 0} true;
  $i101 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8996, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i101;
  goto $bb3;
}
const ib_uverbs_alloc_pd: ref;
axiom (ib_uverbs_alloc_pd == $sub.ref(0, 165879));
procedure  ib_uverbs_alloc_pd($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i1;
  var $i47: i8;
  var $i48: i1;
  var $p49: ref;
  var $i50: i64;
  var $i51: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i63: i1;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $i73: i64;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i64: i32;
  var $i84: i32;
  var $i52: i32;
  var $i85: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7251, metadata !5829), !dbg !7252, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7253, metadata !5829), !dbg !7254, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9015, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i32($i3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9015, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9016, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9082, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9020, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9020, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p9, $p1, 8);
  // WARNING: %13 = call i64 @copy_from_user(i8* %12, i8* %1, i64 8), !dbg !5836, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9021, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9021, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9022, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9026, 37} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9026, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9026, 15} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p13, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9027, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9027, 47} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9027, 56} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9027, 18} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9027, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9027, 16} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p18, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9028, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9028, 40} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i64($i19, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9028, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9028, 15} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i64($M.6, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9029, 18} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9029, 42} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i64($i22, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9029, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9029, 16} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i64($M.7, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9030, 13} true;
  assume {:verifier.code 0} true;
  call $p25 := kmalloc(216, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9031, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9032, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9032, 28} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9032, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9033, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 12);
  goto $bb3;
$bb9:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9037, 31} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9037, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9037, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p26, 0, $p30, pd_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9038, 22} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p26, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9038, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 19} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 19} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 28} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 37} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 37} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 55} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 55} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 64} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p39, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 64} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 78} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9039, 78} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  call $p44 := devirtbounce.7($p37, $p41, $p43, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9041, 20} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9041, 13} true;
  assume {:verifier.code 0} true;
  call $i46 := IS_ERR($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9041, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i1.i8($i46);
  // WARNING: %56 = zext i1 %55 to i8, !dbg !5886, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i8($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9042, 13} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i8.i1($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9042, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9043, 23} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9043, 15} true;
  assume {:verifier.code 0} true;
  call $i50 := PTR_ERR($p49);
  // WARNING: %60 = call i64 @PTR_ERR(i8* %59), !dbg !5894, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9044, 11} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i64.i32($i50);
  // WARNING: %61 = trunc i64 %60 to i32, !dbg !5897, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9045, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $i51;
  goto $bb13;
$bb12:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9079, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9080, 11} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9080, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i85;
  goto $bb3;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9049, 23} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9049, 23} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9049, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9049, 32} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9049, 7} true;
  assume {:verifier.code 0} true;
  $p57 := $p44;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9049, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p57, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9050, 7} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p44, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9050, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p58, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9051, 20} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p44, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9051, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9052, 18} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9052, 9} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p26, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9052, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p61, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9053, 9} true;
  assume {:verifier.code 0} true;
  call $i62 := idr_add_uobj(ib_uverbs_pd_idr, $p26);
  // WARNING: %73 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_pd_idr, %struct.ib_uobject* %32), !dbg !5912, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9054, 11} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i32($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9054, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9055, 5} true;
  assume {:verifier.code 0} true;
  $i64 := $i62;
  goto $bb17;
$bb16:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9077, 3} true;
  assume {:verifier.code 0} true;
  call $i84 := ib_dealloc_pd($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9077, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $i64;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9059, 3} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9059, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p65, 0, 4, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9060, 34} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p26, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9060, 34} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9060, 8} true;
  assume {:verifier.code 0} true;
  $p68 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9060, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p68, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9061, 38} true;
  assume {:verifier.code 0} true;
  $p69 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9061, 38} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i64($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9061, 26} true;
  assume {:verifier.code 0} true;
  $p71 := $i2p.i64.ref($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9061, 48} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9061, 13} true;
  assume {:verifier.code 0} true;
  call $i73 := copy_to_user($p71, $p72, 4);
  // WARNING: %86 = call i64 @copy_to_user(i8* %84, i8* %85, i64 4), !dbg !5925, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9062, 15} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i64($i73, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9062, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9064, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9075, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_pd_idr, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9075, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $sub.i32(0, 14);
  goto $bb17;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9068, 29} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9068, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9069, 25} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p26, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9069, 40} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9069, 40} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9069, 51} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p78, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9069, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p76, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9070, 24} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9070, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9071, 9} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p26, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9071, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9072, 20} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p26, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9072, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9073, 11} true;
  assume {:verifier.code 0} true;
  $i83 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9073, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i83;
  goto $bb3;
}
const ib_uverbs_dealloc_pd: ref;
axiom (ib_uverbs_dealloc_pd == $sub.ref(0, 166911));
procedure  ib_uverbs_dealloc_pd($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7397, metadata !5829), !dbg !7398, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7399, metadata !5829), !dbg !7400, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9092, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9092, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 4);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 4), !dbg !5823, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9093, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9093, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9094, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9123, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9098, 55} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9098, 55} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9098, 72} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9098, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9098, 10} true;
  assume {:verifier.code 0} true;
  call $p13 := idr_write_uobj(ib_uverbs_pd_idr, $i10, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9099, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9099, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9099, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9100, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9104, 45} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9104, 45} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9104, 23} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9104, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := ib_dealloc_pd($p18);
  // WARNING: %25 = call i32 @ib_dealloc_pd(%struct.ib_pd* %24), !dbg !5844, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9105, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9105, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9106, 11} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p13, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9106, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9107, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9110, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9111, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9111, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9112, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9112, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i23;
  goto $bb3;
$bb12:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9116, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_pd_idr, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9117, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9117, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9118, 20} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p13, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9118, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9119, 24} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9119, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9120, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9121, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9121, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i27;
  goto $bb3;
}
const ib_uverbs_create_ah: ref;
axiom (ib_uverbs_create_ah == $sub.ref(0, 167943));
procedure  ib_uverbs_create_ah($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i16;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i8;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i8;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $i51: i8;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i8;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i8;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i8;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i8;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i1;
  var $i95: i8;
  var $i96: i1;
  var $p97: ref;
  var $i98: i64;
  var $i99: i32;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $i105: i1;
  var $p107: ref;
  var $i108: i32;
  var $p109: ref;
  var $p110: ref;
  var $i111: i64;
  var $p112: ref;
  var $p113: ref;
  var $i114: i64;
  var $i115: i1;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i64;
  var $i106: i32;
  var $i125: i32;
  var $i100: i32;
  var $i28: i32;
  var $i126: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(56, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7462, metadata !5829), !dbg !7463, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7464, metadata !5829), !dbg !7465, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11676, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i32($i3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11676, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11677, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11758, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11681, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11681, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p9, $p1, 56);
  // WARNING: %13 = call i64 @copy_from_user(i8* %12, i8* %1, i64 56), !dbg !5858, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11682, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11682, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11683, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11687, 13} true;
  assume {:verifier.code 0} true;
  call $p12 := kmalloc(216, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11688, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11689, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11689, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11689, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11690, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 12);
  goto $bb3;
$bb9:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11694, 23} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11694, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11694, 42} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11694, 42} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11694, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p13, $i17, $p19, ah_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11695, 22} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p13, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11695, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11696, 30} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11696, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11696, 47} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11696, 47} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11696, 8} true;
  assume {:verifier.code 0} true;
  call $p25 := idr_read_pd($i22, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11697, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11697, 26} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11697, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11699, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 22);
  goto $bb13;
$bb12:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11755, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11756, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11756, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i126;
  goto $bb3;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11703, 19} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p4, 24);
  $p30 := $add.ref($add.ref($p4, 24), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11703, 24} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i16($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11703, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11703, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11704, 17} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p4, 24);
  $p34 := $add.ref($add.ref($p4, 24), 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11704, 22} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11704, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p6, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11704, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11705, 28} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p4, 24);
  $p38 := $add.ref($add.ref($p4, 24), 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11705, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i8($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11705, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p6, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11705, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11706, 26} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p4, 24);
  $p42 := $add.ref($add.ref($p4, 24), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11706, 31} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11706, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p6, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11706, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 38} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p4, 24);
  $p46 := $add.ref($add.ref($p4, 24), 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 43} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 19} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 53} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 53} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i1.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 19} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i8($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p6, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11707, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11708, 23} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p4, 24);
  $p54 := $add.ref($add.ref($p4, 24), 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11708, 28} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11708, 8} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p6, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11708, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p56, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11709, 29} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p4, 24);
  $p58 := $add.ref($p4, 24);
  $p59 := $add.ref($add.ref($p4, 24), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11709, 38} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11709, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $p6;
  $p62 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11709, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p62, $i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11710, 29} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p4, 24);
  $p64 := $add.ref($p4, 24);
  $p65 := $add.ref($add.ref($p4, 24), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11710, 38} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i8($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11710, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $p6;
  $p68 := $add.ref($p6, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11710, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11711, 28} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p4, 24);
  $p70 := $add.ref($p4, 24);
  $p71 := $add.ref($add.ref($p4, 24), 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11711, 37} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11711, 8} true;
  assume {:verifier.code 0} true;
  $p73 := $p6;
  $p74 := $add.ref($p6, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11711, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p74, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11712, 32} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p4, 24);
  $p76 := $add.ref($p4, 24);
  $p77 := $add.ref($add.ref($p4, 24), 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11712, 41} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i8($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11712, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $p6;
  $p80 := $add.ref($p6, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11712, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p80, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11713, 8} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p6, 38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11713, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p81, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11714, 26} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p6, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11714, 3} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11714, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p83, 0, 6, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11715, 26} true;
  assume {:verifier.code 0} true;
  $p84 := $p6;
  $p85 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11715, 35} true;
  assume {:verifier.code 0} true;
  $p86 := $bitcast.ref.ref($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11715, 3} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11715, 64} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 24);
  $p89 := $add.ref($p4, 24);
  $p90 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11715, 3} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11715, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p87, $p91, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11716, 8} true;
  assume {:verifier.code 0} true;
  call $p92 := ib_create_ah($p25, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11717, 20} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11717, 13} true;
  assume {:verifier.code 0} true;
  call $i94 := IS_ERR($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11717, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i1.i8($i94);
  // WARNING: %106 = zext i1 %105 to i8, !dbg !5951, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i8($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11718, 13} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i8.i1($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11718, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11719, 23} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11719, 15} true;
  assume {:verifier.code 0} true;
  call $i98 := PTR_ERR($p97);
  // WARNING: %110 = call i64 @PTR_ERR(i8* %109), !dbg !5959, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11720, 11} true;
  assume {:verifier.code 0} true;
  $i99 := $trunc.i64.i32($i98);
  // WARNING: %111 = trunc i64 %110 to i32, !dbg !5962, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11721, 5} true;
  assume {:verifier.code 0} true;
  $i100 := $i99;
  goto $bb17;
$bb16:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11753, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11753, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $i100;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11725, 7} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p92, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11725, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p101, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11726, 18} true;
  assume {:verifier.code 0} true;
  $p102 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11726, 9} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11726, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p103, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11727, 9} true;
  assume {:verifier.code 0} true;
  call $i104 := idr_add_uobj(ib_uverbs_ah_idr, $p13);
  // WARNING: %117 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_ah_idr, %struct.ib_uobject* %19), !dbg !5969, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11728, 11} true;
  assume {:verifier.code 0} true;
  $i105 := $ne.i32($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11728, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11729, 5} true;
  assume {:verifier.code 0} true;
  $i106 := $i104;
  goto $bb21;
$bb20:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11751, 3} true;
  assume {:verifier.code 0} true;
  call $i125 := ib_destroy_ah($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11751, 3} true;
  assume {:verifier.code 0} true;
  $i100 := $i106;
  goto $bb17;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11733, 34} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p13, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11733, 34} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11733, 8} true;
  assume {:verifier.code 0} true;
  $p109 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11733, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p109, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11734, 38} true;
  assume {:verifier.code 0} true;
  $p110 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11734, 38} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i64($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11734, 26} true;
  assume {:verifier.code 0} true;
  $p112 := $i2p.i64.ref($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11734, 48} true;
  assume {:verifier.code 0} true;
  $p113 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11734, 13} true;
  assume {:verifier.code 0} true;
  call $i114 := copy_to_user($p112, $p113, 4);
  // WARNING: %129 = call i64 @copy_to_user(i8* %127, i8* %128, i64 4), !dbg !5981, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11735, 15} true;
  assume {:verifier.code 0} true;
  $i115 := $ne.i64($i114, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11735, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i115 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11737, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11749, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_ah_idr, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11749, 3} true;
  assume {:verifier.code 0} true;
  $i106 := $sub.i32(0, 14);
  goto $bb21;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11741, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11742, 29} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11742, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p116, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11743, 25} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p13, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11743, 40} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11743, 40} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11743, 51} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p119, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11743, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p117, $p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11744, 24} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11744, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11745, 9} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p13, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11745, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p122, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11746, 20} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p13, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11746, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11747, 11} true;
  assume {:verifier.code 0} true;
  $i124 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11747, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i124;
  goto $bb3;
}
const ib_uverbs_destroy_ah: ref;
axiom (ib_uverbs_destroy_ah == $sub.ref(0, 168975));
procedure  ib_uverbs_destroy_ah($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7647, metadata !5829), !dbg !7648, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7649, metadata !5829), !dbg !7650, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11769, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11769, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 4);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 4), !dbg !5823, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11770, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11770, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11771, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11801, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11775, 55} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11775, 55} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11775, 72} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11775, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11775, 10} true;
  assume {:verifier.code 0} true;
  call $p13 := idr_write_uobj(ib_uverbs_ah_idr, $i10, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11776, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11776, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11776, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11777, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11781, 30} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11781, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11781, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11782, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := ib_destroy_ah($p18);
  // WARNING: %25 = call i32 @ib_destroy_ah(%struct.ib_ah* %24), !dbg !5846, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11783, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11783, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11784, 11} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p13, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11784, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11785, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11788, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11789, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11789, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11790, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11790, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i23;
  goto $bb3;
$bb12:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11794, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_ah_idr, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11795, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11795, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11796, 20} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p13, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11796, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11797, 24} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11797, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11798, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11799, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11799, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i27;
  goto $bb3;
}
const ib_uverbs_reg_mr: ref;
axiom (ib_uverbs_reg_mr == $sub.ref(0, 170007));
procedure  ib_uverbs_reg_mr($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i1;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $i35: i32;
  var $i36: i32;
  var $i37: i1;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i1;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $i61: i1;
  var $p62: ref;
  var $i63: i32;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i24;
  var $i72: i24;
  var $i73: i24;
  var $p74: ref;
  var $p75: ref;
  var $i76: i8;
  var $i77: i64;
  var $i78: i64;
  var $i79: i64;
  var $i80: i1;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: i64;
  var $p88: ref;
  var $i89: i64;
  var $p90: ref;
  var $i91: i64;
  var $p92: ref;
  var $i93: i32;
  var $p94: ref;
  var $p95: ref;
  var $i96: i1;
  var $i97: i8;
  var $i98: i1;
  var $p99: ref;
  var $i100: i64;
  var $i101: i32;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
  var $i112: i1;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $p117: ref;
  var $p118: ref;
  var $i119: i32;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $p123: ref;
  var $p124: ref;
  var $i125: i64;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $i129: i1;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $i138: i64;
  var $i113: i32;
  var $i139: i32;
  var $i81: i32;
  var $i53: i32;
  var $i140: i64;
  var $i10: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(224, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7714, metadata !5829), !dbg !7715, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7716, metadata !5829), !dbg !7717, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9535, 30} true;
  assume {:verifier.code 0} true;
  $i9 := $ule.i32($i3, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9536, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9650, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9540, 24} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9540, 9} true;
  assume {:verifier.code 0} true;
  call $i12 := copy_from_user($p11, $p1, 40);
  // WARNING: %15 = call i64 @copy_from_user(i8* %14, i8* %1, i64 40), !dbg !5855, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9541, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9541, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9542, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9546, 37} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9546, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9546, 15} true;
  assume {:verifier.code 0} true;
  $M.8 := $store.ref($M.8, $p15, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9547, 47} true;
  assume {:verifier.code 0} true;
  $p16 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9547, 47} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9547, 56} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9547, 18} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9547, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9547, 16} true;
  assume {:verifier.code 0} true;
  $M.9 := $store.ref($M.9, $p20, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9548, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9548, 40} true;
  assume {:verifier.code 0} true;
  $i22 := $sub.i64($i21, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9548, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9548, 15} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.i64($M.10, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9549, 18} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9549, 42} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i64($i24, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9549, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9549, 16} true;
  assume {:verifier.code 0} true;
  $M.11 := $store.i64($M.11, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 25} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i64($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 19} true;
  assume {:verifier.code 0} true;
  $i31 := $xor.i64($i28, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 33} true;
  assume {:verifier.code 0} true;
  $i32 := $and.i64($i31, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 44} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i64($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9551, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 22);
  goto $bb3;
$bb9:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9555, 38} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9555, 38} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9555, 9} true;
  assume {:verifier.code 0} true;
  call $i36 := ib_check_mr_access($i35);
  // WARNING: %45 = call i32 @ib_check_mr_access(i32 %44), !dbg !5889, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9556, 11} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9556, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9557, 13} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9557, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i38;
  goto $bb3;
$bb12:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9561, 13} true;
  assume {:verifier.code 0} true;
  call $p39 := kmalloc(216, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9562, 10} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9563, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9563, 28} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i64($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9563, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9564, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 12);
  goto $bb3;
$bb15:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9568, 31} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9568, 31} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9568, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p40, 0, $p44, mr_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9569, 22} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p40, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9569, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9570, 30} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9570, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9570, 47} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9570, 47} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9570, 8} true;
  assume {:verifier.code 0} true;
  call $p50 := idr_read_pd($i47, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9571, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9571, 26} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i64($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9571, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9573, 5} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32(0, 22);
  goto $bb19;
$bb18:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9647, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9648, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $sext.i32.i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9648, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i140;
  goto $bb3;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9577, 12} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p4, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9577, 12} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9577, 25} true;
  assume {:verifier.code 0} true;
  $i56 := $and.i32($i55, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9577, 32} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9577, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9578, 31} true;
  assume {:verifier.code 0} true;
  $p58 := $p50;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9578, 31} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9578, 11} true;
  assume {:verifier.code 0} true;
  call $i60 := ib_query_device($p59, $p7);
  // WARNING: %78 = call i32 @ib_query_device(%struct.ib_device* %77, %struct.ib_device_attr* %8), !dbg !5932, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 13} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb23, $bb25;
$bb22:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 18} true;
  assume {:verifier.code 0} true;
  assume ($i61 == 1);
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9580, 18} true;
  assume {:verifier.code 0} true;
  $p65 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9580, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p65, .str.15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9581, 18} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9581, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p66, .str.16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9582, 18} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9582, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p67, .str.17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9583, 18} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9583, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p68, .str.18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9584, 18} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9584, 18} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9584, 25} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i24($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9584, 25} true;
  assume {:verifier.code 0} true;
  $i72 := $and.i24($i71, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9584, 25} true;
  assume {:verifier.code 0} true;
  $i73 := $or.i24($i72, 984);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9584, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p70, $i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9585, 18} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p8, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9585, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p74, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9586, 55} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p8, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9586, 55} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i8($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9586, 37} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i8.i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9586, 61} true;
  assume {:verifier.code 0} true;
  $i78 := $and.i64($i77, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9586, 17} true;
  assume {:verifier.code 0} true;
  call $i79 := ldv__builtin_expect($i78, 0);
  // WARNING: %99 = call i64 @ldv__builtin_expect(i64 %98, i64 0), !dbg !5956, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9587, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i64($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9587, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb28, $bb29;
$bb25:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p7, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 26} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 43} true;
  assume {:verifier.code 0} true;
  $i64 := $sge.i32($i63, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb26, $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9579, 9} true;
  assume {:verifier.code 0} true;
  assume ($i64 == 1);
  goto $bb24;
$bb27:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb28:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9588, 9} true;
  assume {:verifier.code 0} true;
  call __dynamic_pr_debug.ref.ref($p8, .str.18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9589, 7} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9593, 7} true;
  assume {:verifier.code 0} true;
  $i81 := $sub.i32(0, 22);
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9645, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9645, 3} true;
  assume {:verifier.code 0} true;
  $i53 := $i81;
  goto $bb19;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9597, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 16} true;
  assume {:verifier.code 0} true;
  $p82 := $p50;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 16} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 25} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 720);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 25} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 47} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 47} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i64($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 58} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 58} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i64($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 70} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 70} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i64($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 88} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p4, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9600, 88} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.0, $p92);
  call $p94 := devirtbounce.8($p85, $p50, $i87, $i89, $i91, $i93, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9602, 20} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9602, 13} true;
  assume {:verifier.code 0} true;
  call $i96 := IS_ERR($p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9602, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i1.i8($i96);
  // WARNING: %123 = zext i1 %122 to i8, !dbg !5977, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i8($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9603, 13} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i8.i1($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9603, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9604, 23} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9604, 15} true;
  assume {:verifier.code 0} true;
  call $i100 := PTR_ERR($p99);
  // WARNING: %127 = call i64 @PTR_ERR(i8* %126), !dbg !5985, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9605, 11} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i64.i32($i100);
  // WARNING: %128 = trunc i64 %127 to i32, !dbg !5988, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9606, 5} true;
  assume {:verifier.code 0} true;
  $i81 := $i101;
  goto $bb31;
$bb35:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9610, 20} true;
  assume {:verifier.code 0} true;
  $p102 := $p50;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9610, 20} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9610, 7} true;
  assume {:verifier.code 0} true;
  $p104 := $p94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9610, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p104, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9611, 7} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p94, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9611, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p105, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9612, 7} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p94, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9612, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p106, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9613, 20} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p50, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9613, 3} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9614, 20} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p94, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9614, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p108, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9615, 18} true;
  assume {:verifier.code 0} true;
  $p109 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9615, 9} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p40, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9615, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p110, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9616, 9} true;
  assume {:verifier.code 0} true;
  call $i111 := idr_add_uobj(ib_uverbs_mr_idr, $p40);
  // WARNING: %140 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_mr_idr, %struct.ib_uobject* %52), !dbg !6004, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9617, 11} true;
  assume {:verifier.code 0} true;
  $i112 := $ne.i32($i111, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9617, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i112 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9618, 5} true;
  assume {:verifier.code 0} true;
  $i113 := $i111;
  goto $bb39;
$bb38:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9643, 3} true;
  assume {:verifier.code 0} true;
  call $i139 := ib_dereg_mr($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9643, 3} true;
  assume {:verifier.code 0} true;
  $i81 := $i113;
  goto $bb31;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9622, 3} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9622, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p114, 0, 12, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9623, 19} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p94, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9623, 19} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9623, 8} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9623, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p117, $i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9624, 19} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p94, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9624, 19} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9624, 8} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9624, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p120, $i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9625, 34} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p40, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9625, 34} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i32($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9625, 8} true;
  assume {:verifier.code 0} true;
  $p123 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9625, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p123, $i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9626, 38} true;
  assume {:verifier.code 0} true;
  $p124 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9626, 38} true;
  assume {:verifier.code 0} true;
  $i125 := $load.i64($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9626, 26} true;
  assume {:verifier.code 0} true;
  $p126 := $i2p.i64.ref($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9626, 48} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9626, 13} true;
  assume {:verifier.code 0} true;
  call $i128 := copy_to_user($p126, $p127, 12);
  // WARNING: %159 = call i64 @copy_to_user(i8* %157, i8* %158, i64 12), !dbg !6023, !verifier.code !5806
  call {:cexpr "tmp___4"} boogie_si_record_i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9627, 15} true;
  assume {:verifier.code 0} true;
  $i129 := $ne.i64($i128, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9627, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i129 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9629, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i129 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9641, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_mr_idr, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9641, 3} true;
  assume {:verifier.code 0} true;
  $i113 := $sub.i32(0, 14);
  goto $bb39;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9633, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9634, 29} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9634, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p130, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9635, 25} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p40, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9635, 40} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9635, 40} true;
  assume {:verifier.code 0} true;
  $p133 := $load.ref($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9635, 51} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p133, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9635, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p131, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9636, 24} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9636, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9637, 9} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p40, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9637, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p136, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9638, 20} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p40, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9638, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9639, 11} true;
  assume {:verifier.code 0} true;
  $i138 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9639, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i138;
  goto $bb3;
}
const ib_uverbs_rereg_mr: ref;
axiom (ib_uverbs_rereg_mr == $sub.ref(0, 171039));
procedure  ib_uverbs_rereg_mr($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i64;
  var $i38: i1;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $p42: ref;
  var $i43: i64;
  var $i44: i1;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $i67: i32;
  var $i68: i32;
  var $i69: i1;
  var $p71: ref;
  var $i72: i32;
  var $i73: i32;
  var $i74: i1;
  var $p75: ref;
  var $i76: i32;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i64;
  var $i81: i1;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $p95: ref;
  var $i96: i64;
  var $p97: ref;
  var $i98: i64;
  var $p99: ref;
  var $i100: i64;
  var $p101: ref;
  var $i102: i32;
  var $i103: i32;
  var $i104: i1;
  var $p105: ref;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i32;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $p118: ref;
  var $p119: ref;
  var $i120: i64;
  var $p121: ref;
  var $p122: ref;
  var $i123: i64;
  var $i124: i1;
  var $i125: i32;
  var $i86: i32;
  var $p126: ref;
  var $i127: i32;
  var $i128: i32;
  var $i129: i1;
  var $i70: i32;
  var $p130: ref;
  var $p131: ref;
  var $i132: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(48, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7960, metadata !5829), !dbg !7961, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !7962, metadata !5829), !dbg !7963, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9668, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i32($i3, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9668, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9669, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9761, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9673, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9673, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p9, $p1, 48);
  // WARNING: %13 = call i64 @copy_from_user(i8* %12, i8* %1, i64 48), !dbg !5845, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9674, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9674, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9675, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9679, 37} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9679, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9679, 15} true;
  assume {:verifier.code 0} true;
  $M.12 := $store.ref($M.12, $p13, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9680, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9680, 47} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9680, 56} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9680, 18} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9680, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9680, 16} true;
  assume {:verifier.code 0} true;
  $M.13 := $store.ref($M.13, $p18, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9681, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9681, 40} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i64($i19, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9681, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9681, 15} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i64($M.14, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9682, 18} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9682, 42} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i64($i22, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9682, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9682, 16} true;
  assume {:verifier.code 0} true;
  $M.15 := $store.i64($M.15, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 12} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 12} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i32($i26, $sub.i32(0, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 33} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb8, $bb10;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 39} true;
  assume {:verifier.code 0} true;
  assume ($i28 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9684, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb10:
  assume !(($i28 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 46} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 46} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 52} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb11, $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9683, 7} true;
  assume {:verifier.code 0} true;
  assume ($i31 == 1);
  goto $bb9;
$bb12:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 23} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i33, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 23} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 37} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 37} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i64($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 43} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i64($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 51} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb17, $bb19;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 27} true;
  assume {:verifier.code 0} true;
  assume !(($i35 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 51} true;
  assume {:verifier.code 0} true;
  assume ($i38 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9689, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb19:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 58} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 58} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i64($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 65} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 74} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb20, $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 74} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb18;
$bb21:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 81} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 81} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i64($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 88} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i64($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 97} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb22, $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 97} true;
  assume {:verifier.code 0} true;
  assume ($i44 == 1);
  goto $bb18;
$bb23:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 106} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 106} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 118} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 118} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i64($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 112} true;
  assume {:verifier.code 0} true;
  $i49 := $xor.i64($i46, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 126} true;
  assume {:verifier.code 0} true;
  $i50 := $and.i64($i49, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 137} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i64($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 7} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb18;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9688, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i51 == 1));
  goto $bb16;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9693, 55} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9693, 55} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9693, 72} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9693, 72} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9693, 10} true;
  assume {:verifier.code 0} true;
  call $p56 := idr_write_uobj(ib_uverbs_mr_idr, $i53, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9694, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9694, 28} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i64($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9694, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9695, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb28:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9699, 30} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p56, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9699, 30} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9699, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9700, 12} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9700, 12} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9700, 18} true;
  assume {:verifier.code 0} true;
  $i64 := $and.i32($i63, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9700, 24} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9700, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9701, 40} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p4, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9701, 40} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9701, 11} true;
  assume {:verifier.code 0} true;
  call $i68 := ib_check_mr_access($i67);
  // WARNING: %89 = call i32 @ib_check_mr_access(i32 %88), !dbg !5927, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9702, 13} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9702, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb32:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9703, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $i68;
  goto $bb34;
$bb33:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9758, 22} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p61, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9758, 22} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9758, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9759, 11} true;
  assume {:verifier.code 0} true;
  $i132 := $sext.i32.i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9759, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i132;
  goto $bb3;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9707, 3} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9710, 12} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9710, 12} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9710, 18} true;
  assume {:verifier.code 0} true;
  $i73 := $and.i32($i72, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9710, 24} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i73, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9710, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9711, 32} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p4, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9711, 32} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9711, 49} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9711, 49} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9711, 10} true;
  assume {:verifier.code 0} true;
  call $p79 := idr_read_pd($i76, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9712, 9} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9712, 28} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i64($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9712, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb39, $bb40;
$bb38:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  $p82 := $0.ref;
  goto $bb42;
$bb39:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9714, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $sub.i32(0, 22);
  goto $bb34;
$bb40:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9718, 3} true;
  assume {:verifier.code 0} true;
  $p82 := $p79;
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9721, 52} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p61, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9721, 13} true;
  assume {:verifier.code 0} true;
  call $i84 := atomic_read($p83);
  // WARNING: %114 = call i32 @atomic_read(%struct.__anonstruct_atomic_t_6* %113), !dbg !5953, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9722, 15} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9722, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9724, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $sub.i32(0, 16);
  goto $bb45;
$bb44:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9752, 12} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9752, 12} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i32($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9752, 18} true;
  assume {:verifier.code 0} true;
  $i128 := $and.i32($i127, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9752, 24} true;
  assume {:verifier.code 0} true;
  $i129 := $ne.i32($i128, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9752, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb56, $bb57;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9728, 16} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p61, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9728, 16} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 17} true;
  assume {:verifier.code 0} true;
  $p89 := $p61;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 17} true;
  assume {:verifier.code 0} true;
  $p90 := $load.ref($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 26} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p90, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 26} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 56} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 56} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 67} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 67} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i64($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 78} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9729, 78} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i64($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9730, 46} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9730, 46} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i64($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9730, 64} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p4, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9730, 64} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  call $i103 := devirtbounce.9($p92, $p61, $i94, $i96, $i98, $i100, $i102, $p82, $p6);
  // WARNING: %135 = call i32 @devirtbounce.9(i32 (%struct.ib_mr*, i32, i64, i64, i64, i32, %struct.ib_pd*, %struct.ib_udata*)* %124, %struct.ib_mr* %81, i32 %126, i64 %128, i64 %130, i64 %132, i32 %134, %struct.ib_pd* %.02, %struct.ib_udata* %7)
  call {:cexpr "ret"} boogie_si_record_i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9731, 11} true;
  assume {:verifier.code 0} true;
  $i104 := $eq.i32($i103, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9731, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i104 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9732, 14} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9732, 14} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9732, 20} true;
  assume {:verifier.code 0} true;
  $i107 := $and.i32($i106, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9732, 26} true;
  assume {:verifier.code 0} true;
  $i108 := $ne.i32($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9732, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb49, $bb50;
$bb48:
  assume !(($i104 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9740, 5} true;
  assume {:verifier.code 0} true;
  $i86 := $i103;
  goto $bb45;
$bb49:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9733, 24} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p82, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9733, 7} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9734, 11} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p61, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9734, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p110, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9735, 28} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p88, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9735, 7} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9736, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9739, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9742, 3} true;
  assume {:verifier.code 0} true;
  $p112 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9742, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p112, 0, 8, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9743, 19} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p61, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9743, 19} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9743, 8} true;
  assume {:verifier.code 0} true;
  $p115 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9743, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p115, $i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9744, 19} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p61, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9744, 19} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9744, 8} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9744, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p118, $i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9745, 38} true;
  assume {:verifier.code 0} true;
  $p119 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9745, 38} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i64($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9745, 26} true;
  assume {:verifier.code 0} true;
  $p121 := $i2p.i64.ref($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9745, 48} true;
  assume {:verifier.code 0} true;
  $p122 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9745, 13} true;
  assume {:verifier.code 0} true;
  call $i123 := copy_to_user($p121, $p122, 8);
  // WARNING: %161 = call i64 @copy_to_user(i8* %159, i8* %160, i64 8), !dbg !6001, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9746, 15} true;
  assume {:verifier.code 0} true;
  $i124 := $ne.i64($i123, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9746, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i124 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9748, 3} true;
  assume {:verifier.code 0} true;
  $i125 := $sub.i32(0, 14);
  goto $bb55;
$bb54:
  assume !(($i124 == 1));
  assume {:verifier.code 0} true;
  $i125 := $i2;
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9746, 18} true;
  assume {:verifier.code 0} true;
  $i86 := $i125;
  goto $bb45;
$bb56:
  assume ($i129 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9753, 5} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9754, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i129 == 1));
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9752, 27} true;
  assume {:verifier.code 0} true;
  $i70 := $i86;
  goto $bb34;
}
const ib_uverbs_dereg_mr: ref;
axiom (ib_uverbs_dereg_mr == $sub.ref(0, 172071));
procedure  ib_uverbs_dereg_mr($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8179, metadata !5829), !dbg !8180, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8181, metadata !5829), !dbg !8182, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.__anonstruct_atomic_t_6* %5, metadata !8185, metadata !5829), !dbg !8189, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9773, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9773, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 4);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 4), !dbg !5825, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9774, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9774, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9775, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9805, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9779, 55} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9779, 55} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9779, 72} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9779, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9779, 10} true;
  assume {:verifier.code 0} true;
  call $p13 := idr_write_uobj(ib_uverbs_mr_idr, $i10, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9780, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9780, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9780, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9781, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9785, 30} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9785, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9785, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9786, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := ib_dereg_mr($p18);
  // WARNING: %25 = call i32 @ib_dereg_mr(%struct.ib_mr* %24), !dbg !5848, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9787, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9787, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9788, 11} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p13, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9788, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9789, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9792, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9793, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9793, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9794, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9794, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i23;
  goto $bb3;
$bb12:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9798, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_mr_idr, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9799, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9799, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9800, 20} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p13, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9800, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9801, 24} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9801, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9802, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9803, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9803, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i27;
  goto $bb3;
}
const ib_uverbs_alloc_mw: ref;
axiom (ib_uverbs_alloc_mw == $sub.ref(0, 173103));
procedure  ib_uverbs_alloc_mw($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i1;
  var $i36: i8;
  var $i37: i1;
  var $p38: ref;
  var $i39: i64;
  var $i40: i32;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i1;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $i65: i1;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i64;
  var $i52: i32;
  var $i75: i32;
  var $i41: i32;
  var $i25: i32;
  var $i76: i64;
  var $i7: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8246, metadata !5829), !dbg !8247, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8248, metadata !5829), !dbg !8249, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9822, 30} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i32($i3, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9822, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9823, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9896, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9827, 24} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9827, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := copy_from_user($p8, $p1, 16);
  // WARNING: %12 = call i64 @copy_from_user(i8* %11, i8* %1, i64 16), !dbg !5838, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9828, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9828, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9829, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9833, 13} true;
  assume {:verifier.code 0} true;
  call $p11 := kmalloc(216, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9834, 10} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9835, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9835, 28} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9835, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9836, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 12);
  goto $bb3;
$bb9:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9840, 31} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9840, 31} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9840, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p12, 0, $p16, mw_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9841, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p12, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9841, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9842, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9842, 30} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9842, 47} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9842, 47} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9842, 8} true;
  assume {:verifier.code 0} true;
  call $p22 := idr_read_pd($i19, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9843, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9843, 26} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9843, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9845, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb13;
$bb12:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9893, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9894, 11} true;
  assume {:verifier.code 0} true;
  $i76 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9894, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i76;
  goto $bb3;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9849, 16} true;
  assume {:verifier.code 0} true;
  $p26 := $p22;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9849, 16} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9849, 25} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 800);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9849, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9849, 62} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9849, 62} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9849, 40} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  call $p33 := devirtbounce.10($p29, $p22, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9850, 20} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9850, 13} true;
  assume {:verifier.code 0} true;
  call $i35 := IS_ERR($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9850, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i1.i8($i35);
  // WARNING: %47 = zext i1 %46 to i8, !dbg !5883, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9851, 13} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i8.i1($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9851, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9852, 23} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9852, 15} true;
  assume {:verifier.code 0} true;
  call $i39 := PTR_ERR($p38);
  // WARNING: %51 = call i64 @PTR_ERR(i8* %50), !dbg !5891, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9853, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i64.i32($i39);
  // WARNING: %52 = trunc i64 %51 to i32, !dbg !5894, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9854, 5} true;
  assume {:verifier.code 0} true;
  $i41 := $i40;
  goto $bb17;
$bb16:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9891, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9891, 3} true;
  assume {:verifier.code 0} true;
  $i25 := $i41;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9858, 20} true;
  assume {:verifier.code 0} true;
  $p42 := $p22;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9858, 20} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9858, 7} true;
  assume {:verifier.code 0} true;
  $p44 := $p33;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9858, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9859, 7} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p33, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9859, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9860, 7} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p33, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9860, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9861, 20} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p22, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9861, 3} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9862, 18} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9862, 9} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p12, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9862, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p49, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9863, 9} true;
  assume {:verifier.code 0} true;
  call $i50 := idr_add_uobj(ib_uverbs_mw_idr, $p12);
  // WARNING: %63 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_mw_idr, %struct.ib_uobject* %18), !dbg !5908, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9864, 11} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i32($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9864, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9865, 5} true;
  assume {:verifier.code 0} true;
  $i52 := $i50;
  goto $bb21;
$bb20:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9889, 3} true;
  assume {:verifier.code 0} true;
  call $i75 := ib_dealloc_mw($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9889, 3} true;
  assume {:verifier.code 0} true;
  $i41 := $i52;
  goto $bb17;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9869, 3} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9869, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p53, 0, 8, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9870, 19} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p33, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9870, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9870, 8} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9870, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p56, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9871, 34} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p12, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9871, 34} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9871, 8} true;
  assume {:verifier.code 0} true;
  $p59 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9871, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9872, 38} true;
  assume {:verifier.code 0} true;
  $p60 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9872, 38} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i64($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9872, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $i2p.i64.ref($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9872, 48} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9872, 13} true;
  assume {:verifier.code 0} true;
  call $i64 := copy_to_user($p62, $p63, 8);
  // WARNING: %79 = call i64 @copy_to_user(i8* %77, i8* %78, i64 8), !dbg !5924, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9873, 15} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i64($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9873, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9875, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9887, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_mw_idr, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9887, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32(0, 14);
  goto $bb21;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9879, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9880, 29} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9880, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9881, 25} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p12, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9881, 40} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9881, 40} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9881, 51} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p69, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9881, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p67, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9882, 24} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9882, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9883, 9} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p12, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9883, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9884, 20} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p12, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9884, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9885, 11} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9885, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i74;
  goto $bb3;
}
const ib_uverbs_dealloc_mw: ref;
axiom (ib_uverbs_dealloc_mw == $sub.ref(0, 174135));
procedure  ib_uverbs_dealloc_mw($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8393, metadata !5829), !dbg !8394, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8395, metadata !5829), !dbg !8396, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.__anonstruct_atomic_t_6* %5, metadata !8399, metadata !5829), !dbg !8403, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9908, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9908, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 4);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 4), !dbg !5825, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9909, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9909, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9910, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9940, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9914, 55} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9914, 55} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9914, 72} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9914, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9914, 10} true;
  assume {:verifier.code 0} true;
  call $p13 := idr_write_uobj(ib_uverbs_mw_idr, $i10, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9915, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9915, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9915, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9916, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9920, 30} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9920, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9920, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9921, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := ib_dealloc_mw($p18);
  // WARNING: %25 = call i32 @ib_dealloc_mw(%struct.ib_mw* %24), !dbg !5848, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9922, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9922, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9923, 11} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p13, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9923, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9924, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9927, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9928, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9928, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9929, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9929, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i23;
  goto $bb3;
$bb12:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9933, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_mw_idr, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9934, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9934, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9935, 20} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p13, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9935, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9936, 24} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9936, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9937, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9938, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9938, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i27;
  goto $bb3;
}
const ib_uverbs_create_comp_channel: ref;
axiom (ib_uverbs_create_comp_channel == $sub.ref(0, 175167));
procedure  ib_uverbs_create_comp_channel($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i1;
  var $i18: i8;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i1;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $i33: i32;
  var $i34: i64;
  var $i7: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8460, metadata !5829), !dbg !8461, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8462, metadata !5829), !dbg !8463, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9954, 30} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i32($i3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9954, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9955, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9992, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9959, 24} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9959, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := copy_from_user($p8, $p1, 8);
  // WARNING: %12 = call i64 @copy_from_user(i8* %11, i8* %1, i64 8), !dbg !5833, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9960, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9960, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9961, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9965, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := get_unused_fd_flags(524288);
  // WARNING: %17 = call i32 @get_unused_fd_flags(i32 524288), !dbg !5841, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9966, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9966, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9967, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9967, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i13;
  goto $bb3;
$bb9:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9971, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9971, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9972, 10} true;
  assume {:verifier.code 0} true;
  call $p15 := ib_uverbs_alloc_event_file($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9973, 20} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9973, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := IS_ERR($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9973, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i1.i8($i17);
  // WARNING: %27 = zext i1 %26 to i8, !dbg !5857, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9974, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i8.i1($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9974, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9975, 24} true;
  assume {:verifier.code 0} true;
  $p20 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9975, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9975, 5} true;
  assume {:verifier.code 0} true;
  call put_unused_fd($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9976, 23} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9976, 15} true;
  assume {:verifier.code 0} true;
  call $i23 := PTR_ERR($p22);
  // WARNING: %33 = call i64 @PTR_ERR(i8* %32), !dbg !5867, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9977, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i23;
  goto $bb3;
$bb12:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9981, 38} true;
  assume {:verifier.code 0} true;
  $p24 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9981, 38} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i64($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9981, 26} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9981, 48} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9981, 13} true;
  assume {:verifier.code 0} true;
  call $i28 := copy_to_user($p26, $p27, 4);
  // WARNING: %40 = call i64 @copy_to_user(i8* %38, i8* %39, i64 4), !dbg !5874, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9982, 15} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i64($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9982, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9983, 24} true;
  assume {:verifier.code 0} true;
  $p30 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9983, 24} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9983, 5} true;
  assume {:verifier.code 0} true;
  call put_unused_fd($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9984, 5} true;
  assume {:verifier.code 0} true;
  call fput($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9985, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 14);
  goto $bb3;
$bb15:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9989, 19} true;
  assume {:verifier.code 0} true;
  $p32 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9989, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9989, 3} true;
  assume {:verifier.code 0} true;
  call fd_install($i33, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9990, 11} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9990, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i34;
  goto $bb3;
}
const ib_uverbs_create_cq: ref;
axiom (ib_uverbs_create_cq == $sub.ref(0, 176199));
procedure  ib_uverbs_create_cq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i1;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i1;
  var $i49: i8;
  var $i50: i1;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $i9: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8543, metadata !5829), !dbg !8544, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8545, metadata !5829), !dbg !8546, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10142, 30} true;
  assume {:verifier.code 0} true;
  $i8 := $ule.i32($i3, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10142, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10143, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10177, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10147, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10147, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := copy_from_user($p10, $p1, 32);
  // WARNING: %14 = call i64 @copy_from_user(i8* %13, i8* %1, i64 32), !dbg !5849, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10148, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10149, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10153, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10153, 15} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.ref($M.16, $p13, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10154, 30} true;
  assume {:verifier.code 0} true;
  $p14 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10154, 30} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10154, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10154, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10154, 16} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p17, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10155, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10155, 15} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.i64($M.18, $p18, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10156, 9} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10156, 16} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.i64($M.19, $p19, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10157, 35} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10157, 7} true;
  assume {:verifier.code 0} true;
  $p21 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10157, 13} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p21, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10158, 45} true;
  assume {:verifier.code 0} true;
  $p22 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10158, 45} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10158, 54} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10158, 16} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10158, 7} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10158, 14} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.ref($M.21, $p26, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10159, 15} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10159, 38} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i64($i27, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10159, 7} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10159, 13} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i64($M.22, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10160, 16} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10160, 40} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i64($i30, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10160, 7} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p7, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10160, 14} true;
  assume {:verifier.code 0} true;
  $M.23 := $store.i64($M.23, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10161, 3} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10161, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p33, 0, 32, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10162, 28} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10162, 28} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10162, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10162, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10163, 20} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10163, 20} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10163, 10} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10163, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10164, 28} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10164, 28} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10164, 10} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p5, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10164, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10165, 29} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10165, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10165, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10165, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p45, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10166, 9} true;
  assume {:verifier.code 0} true;
  call $p46 := create_cq($p0, $p6, $p7, $p5, 20, ib_uverbs_create_cq_cb, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10168, 20} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10168, 13} true;
  assume {:verifier.code 0} true;
  call $i48 := IS_ERR($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10168, 11} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i1.i8($i48);
  // WARNING: %55 = zext i1 %54 to i8, !dbg !5901, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i8($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10169, 13} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i8.i1($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10169, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10170, 23} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10170, 15} true;
  assume {:verifier.code 0} true;
  call $i52 := PTR_ERR($p51);
  // WARNING: %59 = call i64 @PTR_ERR(i8* %58), !dbg !5909, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10171, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i52;
  goto $bb3;
$bb9:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10175, 11} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10175, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i53;
  goto $bb3;
}
const ib_uverbs_resize_cq: ref;
axiom (ib_uverbs_resize_cq == $sub.ref(0, 177231));
procedure  ib_uverbs_resize_cq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $p40: ref;
  var $i41: i32;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i1;
  var $i49: i32;
  var $i39: i32;
  var $i50: i1;
  var $i51: i32;
  var $i52: i64;
  var $i10: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8652, metadata !5829), !dbg !8653, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8654, metadata !5829), !dbg !8655, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.ib_udata* %7, metadata !8673, metadata !5829), !dbg !8674, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10259, 24} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10259, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := copy_from_user($p7, $p1, 16);
  // WARNING: %9 = call i64 @copy_from_user(i8* %8, i8* %1, i64 16), !dbg !5837, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10260, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10260, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10261, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10292, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10265, 37} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10265, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10265, 15} true;
  assume {:verifier.code 0} true;
  $M.24 := $store.ref($M.24, $p12, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10266, 47} true;
  assume {:verifier.code 0} true;
  $p13 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10266, 47} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10266, 56} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10266, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10266, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10266, 16} true;
  assume {:verifier.code 0} true;
  $M.25 := $store.ref($M.25, $p17, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10267, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10267, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i64($i18, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10267, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10267, 15} true;
  assume {:verifier.code 0} true;
  $M.26 := $store.i64($M.26, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10268, 18} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10268, 42} true;
  assume {:verifier.code 0} true;
  $i22 := $sub.i64($i21, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10268, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10268, 16} true;
  assume {:verifier.code 0} true;
  $M.27 := $store.i64($M.27, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10269, 30} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10269, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10269, 47} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10269, 47} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10269, 8} true;
  assume {:verifier.code 0} true;
  call $p28 := idr_read_cq($i25, $p27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10270, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10270, 26} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10270, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10271, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10275, 17} true;
  assume {:verifier.code 0} true;
  $p31 := $p28;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10275, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10275, 26} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10275, 26} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10275, 52} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10275, 52} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  call $i37 := devirtbounce.11($p34, $p28, $i36, $p6);
  // WARNING: %43 = call i32 @devirtbounce.11(i32 (%struct.ib_cq*, i32, %struct.ib_udata*)* %40, %struct.ib_cq* %31, i32 %42, %struct.ib_udata* %7)
  call {:cexpr "ret"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10276, 11} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10276, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10277, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $i37;
  goto $bb10;
$bb9:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10289, 3} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10290, 26} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10290, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb15, $bb16;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10281, 26} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p28, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10281, 26} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10281, 8} true;
  assume {:verifier.code 0} true;
  $p42 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10281, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10282, 38} true;
  assume {:verifier.code 0} true;
  $p43 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10282, 38} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10282, 26} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10282, 48} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10282, 13} true;
  assume {:verifier.code 0} true;
  call $i47 := copy_to_user($p45, $p46, 4);
  // WARNING: %55 = call i64 @copy_to_user(i8* %53, i8* %54, i64 4), !dbg !5886, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10283, 15} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i64($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10283, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10285, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $sub.i32(0, 14);
  goto $bb14;
$bb13:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  $i49 := $i37;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10283, 18} true;
  assume {:verifier.code 0} true;
  $i39 := $i49;
  goto $bb10;
$bb15:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10290, 22} true;
  assume {:verifier.code 0} true;
  $i51 := $i39;
  goto $bb17;
$bb16:
  assume !(($i50 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10290, 22} true;
  assume {:verifier.code 0} true;
  $i51 := $i2;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10290, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10290, 11} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10290, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i52;
  goto $bb3;
}
const ib_uverbs_destroy_cq: ref;
axiom (ib_uverbs_destroy_cq == $sub.ref(0, 178263));
procedure  ib_uverbs_destroy_cq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i1;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i1;
  var $i47: i64;
  var $i9: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8753, metadata !5829), !dbg !8754, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8755, metadata !5829), !dbg !8756, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.__anonstruct____missing_field_name_9* %6, metadata !8766, metadata !5829), !dbg !8771, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10434, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10434, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := copy_from_user($p6, $p1, 16);
  // WARNING: %8 = call i64 @copy_from_user(i8* %7, i8* %1, i64 16), !dbg !5833, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10435, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10435, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10436, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10479, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10440, 55} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10440, 55} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10440, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10440, 72} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10440, 10} true;
  assume {:verifier.code 0} true;
  call $p14 := idr_write_uobj(ib_uverbs_cq_idr, $i11, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10441, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10441, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10441, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10442, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10446, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p14, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10446, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10446, 8} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10447, 48} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10447, 48} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10447, 13} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10448, 45} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p19, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10448, 45} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10449, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10450, 9} true;
  assume {:verifier.code 0} true;
  call $i26 := ib_destroy_cq($p19);
  // WARNING: %32 = call i32 @ib_destroy_cq(%struct.ib_cq* %25), !dbg !5866, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10451, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10451, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10452, 11} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p14, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10452, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10453, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10456, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10457, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10457, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10458, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10458, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i30;
  goto $bb3;
$bb12:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10462, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_cq_idr, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10463, 29} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10463, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10464, 20} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p14, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10464, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10465, 24} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10465, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10466, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_release_ucq($p0, $p22, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10467, 3} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10467, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p34, 0, 8, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10468, 36} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p25, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10468, 36} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10468, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10468, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10469, 37} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p25, 260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10469, 37} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10469, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10469, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10470, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10471, 38} true;
  assume {:verifier.code 0} true;
  $p41 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10471, 38} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i64($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10471, 26} true;
  assume {:verifier.code 0} true;
  $p43 := $i2p.i64.ref($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10471, 48} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10471, 13} true;
  assume {:verifier.code 0} true;
  call $i45 := copy_to_user($p43, $p44, 8);
  // WARNING: %57 = call i64 @copy_to_user(i8* %55, i8* %56, i64 8), !dbg !5900, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10472, 15} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i64($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10472, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10473, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb15:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10477, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10477, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i47;
  goto $bb3;
}
const ib_uverbs_poll_cq: ref;
axiom (ib_uverbs_poll_cq == $sub.ref(0, 179295));
procedure  ib_uverbs_poll_cq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p18: ref;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i33: i1;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i32;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i1;
  var $p28: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i1;
  var $i32: i32;
  var $i48: i64;
  var $i10: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(64, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8857, metadata !5829), !dbg !8858, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8859, metadata !5829), !dbg !8860, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10337, 24} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10337, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := copy_from_user($p7, $p1, 16);
  // WARNING: %9 = call i64 @copy_from_user(i8* %8, i8* %1, i64 16), !dbg !5856, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10338, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10338, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10339, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10392, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10343, 30} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10343, 30} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10343, 47} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10343, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10343, 8} true;
  assume {:verifier.code 0} true;
  call $p15 := idr_read_cq($i12, $p14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10344, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10344, 26} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10344, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10345, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10349, 26} true;
  assume {:verifier.code 0} true;
  $p18 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10349, 26} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i64($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10349, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10350, 25} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10351, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10351, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p22, 0, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 12} true;
  assume {:verifier.code 0} true;
  $p23 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 12} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 24} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 24} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $ult.i32($i24, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 7} true;
  assume {:verifier.code 0} true;
  $p28 := $p21;
  goto $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i27 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10375, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10354, 9} true;
  assume {:verifier.code 0} true;
  call $i29 := ib_poll_cq($p15, 1, $p6);
  // WARNING: %35 = call i32 @ib_poll_cq(%struct.ib_cq* %18, i32 1, %struct.ib_wc* %7), !dbg !5888, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10355, 11} true;
  assume {:verifier.code 0} true;
  $i30 := $slt.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10355, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $i29;
  assume {:branchcond $i30} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10356, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $i31;
  goto $bb15;
$bb14:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10389, 3} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10390, 11} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10390, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i48;
  goto $bb3;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10360, 11} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10360, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10361, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10380, 46} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10380, 13} true;
  assume {:verifier.code 0} true;
  call $i46 := copy_to_user($p20, $p45, 8);
  // WARNING: %62 = call i64 @copy_to_user(i8* %26, i8* %61, i64 8), !dbg !5917, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10381, 15} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i64($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10381, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb27, $bb28;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10365, 9} true;
  assume {:verifier.code 0} true;
  call $i34 := copy_wc_to_user($p28, $p6);
  // WARNING: %44 = call i32 @copy_wc_to_user(i8* %.026, %struct.ib_wc* %7), !dbg !5901, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10366, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10366, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $i34;
  assume {:branchcond $i35} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i35 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10367, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $i36;
  goto $bb15;
$bb22:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10371, 23} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p28, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10372, 21} true;
  assume {:verifier.code 0} true;
  $p38 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10372, 21} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10372, 27} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i39, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10372, 8} true;
  assume {:verifier.code 0} true;
  $p41 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10372, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 12} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 24} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 18} true;
  assume {:verifier.code 0} true;
  $i44 := $ult.i32($i42, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 7} true;
  assume {:verifier.code 0} true;
  $p28 := $p37;
  assume {:branchcond $i44} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 7} true;
  assume {:verifier.code 0} true;
  assume ($i44 == 1);
  goto $bb11;
$bb25:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10374, 24} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb27:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10383, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i32(0, 14);
  goto $bb15;
$bb28:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10387, 3} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb15;
}
const ib_uverbs_req_notify_cq: ref;
axiom (ib_uverbs_req_notify_cq == $sub.ref(0, 180327));
procedure  ib_uverbs_req_notify_cq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i32;
  var $i21: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !8980, metadata !5829), !dbg !8981, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8982, metadata !5829), !dbg !8983, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10401, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10401, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 8);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 8), !dbg !5824, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10402, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10403, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10417, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10407, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10407, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10407, 47} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10407, 47} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10407, 8} true;
  assume {:verifier.code 0} true;
  call $p13 := idr_read_cq($i10, $p12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10408, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10408, 26} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10408, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10409, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10413, 28} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10413, 28} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10413, 43} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10413, 24} true;
  assume {:verifier.code 0} true;
  havoc $i19;
  assume ((($i18 == 1) ==> ($i19 == 1)) && (($i18 != 1) ==> ($i19 == 2)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10413, 3} true;
  assume {:verifier.code 0} true;
  call $i20 := ib_req_notify_cq($p13, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10414, 3} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10415, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10415, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i21;
  goto $bb3;
}
const ib_uverbs_create_qp: ref;
axiom (ib_uverbs_create_qp == $sub.ref(0, 181359));
procedure  ib_uverbs_create_qp($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i1;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i1;
  var $i19: i1;
  var $i20: i8;
  var $i21: i1;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i8;
  var $i52: i32;
  var $i53: i1;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i1;
  var $p67: ref;
  var $p68: ref;
  var $p75: ref;
  var $i76: i8;
  var $i77: i32;
  var $i78: i1;
  var $p79: ref;
  var $p80: ref;
  var $i81: i32;
  var $p82: ref;
  var $p85: ref;
  var $i86: i8;
  var $i87: i32;
  var $i88: i1;
  var $p89: ref;
  var $i90: i32;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $i95: i1;
  var $p96: ref;
  var $i97: i32;
  var $i98: i1;
  var $p99: ref;
  var $p100: ref;
  var $i101: i32;
  var $p102: ref;
  var $i103: i32;
  var $i104: i1;
  var $p105: ref;
  var $i106: i32;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i110: i64;
  var $i111: i1;
  var $p112: ref;
  var $p83: ref;
  var $p84: ref;
  var $p113: ref;
  var $i114: i32;
  var $p115: ref;
  var $p116: ref;
  var $i117: i64;
  var $i118: i1;
  var $i119: i32;
  var $p120: ref;
  var $i121: i64;
  var $i122: i1;
  var $i123: i64;
  var $i124: i1;
  var $i125: i32;
  var $i126: i64;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $i130: i32;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i64;
  var $i135: i1;
  var $i136: i64;
  var $i137: i1;
  var $p138: ref;
  var $p139: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $i148: i8;
  var $i149: i32;
  var $i150: i1;
  var $i151: i32;
  var $p152: ref;
  var $p153: ref;
  var $i154: i8;
  var $i155: i32;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $i159: i32;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $i163: i32;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $i167: i32;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $i171: i32;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $i175: i32;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $i184: i8;
  var $i185: i32;
  var $i186: i1;
  var $p187: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p188: ref;
  var $p192: ref;
  var $i193: i1;
  var $i194: i8;
  var $i195: i1;
  var $p196: ref;
  var $i197: i64;
  var $i198: i32;
  var $p199: ref;
  var $i200: i8;
  var $i201: i32;
  var $i202: i1;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $i222: i32;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $i231: i64;
  var $i232: i1;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $i238: i64;
  var $i239: i1;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $i252: i32;
  var $i253: i1;
  var $p255: ref;
  var $p256: ref;
  var $i257: i32;
  var $p258: ref;
  var $p259: ref;
  var $p260: ref;
  var $p261: ref;
  var $i262: i32;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $i266: i32;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $i270: i32;
  var $p271: ref;
  var $p272: ref;
  var $p273: ref;
  var $i274: i32;
  var $p275: ref;
  var $p276: ref;
  var $p277: ref;
  var $i278: i32;
  var $p279: ref;
  var $p280: ref;
  var $p281: ref;
  var $i282: i32;
  var $p283: ref;
  var $p284: ref;
  var $i285: i64;
  var $p286: ref;
  var $p287: ref;
  var $i288: i64;
  var $i289: i1;
  var $i290: i64;
  var $i291: i1;
  var $p292: ref;
  var $p293: ref;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $i299: i64;
  var $i300: i1;
  var $i301: i64;
  var $i302: i1;
  var $i303: i64;
  var $i304: i1;
  var $i305: i64;
  var $i306: i64;
  var $i307: i1;
  var $i308: i64;
  var $i309: i1;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $p315: ref;
  var $p316: ref;
  var $p317: ref;
  var $p318: ref;
  var $p319: ref;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $i324: i64;
  var $p325: ref;
  var $p326: ref;
  var $i254: i32;
  var $i327: i32;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i328: i64;
  var $i329: i1;
  var $p330: ref;
  var $i331: i64;
  var $i332: i1;
  var $i333: i64;
  var $i334: i1;
  var $i335: i64;
  var $i336: i1;
  var $i337: i64;
  var $i338: i64;
  var $i339: i1;
  var $i340: i64;
  var $i341: i1;
  var $p342: ref;
  var $p343: ref;
  var $i344: i64;
  var $i11: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(56, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(88, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !9024, metadata !5829), !dbg !9025, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9026, metadata !5829), !dbg !9027, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10509, 15} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10509, 13} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.ref($M.28, $p7, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10513, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $ule.i32($i3, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10513, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10514, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10746, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10518, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10518, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := copy_from_user($p12, $p1, 56);
  // WARNING: %16 = call i64 @copy_from_user(i8* %15, i8* %1, i64 56), !dbg !5873, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10519, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10519, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10520, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10524, 26} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10524, 26} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10524, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10524, 34} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10524, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10525, 15} true;
  assume {:verifier.code 0} true;
  call $i19 := capable(13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10525, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i8($i19);
  // WARNING: %27 = zext i1 %26 to i8, !dbg !5888, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10526, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i8.i1($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10526, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb10:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10528, 5} true;
  assume {:verifier.code 0} true;
  $i22 := 0;
  goto $bb12;
$bb11:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  $i22 := 1;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10531, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10531, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10532, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 1);
  goto $bb3;
$bb14:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10536, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10539, 37} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10539, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10539, 15} true;
  assume {:verifier.code 0} true;
  $M.29 := $store.ref($M.29, $p25, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10540, 47} true;
  assume {:verifier.code 0} true;
  $p26 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10540, 47} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i64($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10540, 56} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10540, 18} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10540, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10540, 16} true;
  assume {:verifier.code 0} true;
  $M.30 := $store.ref($M.30, $p30, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10541, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10541, 40} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i64($i31, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10541, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10541, 15} true;
  assume {:verifier.code 0} true;
  $M.31 := $store.i64($M.31, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10542, 18} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10542, 42} true;
  assume {:verifier.code 0} true;
  $i35 := $sub.i64($i34, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10542, 9} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10542, 16} true;
  assume {:verifier.code 0} true;
  $M.32 := $store.i64($M.32, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10543, 13} true;
  assume {:verifier.code 0} true;
  call $p37 := kzalloc(264, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10544, 9} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10545, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10545, 27} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10545, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10546, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 12);
  goto $bb3;
$bb18:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10550, 20} true;
  assume {:verifier.code 0} true;
  $p41 := $p38;
  $p42 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10550, 40} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10550, 40} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i64($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10550, 59} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10550, 59} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10550, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p42, $i44, $p46, qp_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10551, 21} true;
  assume {:verifier.code 0} true;
  $p47 := $p38;
  $p48 := $p38;
  $p49 := $add.ref($p38, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10551, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10552, 26} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p4, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10552, 26} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i8($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10552, 7} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10552, 34} true;
  assume {:verifier.code 0} true;
  $i53 := $eq.i32($i52, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10552, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10553, 36} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10553, 36} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10553, 53} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10553, 53} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10553, 12} true;
  assume {:verifier.code 0} true;
  call $p58 := idr_read_xrcd($i55, $p57, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10554, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10554, 30} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i64($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10554, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i53 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10562, 28} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p4, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10562, 28} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i8($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10562, 9} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i8.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10562, 36} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i32($i77, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10562, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb27, $bb28;
$bb22:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10556, 7} true;
  assume {:verifier.code 0} true;
  $p61, $p62, $p63, $p64, $p65, $i66 := $0.ref, $p58, $0.ref, $0.ref, $0.ref, $sub.i32(0, 22);
  goto $bb24;
$bb23:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10718, 7} true;
  assume {:verifier.code 0} true;
  $i328 := $p2i.ref.i64($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10718, 28} true;
  assume {:verifier.code 0} true;
  $i329 := $ne.i64($i328, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10718, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i329} true;
  goto $bb95, $bb96;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10560, 20} true;
  assume {:verifier.code 0} true;
  $p67 := $p58;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10560, 20} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10561, 3} true;
  assume {:verifier.code 0} true;
  $p69, $p70, $p71, $p72, $p73, $p74 := $0.ref, $p58, $0.ref, $p68, $0.ref, $0.ref;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10600, 8} true;
  assume {:verifier.code 0} true;
  $p140 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10600, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p140, ib_uverbs_qp_event_handler);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10601, 21} true;
  assume {:verifier.code 0} true;
  $p141 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10601, 8} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10601, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p142, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10602, 8} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10602, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p143, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10603, 8} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10603, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p144, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10604, 8} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10604, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p145, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10605, 8} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10605, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p146, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10606, 41} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p4, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10606, 41} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i8($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10606, 22} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i8.i32($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10606, 52} true;
  assume {:verifier.code 0} true;
  $i150 := $eq.i32($i149, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10606, 52} true;
  assume {:verifier.code 0} true;
  $i151 := $zext.i1.i32($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10606, 8} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p8, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10606, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p152, $i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10607, 40} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p4, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10607, 40} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i8($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10607, 18} true;
  assume {:verifier.code 0} true;
  $i155 := $zext.i8.i32($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10607, 8} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p8, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10607, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p156, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10608, 8} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p8, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10608, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p157, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10609, 30} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10609, 30} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i32($M.0, $p158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10609, 8} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p8, 48);
  $p161 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10609, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p161, $i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10610, 30} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p4, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10610, 30} true;
  assume {:verifier.code 0} true;
  $i163 := $load.i32($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10610, 8} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p8, 48);
  $p165 := $add.ref($add.ref($p8, 48), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10610, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p165, $i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10611, 31} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p4, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10611, 31} true;
  assume {:verifier.code 0} true;
  $i167 := $load.i32($M.0, $p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10611, 8} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p8, 48);
  $p169 := $add.ref($add.ref($p8, 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10611, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p169, $i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10612, 31} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p4, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10612, 31} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i32($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10612, 8} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p8, 48);
  $p173 := $add.ref($add.ref($p8, 48), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10612, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p173, $i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10613, 34} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10613, 34} true;
  assume {:verifier.code 0} true;
  $i175 := $load.i32($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10613, 8} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p8, 48);
  $p177 := $add.ref($add.ref($p8, 48), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10613, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p177, $i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10614, 8} true;
  assume {:verifier.code 0} true;
  $p178 := $p38;
  $p179 := $add.ref($p38, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10614, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p179, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10615, 25} true;
  assume {:verifier.code 0} true;
  $p180 := $p38;
  $p181 := $add.ref($p38, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10615, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10616, 25} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p38, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10616, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10617, 26} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p4, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10617, 26} true;
  assume {:verifier.code 0} true;
  $i184 := $load.i8($M.0, $p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10617, 7} true;
  assume {:verifier.code 0} true;
  $i185 := $zext.i8.i32($i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10617, 34} true;
  assume {:verifier.code 0} true;
  $i186 := $eq.i32($i185, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10617, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i186} true;
  goto $bb54, $bb55;
$bb27:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10563, 11} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p4, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10563, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10564, 29} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p4, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10564, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10564, 11} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p4, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10564, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10565, 5} true;
  assume {:verifier.code 0} true;
  $p83, $p84 := $0.ref, $0.ref;
  goto $bb29;
$bb28:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10566, 30} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p4, 54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10566, 30} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i8($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10566, 11} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i8.i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10566, 37} true;
  assume {:verifier.code 0} true;
  $i88 := $ne.i32($i87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10566, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb30, $bb31;
$bb29:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 33} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 33} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 55} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 55} true;
  assume {:verifier.code 0} true;
  $p116 := $load.ref($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 65} true;
  assume {:verifier.code 0} true;
  $i117 := $p2i.ref.i64($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 85} true;
  assume {:verifier.code 0} true;
  $i118 := $ne.i64($i117, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 85} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i1.i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10589, 11} true;
  assume {:verifier.code 0} true;
  call $p120 := idr_read_cq($i114, $p116, $i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 11} true;
  assume {:verifier.code 0} true;
  $i121 := $p2i.ref.i64($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 31} true;
  assume {:verifier.code 0} true;
  $i122 := $ne.i64($i121, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb45, $bb46;
$bb30:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10567, 38} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10567, 38} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10567, 56} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10567, 56} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10567, 15} true;
  assume {:verifier.code 0} true;
  call $p93 := idr_read_srq($i90, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 13} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 33} true;
  assume {:verifier.code 0} true;
  $i95 := $eq.i64($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 73} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb32, $bb34;
$bb31:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  $p99 := $0.ref;
  goto $bb38;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 73} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10570, 11} true;
  assume {:verifier.code 0} true;
  $p61, $p62, $p63, $p64, $p65, $i66 := $0.ref, $0.ref, $0.ref, $0.ref, $p93, $sub.i32(0, 22);
  goto $bb24;
$bb34:
  assume !(($i95 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 96} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p93, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 96} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i32($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 105} true;
  assume {:verifier.code 0} true;
  $i98 := $ne.i32($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb35, $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10568, 13} true;
  assume {:verifier.code 0} true;
  assume ($i98 == 1);
  goto $bb33;
$bb36:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10574, 7} true;
  assume {:verifier.code 0} true;
  $p99 := $p93;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10577, 15} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10577, 15} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10577, 37} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10577, 37} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10577, 30} true;
  assume {:verifier.code 0} true;
  $i104 := $ne.i32($i101, $i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10577, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i104 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10578, 37} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10578, 37} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10578, 59} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10578, 59} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10578, 15} true;
  assume {:verifier.code 0} true;
  call $p109 := idr_read_cq($i106, $p108, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10579, 13} true;
  assume {:verifier.code 0} true;
  $i110 := $p2i.ref.i64($p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10579, 33} true;
  assume {:verifier.code 0} true;
  $i111 := $eq.i64($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10579, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i104 == 1));
  assume {:verifier.code 0} true;
  $p112 := $0.ref;
  goto $bb44;
$bb41:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10581, 11} true;
  assume {:verifier.code 0} true;
  $p61, $p62, $p63, $p64, $p65, $i66 := $0.ref, $0.ref, $0.ref, $p109, $p99, $sub.i32(0, 22);
  goto $bb24;
$bb42:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10585, 7} true;
  assume {:verifier.code 0} true;
  $p112 := $p109;
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $p83, $p84 := $p112, $p99;
  goto $bb29;
$bb45:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 72} true;
  assume {:verifier.code 0} true;
  $i123 := $p2i.ref.i64($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 92} true;
  assume {:verifier.code 0} true;
  $i124 := $ne.i64($i123, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 92} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.i1.i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 72} true;
  assume {:verifier.code 0} true;
  $i126 := $sext.i32.i64($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 72} true;
  assume {:verifier.code 0} true;
  $p127 := $i2p.i64.ref($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 11} true;
  assume {:verifier.code 0} true;
  $p128 := $p127;
  goto $bb47;
$bb46:
  assume !(($i122 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 11} true;
  assume {:verifier.code 0} true;
  $p128 := $p120;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10590, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10591, 32} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10591, 32} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i32($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10591, 49} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10591, 49} true;
  assume {:verifier.code 0} true;
  $p132 := $load.ref($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10591, 10} true;
  assume {:verifier.code 0} true;
  call $p133 := idr_read_pd($i130, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $p2i.ref.i64($p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 28} true;
  assume {:verifier.code 0} true;
  $i135 := $eq.i64($i134, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 67} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb48, $bb50;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 67} true;
  assume {:verifier.code 0} true;
  assume ($i135 == 1);
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10594, 7} true;
  assume {:verifier.code 0} true;
  $p61, $p62, $p63, $p64, $p65, $i66 := $p120, $0.ref, $p133, $p128, $p84, $sub.i32(0, 22);
  goto $bb24;
$bb50:
  assume !(($i135 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 70} true;
  assume {:verifier.code 0} true;
  $i136 := $p2i.ref.i64($p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 90} true;
  assume {:verifier.code 0} true;
  $i137 := $eq.i64($i136, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb51, $bb52;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10592, 9} true;
  assume {:verifier.code 0} true;
  assume ($i137 == 1);
  goto $bb49;
$bb52:
  assume !(($i137 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10598, 18} true;
  assume {:verifier.code 0} true;
  $p138 := $p133;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10598, 18} true;
  assume {:verifier.code 0} true;
  $p139 := $load.ref($M.0, $p138);
  assume {:verifier.code 0} true;
  $p69, $p70, $p71, $p72, $p73, $p74 := $p120, $0.ref, $p133, $p139, $p128, $p84;
  goto $bb26;
$bb54:
  assume ($i186 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10618, 10} true;
  assume {:verifier.code 0} true;
  call $p187 := ib_create_qp($p71, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10619, 3} true;
  assume {:verifier.code 0} true;
  $p188 := $p187;
  goto $bb56;
$bb55:
  assume !(($i186 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10620, 21} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p72, 592);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10620, 21} true;
  assume {:verifier.code 0} true;
  $p190 := $load.ref($M.0, $p189);
  call $p191 := devirtbounce.12($p190, $p71, $p8, $p6);
  assume {:verifier.code 0} true;
  $p188 := $p191;
  goto $bb56;
$bb56:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10622, 20} true;
  assume {:verifier.code 0} true;
  $p192 := $bitcast.ref.ref($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10622, 13} true;
  assume {:verifier.code 0} true;
  call $i193 := IS_ERR($p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10622, 11} true;
  assume {:verifier.code 0} true;
  $i194 := $zext.i1.i8($i193);
  // WARNING: %226 = zext i1 %225 to i8, !dbg !6097, !verifier.code !5806
  call {:cexpr "tmp___4"} boogie_si_record_i8($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10623, 13} true;
  assume {:verifier.code 0} true;
  $i195 := $trunc.i8.i1($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10623, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10624, 23} true;
  assume {:verifier.code 0} true;
  $p196 := $bitcast.ref.ref($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10624, 15} true;
  assume {:verifier.code 0} true;
  call $i197 := PTR_ERR($p196);
  // WARNING: %230 = call i64 @PTR_ERR(i8* %229), !dbg !6105, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10625, 11} true;
  assume {:verifier.code 0} true;
  $i198 := $trunc.i64.i32($i197);
  // WARNING: %231 = trunc i64 %230 to i32, !dbg !6108, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i198);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10626, 5} true;
  assume {:verifier.code 0} true;
  $p61, $p62, $p63, $p64, $p65, $i66 := $p69, $p70, $p71, $p73, $p74, $i198;
  goto $bb24;
$bb58:
  assume !(($i195 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10630, 26} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p4, 53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10630, 26} true;
  assume {:verifier.code 0} true;
  $i200 := $load.i8($M.0, $p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10630, 7} true;
  assume {:verifier.code 0} true;
  $i201 := $zext.i8.i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10630, 34} true;
  assume {:verifier.code 0} true;
  $i202 := $ne.i32($i201, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10630, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i202} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i202 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10631, 9} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p188, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10631, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p203, $p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10632, 9} true;
  assume {:verifier.code 0} true;
  $p204 := $p188;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10632, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p204, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10633, 9} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p188, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10633, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p205, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10634, 24} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10634, 24} true;
  assume {:verifier.code 0} true;
  $p207 := $load.ref($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10634, 9} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p188, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10634, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p208, $p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10635, 24} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10635, 24} true;
  assume {:verifier.code 0} true;
  $p210 := $load.ref($M.0, $p209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10635, 9} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p188, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10635, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p211, $p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10636, 20} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10636, 20} true;
  assume {:verifier.code 0} true;
  $p213 := $load.ref($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10636, 9} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p188, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10636, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p214, $p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10637, 30} true;
  assume {:verifier.code 0} true;
  $p215 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10637, 30} true;
  assume {:verifier.code 0} true;
  $p216 := $load.ref($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10637, 9} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p188, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10637, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p217, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10638, 27} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10638, 27} true;
  assume {:verifier.code 0} true;
  $p219 := $load.ref($M.0, $p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10638, 9} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p188, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10638, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p220, $p219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10639, 24} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p8, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10639, 24} true;
  assume {:verifier.code 0} true;
  $i222 := $load.i32($M.0, $p221);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10639, 9} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p188, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10639, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p223, $i222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10640, 22} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p188, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10640, 5} true;
  assume {:verifier.code 0} true;
  call atomic_set($p224, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10641, 22} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p71, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10641, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10642, 24} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10642, 24} true;
  assume {:verifier.code 0} true;
  $p227 := $load.ref($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10642, 34} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p227, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10642, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10643, 30} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10643, 30} true;
  assume {:verifier.code 0} true;
  $p230 := $load.ref($M.0, $p229);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10643, 9} true;
  assume {:verifier.code 0} true;
  $i231 := $p2i.ref.i64($p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10643, 38} true;
  assume {:verifier.code 0} true;
  $i232 := $ne.i64($i231, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10643, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i232} true;
  goto $bb62, $bb63;
$bb61:
  assume !(($i202 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb62:
  assume ($i232 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10644, 26} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10644, 26} true;
  assume {:verifier.code 0} true;
  $p234 := $load.ref($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10644, 36} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p234, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10644, 7} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10645, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume !(($i232 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10648, 30} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10648, 30} true;
  assume {:verifier.code 0} true;
  $p237 := $load.ref($M.0, $p236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10648, 9} true;
  assume {:verifier.code 0} true;
  $i238 := $p2i.ref.i64($p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10648, 34} true;
  assume {:verifier.code 0} true;
  $i239 := $ne.i64($i238, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10648, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i239} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i239 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10649, 26} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10649, 26} true;
  assume {:verifier.code 0} true;
  $p241 := $load.ref($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10649, 32} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p241, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10649, 7} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10650, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i239 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10653, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10656, 24} true;
  assume {:verifier.code 0} true;
  $p243 := $p38;
  $p244 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10656, 7} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($p188, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10656, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p245, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10657, 32} true;
  assume {:verifier.code 0} true;
  $p246 := $bitcast.ref.ref($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10657, 8} true;
  assume {:verifier.code 0} true;
  $p247 := $p38;
  $p248 := $p38;
  $p249 := $add.ref($p38, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10657, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p249, $p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10658, 49} true;
  assume {:verifier.code 0} true;
  $p250 := $p38;
  $p251 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10658, 9} true;
  assume {:verifier.code 0} true;
  call $i252 := idr_add_uobj(ib_uverbs_qp_idr, $p251);
  // WARNING: %296 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_qp_idr, %struct.ib_uobject* %295), !dbg !6175, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10659, 11} true;
  assume {:verifier.code 0} true;
  $i253 := $ne.i32($i252, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10659, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i253} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i253 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10660, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $i252;
  goto $bb71;
$bb70:
  assume !(($i253 == 1));
  assume {:verifier.code 0} true;
  goto $bb72;
$bb71:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10716, 3} true;
  assume {:verifier.code 0} true;
  call $i327 := ib_destroy_qp($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10716, 3} true;
  assume {:verifier.code 0} true;
  $p61, $p62, $p63, $p64, $p65, $i66 := $p69, $p70, $p71, $p73, $p74, $i254;
  goto $bb24;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10664, 3} true;
  assume {:verifier.code 0} true;
  $p255 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10664, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p255, 0, 32, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10665, 18} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($p188, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10665, 18} true;
  assume {:verifier.code 0} true;
  $i257 := $load.i32($M.0, $p256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10665, 8} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10665, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p258, $i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10666, 33} true;
  assume {:verifier.code 0} true;
  $p259 := $p38;
  $p260 := $p38;
  $p261 := $add.ref($p38, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10666, 48} true;
  assume {:verifier.code 0} true;
  $i262 := $load.i32($M.0, $p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10666, 8} true;
  assume {:verifier.code 0} true;
  $p263 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10666, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p263, $i262);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10667, 28} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p8, 48);
  $p265 := $add.ref($add.ref($p8, 48), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10667, 32} true;
  assume {:verifier.code 0} true;
  $i266 := $load.i32($M.0, $p265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10667, 8} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p5, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10667, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p267, $i266);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10668, 28} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p8, 48);
  $p269 := $add.ref($add.ref($p8, 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10668, 32} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i32($M.0, $p269);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10668, 8} true;
  assume {:verifier.code 0} true;
  $p271 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10668, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p271, $i270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10669, 27} true;
  assume {:verifier.code 0} true;
  $p272 := $add.ref($p8, 48);
  $p273 := $add.ref($add.ref($p8, 48), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10669, 31} true;
  assume {:verifier.code 0} true;
  $i274 := $load.i32($M.0, $p273);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10669, 8} true;
  assume {:verifier.code 0} true;
  $p275 := $add.ref($p5, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10669, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p275, $i274);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10670, 27} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p8, 48);
  $p277 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10670, 31} true;
  assume {:verifier.code 0} true;
  $i278 := $load.i32($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10670, 8} true;
  assume {:verifier.code 0} true;
  $p279 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10670, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p279, $i278);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10671, 31} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($p8, 48);
  $p281 := $add.ref($add.ref($p8, 48), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10671, 35} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i32($M.0, $p281);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10671, 8} true;
  assume {:verifier.code 0} true;
  $p283 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10671, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p283, $i282);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10672, 38} true;
  assume {:verifier.code 0} true;
  $p284 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10672, 38} true;
  assume {:verifier.code 0} true;
  $i285 := $load.i64($M.0, $p284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10672, 26} true;
  assume {:verifier.code 0} true;
  $p286 := $i2p.i64.ref($i285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10672, 48} true;
  assume {:verifier.code 0} true;
  $p287 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10672, 13} true;
  assume {:verifier.code 0} true;
  call $i288 := copy_to_user($p286, $p287, 32);
  // WARNING: %334 = call i64 @copy_to_user(i8* %332, i8* %333, i64 32), !dbg !6212, !verifier.code !5806
  call {:cexpr "tmp___5"} boogie_si_record_i64($i288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10673, 15} true;
  assume {:verifier.code 0} true;
  $i289 := $ne.i64($i288, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10673, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i289} true;
  goto $bb73, $bb74;
$bb73:
  assume ($i289 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10675, 5} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb74:
  assume !(($i289 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10714, 46} true;
  assume {:verifier.code 0} true;
  $p325 := $p38;
  $p326 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10714, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_qp_idr, $p326);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10714, 3} true;
  assume {:verifier.code 0} true;
  $i254 := $sub.i32(0, 14);
  goto $bb71;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10679, 7} true;
  assume {:verifier.code 0} true;
  $i290 := $p2i.ref.i64($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10679, 28} true;
  assume {:verifier.code 0} true;
  $i291 := $ne.i64($i290, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10679, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i291} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i291 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10680, 43} true;
  assume {:verifier.code 0} true;
  $p292 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10681, 18} true;
  assume {:verifier.code 0} true;
  $p293 := $bitcast.ref.ref($p292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10681, 10} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($p38, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10681, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p294, $p292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10682, 24} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p38, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10682, 24} true;
  assume {:verifier.code 0} true;
  $p296 := $load.ref($M.0, $p295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10682, 32} true;
  assume {:verifier.code 0} true;
  $p297 := $add.ref($p296, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10682, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10683, 19} true;
  assume {:verifier.code 0} true;
  $p298 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10683, 5} true;
  assume {:verifier.code 0} true;
  call put_xrcd_read($p298);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10684, 3} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume !(($i291 == 1));
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10687, 7} true;
  assume {:verifier.code 0} true;
  $i299 := $p2i.ref.i64($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10687, 26} true;
  assume {:verifier.code 0} true;
  $i300 := $ne.i64($i299, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10687, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i300 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10688, 5} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10689, 3} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume !(($i300 == 1));
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10692, 7} true;
  assume {:verifier.code 0} true;
  $i301 := $p2i.ref.i64($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10692, 27} true;
  assume {:verifier.code 0} true;
  $i302 := $ne.i64($i301, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10692, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i302} true;
  goto $bb83, $bb84;
$bb83:
  assume ($i302 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10693, 5} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10694, 3} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume !(($i302 == 1));
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 7} true;
  assume {:verifier.code 0} true;
  $i303 := $p2i.ref.i64($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 27} true;
  assume {:verifier.code 0} true;
  $i304 := $ne.i64($i303, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 66} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i304} true;
  goto $bb86, $bb87;
$bb86:
  assume ($i304 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 69} true;
  assume {:verifier.code 0} true;
  $i305 := $p2i.ref.i64($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 92} true;
  assume {:verifier.code 0} true;
  $i306 := $p2i.ref.i64($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 89} true;
  assume {:verifier.code 0} true;
  $i307 := $ne.i64($i305, $i306);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i307} true;
  goto $bb89, $bb90;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 66} true;
  assume {:verifier.code 0} true;
  assume !(($i304 == 1));
  goto $bb88;
$bb88:
  assume {:verifier.code 0} true;
  goto $bb91;
$bb89:
  assume ($i307 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10698, 5} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10699, 3} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10697, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i307 == 1));
  goto $bb88;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10702, 7} true;
  assume {:verifier.code 0} true;
  $i308 := $p2i.ref.i64($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10702, 27} true;
  assume {:verifier.code 0} true;
  $i309 := $ne.i64($i308, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10702, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i309} true;
  goto $bb92, $bb93;
$bb92:
  assume ($i309 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10703, 5} true;
  assume {:verifier.code 0} true;
  call put_srq_read($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10704, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i309 == 1));
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10707, 29} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10707, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p310, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10708, 24} true;
  assume {:verifier.code 0} true;
  $p311 := $p38;
  $p312 := $p38;
  $p313 := $add.ref($p38, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10708, 54} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10708, 54} true;
  assume {:verifier.code 0} true;
  $p315 := $load.ref($M.0, $p314);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10708, 65} true;
  assume {:verifier.code 0} true;
  $p316 := $add.ref($p315, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10708, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p313, $p316);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10709, 24} true;
  assume {:verifier.code 0} true;
  $p317 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10709, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p317);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10710, 8} true;
  assume {:verifier.code 0} true;
  $p318 := $p38;
  $p319 := $p38;
  $p320 := $add.ref($p38, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10710, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p320, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10711, 19} true;
  assume {:verifier.code 0} true;
  $p321 := $p38;
  $p322 := $p38;
  $p323 := $add.ref($p38, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10711, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p323);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10712, 11} true;
  assume {:verifier.code 0} true;
  $i324 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10712, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i324;
  goto $bb3;
$bb95:
  assume ($i329 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10719, 19} true;
  assume {:verifier.code 0} true;
  $p330 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10719, 5} true;
  assume {:verifier.code 0} true;
  call put_xrcd_read($p330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10720, 3} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb96:
  assume !(($i329 == 1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10723, 7} true;
  assume {:verifier.code 0} true;
  $i331 := $p2i.ref.i64($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10723, 26} true;
  assume {:verifier.code 0} true;
  $i332 := $ne.i64($i331, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10723, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i332} true;
  goto $bb98, $bb99;
$bb98:
  assume ($i332 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10724, 5} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10725, 3} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb99:
  assume !(($i332 == 1));
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10728, 7} true;
  assume {:verifier.code 0} true;
  $i333 := $p2i.ref.i64($p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10728, 27} true;
  assume {:verifier.code 0} true;
  $i334 := $ne.i64($i333, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10728, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i334} true;
  goto $bb101, $bb102;
$bb101:
  assume ($i334 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10729, 5} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10730, 3} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume !(($i334 == 1));
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 7} true;
  assume {:verifier.code 0} true;
  $i335 := $p2i.ref.i64($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 27} true;
  assume {:verifier.code 0} true;
  $i336 := $ne.i64($i335, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 66} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i336} true;
  goto $bb104, $bb105;
$bb104:
  assume ($i336 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 69} true;
  assume {:verifier.code 0} true;
  $i337 := $p2i.ref.i64($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 92} true;
  assume {:verifier.code 0} true;
  $i338 := $p2i.ref.i64($p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 89} true;
  assume {:verifier.code 0} true;
  $i339 := $ne.i64($i337, $i338);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i339} true;
  goto $bb107, $bb108;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 66} true;
  assume {:verifier.code 0} true;
  assume !(($i336 == 1));
  goto $bb106;
$bb106:
  assume {:verifier.code 0} true;
  goto $bb109;
$bb107:
  assume ($i339 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10734, 5} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10735, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10733, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i339 == 1));
  goto $bb106;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10738, 7} true;
  assume {:verifier.code 0} true;
  $i340 := $p2i.ref.i64($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10738, 27} true;
  assume {:verifier.code 0} true;
  $i341 := $ne.i64($i340, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10738, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i341} true;
  goto $bb110, $bb111;
$bb110:
  assume ($i341 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10739, 5} true;
  assume {:verifier.code 0} true;
  call put_srq_read($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10740, 3} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb111:
  assume !(($i341 == 1));
  assume {:verifier.code 0} true;
  goto $bb112;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10743, 25} true;
  assume {:verifier.code 0} true;
  $p342 := $p38;
  $p343 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10743, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p343);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10744, 11} true;
  assume {:verifier.code 0} true;
  $i344 := $sext.i32.i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10744, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i344;
  goto $bb3;
}
const ib_uverbs_query_qp: ref;
axiom (ib_uverbs_query_qp == $sub.ref(0, 182391));
procedure  ib_uverbs_query_qp($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $i16: i64;
  var $i17: i1;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i8;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i8;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i8;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i8;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $i63: i16;
  var $p64: ref;
  var $p65: ref;
  var $i66: i16;
  var $p67: ref;
  var $p68: ref;
  var $i69: i8;
  var $p70: ref;
  var $p71: ref;
  var $i72: i8;
  var $p73: ref;
  var $p74: ref;
  var $i75: i8;
  var $p76: ref;
  var $p77: ref;
  var $i78: i8;
  var $p79: ref;
  var $p80: ref;
  var $i81: i8;
  var $p82: ref;
  var $p83: ref;
  var $i84: i8;
  var $p85: ref;
  var $p86: ref;
  var $i87: i8;
  var $p88: ref;
  var $p89: ref;
  var $i90: i8;
  var $p91: ref;
  var $p92: ref;
  var $i93: i8;
  var $p94: ref;
  var $p95: ref;
  var $i96: i8;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i8;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $i121: i8;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i8;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $i132: i16;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $i137: i8;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i8;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $i147: i8;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $i152: i8;
  var $i153: i32;
  var $i154: i32;
  var $i155: i8;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $i160: i8;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $i174: i32;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $i180: i8;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $i186: i8;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $i192: i8;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $i197: i16;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $i202: i8;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $i207: i8;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $i212: i8;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $i217: i8;
  var $i218: i32;
  var $i219: i32;
  var $i220: i8;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $i225: i8;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $i230: i32;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $i234: i32;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $i238: i32;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $i242: i32;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $i246: i32;
  var $p247: ref;
  var $p248: ref;
  var $i249: i32;
  var $i250: i1;
  var $i251: i32;
  var $i252: i8;
  var $p253: ref;
  var $p254: ref;
  var $i255: i64;
  var $p256: ref;
  var $p257: ref;
  var $i258: i64;
  var $i259: i1;
  var $i260: i32;
  var $i18: i32;
  var $p261: ref;
  var $p262: ref;
  var $i263: i1;
  var $i264: i32;
  var $i265: i64;
  var $i9: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(128, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !9550, metadata !5829), !dbg !9551, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9552, metadata !5829), !dbg !9553, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10868, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10868, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := copy_from_user($p6, $p1, 16);
  // WARNING: %8 = call i64 @copy_from_user(i8* %7, i8* %1, i64 16), !dbg !5879, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10869, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10869, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10870, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10961, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10874, 13} true;
  assume {:verifier.code 0} true;
  call $p10 := kmalloc(168, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10875, 10} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10876, 13} true;
  assume {:verifier.code 0} true;
  call $p12 := kmalloc(88, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10877, 15} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 72} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 72} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10880, 5} true;
  assume {:verifier.code 0} true;
  $i18 := $sub.i32(0, 12);
  goto $bb10;
$bb7:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 75} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 101} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10878, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10957, 9} true;
  assume {:verifier.code 0} true;
  $p261 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10957, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10958, 9} true;
  assume {:verifier.code 0} true;
  $p262 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10958, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p262);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10959, 26} true;
  assume {:verifier.code 0} true;
  $i263 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10959, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i263} true;
  goto $bb21, $bb22;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10884, 30} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10884, 30} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10884, 47} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10884, 47} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10884, 8} true;
  assume {:verifier.code 0} true;
  call $p23 := idr_read_qp($i20, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10885, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10885, 26} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10885, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10887, 5} true;
  assume {:verifier.code 0} true;
  $i18 := $sub.i32(0, 22);
  goto $bb10;
$bb13:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10891, 41} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10891, 41} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10891, 9} true;
  assume {:verifier.code 0} true;
  call $i28 := ib_query_qp($p23, $p11, $i27, $p13);
  // WARNING: %37 = call i32 @ib_query_qp(%struct.ib_qp* %29, %struct.ib_qp_attr* %14, i32 %36, %struct.ib_qp_init_attr* %16), !dbg !5923, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10892, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_read($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10893, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10893, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10894, 5} true;
  assume {:verifier.code 0} true;
  $i18 := $i28;
  goto $bb10;
$bb16:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10898, 3} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10898, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p30, 0, 128, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10899, 32} true;
  assume {:verifier.code 0} true;
  $p31 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10899, 32} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10899, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i32.i8($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10899, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p5, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10899, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p34, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10900, 36} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p11, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10900, 36} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10900, 23} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10900, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p5, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10900, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, $i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10901, 32} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p11, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10901, 32} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10901, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i8($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10901, 8} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p5, 110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10901, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10902, 38} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p11, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10902, 38} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10902, 25} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10902, 8} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p5, 111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10902, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p46, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10903, 21} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p11, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10903, 21} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10903, 8} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p5, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10903, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10904, 23} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p11, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10904, 23} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10904, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p5, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10904, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10905, 23} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p11, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10905, 23} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10905, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p5, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10905, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10906, 28} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p11, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10906, 28} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10906, 8} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p5, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10906, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10907, 40} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p11, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10907, 40} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10907, 8} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p5, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10907, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, $i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10908, 27} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p11, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10908, 27} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i16($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10908, 8} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p5, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10908, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10909, 31} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p11, 138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10909, 31} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i16($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10909, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p5, 106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10909, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p67, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10910, 28} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p11, 141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10910, 28} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10910, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p5, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10910, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10911, 30} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p11, 142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10911, 30} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10911, 8} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p5, 113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10911, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p73, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10912, 35} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p11, 143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10912, 35} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i8($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10912, 8} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p5, 114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10912, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p76, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10913, 30} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p11, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10913, 30} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i8($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10913, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p5, 115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10913, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10914, 25} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p11, 145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10914, 25} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i8($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10914, 8} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p5, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10914, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10915, 24} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p11, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10915, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i8($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10915, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p5, 117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10915, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p85, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10916, 26} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p11, 147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10916, 26} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i8($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10916, 8} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p5, 118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10916, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p88, $i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10917, 26} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p11, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10917, 26} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i8($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10917, 8} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p5, 119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10917, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p91, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10918, 29} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p11, 149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10918, 29} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i8($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10918, 8} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p5, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10918, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10919, 28} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p11, 150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10919, 28} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i8($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10919, 8} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p5, 121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10919, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p97, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10920, 26} true;
  assume {:verifier.code 0} true;
  $p98 := $p5;
  $p99 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10920, 3} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10920, 63} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p11, 56);
  $p102 := $add.ref($p11, 56);
  $p103 := $add.ref($p11, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10920, 80} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10920, 3} true;
  assume {:verifier.code 0} true;
  $p105 := $bitcast.ref.ref($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10920, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p100, $p105, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10922, 32} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p11, 56);
  $p107 := $add.ref($p11, 56);
  $p108 := $add.ref($add.ref($p11, 56), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10922, 44} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i32($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10922, 8} true;
  assume {:verifier.code 0} true;
  $p110 := $p5;
  $p111 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10922, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p111, $i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10923, 32} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p11, 56);
  $p113 := $add.ref($p11, 56);
  $p114 := $add.ref($add.ref($p11, 56), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10923, 44} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i8($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10923, 8} true;
  assume {:verifier.code 0} true;
  $p116 := $p5;
  $p117 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10923, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p117, $i115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10924, 31} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p11, 56);
  $p119 := $add.ref($p11, 56);
  $p120 := $add.ref($add.ref($p11, 56), 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10924, 43} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i8($M.0, $p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10924, 8} true;
  assume {:verifier.code 0} true;
  $p122 := $p5;
  $p123 := $add.ref($p5, 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10924, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p123, $i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10925, 35} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p11, 56);
  $p125 := $add.ref($p11, 56);
  $p126 := $add.ref($add.ref($p11, 56), 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10925, 47} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i8($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10925, 8} true;
  assume {:verifier.code 0} true;
  $p128 := $p5;
  $p129 := $add.ref($p5, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10925, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p129, $i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10926, 26} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p11, 56);
  $p131 := $add.ref($add.ref($p11, 56), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10926, 34} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i16($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10926, 8} true;
  assume {:verifier.code 0} true;
  $p133 := $p5;
  $p134 := $add.ref($p5, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10926, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p134, $i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10927, 24} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p11, 56);
  $p136 := $add.ref($add.ref($p11, 56), 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10927, 32} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i8($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10927, 8} true;
  assume {:verifier.code 0} true;
  $p138 := $p5;
  $p139 := $add.ref($p5, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10927, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p139, $i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10928, 35} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p11, 56);
  $p141 := $add.ref($add.ref($p11, 56), 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10928, 43} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i8($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10928, 8} true;
  assume {:verifier.code 0} true;
  $p143 := $p5;
  $p144 := $add.ref($p5, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10928, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p144, $i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10929, 33} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p11, 56);
  $p146 := $add.ref($add.ref($p11, 56), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10929, 41} true;
  assume {:verifier.code 0} true;
  $i147 := $load.i8($M.0, $p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10929, 8} true;
  assume {:verifier.code 0} true;
  $p148 := $p5;
  $p149 := $add.ref($p5, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10929, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p149, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10930, 46} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p11, 56);
  $p151 := $add.ref($add.ref($p11, 56), 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10930, 54} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i8($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10930, 25} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i8.i32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10930, 63} true;
  assume {:verifier.code 0} true;
  $i154 := $and.i32($i153, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10930, 25} true;
  assume {:verifier.code 0} true;
  $i155 := $trunc.i32.i8($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10930, 8} true;
  assume {:verifier.code 0} true;
  $p156 := $p5;
  $p157 := $add.ref($p5, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10930, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p157, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10931, 30} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p11, 56);
  $p159 := $add.ref($add.ref($p11, 56), 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10931, 38} true;
  assume {:verifier.code 0} true;
  $i160 := $load.i8($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10931, 8} true;
  assume {:verifier.code 0} true;
  $p161 := $p5;
  $p162 := $add.ref($p5, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10931, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p162, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10932, 26} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p5, 32);
  $p164 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10932, 3} true;
  assume {:verifier.code 0} true;
  $p165 := $bitcast.ref.ref($p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10932, 67} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p11, 96);
  $p167 := $add.ref($p11, 96);
  $p168 := $add.ref($p11, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10932, 88} true;
  assume {:verifier.code 0} true;
  $p169 := $bitcast.ref.ref($p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10932, 3} true;
  assume {:verifier.code 0} true;
  $p170 := $bitcast.ref.ref($p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10932, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p165, $p170, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10934, 36} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p11, 96);
  $p172 := $add.ref($p11, 96);
  $p173 := $add.ref($add.ref($p11, 96), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10934, 52} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i32($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10934, 8} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p5, 32);
  $p176 := $add.ref($add.ref($p5, 32), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10934, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p176, $i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10935, 36} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p11, 96);
  $p178 := $add.ref($p11, 96);
  $p179 := $add.ref($add.ref($p11, 96), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10935, 52} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i8($M.0, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10935, 8} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p5, 32);
  $p182 := $add.ref($add.ref($p5, 32), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10935, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p182, $i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10936, 35} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p11, 96);
  $p184 := $add.ref($p11, 96);
  $p185 := $add.ref($add.ref($p11, 96), 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10936, 51} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i8($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10936, 8} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p5, 32);
  $p188 := $add.ref($add.ref($p5, 32), 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10936, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p188, $i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10937, 39} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p11, 96);
  $p190 := $add.ref($p11, 96);
  $p191 := $add.ref($add.ref($p11, 96), 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10937, 55} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i8($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10937, 8} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p5, 32);
  $p194 := $add.ref($add.ref($p5, 32), 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10937, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p194, $i192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10938, 30} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p11, 96);
  $p196 := $add.ref($add.ref($p11, 96), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10938, 42} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i16($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10938, 8} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p5, 32);
  $p199 := $add.ref($add.ref($p5, 32), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10938, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p199, $i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10939, 28} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p11, 96);
  $p201 := $add.ref($add.ref($p11, 96), 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10939, 40} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i8($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10939, 8} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p5, 32);
  $p204 := $add.ref($add.ref($p5, 32), 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10939, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p204, $i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10940, 39} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p11, 96);
  $p206 := $add.ref($add.ref($p11, 96), 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10940, 51} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i8($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10940, 8} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p5, 32);
  $p209 := $add.ref($add.ref($p5, 32), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10940, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p209, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10941, 37} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p11, 96);
  $p211 := $add.ref($add.ref($p11, 96), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10941, 49} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i8($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10941, 8} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p5, 32);
  $p214 := $add.ref($add.ref($p5, 32), 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10941, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p214, $i212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10942, 50} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p11, 96);
  $p216 := $add.ref($add.ref($p11, 96), 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10942, 62} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i8($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10942, 29} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.i8.i32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10942, 71} true;
  assume {:verifier.code 0} true;
  $i219 := $and.i32($i218, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10942, 29} true;
  assume {:verifier.code 0} true;
  $i220 := $trunc.i32.i8($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10942, 8} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p5, 32);
  $p222 := $add.ref($add.ref($p5, 32), 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10942, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p222, $i220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10943, 34} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p11, 96);
  $p224 := $add.ref($add.ref($p11, 96), 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10943, 46} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i8($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10943, 8} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p5, 32);
  $p227 := $add.ref($add.ref($p5, 32), 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10943, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p227, $i225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10944, 33} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p13, 48);
  $p229 := $add.ref($p13, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10944, 37} true;
  assume {:verifier.code 0} true;
  $i230 := $load.i32($M.0, $p229);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10944, 8} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($p5, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10944, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p231, $i230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10945, 33} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($p13, 48);
  $p233 := $add.ref($add.ref($p13, 48), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10945, 37} true;
  assume {:verifier.code 0} true;
  $i234 := $load.i32($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10945, 8} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p5, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10945, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p235, $i234);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10946, 34} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p13, 48);
  $p237 := $add.ref($add.ref($p13, 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10946, 38} true;
  assume {:verifier.code 0} true;
  $i238 := $load.i32($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10946, 8} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p5, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10946, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p239, $i238);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10947, 34} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p13, 48);
  $p241 := $add.ref($add.ref($p13, 48), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10947, 38} true;
  assume {:verifier.code 0} true;
  $i242 := $load.i32($M.0, $p241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10947, 8} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($p5, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10947, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p243, $i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10948, 37} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p13, 48);
  $p245 := $add.ref($add.ref($p13, 48), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10948, 41} true;
  assume {:verifier.code 0} true;
  $i246 := $load.i32($M.0, $p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10948, 8} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p5, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10948, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p247, $i246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10949, 47} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p13, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10949, 47} true;
  assume {:verifier.code 0} true;
  $i249 := $load.i32($M.0, $p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10949, 59} true;
  assume {:verifier.code 0} true;
  $i250 := $eq.i32($i249, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10949, 59} true;
  assume {:verifier.code 0} true;
  $i251 := $zext.i1.i32($i250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10949, 21} true;
  assume {:verifier.code 0} true;
  $i252 := $trunc.i32.i8($i251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10949, 8} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p5, 122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10949, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p253, $i252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10950, 38} true;
  assume {:verifier.code 0} true;
  $p254 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10950, 38} true;
  assume {:verifier.code 0} true;
  $i255 := $load.i64($M.0, $p254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10950, 26} true;
  assume {:verifier.code 0} true;
  $p256 := $i2p.i64.ref($i255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10950, 48} true;
  assume {:verifier.code 0} true;
  $p257 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10950, 13} true;
  assume {:verifier.code 0} true;
  call $i258 := copy_to_user($p256, $p257, 128);
  // WARNING: %270 = call i64 @copy_to_user(i8* %268, i8* %269, i64 128), !dbg !6118, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i64($i258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10951, 15} true;
  assume {:verifier.code 0} true;
  $i259 := $ne.i64($i258, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10951, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i259} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i259 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10953, 3} true;
  assume {:verifier.code 0} true;
  $i260 := $sub.i32(0, 14);
  goto $bb20;
$bb19:
  assume !(($i259 == 1));
  assume {:verifier.code 0} true;
  $i260 := $i28;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10951, 18} true;
  assume {:verifier.code 0} true;
  $i18 := $i260;
  goto $bb10;
$bb21:
  assume ($i263 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10959, 22} true;
  assume {:verifier.code 0} true;
  $i264 := $i18;
  goto $bb23;
$bb22:
  assume !(($i263 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10959, 22} true;
  assume {:verifier.code 0} true;
  $i264 := $i2;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10959, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10959, 11} true;
  assume {:verifier.code 0} true;
  $i265 := $sext.i32.i64($i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10959, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i265;
  goto $bb3;
}
const ib_uverbs_modify_qp: ref;
axiom (ib_uverbs_modify_qp == $sub.ref(0, 183423));
procedure  ib_uverbs_modify_qp($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i8;
  var $i40: i32;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $i62: i16;
  var $p63: ref;
  var $p64: ref;
  var $i65: i16;
  var $p66: ref;
  var $p67: ref;
  var $i68: i8;
  var $p69: ref;
  var $p70: ref;
  var $i71: i8;
  var $p72: ref;
  var $p73: ref;
  var $i74: i8;
  var $p75: ref;
  var $p76: ref;
  var $i77: i8;
  var $p78: ref;
  var $p79: ref;
  var $i80: i8;
  var $p81: ref;
  var $p82: ref;
  var $i83: i8;
  var $p84: ref;
  var $p85: ref;
  var $i86: i8;
  var $p87: ref;
  var $p88: ref;
  var $i89: i8;
  var $p90: ref;
  var $p91: ref;
  var $i92: i8;
  var $p93: ref;
  var $p94: ref;
  var $i95: i8;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i8;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i8;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $i125: i8;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $i131: i16;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i8;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $i141: i8;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: i8;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $i151: i8;
  var $i152: i32;
  var $i153: i1;
  var $i154: i32;
  var $i155: i8;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $i160: i8;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $p172: ref;
  var $i173: i32;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $i179: i8;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $i185: i8;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $i191: i8;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $i197: i16;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $i202: i8;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $i207: i8;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $i212: i8;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $i217: i8;
  var $i218: i32;
  var $i219: i1;
  var $i220: i32;
  var $i221: i8;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $i226: i8;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $i231: i64;
  var $i232: i64;
  var $i233: i1;
  var $p234: ref;
  var $i235: i32;
  var $i236: i1;
  var $p238: ref;
  var $i239: i32;
  var $p240: ref;
  var $i241: i32;
  var $i242: i32;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $i247: i32;
  var $p249: ref;
  var $i250: i32;
  var $p251: ref;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $i248: i32;
  var $i255: i1;
  var $i237: i32;
  var $i29: i32;
  var $p256: ref;
  var $i257: i64;
  var $i9: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(112, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !9882, metadata !5829), !dbg !9883, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !9884, metadata !5829), !dbg !9885, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10991, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10991, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := copy_from_user($p6, $p1, 112);
  // WARNING: %8 = call i64 @copy_from_user(i8* %7, i8* %1, i64 112), !dbg !5866, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10992, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10992, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10993, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11085, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10997, 37} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10997, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10997, 15} true;
  assume {:verifier.code 0} true;
  $M.33 := $store.ref($M.33, $p11, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10998, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10998, 16} true;
  assume {:verifier.code 0} true;
  $M.34 := $store.ref($M.34, $p12, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10999, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10999, 40} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i64($i13, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10999, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10999, 15} true;
  assume {:verifier.code 0} true;
  $M.35 := $store.i64($M.35, $p15, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11000, 18} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11000, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11000, 16} true;
  assume {:verifier.code 0} true;
  $M.36 := $store.i64($M.36, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11001, 13} true;
  assume {:verifier.code 0} true;
  call $p18 := kmalloc(168, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11002, 10} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11003, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11003, 28} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11003, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11004, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 12);
  goto $bb3;
$bb6:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11008, 30} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11008, 30} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11008, 47} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11008, 47} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11008, 8} true;
  assume {:verifier.code 0} true;
  call $p26 := idr_read_qp($i23, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11009, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11009, 26} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11009, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11011, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.i32(0, 22);
  goto $bb10;
$bb9:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11082, 9} true;
  assume {:verifier.code 0} true;
  $p256 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11082, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11083, 11} true;
  assume {:verifier.code 0} true;
  $i257 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11083, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i257;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11015, 43} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p4, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11015, 43} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11015, 20} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11015, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $p19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11015, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11016, 47} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11016, 47} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11016, 24} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11016, 9} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p19, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11016, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11017, 38} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, 98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11017, 38} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i8($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11017, 20} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11017, 9} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p19, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11017, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p41, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11018, 50} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p4, 99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11018, 50} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11018, 26} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11018, 9} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p19, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11018, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p45, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11019, 20} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11019, 20} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11019, 9} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p19, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11019, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11020, 22} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p4, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11020, 22} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11020, 9} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p19, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11020, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p51, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11021, 22} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p4, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11021, 22} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11021, 9} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p19, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11021, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p54, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11022, 27} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p4, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11022, 27} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11022, 9} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p19, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11022, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11023, 37} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11023, 37} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11023, 9} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p19, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11023, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11024, 26} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p4, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11024, 26} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i16($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11024, 9} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p19, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11024, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11025, 30} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p4, 94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11025, 30} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i16($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11025, 9} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p19, 138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11025, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p66, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11026, 35} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p4, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11026, 35} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i8($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11026, 9} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p19, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11026, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11027, 29} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p4, 101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11027, 29} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11027, 9} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p19, 142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11027, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p72, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11028, 34} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p4, 102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11028, 34} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i8($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11028, 9} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p19, 143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11028, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p75, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11029, 29} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p4, 103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11029, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i8($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11029, 9} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p19, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11029, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p78, $i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11030, 24} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p4, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11030, 24} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i8($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11030, 9} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p19, 145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11030, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p81, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11031, 23} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p4, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11031, 23} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11031, 9} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p19, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11031, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p84, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11032, 25} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p4, 106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11032, 25} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i8($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11032, 9} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p19, 147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11032, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p87, $i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11033, 25} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11033, 25} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11033, 9} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p19, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11033, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p90, $i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11034, 28} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p4, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11034, 28} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i8($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11034, 9} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p19, 149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11034, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p93, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11035, 27} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p4, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11035, 27} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i8($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11035, 9} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p19, 150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11035, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p96, $i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11036, 27} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p19, 56);
  $p98 := $add.ref($p19, 56);
  $p99 := $add.ref($p19, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11036, 44} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11036, 3} true;
  assume {:verifier.code 0} true;
  $p101 := $bitcast.ref.ref($p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11036, 73} true;
  assume {:verifier.code 0} true;
  $p102 := $p4;
  $p103 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11036, 3} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11036, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p101, $p104, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11038, 38} true;
  assume {:verifier.code 0} true;
  $p105 := $p4;
  $p106 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11038, 43} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11038, 9} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p19, 56);
  $p109 := $add.ref($p19, 56);
  $p110 := $add.ref($add.ref($p19, 56), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11038, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p110, $i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11039, 38} true;
  assume {:verifier.code 0} true;
  $p111 := $p4;
  $p112 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11039, 43} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i8($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11039, 9} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p19, 56);
  $p115 := $add.ref($p19, 56);
  $p116 := $add.ref($add.ref($p19, 56), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11039, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p116, $i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11040, 37} true;
  assume {:verifier.code 0} true;
  $p117 := $p4;
  $p118 := $add.ref($p4, 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11040, 42} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i8($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11040, 9} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p19, 56);
  $p121 := $add.ref($p19, 56);
  $p122 := $add.ref($add.ref($p19, 56), 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11040, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p122, $i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11041, 41} true;
  assume {:verifier.code 0} true;
  $p123 := $p4;
  $p124 := $add.ref($p4, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11041, 46} true;
  assume {:verifier.code 0} true;
  $i125 := $load.i8($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11041, 9} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p19, 56);
  $p127 := $add.ref($p19, 56);
  $p128 := $add.ref($add.ref($p19, 56), 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11041, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p128, $i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11042, 28} true;
  assume {:verifier.code 0} true;
  $p129 := $p4;
  $p130 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11042, 33} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i16($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11042, 9} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p19, 56);
  $p133 := $add.ref($add.ref($p19, 56), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11042, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p133, $i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11043, 26} true;
  assume {:verifier.code 0} true;
  $p134 := $p4;
  $p135 := $add.ref($p4, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11043, 31} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i8($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11043, 9} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p19, 56);
  $p138 := $add.ref($add.ref($p19, 56), 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11043, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p138, $i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11044, 37} true;
  assume {:verifier.code 0} true;
  $p139 := $p4;
  $p140 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11044, 42} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i8($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11044, 9} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p19, 56);
  $p143 := $add.ref($add.ref($p19, 56), 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11044, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p143, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11045, 35} true;
  assume {:verifier.code 0} true;
  $p144 := $p4;
  $p145 := $add.ref($p4, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11045, 40} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i8($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11045, 9} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p19, 56);
  $p148 := $add.ref($add.ref($p19, 56), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11045, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p148, $i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 47} true;
  assume {:verifier.code 0} true;
  $p149 := $p4;
  $p150 := $add.ref($p4, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 52} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i8($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 28} true;
  assume {:verifier.code 0} true;
  $i152 := $zext.i8.i32($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 62} true;
  assume {:verifier.code 0} true;
  $i153 := $ne.i32($i152, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 62} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i1.i32($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 28} true;
  assume {:verifier.code 0} true;
  $i155 := $trunc.i32.i8($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 9} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p19, 56);
  $p157 := $add.ref($add.ref($p19, 56), 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11046, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p157, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11047, 32} true;
  assume {:verifier.code 0} true;
  $p158 := $p4;
  $p159 := $add.ref($p4, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11047, 37} true;
  assume {:verifier.code 0} true;
  $i160 := $load.i8($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11047, 9} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p19, 56);
  $p162 := $add.ref($add.ref($p19, 56), 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11047, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p162, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11048, 27} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p19, 96);
  $p164 := $add.ref($p19, 96);
  $p165 := $add.ref($p19, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11048, 48} true;
  assume {:verifier.code 0} true;
  $p166 := $bitcast.ref.ref($p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11048, 3} true;
  assume {:verifier.code 0} true;
  $p167 := $bitcast.ref.ref($p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11048, 77} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p4, 32);
  $p169 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11048, 3} true;
  assume {:verifier.code 0} true;
  $p170 := $bitcast.ref.ref($p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11048, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p167, $p170, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11050, 42} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p4, 32);
  $p172 := $add.ref($add.ref($p4, 32), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11050, 51} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i32($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11050, 9} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p19, 96);
  $p175 := $add.ref($p19, 96);
  $p176 := $add.ref($add.ref($p19, 96), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11050, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p176, $i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11051, 42} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p4, 32);
  $p178 := $add.ref($add.ref($p4, 32), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11051, 51} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i8($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11051, 9} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p19, 96);
  $p181 := $add.ref($p19, 96);
  $p182 := $add.ref($add.ref($p19, 96), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11051, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p182, $i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11052, 41} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p4, 32);
  $p184 := $add.ref($add.ref($p4, 32), 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11052, 50} true;
  assume {:verifier.code 0} true;
  $i185 := $load.i8($M.0, $p184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11052, 9} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p19, 96);
  $p187 := $add.ref($p19, 96);
  $p188 := $add.ref($add.ref($p19, 96), 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11052, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p188, $i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11053, 45} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p4, 32);
  $p190 := $add.ref($add.ref($p4, 32), 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11053, 54} true;
  assume {:verifier.code 0} true;
  $i191 := $load.i8($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11053, 9} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p19, 96);
  $p193 := $add.ref($p19, 96);
  $p194 := $add.ref($add.ref($p19, 96), 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11053, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p194, $i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11054, 32} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p4, 32);
  $p196 := $add.ref($add.ref($p4, 32), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11054, 41} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i16($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11054, 9} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p19, 96);
  $p199 := $add.ref($add.ref($p19, 96), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11054, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p199, $i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11055, 30} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p4, 32);
  $p201 := $add.ref($add.ref($p4, 32), 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11055, 39} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i8($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11055, 9} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p19, 96);
  $p204 := $add.ref($add.ref($p19, 96), 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11055, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p204, $i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11056, 41} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p4, 32);
  $p206 := $add.ref($add.ref($p4, 32), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11056, 50} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i8($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11056, 9} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p19, 96);
  $p209 := $add.ref($add.ref($p19, 96), 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11056, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p209, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11057, 39} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p4, 32);
  $p211 := $add.ref($add.ref($p4, 32), 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11057, 48} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i8($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11057, 9} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p19, 96);
  $p214 := $add.ref($add.ref($p19, 96), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11057, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p214, $i212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 51} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p4, 32);
  $p216 := $add.ref($add.ref($p4, 32), 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 60} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i8($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 32} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.i8.i32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 70} true;
  assume {:verifier.code 0} true;
  $i219 := $ne.i32($i218, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 70} true;
  assume {:verifier.code 0} true;
  $i220 := $zext.i1.i32($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 32} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i32.i8($i220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 9} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p19, 96);
  $p223 := $add.ref($add.ref($p19, 96), 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11058, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p223, $i221);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11059, 36} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p4, 32);
  $p225 := $add.ref($add.ref($p4, 32), 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11059, 45} true;
  assume {:verifier.code 0} true;
  $i226 := $load.i8($M.0, $p225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11059, 9} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($p19, 96);
  $p228 := $add.ref($add.ref($p19, 96), 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11059, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p228, $i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11060, 27} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p26, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11060, 27} true;
  assume {:verifier.code 0} true;
  $p230 := $load.ref($M.0, $p229);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11060, 7} true;
  assume {:verifier.code 0} true;
  $i231 := $p2i.ref.i64($p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11060, 38} true;
  assume {:verifier.code 0} true;
  $i232 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11060, 35} true;
  assume {:verifier.code 0} true;
  $i233 := $eq.i64($i231, $i232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11060, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i233} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i233 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11061, 59} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p4, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11061, 11} true;
  assume {:verifier.code 0} true;
  call $i235 := ib_resolve_eth_l2_attrs($p26, $p19, $p234);
  // WARNING: %244 = call i32 @ib_resolve_eth_l2_attrs(%struct.ib_qp* %32, %struct.ib_qp_attr* %22, i32* %243), !dbg !6078, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11062, 13} true;
  assume {:verifier.code 0} true;
  $i236 := $ne.i32($i235, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11062, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i233 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11070, 34} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($p26, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11070, 34} true;
  assume {:verifier.code 0} true;
  $i250 := $load.i32($M.0, $p249);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11070, 53} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p4, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11070, 53} true;
  assume {:verifier.code 0} true;
  $i252 := $load.i32($M.0, $p251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11070, 15} true;
  assume {:verifier.code 0} true;
  call $i253 := modify_qp_mask($i250, $i252);
  // WARNING: %264 = call i32 @modify_qp_mask(i32 %261, i32 %263), !dbg !6095, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i32($i253);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11071, 11} true;
  assume {:verifier.code 0} true;
  call $i254 := ib_modify_qp($p26, $p19, $i253);
  // WARNING: %265 = call i32 @ib_modify_qp(%struct.ib_qp* %32, %struct.ib_qp_attr* %22, i32 %264), !dbg !6098, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i254);
  assume {:verifier.code 0} true;
  $i248 := $i254;
  goto $bb18;
$bb14:
  assume ($i236 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11063, 7} true;
  assume {:verifier.code 0} true;
  $i237 := $i235;
  goto $bb16;
$bb15:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11080, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_read($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11080, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $i237;
  goto $bb10;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11067, 34} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p26, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11067, 34} true;
  assume {:verifier.code 0} true;
  $i239 := $load.i32($M.0, $p238);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11067, 53} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p4, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11067, 53} true;
  assume {:verifier.code 0} true;
  $i241 := $load.i32($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11067, 15} true;
  assume {:verifier.code 0} true;
  call $i242 := modify_qp_mask($i239, $i241);
  // WARNING: %253 = call i32 @modify_qp_mask(i32 %250, i32 %252), !dbg !6086, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i32($i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11068, 19} true;
  assume {:verifier.code 0} true;
  $p243 := $p26;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11068, 19} true;
  assume {:verifier.code 0} true;
  $p244 := $load.ref($M.0, $p243);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11068, 28} true;
  assume {:verifier.code 0} true;
  $p245 := $add.ref($p244, 600);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11068, 28} true;
  assume {:verifier.code 0} true;
  $p246 := $load.ref($M.0, $p245);
  call $i247 := devirtbounce.13($p246, $p26, $p19, $i242, $p5);
  // WARNING: %258 = call i32 @devirtbounce.13(i32 (%struct.ib_qp*, %struct.ib_qp_attr*, i32, %struct.ib_udata*)* %257, %struct.ib_qp* %32, %struct.ib_qp_attr* %22, i32 %253, %struct.ib_udata* %6)
  call {:cexpr "ret"} boogie_si_record_i32($i247);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11069, 3} true;
  assume {:verifier.code 0} true;
  $i248 := $i247;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11073, 11} true;
  assume {:verifier.code 0} true;
  $i255 := $ne.i32($i248, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11073, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i255} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i255 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11074, 5} true;
  assume {:verifier.code 0} true;
  $i237 := $i248;
  goto $bb16;
$bb20:
  assume !(($i255 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11078, 3} true;
  assume {:verifier.code 0} true;
  $i237 := $i2;
  goto $bb16;
}
const ib_uverbs_destroy_qp: ref;
axiom (ib_uverbs_destroy_qp == $sub.ref(0, 184455));
procedure  ib_uverbs_destroy_qp($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $i28: i1;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i1;
  var $i51: i64;
  var $i9: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10171, metadata !5829), !dbg !10172, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10173, metadata !5829), !dbg !10174, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.__anonstruct_atomic_t_6* %6, metadata !10184, metadata !5829), !dbg !10188, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11102, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11102, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := copy_from_user($p6, $p1, 16);
  // WARNING: %8 = call i64 @copy_from_user(i8* %7, i8* %1, i64 16), !dbg !5832, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11103, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11103, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11104, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11157, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11108, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11108, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p10, 0, 4, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11109, 55} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11109, 55} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11109, 72} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11109, 72} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11109, 10} true;
  assume {:verifier.code 0} true;
  call $p15 := idr_write_uobj(ib_uverbs_qp_idr, $i12, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11110, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11110, 28} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11110, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11111, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11115, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11115, 30} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11115, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11117, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11118, 60} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11118, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := list_empty($p22);
  // WARNING: %29 = call i32 @list_empty(%struct.list_head* %28), !dbg !5862, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11119, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11119, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11120, 5} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11121, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 16);
  goto $bb3;
$bb9:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11125, 9} true;
  assume {:verifier.code 0} true;
  call $i25 := ib_destroy_qp($p20);
  // WARNING: %34 = call i32 @ib_destroy_qp(%struct.ib_qp* %26), !dbg !5871, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11126, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11126, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11127, 11} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p15, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11127, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11128, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11131, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11132, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11132, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11133, 13} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11133, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i29;
  goto $bb3;
$bb15:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11137, 28} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p21, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11137, 28} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11137, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11137, 34} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i64($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11137, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11138, 24} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p21, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11138, 24} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11138, 32} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11138, 5} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11139, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11142, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_qp_idr, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11143, 29} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11143, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11144, 20} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p15, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11144, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11145, 24} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11145, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11146, 41} true;
  assume {:verifier.code 0} true;
  $p40 := $p21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11146, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_release_uevent($p0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11147, 31} true;
  assume {:verifier.code 0} true;
  $p41 := $p21;
  $p42 := $add.ref($p21, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11147, 38} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11147, 8} true;
  assume {:verifier.code 0} true;
  $p44 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11147, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11148, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11149, 38} true;
  assume {:verifier.code 0} true;
  $p45 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11149, 38} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11149, 26} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11149, 48} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11149, 13} true;
  assume {:verifier.code 0} true;
  call $i49 := copy_to_user($p47, $p48, 4);
  // WARNING: %67 = call i64 @copy_to_user(i8* %65, i8* %66, i64 4), !dbg !5913, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11150, 15} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11150, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11151, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb21:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11155, 11} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11155, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i51;
  goto $bb3;
}
const ib_uverbs_post_send: ref;
axiom (ib_uverbs_post_send == $sub.ref(0, 185487));
procedure  ib_uverbs_post_send($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $p47: ref;
  var $i48: i32;
  var $i49: i1;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $i64: i64;
  var $i65: i64;
  var $i66: i1;
  var $p67: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i32;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $p77: ref;
  var $i78: i32;
  var $i79: i64;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $p83: ref;
  var $i84: i64;
  var $i85: i1;
  var $p86: ref;
  var $i87: i64;
  var $i88: i1;
  var $p90: ref;
  var $p89: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i64;
  var $p94: ref;
  var $p95: ref;
  var $i96: i32;
  var $p97: ref;
  var $p98: ref;
  var $i99: i32;
  var $p100: ref;
  var $p101: ref;
  var $i102: i32;
  var $p103: ref;
  var $i104: i1;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i32;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i64;
  var $i120: i1;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $i125: i32;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $i132: i32;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $i137: i32;
  var $i138: i1;
  var $p139: ref;
  var $p140: ref;
  var $i141: i32;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $i145: i32;
  var $i146: i1;
  var $i147: i1;
  var $i148: i1;
  var $i149: i1;
  var $i150: i1;
  var $i151: i1;
  var $i152: i1;
  var $i153: i1;
  var $i154: i1;
  var $i155: i1;
  var $p156: ref;
  var $p157: ref;
  var $i158: i32;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $i164: i64;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $i171: i32;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $i177: i32;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $i182: i32;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $i188: i64;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $i195: i64;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $i202: i64;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i32;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $i214: i32;
  var $i215: i1;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $i223: i32;
  var $p224: ref;
  var $i225: i32;
  var $i226: i32;
  var $i227: i64;
  var $i228: i64;
  var $i229: i64;
  var $i230: i64;
  var $i231: i64;
  var $p232: ref;
  var $p233: ref;
  var $i234: i32;
  var $i235: i64;
  var $i236: i64;
  var $i237: i64;
  var $i238: i1;
  var $p239: ref;
  var $p240: ref;
  var $i241: i32;
  var $i242: i32;
  var $p244: ref;
  var $i243: i32;
  var $i245: i32;
  var $i246: i32;
  var $i247: i1;
  var $i51: i32;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $p248: ref;
  var $p50: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $i256: i32;
  var $i257: i64;
  var $i258: i1;
  var $i259: i64;
  var $i260: i1;
  var $p262: ref;
  var $i263: i32;
  var $i264: i32;
  var $p265: ref;
  var $i266: i64;
  var $p267: ref;
  var $i268: i64;
  var $i269: i1;
  var $p270: ref;
  var $p271: ref;
  var $i272: i64;
  var $i273: i1;
  var $p261: ref;
  var $p274: ref;
  var $i275: i64;
  var $p276: ref;
  var $p277: ref;
  var $i278: i64;
  var $i279: i1;
  var $i280: i64;
  var $p68: ref;
  var $i69: i64;
  var $i281: i64;
  var $i282: i1;
  var $i284: i1;
  var $p285: ref;
  var $p286: ref;
  var $p287: ref;
  var $p288: ref;
  var $i289: i64;
  var $i290: i1;
  var $p291: ref;
  var $p292: ref;
  var $p293: ref;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $i298: i64;
  var $i299: i1;
  var $p283: ref;
  var $i42: i64;
  var $p300: ref;
  var $i301: i1;
  var $i302: i64;
  var $i303: i64;
  var $i10: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(24, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10288, metadata !5829), !dbg !10289, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10290, metadata !5829), !dbg !10291, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_send_wr* null, i64 0, metadata !10312, metadata !5829), !dbg !10313, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11184, 24} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11184, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := copy_from_user($p7, $p1, 24);
  // WARNING: %9 = call i64 @copy_from_user(i8* %8, i8* %1, i64 24), !dbg !5840, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11185, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11185, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11186, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11368, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 54} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 54} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 69} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 69} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 63} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i32($i13, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 101} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 101} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 81} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 111} true;
  assume {:verifier.code 0} true;
  $i21 := $mul.i64($i20, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 79} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i17, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 119} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 30} true;
  assume {:verifier.code 0} true;
  $i24 := $ult.i64($i11, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11190, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11191, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11195, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11195, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11195, 20} true;
  assume {:verifier.code 0} true;
  $i27 := $ule.i32($i26, 55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11195, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11196, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 22);
  goto $bb3;
$bb9:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11200, 34} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11200, 34} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11200, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11200, 13} true;
  assume {:verifier.code 0} true;
  call $p31 := kmalloc($i30, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11201, 13} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11202, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11202, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11202, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11203, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 12);
  goto $bb3;
$bb12:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11207, 30} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11207, 30} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11207, 47} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11207, 47} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11207, 8} true;
  assume {:verifier.code 0} true;
  call $p39 := idr_read_qp($i36, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11208, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11208, 26} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11208, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11209, 5} true;
  assume {:verifier.code 0} true;
  $i42 := $sub.i64(0, 22);
  goto $bb16;
$bb15:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11365, 9} true;
  assume {:verifier.code 0} true;
  $p300 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11365, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11366, 15} true;
  assume {:verifier.code 0} true;
  $i301 := $eq.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11366, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i301} true;
  goto $bb113, $bb114;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11213, 30} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p39, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11213, 30} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11213, 38} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11213, 38} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i1.i32($i45);
  // WARNING: %60 = zext i1 %59 to i32, !dbg !5895, !verifier.code !5806
  call {:cexpr "is_ud"} boogie_si_record_i32($i46);
  // WARNING: call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !10374, metadata !5829), !dbg !10375, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_send_wr* null, i64 0, metadata !10378, metadata !5829), !dbg !10379, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 23} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 23} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $ult.i32(0, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 7} true;
  assume {:verifier.code 0} true;
  $p50 := $0.ref;
  assume {:branchcond $i49} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 7} true;
  assume {:verifier.code 0} true;
  $i51, $i52, $p53, $p54 := 0, 0, $0.ref, $0.ref;
  goto $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i49 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb21:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11311, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 28} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 90} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 90} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 99} true;
  assume {:verifier.code 0} true;
  $i58 := $mul.i32($i57, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 69} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i32.i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 112} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 66} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1, $mul.ref($i60, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11220, 48} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11220, 48} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11220, 28} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i32.i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11219, 13} true;
  assume {:verifier.code 0} true;
  call $i65 := copy_from_user($p55, $p61, $i64);
  // WARNING: %75 = call i64 @copy_from_user(i8* %65, i8* %71, i64 %74), !dbg !5916, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11221, 15} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i64($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11221, 7} true;
  assume {:verifier.code 0} true;
  $p67 := $p54;
  assume {:branchcond $i66} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i66 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.124.lcssa27 = phi %struct.ib_send_wr* [ %.12437, %64 ], !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11223, 5} true;
  assume {:verifier.code 0} true;
  $p68, $i69 := $p67, $sub.i64(0, 14);
  goto $bb25;
$bb24:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11346, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_read($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  $i281 := $p2i.ref.i64($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 26} true;
  assume {:verifier.code 0} true;
  $i282 := $ne.i64($i281, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i282} true;
  goto $bb99, $bb100;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11227, 16} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p32, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11227, 16} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11227, 24} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i32($i71, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11227, 47} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11227, 47} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11227, 41} true;
  assume {:verifier.code 0} true;
  $i75 := $ugt.i32($i72, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11227, 7} true;
  assume {:verifier.code 0} true;
  $p76 := $p54;
  assume {:branchcond $i75} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i75 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.124.lcssa28 = phi %struct.ib_send_wr* [ %.12437, %79 ], !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11229, 5} true;
  assume {:verifier.code 0} true;
  $p68, $i69 := $p76, $sub.i64(0, 22);
  goto $bb25;
$bb28:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11233, 47} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p32, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11233, 47} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i32($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11233, 22} true;
  assume {:verifier.code 0} true;
  $i79 := $zext.i32.i64($i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11233, 55} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11233, 62} true;
  assume {:verifier.code 0} true;
  $i81 := $mul.i64($i80, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11233, 13} true;
  assume {:verifier.code 0} true;
  call $p82 := kmalloc($i81, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11234, 10} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11235, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $p2i.ref.i64($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11235, 28} true;
  assume {:verifier.code 0} true;
  $i85 := $eq.i64($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11235, 7} true;
  assume {:verifier.code 0} true;
  $p86 := $p54;
  assume {:branchcond $i85} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i85 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.124.lcssa29 = phi %struct.ib_send_wr* [ %.12437, %88 ], !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11237, 5} true;
  assume {:verifier.code 0} true;
  $p68, $i69 := $p86, $sub.i64(0, 12);
  goto $bb25;
$bb31:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11241, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11241, 28} true;
  assume {:verifier.code 0} true;
  $i88 := $eq.i64($i87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11241, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11243, 3} true;
  assume {:verifier.code 0} true;
  $p89 := $p82;
  goto $bb35;
$bb34:
  assume !(($i88 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11244, 11} true;
  assume {:verifier.code 0} true;
  $p90 := $p53;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11244, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p90, $p82);
  assume {:verifier.code 0} true;
  $p89 := $p54;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11247, 9} true;
  assume {:verifier.code 0} true;
  $p91 := $p83;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11247, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p91, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11248, 26} true;
  assume {:verifier.code 0} true;
  $p92 := $p32;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11248, 26} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i64($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11248, 9} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p83, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11248, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11249, 34} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p32, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11249, 34} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i32($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11249, 9} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p83, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11249, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p97, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11250, 47} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p32, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11250, 47} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11250, 9} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p83, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11250, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p100, $i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11251, 37} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p32, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11251, 37} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11251, 9} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p83, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11251, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p103, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11252, 13} true;
  assume {:verifier.code 0} true;
  $i104 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11252, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i104 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 49} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 52} true;
  assume {:verifier.code 0} true;
  $p106 := $bitcast.ref.ref($p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 55} true;
  assume {:verifier.code 0} true;
  $p107 := $p106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 55} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 65} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 65} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 22} true;
  assume {:verifier.code 0} true;
  call $p111 := idr_read_ah($i108, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 11} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 14} true;
  assume {:verifier.code 0} true;
  $p113 := $bitcast.ref.ref($p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 17} true;
  assume {:verifier.code 0} true;
  $p114 := $p113;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11253, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p114, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11254, 31} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11254, 34} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11254, 37} true;
  assume {:verifier.code 0} true;
  $p117 := $p116;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11254, 37} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11254, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.i64($p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11254, 40} true;
  assume {:verifier.code 0} true;
  $i120 := $eq.i64($i119, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11254, 9} true;
  assume {:verifier.code 0} true;
  $p121 := $p89;
  assume {:branchcond $i120} true;
  goto $bb38, $bb39;
$bb37:
  assume !(($i104 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11268, 34} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p83, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11268, 34} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i32($M.0, $p144);
  assume {:verifier.code 0} true;
  goto $bb45;
$bb38:
  assume ($i120 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.023.lcssa = phi %struct.ib_send_wr* [ %.023, %121 ], !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11256, 7} true;
  assume {:verifier.code 0} true;
  $p68, $i69 := $p121, $sub.i64(0, 22);
  goto $bb25;
$bb39:
  assume !(($i120 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 39} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 42} true;
  assume {:verifier.code 0} true;
  $p123 := $bitcast.ref.ref($p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 45} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p123, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 45} true;
  assume {:verifier.code 0} true;
  $i125 := $load.i32($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 11} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 14} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 17} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11260, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p128, $i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 40} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 43} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 46} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p130, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 46} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i32($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 11} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 14} true;
  assume {:verifier.code 0} true;
  $p134 := $bitcast.ref.ref($p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 17} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p134, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11261, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p135, $i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11262, 30} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p83, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11262, 30} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i32($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11262, 37} true;
  assume {:verifier.code 0} true;
  $i138 := $eq.i32($i137, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11262, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i138 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11263, 36} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p32, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11263, 39} true;
  assume {:verifier.code 0} true;
  $p140 := $bitcast.ref.ref($p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11263, 39} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i32($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11263, 13} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p83, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11263, 16} true;
  assume {:verifier.code 0} true;
  $p143 := $bitcast.ref.ref($p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11263, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p143, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11264, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i138 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11267, 3} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11294, 13} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p83, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11294, 13} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i32($M.0, $p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11294, 21} true;
  assume {:verifier.code 0} true;
  $i215 := $ne.i32($i214, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11294, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb72, $bb73;
$bb45:
  assume {:verifier.code 0} true;
  $i146 := $slt.i32($i145, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb46, $bb47;
$bb46:
  assume ($i146 == 1);
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i145, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb61, $bb62;
$bb47:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  $i147 := $slt.i32($i145, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i147} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i147 == 1);
  assume {:verifier.code 0} true;
  $i151 := $slt.i32($i145, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i151} true;
  goto $bb58, $bb60;
$bb49:
  assume !(($i147 == 1));
  assume {:verifier.code 0} true;
  $i148 := $slt.i32($i145, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i148 == 1);
  assume {:verifier.code 0} true;
  $i150 := $eq.i32($i145, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i150} true;
  goto $bb55, $bb57;
$bb51:
  assume !(($i148 == 1));
  assume {:verifier.code 0} true;
  $i149 := $eq.i32($i145, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i149 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11280, 41} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p32, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11280, 44} true;
  assume {:verifier.code 0} true;
  $p181 := $bitcast.ref.ref($p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11280, 44} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i32($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11280, 11} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p83, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11280, 14} true;
  assume {:verifier.code 0} true;
  $p184 := $bitcast.ref.ref($p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11280, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p184, $i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11281, 5} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb53:
  assume {:verifier.code 0} true;
  assume !(($i149 == 1));
  goto $bb54;
$bb54:
  assume {:verifier.code 0} true;
  goto $bb71;
$bb55:
  assume {:verifier.code 0} true;
  assume ($i150 == 1);
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 44} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 47} true;
  assume {:verifier.code 0} true;
  $p186 := $bitcast.ref.ref($p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 54} true;
  assume {:verifier.code 0} true;
  $p187 := $p186;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 54} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i64($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 11} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 14} true;
  assume {:verifier.code 0} true;
  $p190 := $bitcast.ref.ref($p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 21} true;
  assume {:verifier.code 0} true;
  $p191 := $p190;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11284, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p191, $i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 44} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 47} true;
  assume {:verifier.code 0} true;
  $p193 := $bitcast.ref.ref($p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 54} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p193, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 54} true;
  assume {:verifier.code 0} true;
  $i195 := $load.i64($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 11} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 14} true;
  assume {:verifier.code 0} true;
  $p197 := $bitcast.ref.ref($p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 21} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p197, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11285, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p198, $i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 37} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 40} true;
  assume {:verifier.code 0} true;
  $p200 := $bitcast.ref.ref($p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 47} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($p200, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 47} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i64($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 11} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 14} true;
  assume {:verifier.code 0} true;
  $p204 := $bitcast.ref.ref($p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 21} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p204, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11286, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p205, $i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 37} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 40} true;
  assume {:verifier.code 0} true;
  $p207 := $bitcast.ref.ref($p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 47} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p207, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 47} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i32($M.0, $p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 11} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 14} true;
  assume {:verifier.code 0} true;
  $p211 := $bitcast.ref.ref($p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 21} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p211, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11287, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p212, $i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11288, 5} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb57:
  assume {:verifier.code 0} true;
  assume !(($i150 == 1));
  goto $bb54;
$bb58:
  assume {:verifier.code 0} true;
  assume ($i151 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 42} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 45} true;
  assume {:verifier.code 0} true;
  $p162 := $bitcast.ref.ref($p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 50} true;
  assume {:verifier.code 0} true;
  $p163 := $p162;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 50} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i64($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 11} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 14} true;
  assume {:verifier.code 0} true;
  $p166 := $bitcast.ref.ref($p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 19} true;
  assume {:verifier.code 0} true;
  $p167 := $p166;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11273, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p167, $i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 35} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 38} true;
  assume {:verifier.code 0} true;
  $p169 := $bitcast.ref.ref($p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 43} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p169, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 43} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i32($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 11} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p83, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 14} true;
  assume {:verifier.code 0} true;
  $p173 := $bitcast.ref.ref($p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 19} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p173, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11274, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p174, $i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11275, 5} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb60:
  assume !(($i151 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11281, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb61:
  assume ($i152 == 1);
  assume {:verifier.code 0} true;
  $i155 := $eq.i32($i145, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb67, $bb69;
$bb62:
  assume !(($i152 == 1));
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i145, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb63, $bb64;
$bb63:
  assume ($i153 == 1);
  assume {:verifier.code 0} true;
  $i154 := $eq.i32($i145, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb65, $bb66;
$bb64:
  assume !(($i153 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11277, 34} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p32, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11277, 37} true;
  assume {:verifier.code 0} true;
  $p176 := $bitcast.ref.ref($p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11277, 37} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i32($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11277, 11} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p83, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11277, 14} true;
  assume {:verifier.code 0} true;
  $p179 := $bitcast.ref.ref($p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11277, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p179, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11278, 5} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb65:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 34} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p32, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 37} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 37} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i32($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 11} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p83, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 14} true;
  assume {:verifier.code 0} true;
  $p160 := $bitcast.ref.ref($p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p160, $i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 5} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb66:
  assume {:verifier.code 0} true;
  assume !(($i154 == 1));
  goto $bb54;
$bb67:
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11270, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb69:
  assume {:verifier.code 0} true;
  assume !(($i155 == 1));
  goto $bb54;
$bb70:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11290, 5} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb72:
  assume ($i215 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11295, 21} true;
  assume {:verifier.code 0} true;
  $p216 := $bitcast.ref.ref($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11295, 43} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p216, 1536);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11295, 11} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p83, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11295, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p218, $p217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 44} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p83, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 44} true;
  assume {:verifier.code 0} true;
  $p220 := $load.ref($M.0, $p219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 30} true;
  assume {:verifier.code 0} true;
  $p221 := $bitcast.ref.ref($p220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 99} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 99} true;
  assume {:verifier.code 0} true;
  $i223 := $load.i32($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 114} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 114} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i32($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 108} true;
  assume {:verifier.code 0} true;
  $i226 := $mul.i32($i223, $i225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 78} true;
  assume {:verifier.code 0} true;
  $i227 := $zext.i32.i64($i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 126} true;
  assume {:verifier.code 0} true;
  $i228 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 149} true;
  assume {:verifier.code 0} true;
  $i229 := $mul.i64($i228, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 124} true;
  assume {:verifier.code 0} true;
  $i230 := $add.i64($i227, $i229);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 157} true;
  assume {:verifier.code 0} true;
  $i231 := $add.i64($i230, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 74} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($p1, $mul.ref($i231, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11297, 52} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p83, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11297, 52} true;
  assume {:verifier.code 0} true;
  $i234 := $load.i32($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11297, 30} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i32.i64($i234);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11297, 60} true;
  assume {:verifier.code 0} true;
  $i236 := $mul.i64($i235, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11296, 15} true;
  assume {:verifier.code 0} true;
  call $i237 := copy_from_user($p221, $p232, $i236);
  // WARNING: %261 = call i64 @copy_from_user(i8* %245, i8* %256, i64 %260), !dbg !6111, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11298, 17} true;
  assume {:verifier.code 0} true;
  $i238 := $ne.i64($i237, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11298, 9} true;
  assume {:verifier.code 0} true;
  $p239 := $p89;
  assume {:branchcond $i238} true;
  goto $bb74, $bb75;
$bb73:
  assume !(($i215 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11306, 11} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p83, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11306, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p244, $0.ref);
  assume {:verifier.code 0} true;
  $i243 := $i51;
  goto $bb77;
$bb74:
  assume ($i238 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.023.lcssa26 = phi %struct.ib_send_wr* [ %.023, %239 ], !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11300, 7} true;
  assume {:verifier.code 0} true;
  $p68, $i69 := $p239, $sub.i64(0, 14);
  goto $bb25;
$bb75:
  assume !(($i238 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11304, 20} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p83, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11304, 20} true;
  assume {:verifier.code 0} true;
  $i241 := $load.i32($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11304, 28} true;
  assume {:verifier.code 0} true;
  $i242 := $add.i32($i241, $i51);
  // WARNING: %268 = add nsw i32 %267, %.11940, !dbg !6120, !verifier.code !5806
  call {:cexpr "sg_ind"} boogie_si_record_i32($i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11305, 3} true;
  assume {:verifier.code 0} true;
  $i243 := $i242;
  goto $bb77;
$bb77:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11308, 9} true;
  assume {:verifier.code 0} true;
  $i245 := $add.i32($i52, 1);
  // WARNING: %272 = add nsw i32 %.02039, 1, !dbg !6125, !verifier.code !5806
  call {:cexpr "i"} boogie_si_record_i32($i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 23} true;
  assume {:verifier.code 0} true;
  $i246 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 17} true;
  assume {:verifier.code 0} true;
  $i247 := $ult.i32($i245, $i246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 7} true;
  assume {:verifier.code 0} true;
  $i51, $i52, $p53, $p54, $p248 := $i243, $i245, $p82, $p89, $p89;
  assume {:branchcond $i247} true;
  goto $bb78, $bb79;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 7} true;
  assume {:verifier.code 0} true;
  assume ($i247 == 1);
  goto $bb21;
$bb79:
  assume !(($i247 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11310, 7} true;
  assume {:verifier.code 0} true;
  $p50 := $p248;
  goto $bb20;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11315, 8} true;
  assume {:verifier.code 0} true;
  $p249 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11315, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p249, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11316, 21} true;
  assume {:verifier.code 0} true;
  $p250 := $p39;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11316, 21} true;
  assume {:verifier.code 0} true;
  $p251 := $load.ref($M.0, $p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11316, 30} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p251, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11316, 30} true;
  assume {:verifier.code 0} true;
  $p253 := $load.ref($M.0, $p252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11316, 46} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($p39, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11316, 46} true;
  assume {:verifier.code 0} true;
  $p255 := $load.ref($M.0, $p254);
  call $i256 := devirtbounce.14($p253, $p255, $p50, $p6);
  // WARNING: %285 = call i32 @devirtbounce.14(i32 (%struct.ib_qp*, %struct.ib_send_wr*, %struct.ib_send_wr**)* %282, %struct.ib_qp* %284, %struct.ib_send_wr* %.124.lcssa, %struct.ib_send_wr** %7)
  call {:cexpr "tmp___4"} boogie_si_record_i32($i256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11317, 9} true;
  assume {:verifier.code 0} true;
  $i257 := $sext.i32.i64($i256);
  // WARNING: %286 = sext i32 %285 to i64, !dbg !6135, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i64($i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11318, 11} true;
  assume {:verifier.code 0} true;
  $i258 := $ne.i64($i257, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11318, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i258 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  $i259 := $p2i.ref.i64($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 30} true;
  assume {:verifier.code 0} true;
  $i260 := $ne.i64($i259, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i260} true;
  goto $bb83, $bb84;
$bb82:
  assume !(($i258 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb83:
  assume ($i260 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  $p261 := $p50;
  goto $bb86;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i260 == 1));
  goto $bb85;
$bb85:
  assume {:verifier.code 0} true;
  goto $bb94;
$bb86:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11331, 7} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11322, 24} true;
  assume {:verifier.code 0} true;
  $p262 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11322, 24} true;
  assume {:verifier.code 0} true;
  $i263 := $load.i32($M.0, $p262);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11322, 31} true;
  assume {:verifier.code 0} true;
  $i264 := $add.i32($i263, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11322, 10} true;
  assume {:verifier.code 0} true;
  $p265 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11322, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p265, $i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11323, 9} true;
  assume {:verifier.code 0} true;
  $i266 := $p2i.ref.i64($p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11323, 49} true;
  assume {:verifier.code 0} true;
  $p267 := $load.ref($M.20, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11323, 33} true;
  assume {:verifier.code 0} true;
  $i268 := $p2i.ref.i64($p267);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11323, 30} true;
  assume {:verifier.code 0} true;
  $i269 := $eq.i64($i266, $i268);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11323, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i269} true;
  goto $bb88, $bb89;
$bb88:
  assume ($i269 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11324, 7} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume !(($i269 == 1));
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11336, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11328, 18} true;
  assume {:verifier.code 0} true;
  $p270 := $p261;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11328, 18} true;
  assume {:verifier.code 0} true;
  $p271 := $load.ref($M.0, $p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  $i272 := $p2i.ref.i64($p271);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 30} true;
  assume {:verifier.code 0} true;
  $i273 := $ne.i64($i272, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  $p261 := $p271;
  assume {:branchcond $i273} true;
  goto $bb92, $bb93;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  assume ($i273 == 1);
  goto $bb86;
$bb93:
  assume !(($i273 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 9} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11330, 72} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11339, 38} true;
  assume {:verifier.code 0} true;
  $p274 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11339, 38} true;
  assume {:verifier.code 0} true;
  $i275 := $load.i64($M.0, $p274);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11339, 26} true;
  assume {:verifier.code 0} true;
  $p276 := $i2p.i64.ref($i275);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11339, 48} true;
  assume {:verifier.code 0} true;
  $p277 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11339, 13} true;
  assume {:verifier.code 0} true;
  call $i278 := copy_to_user($p276, $p277, 4);
  // WARNING: %317 = call i64 @copy_to_user(i8* %315, i8* %316, i64 4), !dbg !6165, !verifier.code !5806
  call {:cexpr "tmp___5"} boogie_si_record_i64($i278);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11340, 15} true;
  assume {:verifier.code 0} true;
  $i279 := $ne.i64($i278, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11340, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i279} true;
  goto $bb96, $bb97;
$bb96:
  assume ($i279 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11342, 3} true;
  assume {:verifier.code 0} true;
  $i280 := $sub.i64(0, 14);
  goto $bb98;
$bb97:
  assume !(($i279 == 1));
  assume {:verifier.code 0} true;
  $i280 := $i257;
  goto $bb98;
$bb98:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11340, 18} true;
  assume {:verifier.code 0} true;
  $p68, $i69 := $p50, $i280;
  goto $bb25;
$bb99:
  assume ($i282 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  $p283 := $p68;
  goto $bb102;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i282 == 1));
  goto $bb101;
$bb101:
  assume {:verifier.code 0} true;
  goto $bb112;
$bb102:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11359, 5} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 13} true;
  assume {:verifier.code 0} true;
  $i284 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i284} true;
  goto $bb104, $bb105;
$bb104:
  assume ($i284 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 41} true;
  assume {:verifier.code 0} true;
  $p285 := $add.ref($p283, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 44} true;
  assume {:verifier.code 0} true;
  $p286 := $bitcast.ref.ref($p285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 47} true;
  assume {:verifier.code 0} true;
  $p287 := $p286;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 47} true;
  assume {:verifier.code 0} true;
  $p288 := $load.ref($M.0, $p287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 21} true;
  assume {:verifier.code 0} true;
  $i289 := $p2i.ref.i64($p288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 50} true;
  assume {:verifier.code 0} true;
  $i290 := $ne.i64($i289, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i290} true;
  goto $bb107, $bb108;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 18} true;
  assume {:verifier.code 0} true;
  assume !(($i284 == 1));
  goto $bb106;
$bb106:
  assume {:verifier.code 0} true;
  goto $bb109;
$bb107:
  assume ($i290 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11350, 21} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($p283, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11350, 24} true;
  assume {:verifier.code 0} true;
  $p292 := $bitcast.ref.ref($p291);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11350, 27} true;
  assume {:verifier.code 0} true;
  $p293 := $p292;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11350, 27} true;
  assume {:verifier.code 0} true;
  $p294 := $load.ref($M.0, $p293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11350, 5} true;
  assume {:verifier.code 0} true;
  call put_ah_read($p294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11349, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i290 == 1));
  goto $bb106;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11354, 14} true;
  assume {:verifier.code 0} true;
  $p295 := $p283;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11354, 14} true;
  assume {:verifier.code 0} true;
  $p296 := $load.ref($M.0, $p295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11355, 9} true;
  assume {:verifier.code 0} true;
  $p297 := $bitcast.ref.ref($p283);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11355, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  $i298 := $p2i.ref.i64($p296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 26} true;
  assume {:verifier.code 0} true;
  $i299 := $ne.i64($i298, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  $p283 := $p296;
  assume {:branchcond $i299} true;
  goto $bb110, $bb111;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  assume ($i299 == 1);
  goto $bb102;
$bb111:
  assume !(($i299 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  goto $bb101;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11358, 68} true;
  assume {:verifier.code 0} true;
  $i42 := $i69;
  goto $bb16;
$bb113:
  assume ($i301 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11366, 23} true;
  assume {:verifier.code 0} true;
  $i302 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11366, 11} true;
  assume {:verifier.code 0} true;
  $i303 := $i302;
  goto $bb115;
$bb114:
  assume !(($i301 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11366, 11} true;
  assume {:verifier.code 0} true;
  $i303 := $i42;
  goto $bb115;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11366, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11366, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i303;
  goto $bb3;
}
const ib_uverbs_post_recv: ref;
axiom (ib_uverbs_post_recv == $sub.ref(0, 186519));
procedure  ib_uverbs_post_recv($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $i21: i1;
  var $i22: i8;
  var $i23: i1;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i64;
  var $i43: i1;
  var $i44: i64;
  var $i45: i1;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $p50: ref;
  var $i51: i64;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p46: ref;
  var $p59: ref;
  var $i60: i64;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $i64: i1;
  var $i65: i64;
  var $i33: i64;
  var $i66: i64;
  var $i67: i1;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i1;
  var $p68: ref;
  var $i74: i1;
  var $i75: i64;
  var $i76: i64;
  var $i10: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(24, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10697, metadata !5829), !dbg !10698, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10699, metadata !5829), !dbg !10700, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.ib_recv_wr** %7, metadata !10719, metadata !5829), !dbg !10720, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11505, 24} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11505, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := copy_from_user($p7, $p1, 24);
  // WARNING: %9 = call i64 @copy_from_user(i8* %8, i8* %1, i64 24), !dbg !5838, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11506, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11507, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11572, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11511, 38} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11511, 75} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32($i2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11512, 38} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11512, 38} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11512, 52} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11512, 52} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11512, 67} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11512, 67} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11511, 8} true;
  assume {:verifier.code 0} true;
  call $p19 := ib_uverbs_unmarshall_recv($p11, $i12, $i14, $i16, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11513, 20} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11513, 13} true;
  assume {:verifier.code 0} true;
  call $i21 := IS_ERR($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11513, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i1.i8($i21);
  // WARNING: %25 = zext i1 %24 to i8, !dbg !5856, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11514, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i8.i1($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11514, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11515, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11515, 15} true;
  assume {:verifier.code 0} true;
  call $i25 := PTR_ERR($p24);
  // WARNING: %29 = call i64 @PTR_ERR(i8* %28), !dbg !5864, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11516, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i25;
  goto $bb3;
$bb6:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11520, 30} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11520, 30} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11520, 47} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11520, 47} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11520, 8} true;
  assume {:verifier.code 0} true;
  call $p30 := idr_read_qp($i27, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11521, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11521, 26} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i64($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11521, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11522, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i64(0, 22);
  goto $bb10;
$bb9:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 26} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i64($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb30, $bb31;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11526, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11526, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11527, 21} true;
  assume {:verifier.code 0} true;
  $p35 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11527, 21} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11527, 30} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11527, 30} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11527, 46} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p30, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11527, 46} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  call $i41 := devirtbounce.15($p38, $p40, $p19, $p6);
  // WARNING: %49 = call i32 @devirtbounce.15(i32 (%struct.ib_qp*, %struct.ib_recv_wr*, %struct.ib_recv_wr**)* %46, %struct.ib_qp* %48, %struct.ib_recv_wr* %22, %struct.ib_recv_wr** %7)
  call {:cexpr "tmp___2"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11528, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $sext.i32.i64($i41);
  // WARNING: %50 = sext i32 %49 to i64, !dbg !5886, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11529, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_read($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11530, 11} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11530, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 30} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i64($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb14:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  $p46 := $p19;
  goto $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11543, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11534, 24} true;
  assume {:verifier.code 0} true;
  $p47 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11534, 24} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11534, 31} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i48, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11534, 10} true;
  assume {:verifier.code 0} true;
  $p50 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11534, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11535, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11535, 49} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.20, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11535, 33} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11535, 30} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i64($i51, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11535, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11536, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11548, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11540, 18} true;
  assume {:verifier.code 0} true;
  $p55 := $p46;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11540, 18} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 30} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i64($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  $p46 := $p56;
  assume {:branchcond $i58} true;
  goto $bb23, $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  assume ($i58 == 1);
  goto $bb17;
$bb24:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11542, 72} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11551, 38} true;
  assume {:verifier.code 0} true;
  $p59 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11551, 38} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i64($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11551, 26} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11551, 48} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11551, 13} true;
  assume {:verifier.code 0} true;
  call $i63 := copy_to_user($p61, $p62, 4);
  // WARNING: %81 = call i64 @copy_to_user(i8* %79, i8* %80, i64 4), !dbg !5919, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11552, 15} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i64($i63, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11552, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11554, 3} true;
  assume {:verifier.code 0} true;
  $i65 := $sub.i64(0, 14);
  goto $bb29;
$bb28:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  $i65 := $i42;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11552, 18} true;
  assume {:verifier.code 0} true;
  $i33 := $i65;
  goto $bb10;
$bb30:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  $p68 := $p19;
  goto $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i67 == 1));
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11565, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11560, 14} true;
  assume {:verifier.code 0} true;
  $p69 := $p68;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11560, 14} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11561, 9} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11561, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $p2i.ref.i64($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 26} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i64($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  $p68 := $p70;
  assume {:branchcond $i73} true;
  goto $bb35, $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  assume ($i73 == 1);
  goto $bb33;
$bb36:
  assume !(($i73 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11564, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11570, 15} true;
  assume {:verifier.code 0} true;
  $i74 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11570, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11570, 23} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11570, 11} true;
  assume {:verifier.code 0} true;
  $i76 := $i75;
  goto $bb40;
$bb39:
  assume !(($i74 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11570, 11} true;
  assume {:verifier.code 0} true;
  $i76 := $i33;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11570, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11570, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i76;
  goto $bb3;
}
const ib_uverbs_attach_mcast: ref;
axiom (ib_uverbs_attach_mcast == $sub.ref(0, 187551));
procedure  ib_uverbs_attach_mcast($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p29: ref;
  var $i30: i16;
  var $i31: i32;
  var $p32: ref;
  var $i33: i16;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i1;
  var $p28: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $i56: i16;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i16;
  var $i66: i32;
  var $i67: i16;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i43: i32;
  var $i73: i1;
  var $i74: i32;
  var $i75: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(24, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10839, metadata !5829), !dbg !10840, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10841, metadata !5829), !dbg !10842, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11818, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11818, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 24);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 24), !dbg !5828, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11819, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11819, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11820, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11876, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11824, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11824, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11824, 48} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11824, 48} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11824, 8} true;
  assume {:verifier.code 0} true;
  call $p13 := idr_write_qp($i10, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11825, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11825, 26} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11825, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11826, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11830, 45} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p13, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11830, 45} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11831, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11832, 49} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p18, 240);
  $p20 := $add.ref($p18, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11832, 60} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11833, 11} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 33} true;
  assume {:verifier.code 0} true;
  $p23 := $p22;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 66} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p18, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 42} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 39} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i24, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  $p28 := $p21;
  goto $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i27 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11852, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i16($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 38} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p28, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 38} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i16($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 25} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i16.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 22} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i31, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11836, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11837, 45} true;
  assume {:verifier.code 0} true;
  $p36 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11837, 22} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11837, 77} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p28, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11837, 81} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11837, 51} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11837, 15} true;
  assume {:verifier.code 0} true;
  call $i41 := memcmp($p37, $p40, 16);
  // WARNING: %48 = call i32 @memcmp(i8* %44, i8* %47, i64 16), !dbg !5880, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11839, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11839, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb15:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11841, 7} true;
  assume {:verifier.code 0} true;
  $i43 := 0;
  goto $bb17;
$bb16:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11873, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_write($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11874, 26} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11874, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb29, $bb30;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11845, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11848, 51} true;
  assume {:verifier.code 0} true;
  $p44 := $p28;
  $p45 := $p28;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11848, 56} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11849, 11} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 33} true;
  assume {:verifier.code 0} true;
  $p48 := $p47;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 39} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  $p28 := $p46;
  assume {:branchcond $i50} true;
  goto $bb20, $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  assume ($i50 == 1);
  goto $bb11;
$bb21:
  assume !(($i50 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11851, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11856, 13} true;
  assume {:verifier.code 0} true;
  call $p51 := kmalloc(40, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11857, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11858, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11858, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11858, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11860, 5} true;
  assume {:verifier.code 0} true;
  $i43 := $sub.i32(0, 12);
  goto $bb17;
$bb24:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11864, 20} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11864, 20} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i16($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11864, 10} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p52, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11864, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11865, 28} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p52, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11865, 32} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11865, 3} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11865, 61} true;
  assume {:verifier.code 0} true;
  $p61 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11865, 3} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11865, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p60, $p62, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11866, 38} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p52, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11866, 53} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11866, 53} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i16($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11866, 43} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i16.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11866, 43} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i32.i16($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11866, 9} true;
  assume {:verifier.code 0} true;
  call $i68 := ib_attach_mcast($p13, $p63, $i67);
  // WARNING: %85 = call i32 @ib_attach_mcast(%struct.ib_qp* %16, %union.__anonunion____missing_field_name_28* %80, i16 zeroext %84), !dbg !5918, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11867, 11} true;
  assume {:verifier.code 0} true;
  $i69 := $eq.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11867, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11868, 28} true;
  assume {:verifier.code 0} true;
  $p70 := $p52;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11868, 41} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p18, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11868, 5} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p70, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11869, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i69 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11870, 11} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11870, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p72);
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11867, 14} true;
  assume {:verifier.code 0} true;
  $i43 := $i68;
  goto $bb17;
$bb29:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11874, 22} true;
  assume {:verifier.code 0} true;
  $i74 := $i43;
  goto $bb31;
$bb30:
  assume !(($i73 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11874, 22} true;
  assume {:verifier.code 0} true;
  $i74 := $i2;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11874, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11874, 11} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11874, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i75;
  goto $bb3;
}
const ib_uverbs_detach_mcast: ref;
axiom (ib_uverbs_detach_mcast == $sub.ref(0, 188583));
procedure  ib_uverbs_detach_mcast($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i16;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p37: ref;
  var $i38: i16;
  var $i39: i32;
  var $p40: ref;
  var $i41: i16;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i1;
  var $p36: ref;
  var $i61: i1;
  var $i62: i32;
  var $i63: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(24, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !10975, metadata !5829), !dbg !10976, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10977, metadata !5829), !dbg !10978, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.ib_uverbs_detach_mcast* %5, metadata !10981, metadata !5829), !dbg !10989, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11893, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11893, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 24);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 24), !dbg !5830, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11894, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11894, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11895, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11943, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11899, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11899, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11899, 48} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11899, 48} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11899, 8} true;
  assume {:verifier.code 0} true;
  call $p13 := idr_write_qp($i10, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11900, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11900, 26} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11900, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11901, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11905, 52} true;
  assume {:verifier.code 0} true;
  $p16 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11905, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11905, 68} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11905, 68} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i16($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11905, 58} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11905, 58} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i16($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11905, 9} true;
  assume {:verifier.code 0} true;
  call $i22 := ib_detach_mcast($p13, $p17, $i21);
  // WARNING: %28 = call i32 @ib_detach_mcast(%struct.ib_qp* %16, %union.__anonunion____missing_field_name_28* %23, i16 zeroext %27), !dbg !5853, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11906, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11906, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11907, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11940, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_write($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11941, 26} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11941, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb27, $bb28;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11911, 45} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p13, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11911, 45} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11912, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11913, 49} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 240);
  $p28 := $add.ref($p26, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11913, 60} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11914, 11} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 33} true;
  assume {:verifier.code 0} true;
  $p31 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 66} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p26, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 42} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 39} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i64($i32, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  $p36 := $p29;
  goto $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i35 == 1));
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11934, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 17} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i16($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i16.i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 38} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p36, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 38} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 25} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 22} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i39, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11917, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11918, 45} true;
  assume {:verifier.code 0} true;
  $p44 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11918, 22} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11918, 77} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p36, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11918, 81} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11918, 51} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11918, 15} true;
  assume {:verifier.code 0} true;
  call $i49 := memcmp($p45, $p48, 16);
  // WARNING: %59 = call i32 @memcmp(i8* %55, i8* %58, i64 16), !dbg !5892, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11920, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11920, 9} true;
  assume {:verifier.code 0} true;
  $p51 := $p36;
  assume {:branchcond $i50} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb19:
  assume ($i50 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11921, 25} true;
  assume {:verifier.code 0} true;
  $p52 := $p51;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11921, 7} true;
  assume {:verifier.code 0} true;
  call list_del($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11922, 13} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11922, 7} true;
  assume {:verifier.code 0} true;
  call kfree($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11923, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 76} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11927, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11930, 51} true;
  assume {:verifier.code 0} true;
  $p54 := $p36;
  $p55 := $p36;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11930, 56} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11931, 11} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 33} true;
  assume {:verifier.code 0} true;
  $p58 := $p57;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 39} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i64($i59, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  $p36 := $p56;
  assume {:branchcond $i60} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  assume ($i60 == 1);
  goto $bb15;
$bb25:
  assume !(($i60 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11933, 76} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb27:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11941, 22} true;
  assume {:verifier.code 0} true;
  $i62 := $i22;
  goto $bb29;
$bb28:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11941, 22} true;
  assume {:verifier.code 0} true;
  $i62 := $i2;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11941, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11941, 11} true;
  assume {:verifier.code 0} true;
  $i63 := $sext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11941, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i63;
  goto $bb3;
}
const ib_uverbs_create_srq: ref;
axiom (ib_uverbs_create_srq == $sub.ref(0, 189615));
procedure  ib_uverbs_create_srq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $i46: i64;
  var $i47: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(48, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11095, metadata !5829), !dbg !11096, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11097, metadata !5829), !dbg !11098, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12432, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i32($i3, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12432, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12433, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12462, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12437, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12437, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p9, $p1, 32);
  // WARNING: %13 = call i64 @copy_from_user(i8* %12, i8* %1, i64 32), !dbg !5851, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12438, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12438, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12439, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12443, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12443, 23} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i64($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12443, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12443, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12444, 26} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12444, 26} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12444, 8} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12444, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12445, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12445, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12446, 24} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12446, 24} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12446, 8} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p5, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12446, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12447, 21} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12447, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12447, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12447, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12448, 22} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12448, 22} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12448, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p5, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12448, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12449, 24} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12449, 24} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12449, 8} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12449, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12450, 37} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12450, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12450, 15} true;
  assume {:verifier.code 0} true;
  $M.37 := $store.ref($M.37, $p32, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12451, 47} true;
  assume {:verifier.code 0} true;
  $p33 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12451, 47} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i64($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12451, 56} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12451, 18} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12451, 9} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12451, 16} true;
  assume {:verifier.code 0} true;
  $M.38 := $store.ref($M.38, $p37, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12452, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12452, 40} true;
  assume {:verifier.code 0} true;
  $i39 := $sub.i64($i38, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12452, 9} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12452, 15} true;
  assume {:verifier.code 0} true;
  $M.39 := $store.i64($M.39, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12453, 18} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12453, 42} true;
  assume {:verifier.code 0} true;
  $i42 := $sub.i64($i41, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12453, 9} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12453, 16} true;
  assume {:verifier.code 0} true;
  $M.40 := $store.i64($M.40, $p43, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12454, 9} true;
  assume {:verifier.code 0} true;
  call $i44 := __uverbs_create_xsrq($p0, $p5, $p6);
  // WARNING: %50 = call i32 @__uverbs_create_xsrq(%struct.ib_uverbs_file* %0, %struct.ib_uverbs_create_xsrq* %6, %struct.ib_udata* %7), !dbg !5895, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12455, 11} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12455, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12456, 13} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12456, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i46;
  goto $bb3;
$bb9:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12460, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12460, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i47;
  goto $bb3;
}
const ib_uverbs_modify_srq: ref;
axiom (ib_uverbs_modify_srq == $sub.ref(0, 190647));
procedure  ib_uverbs_modify_srq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i64;
  var $i10: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11195, metadata !5829), !dbg !11196, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11197, metadata !5829), !dbg !11198, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12507, 24} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12507, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := copy_from_user($p7, $p1, 16);
  // WARNING: %9 = call i64 @copy_from_user(i8* %8, i8* %1, i64 16), !dbg !5831, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12508, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12508, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12509, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12530, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12513, 37} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12513, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12513, 15} true;
  assume {:verifier.code 0} true;
  $M.41 := $store.ref($M.41, $p12, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12514, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12514, 16} true;
  assume {:verifier.code 0} true;
  $M.42 := $store.ref($M.42, $p13, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12515, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12515, 40} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i64($i14, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12515, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12515, 15} true;
  assume {:verifier.code 0} true;
  $M.43 := $store.i64($M.43, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12516, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12516, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12516, 16} true;
  assume {:verifier.code 0} true;
  $M.44 := $store.i64($M.44, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12517, 32} true;
  assume {:verifier.code 0} true;
  $p19 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12517, 32} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12517, 50} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12517, 50} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12517, 9} true;
  assume {:verifier.code 0} true;
  call $p23 := idr_read_srq($i20, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12518, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12518, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12518, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12519, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12523, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12523, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12523, 8} true;
  assume {:verifier.code 0} true;
  $p28 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12523, 15} true;
  assume {:verifier.code 0} true;
  $M.45 := $store.i32($M.45, $p28, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12524, 24} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12524, 24} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12524, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12524, 18} true;
  assume {:verifier.code 0} true;
  $M.46 := $store.i32($M.46, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12525, 18} true;
  assume {:verifier.code 0} true;
  $p32 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12525, 18} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12525, 27} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12525, 27} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12525, 81} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12525, 81} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  call $i38 := devirtbounce.16($p35, $p23, $p6, $i37, $p5);
  // WARNING: %44 = call i32 @devirtbounce.16(i32 (%struct.ib_srq*, %struct.__anonstruct_per_transport_caps_243*, i32, %struct.ib_udata*)* %41, %struct.ib_srq* %26, %struct.__anonstruct_per_transport_caps_243* %7, i32 %43, %struct.ib_udata* %6)
  call {:cexpr "ret"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12527, 3} true;
  assume {:verifier.code 0} true;
  call put_srq_read($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12528, 26} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12528, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12528, 22} true;
  assume {:verifier.code 0} true;
  $i40 := $i38;
  goto $bb10;
$bb9:
  assume !(($i39 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12528, 22} true;
  assume {:verifier.code 0} true;
  $i40 := $i2;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12528, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12528, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12528, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i41;
  goto $bb3;
}
const ib_uverbs_query_srq: ref;
axiom (ib_uverbs_query_srq == $sub.ref(0, 191679));
procedure  ib_uverbs_query_srq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i1;
  var $i38: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11273, metadata !5829), !dbg !11274, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11275, metadata !5829), !dbg !11276, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12543, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i32($i3, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12543, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12544, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12579, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12548, 24} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12548, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p9, $p1, 16);
  // WARNING: %13 = call i64 @copy_from_user(i8* %12, i8* %1, i64 16), !dbg !5841, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12549, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12549, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12550, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12554, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12554, 32} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12554, 50} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12554, 50} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12554, 9} true;
  assume {:verifier.code 0} true;
  call $p16 := idr_read_srq($i13, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12555, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12555, 27} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12555, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12556, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 22);
  goto $bb3;
$bb9:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12560, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := ib_query_srq($p16, $p6);
  // WARNING: %28 = call i32 @ib_query_srq(%struct.ib_srq* %22, %struct.__anonstruct_per_transport_caps_243* %7), !dbg !5860, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12561, 3} true;
  assume {:verifier.code 0} true;
  call put_srq_read($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12562, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12562, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12563, 13} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12563, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i21;
  goto $bb3;
$bb12:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12567, 3} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12567, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p22, 0, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12568, 22} true;
  assume {:verifier.code 0} true;
  $p23 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12568, 22} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12568, 8} true;
  assume {:verifier.code 0} true;
  $p25 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12568, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12569, 23} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12569, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12569, 8} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12569, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12570, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12570, 25} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12570, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12570, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12571, 38} true;
  assume {:verifier.code 0} true;
  $p32 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12571, 38} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i64($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12571, 26} true;
  assume {:verifier.code 0} true;
  $p34 := $i2p.i64.ref($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12571, 48} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12571, 13} true;
  assume {:verifier.code 0} true;
  call $i36 := copy_to_user($p34, $p35, 16);
  // WARNING: %48 = call i64 @copy_to_user(i8* %46, i8* %47, i64 16), !dbg !5883, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12572, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i64($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12572, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12573, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb15:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12577, 11} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12577, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i38;
  goto $bb3;
}
const ib_uverbs_destroy_srq: ref;
axiom (ib_uverbs_destroy_srq == $sub.ref(0, 192711));
procedure  ib_uverbs_destroy_srq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $i26: i1;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i1;
  var $i46: i32;
  var $i47: i1;
  var $i48: i32;
  var $i49: i64;
  var $i9: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11360, metadata !5829), !dbg !11361, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11362, metadata !5829), !dbg !11363, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.__anonstruct_atomic_t_6* %6, metadata !11373, metadata !5829), !dbg !11377, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12598, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12598, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := copy_from_user($p6, $p1, 16);
  // WARNING: %8 = call i64 @copy_from_user(i8* %7, i8* %1, i64 16), !dbg !5832, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12599, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12599, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12600, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12649, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12604, 56} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12604, 56} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12604, 74} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12604, 74} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12604, 10} true;
  assume {:verifier.code 0} true;
  call $p14 := idr_write_uobj(ib_uverbs_srq_idr, $i11, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12605, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12605, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12605, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12606, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 22);
  goto $bb3;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12610, 32} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p14, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12610, 32} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12610, 9} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12612, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12613, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p19, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12613, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  // WARNING: %28 = load i32, i32* %27, align 8, !dbg !5860, !verifier.code !5806
  call {:cexpr "srq_type"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12614, 9} true;
  assume {:verifier.code 0} true;
  call $i23 := ib_destroy_srq($p19);
  // WARNING: %29 = call i32 @ib_destroy_srq(%struct.ib_srq* %25), !dbg !5863, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12615, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12615, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12616, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p14, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12616, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12617, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12620, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12621, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12621, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12622, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12622, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i27;
  goto $bb3;
$bb12:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12626, 31} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12626, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12628, 10} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12629, 23} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12629, 23} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12629, 31} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12629, 5} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12630, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12633, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_srq_idr, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12634, 29} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12634, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12635, 20} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p14, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12635, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12636, 24} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12636, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12637, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_release_uevent($p0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12638, 3} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12638, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p36, 0, 4, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12639, 31} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p20, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12639, 31} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12639, 8} true;
  assume {:verifier.code 0} true;
  $p39 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12639, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12640, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12641, 38} true;
  assume {:verifier.code 0} true;
  $p40 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12641, 38} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i64($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12641, 26} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12641, 48} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12641, 13} true;
  assume {:verifier.code 0} true;
  call $i44 := copy_to_user($p42, $p43, 4);
  // WARNING: %59 = call i64 @copy_to_user(i8* %57, i8* %58, i64 4), !dbg !5907, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12642, 15} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i64($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12642, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12644, 3} true;
  assume {:verifier.code 0} true;
  $i46 := $sub.i32(0, 14);
  goto $bb19;
$bb18:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  $i46 := $i23;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12647, 26} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12647, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12647, 22} true;
  assume {:verifier.code 0} true;
  $i48 := $i46;
  goto $bb22;
$bb21:
  assume !(($i47 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12647, 22} true;
  assume {:verifier.code 0} true;
  $i48 := $i2;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12647, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12647, 11} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i32.i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12647, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i49;
  goto $bb3;
}
const ib_uverbs_post_srq_recv: ref;
axiom (ib_uverbs_post_srq_recv == $sub.ref(0, 193743));
procedure  ib_uverbs_post_srq_recv($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $i21: i1;
  var $i22: i8;
  var $i23: i1;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i64;
  var $i41: i1;
  var $i42: i64;
  var $i43: i1;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $p48: ref;
  var $i49: i64;
  var $p50: ref;
  var $i51: i64;
  var $i52: i1;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i1;
  var $p44: ref;
  var $p57: ref;
  var $i58: i64;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i1;
  var $i63: i64;
  var $i33: i64;
  var $i64: i64;
  var $i65: i1;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $i71: i1;
  var $p66: ref;
  var $i72: i1;
  var $i73: i64;
  var $i74: i64;
  var $i10: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(24, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11479, metadata !5829), !dbg !11480, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11481, metadata !5829), !dbg !11482, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.ib_recv_wr** %7, metadata !11500, metadata !5829), !dbg !11501, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11591, 24} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11591, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := copy_from_user($p7, $p1, 24);
  // WARNING: %9 = call i64 @copy_from_user(i8* %8, i8* %1, i64 24), !dbg !5838, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11592, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11592, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11593, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11658, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11597, 38} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11597, 75} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32($i2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11598, 38} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11598, 38} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11598, 52} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11598, 52} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11598, 67} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11598, 67} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11597, 8} true;
  assume {:verifier.code 0} true;
  call $p19 := ib_uverbs_unmarshall_recv($p11, $i12, $i14, $i16, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11599, 20} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11599, 13} true;
  assume {:verifier.code 0} true;
  call $i21 := IS_ERR($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11599, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i1.i8($i21);
  // WARNING: %25 = zext i1 %24 to i8, !dbg !5856, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11600, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i8.i1($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11600, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11601, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11601, 15} true;
  assume {:verifier.code 0} true;
  call $i25 := PTR_ERR($p24);
  // WARNING: %29 = call i64 @PTR_ERR(i8* %28), !dbg !5864, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11602, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i25;
  goto $bb3;
$bb6:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11606, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11606, 32} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11606, 50} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11606, 50} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11606, 9} true;
  assume {:verifier.code 0} true;
  call $p30 := idr_read_srq($i27, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11607, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11607, 27} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i64($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11607, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11608, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i64(0, 22);
  goto $bb10;
$bb9:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 26} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i64($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb30, $bb31;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11612, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11612, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11613, 22} true;
  assume {:verifier.code 0} true;
  $p35 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11613, 22} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11613, 31} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, 584);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11613, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  call $i39 := devirtbounce.17($p38, $p30, $p19, $p6);
  // WARNING: %47 = call i32 @devirtbounce.17(i32 (%struct.ib_srq*, %struct.ib_recv_wr*, %struct.ib_recv_wr**)* %46, %struct.ib_srq* %36, %struct.ib_recv_wr* %22, %struct.ib_recv_wr** %7)
  call {:cexpr "tmp___2"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11614, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  // WARNING: %48 = sext i32 %47 to i64, !dbg !5885, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11615, 3} true;
  assume {:verifier.code 0} true;
  call put_srq_read($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11616, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11616, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 30} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb14:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $p19;
  goto $bb17;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11629, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11620, 24} true;
  assume {:verifier.code 0} true;
  $p45 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11620, 24} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11620, 31} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i46, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11620, 10} true;
  assume {:verifier.code 0} true;
  $p48 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11620, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11621, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11621, 49} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.20, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11621, 33} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11621, 30} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i64($i49, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11621, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11622, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11634, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11626, 18} true;
  assume {:verifier.code 0} true;
  $p53 := $p44;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11626, 18} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 30} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i64($i55, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $p54;
  assume {:branchcond $i56} true;
  goto $bb23, $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  assume ($i56 == 1);
  goto $bb17;
$bb24:
  assume !(($i56 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11628, 72} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11637, 38} true;
  assume {:verifier.code 0} true;
  $p57 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11637, 38} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i64($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11637, 26} true;
  assume {:verifier.code 0} true;
  $p59 := $i2p.i64.ref($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11637, 48} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11637, 13} true;
  assume {:verifier.code 0} true;
  call $i61 := copy_to_user($p59, $p60, 4);
  // WARNING: %79 = call i64 @copy_to_user(i8* %77, i8* %78, i64 4), !dbg !5918, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11638, 15} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i64($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11638, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11640, 3} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i64(0, 14);
  goto $bb29;
$bb28:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  $i63 := $i40;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11638, 18} true;
  assume {:verifier.code 0} true;
  $i33 := $i63;
  goto $bb10;
$bb30:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  $p66 := $p19;
  goto $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11651, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11646, 14} true;
  assume {:verifier.code 0} true;
  $p67 := $p66;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11646, 14} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11647, 9} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11647, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $p2i.ref.i64($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 26} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i64($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  $p66 := $p68;
  assume {:branchcond $i71} true;
  goto $bb35, $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  assume ($i71 == 1);
  goto $bb33;
$bb36:
  assume !(($i71 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11650, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11656, 15} true;
  assume {:verifier.code 0} true;
  $i72 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11656, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11656, 23} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11656, 11} true;
  assume {:verifier.code 0} true;
  $i74 := $i73;
  goto $bb40;
$bb39:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11656, 11} true;
  assume {:verifier.code 0} true;
  $i74 := $i33;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11656, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11656, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i74;
  goto $bb3;
}
const ib_uverbs_open_xrcd: ref;
axiom (ib_uverbs_open_xrcd == $sub.ref(0, 194775));
procedure  ib_uverbs_open_xrcd($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i1;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i32;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i1;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i64;
  var $i61: i1;
  var $p62: ref;
  var $i63: i32;
  var $i64: i32;
  var $i65: i1;
  var $i66: i64;
  var $i67: i1;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i64;
  var $i77: i1;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i1;
  var $i100: i8;
  var $i101: i1;
  var $p102: ref;
  var $i103: i64;
  var $i104: i32;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $i123: i1;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $i128: i32;
  var $p129: ref;
  var $i130: i64;
  var $i131: i1;
  var $i132: i1;
  var $p133: ref;
  var $p134: ref;
  var $i135: i32;
  var $i136: i1;
  var $p138: ref;
  var $p139: ref;
  var $i140: i64;
  var $p141: ref;
  var $p142: ref;
  var $i143: i64;
  var $i144: i1;
  var $p145: ref;
  var $p146: ref;
  var $i147: i64;
  var $i148: i1;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $i153: i32;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: i64;
  var $i169: i64;
  var $i170: i1;
  var $i171: i1;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $i137: i32;
  var $p175: ref;
  var $i124: i32;
  var $i176: i32;
  var $i105: i32;
  var $p177: ref;
  var $i53: i32;
  var $p178: ref;
  var $p179: ref;
  var $i180: i64;
  var $i181: i1;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $i186: i32;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $i190: i64;
  var $i13: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11619, metadata !5829), !dbg !11620, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11621, metadata !5829), !dbg !11622, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9253, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9253, 10} true;
  assume {:verifier.code 0} true;
  $M.47 := $store.ref($M.47, $p10, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9254, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9254, 11} true;
  assume {:verifier.code 0} true;
  $M.47 := $store.i32($M.47, $p11, 0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.inode* null, i64 0, metadata !11655, metadata !5829), !dbg !11656, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !11657, metadata !5829), !dbg !11658, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9258, 30} true;
  assume {:verifier.code 0} true;
  $i12 := $ule.i32($i3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9259, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9399, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9263, 24} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9263, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := copy_from_user($p14, $p1, 16);
  // WARNING: %18 = call i64 @copy_from_user(i8* %17, i8* %1, i64 16), !dbg !5858, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9264, 11} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9264, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9265, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9269, 37} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9269, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9269, 15} true;
  assume {:verifier.code 0} true;
  $M.48 := $store.ref($M.48, $p18, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9270, 47} true;
  assume {:verifier.code 0} true;
  $p19 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9270, 47} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9270, 56} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9270, 18} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9270, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9270, 16} true;
  assume {:verifier.code 0} true;
  $M.49 := $store.ref($M.49, $p23, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9271, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9271, 40} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i64($i24, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9271, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9271, 15} true;
  assume {:verifier.code 0} true;
  $M.50 := $store.i64($M.50, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9272, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9272, 42} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i64($i27, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9272, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9272, 16} true;
  assume {:verifier.code 0} true;
  $M.51 := $store.i64($M.51, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9273, 30} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9273, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9273, 39} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9273, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9274, 11} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9274, 11} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9274, 14} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9274, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:verifier.code 0} true;
  call $p38 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p39 := fdget.2($p38, $i37);
  assume {:verifier.code 0} true;
  $p40 := $p38;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.52, $p40);
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p38, 8);
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.52, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  $p45 := $p44;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  $M.47 := $store.ref($M.47, $p45, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p44, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  $M.47 := $store.i32($M.47, $p46, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9275, 9} true;
  assume {:verifier.code 0} true;
  call $M.47 := $memcpy.i8($M.47, $M.47, $p47, $p48, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9276, 27} true;
  assume {:verifier.code 0} true;
  $p49 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9276, 27} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.47, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9276, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9276, 32} true;
  assume {:verifier.code 0} true;
  $i52 := $eq.i64($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9276, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  $p72, $p73 := $0.ref, $0.ref;
  goto $bb26;
$bb10:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9278, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32(0, 9);
  goto $bb12;
$bb11:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9391, 25} true;
  assume {:verifier.code 0} true;
  $p178 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9391, 25} true;
  assume {:verifier.code 0} true;
  $p179 := $load.ref($M.47, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9391, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $p2i.ref.i64($p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9391, 30} true;
  assume {:verifier.code 0} true;
  $i181 := $ne.i64($i180, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9391, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i181} true;
  goto $bb64, $bb65;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9282, 49} true;
  assume {:verifier.code 0} true;
  $p54 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9282, 49} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.47, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9282, 13} true;
  assume {:verifier.code 0} true;
  call $p56 := file_inode($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9283, 28} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9283, 28} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9283, 12} true;
  assume {:verifier.code 0} true;
  call $p59 := find_xrcd($p58, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 30} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i64($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 71} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 79} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 79} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 86} true;
  assume {:verifier.code 0} true;
  $i64 := $and.i32($i63, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 93} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb17, $bb18;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 71} true;
  assume {:verifier.code 0} true;
  assume !(($i61 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb17:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9286, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32(0, 11);
  goto $bb12;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9284, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb16;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 30} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i64($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 71} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 79} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 79} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 86} true;
  assume {:verifier.code 0} true;
  $i70 := $and.i32($i69, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 94} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 71} true;
  assume {:verifier.code 0} true;
  assume !(($i67 == 1));
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb23:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9292, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32(0, 22);
  goto $bb12;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9290, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb22;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9296, 3} true;
  assume {:verifier.code 0} true;
  $p72, $p73 := $p59, $p56;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9299, 13} true;
  assume {:verifier.code 0} true;
  call $p74 := kmalloc(224, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9300, 9} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9301, 7} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9301, 27} true;
  assume {:verifier.code 0} true;
  $i77 := $eq.i64($i76, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9301, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9303, 5} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32(0, 12);
  goto $bb12;
$bb28:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9307, 20} true;
  assume {:verifier.code 0} true;
  $p78 := $p75;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9307, 41} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9307, 41} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9307, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p78, 0, $p80, xrcd_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9308, 21} true;
  assume {:verifier.code 0} true;
  $p81 := $p75;
  $p82 := $add.ref($p75, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9308, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9309, 7} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9309, 28} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.i64($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9309, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 23} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 23} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 32} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p86, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 32} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 41} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p88, 880);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 41} true;
  assume {:verifier.code 0} true;
  $p90 := $load.ref($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 61} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 61} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 70} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p92, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 70} true;
  assume {:verifier.code 0} true;
  $p94 := $load.ref($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 84} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9310, 84} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  call $p97 := devirtbounce.18($p90, $p94, $p96, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9312, 22} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9312, 15} true;
  assume {:verifier.code 0} true;
  call $i99 := IS_ERR($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9312, 13} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i1.i8($i99);
  // WARNING: %121 = zext i1 %120 to i8, !dbg !5958, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i8($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9313, 15} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i8.i1($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9313, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  $p115, $i116 := $p72, 0;
  goto $bb36;
$bb32:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9314, 25} true;
  assume {:verifier.code 0} true;
  $p102 := $bitcast.ref.ref($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9314, 17} true;
  assume {:verifier.code 0} true;
  call $i103 := PTR_ERR($p102);
  // WARNING: %125 = call i64 @PTR_ERR(i8* %124), !dbg !5966, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9315, 13} true;
  assume {:verifier.code 0} true;
  $i104 := $trunc.i64.i32($i103);
  // WARNING: %126 = trunc i64 %125 to i32, !dbg !5969, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9316, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $i104;
  goto $bb34;
$bb33:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9389, 25} true;
  assume {:verifier.code 0} true;
  $p177 := $p75;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9389, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9389, 3} true;
  assume {:verifier.code 0} true;
  $i53 := $i105;
  goto $bb12;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9320, 11} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p97, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9320, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p106, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9321, 27} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9321, 27} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9321, 36} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p108, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9321, 36} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9321, 11} true;
  assume {:verifier.code 0} true;
  $p111 := $p97;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9321, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p111, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9322, 24} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p97, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9322, 5} true;
  assume {:verifier.code 0} true;
  call atomic_set($p112, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9323, 26} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p97, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9323, 5} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p113, .str.14, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9324, 28} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p97, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9324, 5} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p114);
  // WARNING: call void @INIT_LIST_HEAD(%struct.list_head* %137), !dbg !5982, !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9326, 3} true;
  assume {:verifier.code 0} true;
  $p115, $i116 := $p97, 1;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9329, 21} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p75, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9329, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p117, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9330, 25} true;
  assume {:verifier.code 0} true;
  $p118 := $bitcast.ref.ref($p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9330, 8} true;
  assume {:verifier.code 0} true;
  $p119 := $p75;
  $p120 := $add.ref($p75, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9330, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p120, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9331, 51} true;
  assume {:verifier.code 0} true;
  $p121 := $p75;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9331, 9} true;
  assume {:verifier.code 0} true;
  call $i122 := idr_add_uobj(ib_uverbs_xrcd_idr, $p121);
  // WARNING: %145 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_xrcd_idr, %struct.ib_uobject* %144), !dbg !5990, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9332, 11} true;
  assume {:verifier.code 0} true;
  $i123 := $ne.i32($i122, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9332, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9333, 5} true;
  assume {:verifier.code 0} true;
  $i124 := $i122;
  goto $bb39;
$bb38:
  assume !(($i123 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9387, 3} true;
  assume {:verifier.code 0} true;
  call $i176 := ib_dealloc_xrcd($p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9387, 3} true;
  assume {:verifier.code 0} true;
  $i105 := $i124;
  goto $bb34;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9337, 3} true;
  assume {:verifier.code 0} true;
  $p125 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9337, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p125, 0, 4, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9338, 35} true;
  assume {:verifier.code 0} true;
  $p126 := $p75;
  $p127 := $add.ref($p75, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9338, 43} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i32($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9338, 8} true;
  assume {:verifier.code 0} true;
  $p129 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9338, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p129, $i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9339, 7} true;
  assume {:verifier.code 0} true;
  $i130 := $p2i.ref.i64($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9339, 29} true;
  assume {:verifier.code 0} true;
  $i131 := $ne.i64($i130, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9339, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i131 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9340, 18} true;
  assume {:verifier.code 0} true;
  $i132 := $ne.i32($i116, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9340, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i132} true;
  goto $bb43, $bb44;
$bb42:
  assume !(($i131 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb43:
  assume ($i132 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9341, 37} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9341, 37} true;
  assume {:verifier.code 0} true;
  $p134 := $load.ref($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9341, 13} true;
  assume {:verifier.code 0} true;
  call $i135 := xrcd_table_insert($p134, $p73, $p115);
  // WARNING: %162 = call i32 @xrcd_table_insert(%struct.ib_uverbs_device* %161, %struct.inode* %.03, %struct.ib_xrcd* %.15), !dbg !6011, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9342, 15} true;
  assume {:verifier.code 0} true;
  $i136 := $ne.i32($i135, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9342, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb45, $bb46;
$bb44:
  assume !(($i132 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb45:
  assume ($i136 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9343, 9} true;
  assume {:verifier.code 0} true;
  $i137 := $i135;
  goto $bb47;
$bb46:
  assume !(($i136 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9385, 48} true;
  assume {:verifier.code 0} true;
  $p175 := $p75;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9385, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_xrcd_idr, $p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9385, 3} true;
  assume {:verifier.code 0} true;
  $i124 := $i137;
  goto $bb39;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9347, 5} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9350, 24} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p115, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9350, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9354, 38} true;
  assume {:verifier.code 0} true;
  $p139 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9354, 38} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i64($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9354, 26} true;
  assume {:verifier.code 0} true;
  $p141 := $i2p.i64.ref($i140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9354, 48} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9354, 13} true;
  assume {:verifier.code 0} true;
  call $i143 := copy_to_user($p141, $p142, 4);
  // WARNING: %176 = call i64 @copy_to_user(i8* %174, i8* %175, i64 4), !dbg !6024, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9355, 15} true;
  assume {:verifier.code 0} true;
  $i144 := $ne.i64($i143, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9355, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i144} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i144 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9357, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !(($i144 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9374, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $p2i.ref.i64($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9374, 29} true;
  assume {:verifier.code 0} true;
  $i170 := $ne.i64($i169, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9374, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb58, $bb59;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9361, 25} true;
  assume {:verifier.code 0} true;
  $p145 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9361, 25} true;
  assume {:verifier.code 0} true;
  $p146 := $load.ref($M.47, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9361, 7} true;
  assume {:verifier.code 0} true;
  $i147 := $p2i.ref.i64($p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9361, 30} true;
  assume {:verifier.code 0} true;
  $i148 := $ne.i64($i147, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9361, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb55, $bb56;
$bb55:
  assume ($i148 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9362, 5} true;
  assume {:verifier.code 0} true;
  $p149 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9362, 5} true;
  assume {:verifier.code 0} true;
  $p150 := $p149;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9362, 5} true;
  assume {:verifier.code 0} true;
  $p151 := $load.ref($M.47, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9362, 5} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p149, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9362, 5} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i32($M.47, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9362, 5} true;
  assume {:verifier.code 0} true;
  call fdput($p151, $i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9363, 3} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb56:
  assume !(($i148 == 1));
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9366, 29} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9366, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p154, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9367, 24} true;
  assume {:verifier.code 0} true;
  $p155 := $p75;
  $p156 := $add.ref($p75, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9367, 47} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9367, 47} true;
  assume {:verifier.code 0} true;
  $p158 := $load.ref($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9367, 58} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p158, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9367, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p156, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9368, 24} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9368, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9369, 8} true;
  assume {:verifier.code 0} true;
  $p161 := $p75;
  $p162 := $add.ref($p75, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9369, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p162, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9370, 19} true;
  assume {:verifier.code 0} true;
  $p163 := $p75;
  $p164 := $add.ref($p75, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9370, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9371, 25} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9371, 25} true;
  assume {:verifier.code 0} true;
  $p166 := $load.ref($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9371, 34} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p166, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9371, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9372, 11} true;
  assume {:verifier.code 0} true;
  $i168 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9372, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i168;
  goto $bb3;
$bb58:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9375, 18} true;
  assume {:verifier.code 0} true;
  $i171 := $ne.i32($i116, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9375, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i171} true;
  goto $bb60, $bb61;
$bb59:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb60:
  assume ($i171 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9376, 31} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9376, 31} true;
  assume {:verifier.code 0} true;
  $p173 := $load.ref($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9376, 7} true;
  assume {:verifier.code 0} true;
  call xrcd_table_delete($p173, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9377, 5} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i171 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9380, 24} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p115, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9380, 5} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9381, 3} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9374, 66} true;
  assume {:verifier.code 0} true;
  $i137 := $sub.i32(0, 14);
  goto $bb47;
$bb64:
  assume ($i181 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9392, 5} true;
  assume {:verifier.code 0} true;
  $p182 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9392, 5} true;
  assume {:verifier.code 0} true;
  $p183 := $p182;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9392, 5} true;
  assume {:verifier.code 0} true;
  $p184 := $load.ref($M.47, $p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9392, 5} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p182, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9392, 5} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i32($M.47, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9392, 5} true;
  assume {:verifier.code 0} true;
  call fdput($p184, $i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9393, 3} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i181 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9396, 25} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9396, 25} true;
  assume {:verifier.code 0} true;
  $p188 := $load.ref($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9396, 34} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p188, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9396, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9397, 11} true;
  assume {:verifier.code 0} true;
  $i190 := $sext.i32.i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9397, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i190;
  goto $bb3;
}
const ib_uverbs_close_xrcd: ref;
axiom (ib_uverbs_close_xrcd == $sub.ref(0, 195807));
procedure  ib_uverbs_close_xrcd($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i64;
  var $i30: i1;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $i40: i32;
  var $p41: ref;
  var $i42: i32;
  var $i43: i64;
  var $i44: i1;
  var $i45: i1;
  var $p46: ref;
  var $i47: i1;
  var $i48: i64;
  var $i49: i1;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i19: i32;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i8: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11905, metadata !5829), !dbg !11906, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11907, metadata !5829), !dbg !11908, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.value(metadata %struct.inode* null, i64 0, metadata !11918, metadata !5829), !dbg !11919, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9419, 24} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9419, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p5, $p1, 4);
  // WARNING: %7 = call i64 @copy_from_user(i8* %6, i8* %1, i64 4), !dbg !5829, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9420, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9420, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9421, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i64(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9488, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9425, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9425, 30} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9425, 39} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9425, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9426, 57} true;
  assume {:verifier.code 0} true;
  $p12 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9426, 57} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9426, 76} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9426, 76} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9426, 10} true;
  assume {:verifier.code 0} true;
  call $p16 := idr_write_uobj(ib_uverbs_xrcd_idr, $i13, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9427, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9427, 28} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9427, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9429, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32(0, 22);
  goto $bb7;
$bb6:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9485, 25} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9485, 25} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9485, 34} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p57, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9485, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9486, 11} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9486, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i59;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9433, 34} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p16, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9433, 34} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9433, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9434, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9434, 17} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9436, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9437, 53} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9437, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := atomic_read($p26);
  // WARNING: %32 = call i32 @atomic_read(%struct.__anonstruct_atomic_t_6* %31), !dbg !5860, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9438, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9438, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9439, 5} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p16);
  // WARNING: call void @put_uobj_write(%struct.ib_uobject* %19), !dbg !5866, !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9441, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32(0, 16);
  goto $bb7;
$bb10:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9445, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9445, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9445, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9446, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9448, 43} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p22, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9448, 15} true;
  assume {:verifier.code 0} true;
  call $i32 := atomic_dec_and_test($p31);
  // WARNING: %42 = call i32 @atomic_dec_and_test(%struct.__anonstruct_atomic_t_6* %41), !dbg !5877, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9449, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9449, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb15, $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9451, 53} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p16, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9451, 53} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9451, 29} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9451, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := ib_dealloc_xrcd($p36);
  // WARNING: %49 = call i32 @ib_dealloc_xrcd(%struct.ib_xrcd* %48), !dbg !5888, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9452, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9452, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb17, $bb18;
$bb15:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9449, 23} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb16:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  $i40 := 0;
  goto $bb20;
$bb17:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9453, 15} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p16, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9453, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9454, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9457, 5} true;
  assume {:verifier.code 0} true;
  $i40 := $i37;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9461, 16} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p16, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9461, 16} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  // WARNING: %59 = load i32, i32* %58, align 8, !dbg !5897, !verifier.code !5806
  call {:cexpr "live"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9462, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9462, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i64($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9462, 68} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9462, 75} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9462, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb25, $bb26;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9462, 68} true;
  assume {:verifier.code 0} true;
  assume !(($i44 == 1));
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb25:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9463, 24} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p22, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9463, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9464, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9462, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i45 == 1));
  goto $bb24;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9467, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9468, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9468, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9469, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $i40;
  goto $bb7;
$bb29:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9473, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9473, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i64($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9473, 68} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9473, 76} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9473, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb34, $bb35;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9473, 68} true;
  assume {:verifier.code 0} true;
  assume !(($i49 == 1));
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb36;
$bb34:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9474, 29} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9474, 29} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9474, 5} true;
  assume {:verifier.code 0} true;
  call xrcd_table_delete($p52, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9475, 3} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9473, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i50 == 1));
  goto $bb33;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9478, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_xrcd_idr, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9479, 29} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9479, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9480, 20} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p16, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9480, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9481, 24} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9481, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9482, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p16);
  // WARNING: call void @put_uobj(%struct.ib_uobject* %19), !dbg !5935, !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9483, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i2;
  goto $bb7;
}
const ib_uverbs_create_xsrq: ref;
axiom (ib_uverbs_create_xsrq == $sub.ref(0, 196839));
procedure  ib_uverbs_create_xsrq($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $i26: i64;
  var $i27: i64;
  var $i7: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(48, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !12041, metadata !5829), !dbg !12042, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !12043, metadata !5829), !dbg !12044, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12472, 30} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i32($i3, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12472, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12473, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12495, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12477, 24} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12477, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := copy_from_user($p8, $p1, 48);
  // WARNING: %12 = call i64 @copy_from_user(i8* %11, i8* %1, i64 48), !dbg !5840, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12478, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12478, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12479, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12483, 37} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12483, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12483, 15} true;
  assume {:verifier.code 0} true;
  $M.37 := $store.ref($M.37, $p12, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12484, 47} true;
  assume {:verifier.code 0} true;
  $p13 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12484, 47} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12484, 56} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12484, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12484, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12484, 16} true;
  assume {:verifier.code 0} true;
  $M.38 := $store.ref($M.38, $p17, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12485, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12485, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i64($i18, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12485, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12485, 15} true;
  assume {:verifier.code 0} true;
  $M.39 := $store.i64($M.39, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12486, 18} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12486, 42} true;
  assume {:verifier.code 0} true;
  $i22 := $sub.i64($i21, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12486, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12486, 16} true;
  assume {:verifier.code 0} true;
  $M.40 := $store.i64($M.40, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12487, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := __uverbs_create_xsrq($p0, $p4, $p5);
  // WARNING: %30 = call i32 @__uverbs_create_xsrq(%struct.ib_uverbs_file* %0, %struct.ib_uverbs_create_xsrq* %5, %struct.ib_udata* %6), !dbg !5864, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12488, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12488, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12489, 13} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12489, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i26;
  goto $bb3;
$bb9:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12493, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12493, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i27;
  goto $bb3;
}
const ib_uverbs_open_qp: ref;
axiom (ib_uverbs_open_qp == $sub.ref(0, 197871));
procedure  ib_uverbs_open_qp($p0: ref, $p1: ref, $i2: i32, $i3: i32)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i1;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i1;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i8;
  var $i57: i32;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i1;
  var $i67: i8;
  var $i68: i1;
  var $p69: ref;
  var $i70: i64;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i32;
  var $i82: i1;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $i98: i1;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $i120: i64;
  var $p121: ref;
  var $p122: ref;
  var $i83: i32;
  var $i123: i32;
  var $i48: i32;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i64;
  var $i11: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(24, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !12097, metadata !5829), !dbg !12098, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !12099, metadata !5829), !dbg !12100, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10767, 15} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10767, 13} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.ref($M.28, $p7, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10768, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $ule.i32($i3, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10768, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10769, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 28);
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10852, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10773, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10773, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := copy_from_user($p12, $p1, 32);
  // WARNING: %16 = call i64 @copy_from_user(i8* %15, i8* %1, i64 32), !dbg !5863, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10774, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10774, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10775, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10779, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10779, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10779, 15} true;
  assume {:verifier.code 0} true;
  $M.53 := $store.ref($M.53, $p16, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10780, 47} true;
  assume {:verifier.code 0} true;
  $p17 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10780, 47} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10780, 56} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10780, 18} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10780, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10780, 16} true;
  assume {:verifier.code 0} true;
  $M.54 := $store.ref($M.54, $p21, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10781, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10781, 40} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i64($i22, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10781, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10781, 15} true;
  assume {:verifier.code 0} true;
  $M.55 := $store.i64($M.55, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10782, 18} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10782, 42} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i64($i25, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10782, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10782, 16} true;
  assume {:verifier.code 0} true;
  $M.56 := $store.i64($M.56, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10783, 13} true;
  assume {:verifier.code 0} true;
  call $p28 := kmalloc(264, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10784, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10785, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10785, 27} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10785, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10786, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i64(0, 12);
  goto $bb3;
$bb9:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10790, 20} true;
  assume {:verifier.code 0} true;
  $p32 := $p29;
  $p33 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10790, 40} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10790, 40} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10790, 59} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10790, 59} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10790, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p33, $i35, $p37, qp_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10791, 21} true;
  assume {:verifier.code 0} true;
  $p38 := $p29;
  $p39 := $p29;
  $p40 := $add.ref($p29, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10791, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10792, 34} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10792, 34} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10792, 51} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10792, 51} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10792, 10} true;
  assume {:verifier.code 0} true;
  call $p45 := idr_read_xrcd($i42, $p44, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10793, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $p2i.ref.i64($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10793, 28} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i64($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10793, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10795, 5} true;
  assume {:verifier.code 0} true;
  $i48 := $sub.i32(0, 22);
  goto $bb13;
$bb12:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10848, 17} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10848, 3} true;
  assume {:verifier.code 0} true;
  call put_xrcd_read($p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10849, 25} true;
  assume {:verifier.code 0} true;
  $p125 := $p29;
  $p126 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10849, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10850, 11} true;
  assume {:verifier.code 0} true;
  $i127 := $sext.i32.i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10850, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i127;
  goto $bb3;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10799, 8} true;
  assume {:verifier.code 0} true;
  $p49 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10799, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p49, ib_uverbs_qp_event_handler);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10800, 21} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10800, 8} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10800, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10801, 21} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10801, 21} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10801, 8} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10801, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p54, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10802, 40} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10802, 40} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10802, 18} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10802, 8} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p8, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10802, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10803, 8} true;
  assume {:verifier.code 0} true;
  $p59 := $p29;
  $p60 := $add.ref($p29, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10803, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10804, 25} true;
  assume {:verifier.code 0} true;
  $p61 := $p29;
  $p62 := $add.ref($p29, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10804, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10805, 25} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p29, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10805, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10806, 8} true;
  assume {:verifier.code 0} true;
  call $p64 := ib_open_qp($p45, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10807, 20} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10807, 13} true;
  assume {:verifier.code 0} true;
  call $i66 := IS_ERR($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10807, 11} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i1.i8($i66);
  // WARNING: %78 = zext i1 %77 to i8, !dbg !5941, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i8($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10808, 13} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i8.i1($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10808, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10809, 23} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10809, 15} true;
  assume {:verifier.code 0} true;
  call $i70 := PTR_ERR($p69);
  // WARNING: %82 = call i64 @PTR_ERR(i8* %81), !dbg !5949, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10810, 11} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i64.i32($i70);
  // WARNING: %83 = trunc i64 %82 to i32, !dbg !5952, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10811, 5} true;
  assume {:verifier.code 0} true;
  $i48 := $i71;
  goto $bb13;
$bb16:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10815, 24} true;
  assume {:verifier.code 0} true;
  $p72 := $p29;
  $p73 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10815, 7} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p64, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10815, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p74, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10816, 32} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10816, 8} true;
  assume {:verifier.code 0} true;
  $p76 := $p29;
  $p77 := $p29;
  $p78 := $add.ref($p29, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10816, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10817, 49} true;
  assume {:verifier.code 0} true;
  $p79 := $p29;
  $p80 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10817, 9} true;
  assume {:verifier.code 0} true;
  call $i81 := idr_add_uobj(ib_uverbs_qp_idr, $p80);
  // WARNING: %95 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_qp_idr, %struct.ib_uobject* %94), !dbg !5961, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10818, 11} true;
  assume {:verifier.code 0} true;
  $i82 := $ne.i32($i81, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10818, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i82 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10819, 5} true;
  assume {:verifier.code 0} true;
  $i83 := $i81;
  goto $bb20;
$bb19:
  assume !(($i82 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10846, 3} true;
  assume {:verifier.code 0} true;
  call $i123 := ib_destroy_qp($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10846, 3} true;
  assume {:verifier.code 0} true;
  $i48 := $i83;
  goto $bb13;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10823, 3} true;
  assume {:verifier.code 0} true;
  $p84 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10823, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p84, 0, 32, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10824, 18} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p64, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10824, 18} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10824, 8} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10824, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, $i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10825, 33} true;
  assume {:verifier.code 0} true;
  $p88 := $p29;
  $p89 := $p29;
  $p90 := $add.ref($p29, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10825, 48} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i32($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10825, 8} true;
  assume {:verifier.code 0} true;
  $p92 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10825, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p92, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10826, 38} true;
  assume {:verifier.code 0} true;
  $p93 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10826, 38} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i64($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10826, 26} true;
  assume {:verifier.code 0} true;
  $p95 := $i2p.i64.ref($i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10826, 48} true;
  assume {:verifier.code 0} true;
  $p96 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10826, 13} true;
  assume {:verifier.code 0} true;
  call $i97 := copy_to_user($p95, $p96, 32);
  // WARNING: %113 = call i64 @copy_to_user(i8* %111, i8* %112, i64 32), !dbg !5978, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i64($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10827, 15} true;
  assume {:verifier.code 0} true;
  $i98 := $ne.i64($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10827, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10829, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10844, 46} true;
  assume {:verifier.code 0} true;
  $p121 := $p29;
  $p122 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10844, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_qp_idr, $p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10844, 3} true;
  assume {:verifier.code 0} true;
  $i83 := $sub.i32(0, 14);
  goto $bb20;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10833, 41} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10834, 16} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10834, 8} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p29, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10834, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p101, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10835, 22} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p29, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10835, 22} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10835, 30} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10835, 3} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10836, 17} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.28, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10836, 3} true;
  assume {:verifier.code 0} true;
  call put_xrcd_read($p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10837, 29} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10837, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p106, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10838, 24} true;
  assume {:verifier.code 0} true;
  $p107 := $p29;
  $p108 := $p29;
  $p109 := $add.ref($p29, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10838, 54} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10838, 54} true;
  assume {:verifier.code 0} true;
  $p111 := $load.ref($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10838, 65} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p111, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10838, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p109, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10839, 24} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10839, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10840, 8} true;
  assume {:verifier.code 0} true;
  $p114 := $p29;
  $p115 := $p29;
  $p116 := $add.ref($p29, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10840, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p116, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10841, 19} true;
  assume {:verifier.code 0} true;
  $p117 := $p29;
  $p118 := $p29;
  $p119 := $add.ref($p29, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10841, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10842, 11} true;
  assume {:verifier.code 0} true;
  $i120 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10842, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i120;
  goto $bb3;
}
const copy_from_user: ref;
axiom (copy_from_user == $sub.ref(0, 198903));
procedure  copy_from_user($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i1;
  var $i8: i64;
  var $i9: i1;
  var $i7: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !12298, metadata !5829), !dbg !12299, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5639, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.i32($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5639, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  // WARNING: %5 = sext i32 %4 to i64, !dbg !5816, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5640, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  // WARNING: %6 = trunc i64 %5 to i32, !dbg !5820, !verifier.code !5811
  call {:cexpr "sz"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5641, 3} true;
  assume {:verifier.code 0} true;
  call __might_fault(.str.40, 697);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 48} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 48} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 1);
  // WARNING: %15 = call i64 @ldv__builtin_expect(i64 %14, i64 1), !dbg !5833, !verifier.code !5811
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5643, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5643, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 51} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.i64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5642, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb2;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5644, 35} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5644, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := _copy_from_user($p0, $p1, $i14);
  // WARNING: %19 = call i64 @_copy_from_user(i8* %0, i8* %1, i32 %18), !dbg !5841, !verifier.code !5811
  call {:cexpr "n"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5645, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5646, 5} true;
  assume {:verifier.code 0} true;
  call __copy_from_user_overflow();
  assume {:verifier.code 0} true;
  $i16 := $i2;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5648, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
}
const kmalloc: ref;
axiom (kmalloc == $sub.ref(0, 199935));
procedure  kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !12335, metadata !5829), !dbg !12336, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5415, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := __kmalloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5416, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const init_uobj: ref;
axiom (init_uobj == $sub.ref(0, 200967));
procedure  init_uobj($p0: ref, $i1: i64, $p2: ref, $p3: ref)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_uobject* %0, i64 0, metadata !12348, metadata !5829), !dbg !12349, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8431, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8431, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8432, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8432, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8433, 21} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8433, 3} true;
  assume {:verifier.code 0} true;
  call kref_init($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8434, 24} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8434, 3} true;
  assume {:verifier.code 0} true;
  call __init_rwsem($p8, .str.44, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8435, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 48);
  $p10 := $add.ref($add.ref($p0, 48), 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8435, 65} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8435, 43} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8435, 77} true;
  assume {:verifier.code 0} true;
  $p13 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8435, 3} true;
  assume {:verifier.code 0} true;
  call lockdep_init_map($p10, $p12, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8436, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8436, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8437, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const down_write: ref;
axiom (down_write == $sub.ref(0, 201999));
procedure  down_write($p0: ref);
const idr_read_xrcd: ref;
axiom (idr_read_xrcd == $sub.ref(0, 203031));
procedure  idr_read_xrcd($i0: i32, $p1: ref, $p2: ref)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8701, 11} true;
  assume {:verifier.code 0} true;
  call $p3 := idr_read_uobj(ib_uverbs_xrcd_idr, $i0, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8701, 9} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.ref($M.28, $p2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.28, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 33} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 98} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.28, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 106} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 106} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 79} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $p9;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8702, 3} true;
  assume {:verifier.code 0} true;
  $r := $p11;
  $exn := false;
  return;
}
const ib_uverbs_qp_event_handler: ref;
axiom (ib_uverbs_qp_event_handler == $sub.ref(0, 204063));
procedure  ib_uverbs_qp_event_handler($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $p27: ref;
  var $i28: i32;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 39} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 44} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 44} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 52} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 96} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 96} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6605, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 108} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 116} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 116} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 121} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 121} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 131} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 131} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 136} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6604, 7} true;
  assume {:verifier.code 0} true;
  assume ($i16 == 1);
  goto $bb2;
$bb5:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6615, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6609, 49} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6609, 57} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6609, 57} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6609, 62} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6609, 62} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6610, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6611, 27} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6611, 71} true;
  assume {:verifier.code 0} true;
  $p24 := $p22;
  $p25 := $p22;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6611, 79} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6612, 42} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6612, 42} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6612, 27} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6612, 57} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p22, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6612, 77} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p22, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6611, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_async_handler($p23, $i26, $i29, $p30, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6613, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const ib_open_qp: ref;
axiom (ib_open_qp == $sub.ref(0, 205095));
procedure  ib_open_qp($p0: ref, $p1: ref)
  returns ($r: ref);
const IS_ERR: ref;
axiom (IS_ERR == $sub.ref(0, 206127));
procedure  IS_ERR($p0: ref)
  returns ($r: i1)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7818, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_is_err($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7818, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !5814, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7819, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7819, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const PTR_ERR: ref;
axiom (PTR_ERR == $sub.ref(0, 207159));
procedure  PTR_ERR($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7809, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_ptr_err($p0);
  // WARNING: %2 = call i64 @ldv_ptr_err(i8* %0), !dbg !5812, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7810, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const idr_add_uobj: ref;
axiom (idr_add_uobj == $sub.ref(0, 208191));
procedure  idr_add_uobj($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8484, 3} true;
  assume {:verifier.code 0} true;
  call idr_preload(208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8485, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(ib_uverbs_idr_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8486, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8486, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := idr_alloc($p0, $p2, 0, 0, 0);
  // WARNING: %4 = call i32 @idr_alloc(%struct.idr* %0, i8* %3, i32 0, i32 0, i32 0), !dbg !5819, !verifier.code !5812
  call {:cexpr "ret"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8487, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sge.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8487, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8488, 11} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8488, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8489, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8492, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(ib_uverbs_idr_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8493, 3} true;
  assume {:verifier.code 0} true;
  call __rcu_read_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8494, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32(0, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8494, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8494, 11} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb6;
$bb5:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8494, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $i3;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8494, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8494, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const atomic_inc: ref;
axiom (atomic_inc == $sub.ref(0, 209223));
procedure  atomic_inc($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7962, 129} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  call devirtbounce.19(0, $p1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7963, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const put_xrcd_read: ref;
axiom (put_xrcd_read == $sub.ref(0, 210255));
procedure  put_xrcd_read($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8710, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8711, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_lock_nested: ref;
axiom (mutex_lock_nested == $sub.ref(0, 211287));
procedure  mutex_lock_nested($p0: ref, $i1: i32);
const list_add_tail: ref;
axiom (list_add_tail == $sub.ref(0, 212319));
procedure  list_add_tail($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5130, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5130, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5130, 3} true;
  assume {:verifier.code 0} true;
  call __list_add($p0, $p3, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5131, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 213351));
procedure  mutex_unlock($p0: ref);
const up_write: ref;
axiom (up_write == $sub.ref(0, 214383));
procedure  up_write($p0: ref);
const idr_remove_uobj: ref;
axiom (idr_remove_uobj == $sub.ref(0, 215415));
procedure  idr_remove_uobj($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8502, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(ib_uverbs_idr_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8503, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8503, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8503, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove($p0, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8504, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(ib_uverbs_idr_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8505, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_destroy_qp: ref;
axiom (ib_destroy_qp == $sub.ref(0, 216447));
procedure  ib_destroy_qp($p0: ref)
  returns ($r: i32);
const put_uobj_write: ref;
axiom (put_uobj_write == $sub.ref(0, 217479));
procedure  put_uobj_write($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8474, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8474, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8475, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8476, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const put_uobj: ref;
axiom (put_uobj == $sub.ref(0, 218511));
procedure  put_uobj($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8455, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8455, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := kref_put___0($p1, release_uobj);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8456, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const release_uobj: ref;
axiom (release_uobj == $sub.ref(0, 219543));
procedure  release_uobj($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8446, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8446, 54} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, $mul.ref($sub.ref(0, 44), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8446, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8446, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8447, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kref_put___0: ref;
axiom (kref_put___0 == $sub.ref(0, 220575));
procedure  kref_put___0($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8325, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := kref_sub___0($p0, 1, $p1);
  // WARNING: %3 = call i32 @kref_sub___0(%struct.qspinlock* %0, i32 1, void (%struct.qspinlock*)* %1), !dbg !5814, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8326, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const kref_sub___0: ref;
axiom (kref_sub___0 == $sub.ref(0, 221607));
procedure  kref_sub___0($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i64;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.qspinlock* %0, i64 0, metadata !12573, metadata !5829), !dbg !12574, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8302, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8302, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8302, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  // WARNING: %6 = zext i1 %5 to i32, !dbg !5818, !verifier.code !5811
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8303, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8303, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8303, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8303, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !5823, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8304, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8304, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8305, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.20, 71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8306, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8309, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8309, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8309, 23} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8309, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8310, 54} true;
  assume {:verifier.code 0} true;
  $p15 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8310, 13} true;
  assume {:verifier.code 0} true;
  call $i16 := atomic_sub_and_test($i1, $p15);
  // WARNING: %20 = call i32 @atomic_sub_and_test(i32 %1, %struct.__anonstruct_atomic_t_6* %19), !dbg !5836, !verifier.code !5811
  call {:cexpr "tmp___0"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8311, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8311, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i17 == 1);
  call devirtbounce($p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8313, 5} true;
  assume {:verifier.code 0} true;
  $i18 := 1;
  goto $bb6;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8319, 1} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8317, 3} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb6;
}
const spin_lock: ref;
axiom (spin_lock == $sub.ref(0, 222639));
procedure  spin_lock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5254, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5254, 45} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5254, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5255, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const idr_remove: ref;
axiom (idr_remove == $sub.ref(0, 223671));
procedure  idr_remove($p0: ref, $i1: i32);
const spin_unlock: ref;
axiom (spin_unlock == $sub.ref(0, 224703));
procedure  spin_unlock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5272, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5272, 47} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5272, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5273, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock: ref;
axiom (_raw_spin_unlock == $sub.ref(0, 225735));
procedure  _raw_spin_unlock($p0: ref);
const _raw_spin_lock: ref;
axiom (_raw_spin_lock == $sub.ref(0, 226767));
procedure  _raw_spin_lock($p0: ref);
const __list_add: ref;
axiom (__list_add == $sub.ref(0, 227799));
procedure  __list_add($p0: ref, $p1: ref, $p2: ref);
const put_uobj_read: ref;
axiom (put_uobj_read == $sub.ref(0, 228831));
procedure  put_uobj_read($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8464, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8464, 3} true;
  assume {:verifier.code 0} true;
  call up_read($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8465, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8466, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const up_read: ref;
axiom (up_read == $sub.ref(0, 229863));
procedure  up_read($p0: ref);
const idr_preload: ref;
axiom (idr_preload == $sub.ref(0, 230895));
procedure  idr_preload($i0: i32);
const idr_alloc: ref;
axiom (idr_alloc == $sub.ref(0, 231927));
procedure  idr_alloc($p0: ref, $p1: ref, $i2: i32, $i3: i32, $i4: i32)
  returns ($r: i32);
const __rcu_read_unlock: ref;
axiom (__rcu_read_unlock == $sub.ref(0, 232959));
procedure  __rcu_read_unlock()
{
$bb0:
  call devirtbounce.20(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8122, 3} true;
  assume {:verifier.code 0} true;
  call __preempt_count_sub(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8123, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __preempt_count_sub: ref;
axiom (__preempt_count_sub == $sub.ref(0, 233991));
procedure  __preempt_count_sub($i0: i32)
{
  var $i1: i1;
  var $i2: i1;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !12638, metadata !5829), !dbg !12639, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8068, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8068, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  call devirtbounce.19(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8070, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8071, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8071, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8076, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i2 == 1);
  call devirtbounce.19(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8073, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8074, 65} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0, $i0);
  call devirtbounce.21(0, __preempt_count, $i3, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8091, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_ptr_err: ref;
axiom (ldv_ptr_err == $sub.ref(0, 235023));
procedure  ldv_ptr_err($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
  var $i2: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12921, 28} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12921, 26} true;
  assume {:verifier.code 0} true;
  $i2 := $sub.i64(2012, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12921, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_is_err: ref;
axiom (ldv_is_err == $sub.ref(0, 236055));
procedure  ldv_is_err($p0: ref)
  returns ($r: i1)
{
  var $i1: i64;
  var $i2: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12905, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12905, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $ugt.i64($i1, 2012);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12905, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ib_uverbs_async_handler: ref;
axiom (ib_uverbs_async_handler == $sub.ref(0, 237087));
procedure  ib_uverbs_async_handler($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_uverbs_file* %0, i64 0, metadata !12674, metadata !5829), !dbg !12675, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !12676, metadata !5829), !dbg !12677, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6553, 33} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6553, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6553, 46} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6553, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := spinlock_check($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6554, 11} true;
  assume {:verifier.code 0} true;
  call $i9 := _raw_spin_lock_irqsave($p8);
  // WARNING: %10 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %9), !dbg !5827, !verifier.code !5811
  call {:cexpr "flags"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6555, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6555, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6555, 27} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6555, 27} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6555, 37} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6555, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6556, 37} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6556, 37} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6556, 50} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6556, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p17, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6557, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6584, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6561, 13} true;
  assume {:verifier.code 0} true;
  call $p18 := kmalloc(56, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6562, 11} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6563, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6563, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6563, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6564, 37} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6564, 37} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6564, 50} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6564, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p24, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6565, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6569, 10} true;
  assume {:verifier.code 0} true;
  $p25 := $p19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6569, 15} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6569, 21} true;
  assume {:verifier.code 0} true;
  $p27 := $p26;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6569, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p27, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6570, 34} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6570, 10} true;
  assume {:verifier.code 0} true;
  $p29 := $p19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6570, 15} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6570, 21} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6570, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6571, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $p19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6571, 15} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6571, 21} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6571, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6572, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p19, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6572, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p35, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6573, 26} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p19, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6573, 41} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6573, 41} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6573, 54} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6573, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p36, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6574, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6574, 32} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6574, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6575, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p19, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6575, 5} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p42, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6576, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6579, 35} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6579, 35} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6579, 48} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6579, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p45, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6580, 22} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6580, 22} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6580, 35} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6580, 3} true;
  assume {:verifier.code 0} true;
  call __wake_up($p48, 1, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6581, 24} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6581, 24} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6581, 37} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p50, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6581, 3} true;
  assume {:verifier.code 0} true;
  call kill_fasync($p51, 29, 131073);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6582, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 238119));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5246, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5246, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5246, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const _raw_spin_lock_irqsave: ref;
axiom (_raw_spin_lock_irqsave == $sub.ref(0, 239151));
procedure  _raw_spin_lock_irqsave($p0: ref)
  returns ($r: i64);
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 240183));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !12769, metadata !5829), !dbg !12770, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5290, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5290, 58} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5290, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5291, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __wake_up: ref;
axiom (__wake_up == $sub.ref(0, 241215));
procedure  __wake_up($p0: ref, $i1: i32, $i2: i32, $p3: ref);
const kill_fasync: ref;
axiom (kill_fasync == $sub.ref(0, 242247));
procedure  kill_fasync($p0: ref, $i1: i32, $i2: i32);
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 243279));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64);
const idr_read_uobj: ref;
axiom (idr_read_uobj == $sub.ref(0, 244311));
procedure  idr_read_uobj($p0: ref, $i1: i32, $p2: ref, $i3: i32)
  returns ($r: ref)
{
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.idr* %0, i64 0, metadata !12781, metadata !5829), !dbg !12782, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_ucontext* %2, i64 0, metadata !12785, metadata !5829), !dbg !12786, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8536, 10} true;
  assume {:verifier.code 0} true;
  call $p4 := __idr_get_uobj($p0, $i1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8537, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8537, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8537, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8538, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8555, 1} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8542, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8542, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8543, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8543, 5} true;
  assume {:verifier.code 0} true;
  call down_read_nested($p9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8544, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8545, 23} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8545, 5} true;
  assume {:verifier.code 0} true;
  call down_read($p10);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8547, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8547, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8547, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8547, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8548, 5} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8549, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8553, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p4;
  goto $bb3;
}
const __idr_get_uobj: ref;
axiom (__idr_get_uobj == $sub.ref(0, 245343));
procedure  __idr_get_uobj($p0: ref, $i1: i32, $p2: ref)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.idr* %0, i64 0, metadata !12821, metadata !5829), !dbg !12822, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8514, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(ib_uverbs_idr_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8515, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := idr_find($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8516, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8517, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8517, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8517, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8518, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8518, 31} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8518, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8518, 42} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8518, 39} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i9, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8518, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $p14 := $p3;
  goto $bb6;
$bb3:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8519, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8519, 7} true;
  assume {:verifier.code 0} true;
  call kref_get___0($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8520, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p3;
  goto $bb5;
$bb4:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $p13 := $0.ref;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8523, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $p13;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8526, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(ib_uverbs_idr_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8527, 3} true;
  assume {:verifier.code 0} true;
  $r := $p14;
  $exn := false;
  return;
}
const down_read_nested: ref;
axiom (down_read_nested == $sub.ref(0, 246375));
procedure  down_read_nested($p0: ref, $i1: i32);
const down_read: ref;
axiom (down_read == $sub.ref(0, 247407));
procedure  down_read($p0: ref);
const idr_find: ref;
axiom (idr_find == $sub.ref(0, 248439));
procedure  idr_find($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i64;
  var $i12: i1;
  var $i13: i32;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p29: ref;
  var $p28: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.idr* %0, i64 0, metadata !12856, metadata !5829), !dbg !12857, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8241, 53} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8241, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8241, 75} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8241, 60} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8241, 3} true;
  assume {:verifier.code 0} true;
  call __read_once_size($p5, $p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8242, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8242, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8244, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := debug_lockdep_rcu_enabled();
  // WARNING: %11 = call i32 @debug_lockdep_rcu_enabled(), !dbg !5839, !verifier.code !5809
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 28} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 71} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 78} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i1, $sub.i32(0, 256));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 95} true;
  assume {:verifier.code 0} true;
  $p14 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 95} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 86} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i13, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 71} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8247, 56} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p9, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8247, 22} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8247, 64} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8247, 83} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i64($i19, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8247, 61} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p18, $mul.ref($i20, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8248, 41} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8248, 22} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8247, 5} true;
  assume {:verifier.code 0} true;
  call __read_once_size($p21, $p23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8249, 31} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8249, 31} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8251, 15} true;
  assume {:verifier.code 0} true;
  call $i26 := debug_lockdep_rcu_enabled();
  // WARNING: %29 = call i32 @debug_lockdep_rcu_enabled(), !dbg !5867, !verifier.code !5809
  call {:cexpr "tmp___0"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8252, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8252, 5} true;
  assume {:verifier.code 0} true;
  $p28 := $p25;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8246, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i16 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8259, 1} true;
  assume {:verifier.code 0} true;
  $r := $p28;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8256, 13} true;
  assume {:verifier.code 0} true;
  call $p29 := idr_find_slowpath($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8257, 3} true;
  assume {:verifier.code 0} true;
  $p28 := $p29;
  goto $bb6;
}
const kref_get___0: ref;
axiom (kref_get___0 == $sub.ref(0, 249471));
procedure  kref_get___0($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i1;
  var $i18: i1;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $i23: i1;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8271, 38} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8271, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := atomic_add_return(1, $p1);
  // WARNING: %3 = call i32 @atomic_add_return(i32 1, %struct.__anonstruct_atomic_t_6* %2), !dbg !5812, !verifier.code !5809
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8272, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $sle.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8272, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  // WARNING: %5 = zext i1 %4 to i32, !dbg !5815, !verifier.code !5809
  call {:cexpr "__ret_warn_once"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8273, 49} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8273, 49} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8273, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8273, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv__builtin_expect($i7, 0);
  // WARNING: %9 = call i64 @ldv__builtin_expect(i64 %8, i64 0), !dbg !5820, !verifier.code !5809
  call {:cexpr "tmp___2"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8274, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8274, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8275, 23} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8275, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $xor.i1($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8275, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  // WARNING: %14 = zext i1 %13 to i32, !dbg !5828, !verifier.code !5809
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8276, 49} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8276, 49} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i1.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8276, 35} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8276, 15} true;
  assume {:verifier.code 0} true;
  call $i16 := ldv__builtin_expect($i15, 0);
  // WARNING: %18 = call i64 @ldv__builtin_expect(i64 %17, i64 0), !dbg !5833, !verifier.code !5809
  call {:cexpr "tmp___0"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8277, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8277, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb3:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8278, 7} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.20, 47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8279, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8282, 49} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8282, 49} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i1.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8282, 35} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8282, 15} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv__builtin_expect($i20, 0);
  // WARNING: %26 = call i64 @ldv__builtin_expect(i64 %25, i64 0), !dbg !5844, !verifier.code !5809
  call {:cexpr "tmp___1"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8283, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8283, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8285, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8288, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8291, 39} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8291, 39} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8291, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8291, 3} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8292, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atomic_add_return: ref;
axiom (atomic_add_return == $sub.ref(0, 250503));
procedure  atomic_add_return($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.__anonstruct_atomic_t_6* %1, i64 0, metadata !12977, metadata !5829), !dbg !12978, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5212, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  call $i3 := devirtbounce.22(0, $p2, $i0, $p2);
  // WARNING: %4 = call i32 @devirtbounce.22(i32 (i32*, i32, i32*)* asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}", i32* %3, i32 %0, i32* %3)
  call {:cexpr "__ret"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5213, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5222, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5222, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const __read_once_size: ref;
axiom (__read_once_size == $sub.ref(0, 251535));
procedure  __read_once_size($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i8;
  var $p11: ref;
  var $i12: i16;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !12991, metadata !5829), !dbg !12992, !verifier.code !5831
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i2, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i2, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb11, $bb12;
$bb3:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i2, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1);
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i2, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb9, $bb10;
$bb5:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i2, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7905, 23} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7905, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7905, 5} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7905, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p19, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7906, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb9:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7902, 23} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7902, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7902, 5} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7902, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7903, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb8;
$bb11:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i2, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb15, $bb16;
$bb12:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i2, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7899, 23} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7899, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i16($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7899, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7899, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7900, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb15:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7896, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7896, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p1, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7897, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb8;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7913, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb18:
  call devirtbounce.20(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7909, 44} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7909, 3} true;
  assume {:verifier.code 0} true;
  call $i21 := __builtinx_memcpy.ref.ref.i64($p1, $p0, $i20);
  call devirtbounce.20(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7911, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7911, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
}
const debug_lockdep_rcu_enabled: ref;
axiom (debug_lockdep_rcu_enabled == $sub.ref(0, 252567));
procedure  debug_lockdep_rcu_enabled()
  returns ($r: i32);
const idr_find_slowpath: ref;
axiom (idr_find_slowpath == $sub.ref(0, 253599));
procedure  idr_find_slowpath($p0: ref, $i1: i32)
  returns ($r: ref);
const __builtinx_memcpy: ref;
axiom (__builtinx_memcpy == $sub.ref(0, 254631));
procedure  __builtinx_memcpy()
  returns ($r: i32);
procedure  __builtinx_memcpy.ref.ref.i64(p.0: ref, p.1: ref, p.2: i64)
  returns ($r: i32);
const kref_init: ref;
axiom (kref_init == $sub.ref(0, 255663));
procedure  kref_init($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5319, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5319, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5320, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __init_rwsem: ref;
axiom (__init_rwsem == $sub.ref(0, 256695));
procedure  __init_rwsem($p0: ref, $p1: ref, $p2: ref);
const lockdep_init_map: ref;
axiom (lockdep_init_map == $sub.ref(0, 257727));
procedure  lockdep_init_map($p0: ref, $p1: ref, $p2: ref, $i3: i32);
const atomic_set: ref;
axiom (atomic_set == $sub.ref(0, 258759));
procedure  atomic_set($p0: ref, $i1: i32)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.__anonstruct_atomic_t_6* %0, i64 0, metadata !13031, metadata !5829), !dbg !13032, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5181, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5181, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5182, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 259791));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref);
const _copy_from_user: ref;
axiom (_copy_from_user == $sub.ref(0, 260823));
procedure  _copy_from_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64);
const __copy_from_user_overflow: ref;
axiom (__copy_from_user_overflow == $sub.ref(0, 261855));
procedure  __copy_from_user_overflow();
const __uverbs_create_xsrq: ref;
axiom (__uverbs_create_xsrq == $sub.ref(0, 262887));
procedure  __uverbs_create_xsrq($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i1;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $i66: i1;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i32;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i1;
  var $i97: i8;
  var $i98: i1;
  var $p99: ref;
  var $i100: i64;
  var $i101: i32;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i32;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $i120: i32;
  var $i121: i1;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i32;
  var $i155: i1;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: i32;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $i165: i32;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $i169: i32;
  var $p170: ref;
  var $p171: ref;
  var $i172: i32;
  var $i173: i1;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $i177: i32;
  var $p178: ref;
  var $p179: ref;
  var $i180: i64;
  var $p181: ref;
  var $p182: ref;
  var $i183: i64;
  var $i184: i1;
  var $p185: ref;
  var $i186: i32;
  var $i187: i1;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i156: i32;
  var $i209: i32;
  var $i102: i32;
  var $i67: i32;
  var $p210: ref;
  var $i211: i32;
  var $i212: i1;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $i59: i32;
  var $p217: ref;
  var $i218: i32;
  var $i219: i1;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $i38: i32;
  var $p224: ref;
  var $p225: ref;
  var $i11: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(48, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12291, 15} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.28, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12291, 13} true;
  assume {:verifier.code 0} true;
  $M.28 := $store.ref($M.28, $p4, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12292, 9} true;
  assume {:verifier.code 0} true;
  call $p7 := kmalloc(248, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12293, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12294, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12294, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12294, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12295, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12421, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12299, 20} true;
  assume {:verifier.code 0} true;
  $p12 := $p8;
  $p13 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12299, 41} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12299, 41} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12299, 60} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12299, 60} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12299, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p13, $i15, $p17, srq_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12300, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $p8;
  $p19 := $p8;
  $p20 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12300, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12301, 12} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12301, 12} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12301, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12301, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 50} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 50} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 69} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 69} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 25} true;
  assume {:verifier.code 0} true;
  call $p28 := idr_read_xrcd($i25, $p27, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 10} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 18} true;
  assume {:verifier.code 0} true;
  $p31 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12302, 23} true;
  assume {:verifier.code 0} true;
  $M.57 := $store.ref($M.57, $p31, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12303, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12303, 34} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12303, 38} true;
  assume {:verifier.code 0} true;
  $p34 := $p33;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12303, 38} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.57, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12303, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12303, 43} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i64($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12303, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb7:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12305, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(0, 22);
  goto $bb9;
$bb8:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12418, 25} true;
  assume {:verifier.code 0} true;
  $p224 := $p8;
  $p225 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12418, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12419, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i38;
  goto $bb3;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12309, 43} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.28, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12310, 18} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12310, 10} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p8, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12310, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12311, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p8, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12311, 24} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12311, 32} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12311, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 46} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 46} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 63} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 63} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 23} true;
  assume {:verifier.code 0} true;
  call $p49 := idr_read_cq($i46, $p48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 10} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 14} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 18} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12312, 21} true;
  assume {:verifier.code 0} true;
  $M.58 := $store.ref($M.58, $p52, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12313, 30} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12313, 34} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12313, 38} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12313, 38} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.58, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12313, 9} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12313, 41} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i64($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12313, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12315, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sub.i32(0, 22);
  goto $bb13;
$bb12:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12411, 12} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12411, 12} true;
  assume {:verifier.code 0} true;
  $i218 := $load.i32($M.0, $p217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12411, 21} true;
  assume {:verifier.code 0} true;
  $i219 := $eq.i32($i218, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12411, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb44, $bb45;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12319, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12322, 31} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12322, 31} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12322, 48} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12322, 48} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12322, 8} true;
  assume {:verifier.code 0} true;
  call $p64 := idr_read_pd($i61, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12323, 7} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12323, 26} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i64($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12323, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12325, 5} true;
  assume {:verifier.code 0} true;
  $i67 := $sub.i32(0, 22);
  goto $bb18;
$bb17:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12405, 12} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12405, 12} true;
  assume {:verifier.code 0} true;
  $i211 := $load.i32($M.0, $p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12405, 21} true;
  assume {:verifier.code 0} true;
  $i212 := $eq.i32($i211, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12405, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i212} true;
  goto $bb41, $bb42;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12329, 8} true;
  assume {:verifier.code 0} true;
  $p68 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12329, 22} true;
  assume {:verifier.code 0} true;
  $M.59 := $store.ref($M.59, $p68, ib_uverbs_srq_event_handler);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12330, 22} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12330, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12330, 20} true;
  assume {:verifier.code 0} true;
  $M.60 := $store.ref($M.60, $p70, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12331, 43} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12331, 43} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12331, 8} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p5, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12331, 17} true;
  assume {:verifier.code 0} true;
  $M.61 := $store.i32($M.61, $p73, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12332, 27} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12332, 27} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12332, 8} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p5, 16);
  $p77 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12332, 20} true;
  assume {:verifier.code 0} true;
  $M.62 := $store.i32($M.62, $p77, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12333, 28} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p1, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12333, 28} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12333, 8} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p5, 16);
  $p81 := $add.ref($add.ref($p5, 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12333, 21} true;
  assume {:verifier.code 0} true;
  $M.63 := $store.i32($M.63, $p81, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12334, 30} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12334, 30} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12334, 8} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p5, 16);
  $p85 := $add.ref($add.ref($p5, 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12334, 23} true;
  assume {:verifier.code 0} true;
  $M.64 := $store.i32($M.64, $p85, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12335, 8} true;
  assume {:verifier.code 0} true;
  $p86 := $p8;
  $p87 := $add.ref($p8, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12335, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12336, 25} true;
  assume {:verifier.code 0} true;
  $p88 := $p8;
  $p89 := $add.ref($p8, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12336, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12337, 17} true;
  assume {:verifier.code 0} true;
  $p90 := $p64;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12337, 17} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12337, 26} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12337, 26} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  call $p94 := devirtbounce.23($p93, $p64, $p5, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12338, 20} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12338, 13} true;
  assume {:verifier.code 0} true;
  call $i96 := IS_ERR($p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12338, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i1.i8($i96);
  // WARNING: %109 = zext i1 %108 to i8, !dbg !5950, !verifier.code !5822
  call {:cexpr "tmp___1"} boogie_si_record_i8($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12339, 13} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i8.i1($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12339, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12340, 23} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12340, 15} true;
  assume {:verifier.code 0} true;
  call $i100 := PTR_ERR($p99);
  // WARNING: %113 = call i64 @PTR_ERR(i8* %112), !dbg !5958, !verifier.code !5822
  call {:cexpr "tmp___0"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12341, 11} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i64.i32($i100);
  // WARNING: %114 = trunc i64 %113 to i32, !dbg !5961, !verifier.code !5822
  call {:cexpr "ret"} boogie_si_record_i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12342, 5} true;
  assume {:verifier.code 0} true;
  $i102 := $i101;
  goto $bb22;
$bb21:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12403, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12403, 3} true;
  assume {:verifier.code 0} true;
  $i67 := $i102;
  goto $bb18;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12346, 21} true;
  assume {:verifier.code 0} true;
  $p103 := $p64;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12346, 21} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12346, 8} true;
  assume {:verifier.code 0} true;
  $p105 := $p94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12346, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p105, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12347, 8} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p94, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12347, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p106, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12348, 43} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12348, 43} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12348, 8} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p94, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12348, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p109, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12349, 25} true;
  assume {:verifier.code 0} true;
  $p110 := $p8;
  $p111 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12349, 8} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p94, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12349, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p112, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12350, 29} true;
  assume {:verifier.code 0} true;
  $p113 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12350, 29} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.59, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12350, 8} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p94, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12350, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p115, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12351, 27} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12351, 27} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.60, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12351, 8} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p94, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12351, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p118, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12352, 12} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12352, 12} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i32($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12352, 21} true;
  assume {:verifier.code 0} true;
  $i121 := $eq.i32($i120, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12352, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i121 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 28} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 32} true;
  assume {:verifier.code 0} true;
  $p123 := $bitcast.ref.ref($p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 36} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p123, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 36} true;
  assume {:verifier.code 0} true;
  $p125 := $load.ref($M.58, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 10} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p94, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 14} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 18} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12353, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p128, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 30} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 34} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 38} true;
  assume {:verifier.code 0} true;
  $p131 := $p130;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 38} true;
  assume {:verifier.code 0} true;
  $p132 := $load.ref($M.57, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 10} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p94, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 14} true;
  assume {:verifier.code 0} true;
  $p134 := $bitcast.ref.ref($p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 18} true;
  assume {:verifier.code 0} true;
  $p135 := $p134;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12354, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p135, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12355, 24} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12355, 28} true;
  assume {:verifier.code 0} true;
  $p137 := $bitcast.ref.ref($p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12355, 32} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p137, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12355, 32} true;
  assume {:verifier.code 0} true;
  $p139 := $load.ref($M.58, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12355, 37} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p139, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12355, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12356, 24} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12356, 28} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12356, 32} true;
  assume {:verifier.code 0} true;
  $p143 := $p142;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12356, 32} true;
  assume {:verifier.code 0} true;
  $p144 := $load.ref($M.57, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12356, 39} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p144, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12356, 5} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12357, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i121 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12360, 20} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p64, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12360, 3} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12361, 21} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p94, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12361, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p147, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12362, 32} true;
  assume {:verifier.code 0} true;
  $p148 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12362, 8} true;
  assume {:verifier.code 0} true;
  $p149 := $p8;
  $p150 := $p8;
  $p151 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12362, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p151, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12363, 50} true;
  assume {:verifier.code 0} true;
  $p152 := $p8;
  $p153 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12363, 9} true;
  assume {:verifier.code 0} true;
  call $i154 := idr_add_uobj(ib_uverbs_srq_idr, $p153);
  // WARNING: %171 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_srq_idr, %struct.ib_uobject* %170), !dbg !6018, !verifier.code !5822
  call {:cexpr "ret"} boogie_si_record_i32($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12364, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $ne.i32($i154, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12364, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i155 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12365, 5} true;
  assume {:verifier.code 0} true;
  $i156 := $i154;
  goto $bb29;
$bb28:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12401, 3} true;
  assume {:verifier.code 0} true;
  call $i209 := ib_destroy_srq($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12401, 3} true;
  assume {:verifier.code 0} true;
  $i102 := $i156;
  goto $bb22;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12369, 3} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12369, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p157, 0, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12370, 34} true;
  assume {:verifier.code 0} true;
  $p158 := $p8;
  $p159 := $p8;
  $p160 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12370, 49} true;
  assume {:verifier.code 0} true;
  $i161 := $load.i32($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12370, 8} true;
  assume {:verifier.code 0} true;
  $p162 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12370, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p162, $i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12371, 22} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p5, 16);
  $p164 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12371, 27} true;
  assume {:verifier.code 0} true;
  $i165 := $load.i32($M.62, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12371, 8} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12371, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p166, $i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12372, 23} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p5, 16);
  $p168 := $add.ref($add.ref($p5, 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12372, 28} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i32($M.63, $p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12372, 8} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12372, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p170, $i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12373, 12} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12373, 12} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i32($M.0, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12373, 21} true;
  assume {:verifier.code 0} true;
  $i173 := $eq.i32($i172, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12373, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i173} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i173 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12374, 22} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p94, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12374, 26} true;
  assume {:verifier.code 0} true;
  $p175 := $bitcast.ref.ref($p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12374, 30} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p175, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12374, 30} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i32($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12374, 10} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12374, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p178, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12375, 3} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i173 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12378, 39} true;
  assume {:verifier.code 0} true;
  $p179 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12378, 39} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i64($M.0, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12378, 26} true;
  assume {:verifier.code 0} true;
  $p181 := $i2p.i64.ref($i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12378, 49} true;
  assume {:verifier.code 0} true;
  $p182 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12378, 13} true;
  assume {:verifier.code 0} true;
  call $i183 := copy_to_user($p181, $p182, 16);
  // WARNING: %205 = call i64 @copy_to_user(i8* %203, i8* %204, i64 16), !dbg !6051, !verifier.code !5822
  call {:cexpr "tmp___2"} boogie_si_record_i64($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12379, 15} true;
  assume {:verifier.code 0} true;
  $i184 := $ne.i64($i183, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i184 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12381, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i184 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12399, 47} true;
  assume {:verifier.code 0} true;
  $p207 := $p8;
  $p208 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12399, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_srq_idr, $p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12399, 3} true;
  assume {:verifier.code 0} true;
  $i156 := $sub.i32(0, 14);
  goto $bb29;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12385, 12} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12385, 12} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i32($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12385, 21} true;
  assume {:verifier.code 0} true;
  $i187 := $eq.i32($i186, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12385, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i187} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i187 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12386, 19} true;
  assume {:verifier.code 0} true;
  $p188 := $load.ref($M.28, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12386, 5} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12387, 22} true;
  assume {:verifier.code 0} true;
  $p189 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12387, 26} true;
  assume {:verifier.code 0} true;
  $p190 := $bitcast.ref.ref($p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12387, 30} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p190, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12387, 30} true;
  assume {:verifier.code 0} true;
  $p192 := $load.ref($M.58, $p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12387, 5} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12388, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i187 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12391, 3} true;
  assume {:verifier.code 0} true;
  call put_pd_read($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12392, 29} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12392, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p193, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12393, 24} true;
  assume {:verifier.code 0} true;
  $p194 := $p8;
  $p195 := $p8;
  $p196 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12393, 54} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12393, 54} true;
  assume {:verifier.code 0} true;
  $p198 := $load.ref($M.0, $p197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12393, 65} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p198, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12393, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p196, $p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12394, 24} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12394, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12395, 8} true;
  assume {:verifier.code 0} true;
  $p201 := $p8;
  $p202 := $p8;
  $p203 := $add.ref($p8, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12395, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p203, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12396, 19} true;
  assume {:verifier.code 0} true;
  $p204 := $p8;
  $p205 := $p8;
  $p206 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12396, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12397, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb3;
$bb41:
  assume ($i212 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12406, 22} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12406, 26} true;
  assume {:verifier.code 0} true;
  $p214 := $bitcast.ref.ref($p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12406, 30} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p214, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12406, 30} true;
  assume {:verifier.code 0} true;
  $p216 := $load.ref($M.58, $p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12406, 5} true;
  assume {:verifier.code 0} true;
  call put_cq_read($p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12407, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i212 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12405, 24} true;
  assume {:verifier.code 0} true;
  $i59 := $i67;
  goto $bb13;
$bb44:
  assume ($i219 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12412, 24} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p8, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12412, 24} true;
  assume {:verifier.code 0} true;
  $p221 := $load.ref($M.0, $p220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12412, 32} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p221, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12412, 5} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12413, 19} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.28, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12413, 5} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12414, 3} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i219 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12411, 24} true;
  assume {:verifier.code 0} true;
  $i38 := $i59;
  goto $bb9;
}
const idr_read_cq: ref;
axiom (idr_read_cq == $sub.ref(0, 263919));
procedure  idr_read_cq($i0: i32, $p1: ref, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_ucontext* %1, i64 0, metadata !13342, metadata !5829), !dbg !13343, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8610, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := idr_read_obj(ib_uverbs_cq_idr, $i0, $p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8611, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8611, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const idr_read_pd: ref;
axiom (idr_read_pd == $sub.ref(0, 264951));
procedure  idr_read_pd($i0: i32, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8592, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := idr_read_obj(ib_uverbs_pd_idr, $i0, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8593, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8593, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ib_uverbs_srq_event_handler: ref;
axiom (ib_uverbs_srq_event_handler == $sub.ref(0, 265983));
procedure  ib_uverbs_srq_event_handler($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6622, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6622, 57} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6622, 57} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6622, 63} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6622, 63} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6623, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6624, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6624, 71} true;
  assume {:verifier.code 0} true;
  $p9 := $p7;
  $p10 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6624, 79} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6625, 42} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6625, 42} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6625, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6625, 57} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p7, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6625, 77} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p7, 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6624, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_async_handler($p8, $i11, $i14, $p15, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6626, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const put_cq_read: ref;
axiom (put_cq_read == $sub.ref(0, 267015));
procedure  put_cq_read($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8619, 21} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8619, 21} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8619, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8620, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const put_pd_read: ref;
axiom (put_pd_read == $sub.ref(0, 268047));
procedure  put_pd_read($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8601, 21} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8601, 21} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8601, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8602, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_destroy_srq: ref;
axiom (ib_destroy_srq == $sub.ref(0, 269079));
procedure  ib_destroy_srq($p0: ref)
  returns ($r: i32);
const atomic_dec: ref;
axiom (atomic_dec == $sub.ref(0, 270111));
procedure  atomic_dec($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7971, 129} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  call devirtbounce.19(0, $p1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7972, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const idr_read_obj: ref;
axiom (idr_read_obj == $sub.ref(0, 271143));
procedure  idr_read_obj($p0: ref, $i1: i32, $p2: ref, $i3: i32)
  returns ($r: ref)
{
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.idr* %0, i64 0, metadata !13415, metadata !5829), !dbg !13416, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_ucontext* %2, i64 0, metadata !13419, metadata !5829), !dbg !13420, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8583, 10} true;
  assume {:verifier.code 0} true;
  call $p4 := idr_read_uobj($p0, $i1, $p2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 32} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 84} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 84} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 11} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 11} true;
  assume {:verifier.code 0} true;
  $p9 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8584, 3} true;
  assume {:verifier.code 0} true;
  $r := $p9;
  $exn := false;
  return;
}
const idr_write_uobj: ref;
axiom (idr_write_uobj == $sub.ref(0, 272175));
procedure  idr_write_uobj($p0: ref, $i1: i32, $p2: ref)
  returns ($r: ref)
{
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.idr* %0, i64 0, metadata !13438, metadata !5829), !dbg !13439, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8561, 10} true;
  assume {:verifier.code 0} true;
  call $p3 := __idr_get_uobj($p0, $i1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8562, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8562, 28} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8562, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8563, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8576, 1} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8567, 22} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p3, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8567, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8568, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8568, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8568, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8568, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8569, 5} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8570, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8574, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $p3;
  goto $bb3;
}
const atomic_read: ref;
axiom (atomic_read == $sub.ref(0, 273207));
procedure  atomic_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.__anonstruct_atomic_t_6* %0, i64 0, metadata !13468, metadata !5829), !dbg !13469, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7954, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7954, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7954, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const atomic_dec_and_test: ref;
axiom (atomic_dec_and_test == $sub.ref(0, 274239));
procedure  atomic_dec_and_test($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7980, 138} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  call devirtbounce.24(0, $p2, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7982, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.65, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7982, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7982, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7982, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7982, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const ib_dealloc_xrcd: ref;
axiom (ib_dealloc_xrcd == $sub.ref(0, 275271));
procedure  ib_dealloc_xrcd($p0: ref)
  returns ($r: i32);
const xrcd_table_delete: ref;
axiom (xrcd_table_delete == $sub.ref(0, 276303));
procedure  xrcd_table_delete($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9221, 11} true;
  assume {:verifier.code 0} true;
  call $p2 := xrcd_table_search($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9222, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9222, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9222, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9223, 5} true;
  assume {:verifier.code 0} true;
  call iput($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9224, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9224, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9224, 5} true;
  assume {:verifier.code 0} true;
  call rb_erase($p5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9225, 11} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9225, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9226, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9229, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const xrcd_table_search: ref;
axiom (xrcd_table_search == $sub.ref(0, 277335));
procedure  xrcd_table_search($p0: ref, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $p23: ref;
  var $p24: ref;
  var $p22: ref;
  var $p16: ref;
  var $i26: i64;
  var $i27: i1;
  var $p7: ref;
  var $p25: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9179, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 464);
  $p3 := $add.ref($p0, 464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9179, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 25} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  $p7 := $p4;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9194, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9183, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9184, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9184, 30} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9184, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9184, 38} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9184, 36} true;
  assume {:verifier.code 0} true;
  $i13 := $ugt.i64($i11, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9184, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9185, 12} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9185, 12} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9186, 3} true;
  assume {:verifier.code 0} true;
  $p16 := $p15;
  goto $bb8;
$bb7:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9187, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9187, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9187, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9187, 38} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9187, 36} true;
  assume {:verifier.code 0} true;
  $i21 := $ult.i64($i19, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9187, 7} true;
  assume {:verifier.code 0} true;
  $p22 := $p7;
  assume {:branchcond $i21} true;
  goto $bb9, $bb10;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 25} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  $p7 := $p16;
  assume {:branchcond $i27} true;
  goto $bb13, $bb14;
$bb9:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9188, 12} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9188, 12} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9189, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9190, 5} true;
  assume {:verifier.code 0} true;
  $p25 := $p22;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  $p16 := $p24;
  goto $bb8;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9201, 1} true;
  assume {:verifier.code 0} true;
  $r := $p25;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  assume ($i27 == 1);
  goto $bb4;
$bb14:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9199, 3} true;
  assume {:verifier.code 0} true;
  $p25 := $0.ref;
  goto $bb12;
}
const iput: ref;
axiom (iput == $sub.ref(0, 278367));
procedure  iput($p0: ref);
const rb_erase: ref;
axiom (rb_erase == $sub.ref(0, 279399));
procedure  rb_erase($p0: ref, $p1: ref);
const file_inode: ref;
axiom (file_inode == $sub.ref(0, 280431));
procedure  file_inode($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8340, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8340, 30} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8340, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const find_xrcd: ref;
axiom (find_xrcd == $sub.ref(0, 281463));
procedure  find_xrcd($p0: ref, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9207, 11} true;
  assume {:verifier.code 0} true;
  call $p2 := xrcd_table_search($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9208, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9208, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9208, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9209, 5} true;
  assume {:verifier.code 0} true;
  $p5 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9215, 1} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9213, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9213, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9213, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $p7;
  goto $bb3;
}
const __mutex_init: ref;
axiom (__mutex_init == $sub.ref(0, 282495));
procedure  __mutex_init($p0: ref, $p1: ref, $p2: ref);
const xrcd_table_insert: ref;
axiom (xrcd_table_insert == $sub.ref(0, 283527));
procedure  xrcd_table_insert($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i1;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p27: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i1;
  var $p17: ref;
  var $p39: ref;
  var $p40: ref;
  var $p15: ref;
  var $p16: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9135, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 464);
  $p4 := $add.ref($p0, 464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9137, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := kmalloc(40, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9138, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9139, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9139, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9139, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9140, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9171, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9144, 10} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9144, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9145, 10} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p6, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9145, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  $p15, $p16 := $p4, $0.ref;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $p4;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9162, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9148, 12} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9150, 10} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9151, 29} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9151, 29} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9151, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9151, 37} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9151, 35} true;
  assume {:verifier.code 0} true;
  $i24 := $ugt.i64($i22, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9151, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9152, 12} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9152, 17} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9153, 3} true;
  assume {:verifier.code 0} true;
  $p27 := $p26;
  goto $bb12;
$bb11:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9154, 29} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p19, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9154, 29} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9154, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9154, 37} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9154, 35} true;
  assume {:verifier.code 0} true;
  $i32 := $ult.i64($i30, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9154, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb13, $bb14;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 23} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 26} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i64($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  $p17, $p39, $p40 := $p27, $p27, $p18;
  assume {:branchcond $i38} true;
  goto $bb16, $bb17;
$bb13:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9155, 12} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9155, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9156, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i32 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9157, 11} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9157, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9158, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 17);
  goto $bb3;
$bb15:
  assume {:verifier.code 0} true;
  $p27 := $p34;
  goto $bb12;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  assume ($i38 == 1);
  goto $bb8;
$bb17:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9161, 7} true;
  assume {:verifier.code 0} true;
  $p15, $p16 := $p39, $p40;
  goto $bb7;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9166, 25} true;
  assume {:verifier.code 0} true;
  $p41 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9166, 3} true;
  assume {:verifier.code 0} true;
  call rb_link_node($p41, $p16, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9167, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9167, 41} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9167, 3} true;
  assume {:verifier.code 0} true;
  call rb_insert_color($p42, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9168, 3} true;
  assume {:verifier.code 0} true;
  call $p44 := igrab($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9169, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb3;
}
const fdput: ref;
axiom (fdput == $sub.ref(0, 284559));
procedure  fdput($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:verifier.code 0} true;
  $M.66 := $store.ref($M.66, $p4, $p0);
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, 8);
  assume {:verifier.code 0} true;
  $M.67 := $store.i32($M.67, $p5, $i1);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5692, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5692, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.67, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5692, 22} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5692, 22} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5692, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5693, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5693, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.66, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5693, 5} true;
  assume {:verifier.code 0} true;
  call fput($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5694, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5697, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const fput: ref;
axiom (fput == $sub.ref(0, 285591));
procedure  fput($p0: ref);
const rb_link_node: ref;
axiom (rb_link_node == $sub.ref(0, 286623));
procedure  rb_link_node($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8215, 29} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8215, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8215, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8217, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8217, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8218, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8218, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8219, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8220, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const rb_insert_color: ref;
axiom (rb_insert_color == $sub.ref(0, 287655));
procedure  rb_insert_color($p0: ref, $p1: ref);
const igrab: ref;
axiom (igrab == $sub.ref(0, 288687));
procedure  igrab($p0: ref)
  returns ($r: ref);
const __fdget: ref;
axiom (__fdget == $sub.ref(0, 289719));
procedure  __fdget($i0: i32)
  returns ($r: i64);
const ib_uverbs_unmarshall_recv: ref;
axiom (ib_uverbs_unmarshall_recv == $sub.ref(0, 290751));
procedure  ib_uverbs_unmarshall_recv($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32)
  returns ($r: ref)
{
  var $i5: i64;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $i25: i1;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $i37: i1;
  var $p38: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $i56: i64;
  var $i57: i1;
  var $p59: ref;
  var $p58: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $i65: i32;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $i77: i64;
  var $i78: i64;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $p82: ref;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $i86: i64;
  var $i87: i1;
  var $p88: ref;
  var $p89: ref;
  var $i90: i32;
  var $i91: i32;
  var $p93: ref;
  var $i92: i32;
  var $i94: i32;
  var $i95: i1;
  var $i27: i32;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p96: ref;
  var $p26: ref;
  var $p97: ref;
  var $p39: ref;
  var $i40: i32;
  var $p98: ref;
  var $i99: i64;
  var $i100: i1;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i64;
  var $i106: i1;
  var $p101: ref;
  var $i107: i64;
  var $p108: ref;
  var $p109: ref;
  var $p14: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !13702, metadata !5829), !dbg !13703, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !13704, metadata !5829), !dbg !13705, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !13706, metadata !5829), !dbg !13707, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !13708, metadata !5829), !dbg !13709, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 58} true;
  assume {:verifier.code 0} true;
  $i6 := $mul.i32($i4, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 32} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 72} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 98} true;
  assume {:verifier.code 0} true;
  $i9 := $mul.i64($i8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 70} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i7, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $ult.i64($i5, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11391, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11392, 11} true;
  assume {:verifier.code 0} true;
  call $p12 := ERR_PTR($sub.i64(0, 22));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11393, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11393, 5} true;
  assume {:verifier.code 0} true;
  $p14 := $p12;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11486, 1} true;
  assume {:verifier.code 0} true;
  $r := $p14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11397, 16} true;
  assume {:verifier.code 0} true;
  $i15 := $ule.i32($i4, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11397, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11398, 15} true;
  assume {:verifier.code 0} true;
  call $p16 := ERR_PTR($sub.i64(0, 22));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11399, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11399, 5} true;
  assume {:verifier.code 0} true;
  $p14 := $p16;
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11403, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11403, 13} true;
  assume {:verifier.code 0} true;
  call $p19 := kmalloc($i18, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11404, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11405, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11405, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11405, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11406, 15} true;
  assume {:verifier.code 0} true;
  call $p23 := ERR_PTR($sub.i64(0, 12));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11407, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11407, 5} true;
  assume {:verifier.code 0} true;
  $p14 := $p23;
  goto $bb3;
$bb9:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_recv_wr* null, i64 0, metadata !13758, metadata !5829), !dbg !13759, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 15} true;
  assume {:verifier.code 0} true;
  $i25 := $ult.i32(0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 7} true;
  assume {:verifier.code 0} true;
  $p26 := $0.ref;
  assume {:branchcond $i25} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 7} true;
  assume {:verifier.code 0} true;
  $i27, $i28, $p29, $p30 := 0, 0, $0.ref, $0.ref;
  goto $bb14;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb14:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11464, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11416, 28} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11416, 92} true;
  assume {:verifier.code 0} true;
  $i32 := $mul.i32($i27, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11416, 67} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11416, 65} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, $mul.ref($i33, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11417, 28} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11416, 13} true;
  assume {:verifier.code 0} true;
  call $i36 := copy_from_user($p31, $p34, $i35);
  // WARNING: %41 = call i64 @copy_from_user(i8* %36, i8* %39, i64 %40), !dbg !5878, !verifier.code !5811
  call {:cexpr "tmp___3"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11418, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i64($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11418, 7} true;
  assume {:verifier.code 0} true;
  $p38 := $p30;
  assume {:branchcond $i37} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i37 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.16.lcssa7 = phi %struct.ib_recv_wr* [ %.1612, %35 ], !verifier.code !5811
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11420, 5} true;
  assume {:verifier.code 0} true;
  $p39, $i40 := $p38, $sub.i32(0, 14);
  goto $bb18;
$bb17:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11471, 9} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11471, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 26} true;
  assume {:verifier.code 0} true;
  $i100 := $ne.i64($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb38, $bb39;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11424, 16} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11424, 16} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11424, 24} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i42, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11424, 41} true;
  assume {:verifier.code 0} true;
  $i44 := $ugt.i32($i43, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11424, 7} true;
  assume {:verifier.code 0} true;
  $p45 := $p30;
  assume {:branchcond $i44} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i44 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.16.lcssa8 = phi %struct.ib_recv_wr* [ %.1612, %45 ], !verifier.code !5811
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11426, 5} true;
  assume {:verifier.code 0} true;
  $p39, $i40 := $p45, $sub.i32(0, 22);
  goto $bb18;
$bb21:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11430, 47} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11430, 47} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11430, 22} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i32.i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11430, 55} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11430, 62} true;
  assume {:verifier.code 0} true;
  $i50 := $mul.i64($i49, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11430, 13} true;
  assume {:verifier.code 0} true;
  call $p51 := kmalloc($i50, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11431, 10} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11432, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11432, 28} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11432, 7} true;
  assume {:verifier.code 0} true;
  $p55 := $p30;
  assume {:branchcond $i54} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i54 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.16.lcssa9 = phi %struct.ib_recv_wr* [ %.1612, %52 ], !verifier.code !5811
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11434, 5} true;
  assume {:verifier.code 0} true;
  $p39, $i40 := $p55, $sub.i32(0, 12);
  goto $bb18;
$bb24:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11438, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11438, 28} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i64($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11438, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11440, 3} true;
  assume {:verifier.code 0} true;
  $p58 := $p51;
  goto $bb28;
$bb27:
  assume !(($i57 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11441, 11} true;
  assume {:verifier.code 0} true;
  $p59 := $p29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11441, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p59, $p51);
  assume {:verifier.code 0} true;
  $p58 := $p30;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11444, 9} true;
  assume {:verifier.code 0} true;
  $p60 := $p52;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11444, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p60, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11445, 26} true;
  assume {:verifier.code 0} true;
  $p61 := $p20;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11445, 26} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i64($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11445, 9} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p52, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11445, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11446, 34} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11446, 34} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11446, 9} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p52, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11446, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p66, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11447, 13} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p52, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11447, 13} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11447, 21} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11447, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11448, 21} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11448, 43} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p70, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11448, 11} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p52, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11448, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p72, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 44} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p52, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 44} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 30} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 103} true;
  assume {:verifier.code 0} true;
  $i76 := $mul.i32($i2, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 77} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i32.i64($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 117} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 140} true;
  assume {:verifier.code 0} true;
  $i79 := $mul.i64($i78, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 115} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i77, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 74} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, $mul.ref($i80, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11450, 52} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p52, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11450, 52} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11450, 30} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11450, 60} true;
  assume {:verifier.code 0} true;
  $i85 := $mul.i64($i84, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11449, 15} true;
  assume {:verifier.code 0} true;
  call $i86 := copy_from_user($p75, $p81, $i85);
  // WARNING: %98 = call i64 @copy_from_user(i8* %87, i8* %93, i64 %97), !dbg !5948, !verifier.code !5811
  call {:cexpr "tmp___5"} boogie_si_record_i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11451, 17} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i64($i86, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11451, 9} true;
  assume {:verifier.code 0} true;
  $p88 := $p58;
  assume {:branchcond $i87} true;
  goto $bb31, $bb32;
$bb30:
  assume !(($i69 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11459, 11} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p52, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11459, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p93, $0.ref);
  assume {:verifier.code 0} true;
  $i92 := $i28;
  goto $bb34;
$bb31:
  assume ($i87 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.05.lcssa = phi %struct.ib_recv_wr* [ %.05, %81 ], !verifier.code !5811
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11453, 7} true;
  assume {:verifier.code 0} true;
  $p39, $i40 := $p88, $sub.i32(0, 14);
  goto $bb18;
$bb32:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11457, 20} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p52, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11457, 20} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11457, 28} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90, $i28);
  // WARNING: %105 = add nsw i32 %104, %.114, !dbg !5957, !verifier.code !5811
  call {:cexpr "sg_ind"} boogie_si_record_i32($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11458, 3} true;
  assume {:verifier.code 0} true;
  $i92 := $i91;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11461, 9} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i32($i27, 1);
  // WARNING: %109 = add nsw i32 %.0215, 1, !dbg !5962, !verifier.code !5811
  call {:cexpr "i"} boogie_si_record_i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 15} true;
  assume {:verifier.code 0} true;
  $i95 := $ult.i32($i94, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 7} true;
  assume {:verifier.code 0} true;
  $i27, $i28, $p29, $p30, $p96 := $i94, $i92, $p51, $p58, $p58;
  assume {:branchcond $i95} true;
  goto $bb35, $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 7} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb14;
$bb36:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11463, 7} true;
  assume {:verifier.code 0} true;
  $p26 := $p96;
  goto $bb13;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11468, 9} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11468, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11469, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $p26;
  goto $bb3;
$bb38:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  $p101 := $p39;
  goto $bb41;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i100 == 1));
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  goto $bb45;
$bb41:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11479, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11474, 14} true;
  assume {:verifier.code 0} true;
  $p102 := $p101;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11474, 14} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11475, 9} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11475, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 26} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i64($i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  $p101 := $p103;
  assume {:branchcond $i106} true;
  goto $bb43, $bb44;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  assume ($i106 == 1);
  goto $bb41;
$bb44:
  assume !(($i106 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11478, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11483, 21} true;
  assume {:verifier.code 0} true;
  $i107 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11483, 13} true;
  assume {:verifier.code 0} true;
  call $p108 := ERR_PTR($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11484, 11} true;
  assume {:verifier.code 0} true;
  $p109 := $bitcast.ref.ref($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11484, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $p108;
  goto $bb3;
}
const idr_read_srq: ref;
axiom (idr_read_srq == $sub.ref(0, 291783));
procedure  idr_read_srq($i0: i32, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8682, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := idr_read_obj(ib_uverbs_srq_idr, $i0, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8683, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8683, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const put_srq_read: ref;
axiom (put_srq_read == $sub.ref(0, 292815));
procedure  put_srq_read($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8691, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8691, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8691, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8692, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ERR_PTR: ref;
axiom (ERR_PTR == $sub.ref(0, 293847));
procedure  ERR_PTR($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7800, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_err_ptr($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7801, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_err_ptr: ref;
axiom (ldv_err_ptr == $sub.ref(0, 294879));
procedure  ldv_err_ptr($i0: i64)
  returns ($r: ref)
{
  var $i1: i64;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12913, 26} true;
  assume {:verifier.code 0} true;
  $i1 := $sub.i64(2012, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12913, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12913, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ib_uverbs_release_uevent: ref;
axiom (ib_uverbs_release_uevent == $sub.ref(0, 295911));
procedure  ib_uverbs_release_uevent($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $p20: ref;
  var $p21: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5990, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5990, 26} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5990, 39} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5990, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5991, 46} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 216);
  $p6 := $add.ref($p1, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5991, 57} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5992, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5992, 42} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5993, 49} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p8, $mul.ref($sub.ref(0, 32), 56)), 32);
  $p11 := $add.ref($add.ref($p8, $mul.ref($sub.ref(0, 32), 56)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5993, 58} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5994, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5994, 46} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 31} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p8, $mul.ref($sub.ref(0, 32), 56)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 69} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 44} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 41} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i16, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  $p20, $p21 := $p14, $p9;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6004, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5997, 19} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5997, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5998, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5998, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6000, 49} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p20, 32);
  $p25 := $add.ref($p20, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6000, 58} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6001, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6001, 46} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 31} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p20, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 41} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  $p20, $p21 := $p28, $p20;
  assume {:branchcond $i31} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  assume ($i31 == 1);
  goto $bb4;
$bb7:
  assume !(($i31 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6003, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6008, 28} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6008, 28} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6008, 41} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6008, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6009, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_query_srq: ref;
axiom (ib_query_srq == $sub.ref(0, 296943));
procedure  ib_query_srq($p0: ref, $p1: ref)
  returns ($r: i32);
const idr_write_qp: ref;
axiom (idr_write_qp == $sub.ref(0, 297975));
procedure  idr_write_qp($i0: i32, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8655, 10} true;
  assume {:verifier.code 0} true;
  call $p2 := idr_write_uobj(ib_uverbs_qp_idr, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 32} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 100} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 100} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 78} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $p6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8656, 3} true;
  assume {:verifier.code 0} true;
  $r := $p8;
  $exn := false;
  return;
}
const ib_detach_mcast: ref;
axiom (ib_detach_mcast == $sub.ref(0, 299007));
procedure  ib_detach_mcast($p0: ref, $p1: ref, $i2: i16)
  returns ($r: i32);
const memcmp: ref;
axiom (memcmp == $sub.ref(0, 300039));
procedure  memcmp($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32);
const put_qp_write: ref;
axiom (put_qp_write == $sub.ref(0, 301071));
procedure  put_qp_write($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8673, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8673, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8673, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8674, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_attach_mcast: ref;
axiom (ib_attach_mcast == $sub.ref(0, 302103));
procedure  ib_attach_mcast($p0: ref, $p1: ref, $i2: i16)
  returns ($r: i32);
const idr_read_qp: ref;
axiom (idr_read_qp == $sub.ref(0, 303135));
procedure  idr_read_qp($i0: i32, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8646, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := idr_read_obj(ib_uverbs_qp_idr, $i0, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8647, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8647, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const put_qp_read: ref;
axiom (put_qp_read == $sub.ref(0, 304167));
procedure  put_qp_read($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8664, 21} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8664, 21} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8664, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8665, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const idr_read_ah: ref;
axiom (idr_read_ah == $sub.ref(0, 305199));
procedure  idr_read_ah($i0: i32, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8628, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := idr_read_obj(ib_uverbs_ah_idr, $i0, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8629, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8629, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const put_ah_read: ref;
axiom (put_ah_read == $sub.ref(0, 306231));
procedure  put_ah_read($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8637, 21} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8637, 21} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8637, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_read($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8638, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_resolve_eth_l2_attrs: ref;
axiom (ib_resolve_eth_l2_attrs == $sub.ref(0, 307263));
procedure  ib_resolve_eth_l2_attrs($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const modify_qp_mask: ref;
axiom (modify_qp_mask == $sub.ref(0, 308295));
procedure  modify_qp_mask($i0: i32, $i1: i32)
  returns ($r: i32)
{
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i32;
  var $i7: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !14041, metadata !5829), !dbg !14042, !verifier.code !5831
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i0, 10);
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i0, 9);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb7, $bb8;
$bb3:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 10);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10971, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i1, $sub.i32(0, 11265));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10971, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i7;
  goto $bb9;
$bb5:
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10969, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i1, $sub.i32(0, 163841));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10969, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i5;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb6;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10976, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10973, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i1;
  goto $bb9;
}
const ib_modify_qp: ref;
axiom (ib_modify_qp == $sub.ref(0, 309327));
procedure  ib_modify_qp($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32);
const ib_query_qp: ref;
axiom (ib_query_qp == $sub.ref(0, 310359));
procedure  ib_query_qp($p0: ref, $p1: ref, $i2: i32, $p3: ref)
  returns ($r: i32);
const capable: ref;
axiom (capable == $sub.ref(0, 311391));
procedure  capable($i0: i32)
  returns ($r: i1);
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 312423));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $i2: i32;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !14054, metadata !5829), !dbg !14055, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5424, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $or.i32($i1, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5424, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := kmalloc($i0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5425, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ib_create_qp: ref;
axiom (ib_create_qp == $sub.ref(0, 313455));
procedure  ib_create_qp($p0: ref, $p1: ref)
  returns ($r: ref);
const ib_req_notify_cq: ref;
axiom (ib_req_notify_cq == $sub.ref(0, 314487));
procedure  ib_req_notify_cq($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_cq* %0, i64 0, metadata !14065, metadata !5829), !dbg !14066, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8386, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8386, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8386, 26} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 688);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8386, 26} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  call $i6 := devirtbounce.25($p5, $p0, $i1);
  // WARNING: %7 = call i32 @devirtbounce.25(i32 (%struct.ib_cq*, i32)* %6, %struct.ib_cq* %0, i32 %1)
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8387, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const ib_poll_cq: ref;
axiom (ib_poll_cq == $sub.ref(0, 315519));
procedure  ib_poll_cq($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_cq* %0, i64 0, metadata !14076, metadata !5829), !dbg !14077, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8377, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8377, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8377, 26} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8377, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  call $i7 := devirtbounce.26($p6, $p0, $i1, $p2);
  // WARNING: %8 = call i32 @devirtbounce.26(i32 (%struct.ib_cq*, i32, %struct.ib_wc*)* %7, %struct.ib_cq* %0, i32 %1, %struct.ib_wc* %2)
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8378, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const copy_wc_to_user: ref;
axiom (copy_wc_to_user == $sub.ref(0, 316551));
procedure  copy_wc_to_user($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i16;
  var $p36: ref;
  var $p37: ref;
  var $i38: i16;
  var $p39: ref;
  var $p40: ref;
  var $i41: i8;
  var $p42: ref;
  var $p43: ref;
  var $i44: i8;
  var $p45: ref;
  var $p46: ref;
  var $i47: i8;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i1;
  var $i53: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(48, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10299, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10299, 19} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.68, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10299, 7} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10299, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10300, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10300, 28} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.69, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10300, 7} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10300, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p8, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10301, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10301, 28} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.70, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10301, 7} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10301, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10302, 24} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10302, 24} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.71, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10302, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10302, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10303, 22} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10303, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.72, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10303, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10303, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10304, 25} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10304, 28} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10304, 28} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.73, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10304, 7} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10304, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10304, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10305, 21} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10305, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.74, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10305, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10305, 26} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.75, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10305, 7} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p2, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10305, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10306, 20} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10306, 20} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.76, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10306, 7} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10306, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10307, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10307, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.77, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10307, 7} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10307, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10308, 24} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10308, 24} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i16($M.78, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10308, 7} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p2, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10308, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10309, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10309, 18} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i16($M.79, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10309, 7} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p2, 42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10309, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10310, 16} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10310, 16} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i8($M.80, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10310, 7} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p2, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10310, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10311, 28} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10311, 28} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.81, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10311, 7} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p2, 45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10311, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10312, 22} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p1, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10312, 22} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.82, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10312, 7} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p2, 46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10312, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10313, 7} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p2, 47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10313, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10314, 32} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10314, 13} true;
  assume {:verifier.code 0} true;
  call $i51 := copy_to_user($p0, $p50, 48);
  // WARNING: %52 = call i64 @copy_to_user(i8* %0, i8* %51, i64 48), !dbg !5886, !verifier.code !5808
  call {:cexpr "tmp___0"} boogie_si_record_i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10315, 15} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i64($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10315, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10316, 5} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32(0, 14);
  goto $bb3;
$bb2:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10322, 1} true;
  assume {:verifier.code 0} true;
  $r := $i53;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10320, 3} true;
  assume {:verifier.code 0} true;
  $i53 := 0;
  goto $bb3;
}
const ib_destroy_cq: ref;
axiom (ib_destroy_cq == $sub.ref(0, 317583));
procedure  ib_destroy_cq($p0: ref)
  returns ($r: i32);
const ib_uverbs_release_ucq: ref;
axiom (ib_uverbs_release_ucq == $sub.ref(0, 318615));
procedure  ib_uverbs_release_ucq($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i1;
  var $p21: ref;
  var $p22: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i64;
  var $p51: ref;
  var $i52: i64;
  var $i53: i1;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $i65: i1;
  var $p54: ref;
  var $p55: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5935, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5935, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5935, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5936, 30} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5936, 5} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5937, 48} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 224);
  $p7 := $add.ref($p2, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5937, 58} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5938, 11} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5938, 44} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5939, 51} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p9, $mul.ref($sub.ref(0, 32), 56)), 32);
  $p12 := $add.ref($add.ref($p9, $mul.ref($sub.ref(0, 32), 56)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5939, 60} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5940, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5940, 48} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 33} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p9, $mul.ref($sub.ref(0, 32), 56)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 71} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 46} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 43} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64($i17, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb3:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  $p21, $p22 := $p15, $p10;
  goto $bb6;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5950, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5943, 21} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5943, 5} true;
  assume {:verifier.code 0} true;
  call list_del($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5944, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5944, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5946, 51} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p21, 32);
  $p26 := $add.ref($p21, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5946, 60} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5947, 11} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5947, 48} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 33} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p21, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i64($i31, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  $p21, $p22 := $p29, $p21;
  assume {:branchcond $i32} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  assume ($i32 == 1);
  goto $bb6;
$bb9:
  assume !(($i32 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5949, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5954, 32} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5954, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5955, 25} true;
  assume {:verifier.code 0} true;
  $p34 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5955, 5} true;
  assume {:verifier.code 0} true;
  call $i35 := kref_put($p34, ib_uverbs_release_event_file);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5956, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5959, 26} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5959, 26} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5959, 39} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5959, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5960, 50} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p2, 240);
  $p40 := $add.ref($p2, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5960, 61} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5961, 9} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5961, 46} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p42, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5962, 49} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p42, $mul.ref($sub.ref(0, 32), 56)), 32);
  $p45 := $add.ref($add.ref($p42, $mul.ref($sub.ref(0, 32), 56)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5962, 58} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5963, 9} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5963, 46} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 31} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p42, $mul.ref($sub.ref(0, 32), 56)), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 69} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p2, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 44} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 41} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i64($i50, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  $p54, $p55 := $p48, $p43;
  goto $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i53 == 1));
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5973, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5966, 19} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5966, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5967, 9} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5967, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5969, 49} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p54, 32);
  $p59 := $add.ref($p54, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5969, 58} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5970, 9} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5970, 46} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, $mul.ref($sub.ref(0, 32), 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 31} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p54, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 41} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i64($i64, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  $p54, $p55 := $p62, $p54;
  assume {:branchcond $i65} true;
  goto $bb17, $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb15;
$bb18:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5972, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5977, 28} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5977, 28} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5977, 41} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p67, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5977, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5978, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_uverbs_create_cq_cb: ref;
axiom (ib_uverbs_create_cq_cb == $sub.ref(0, 319647));
procedure  ib_uverbs_create_cq_cb($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10120, 50} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10120, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10120, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ib_copy_to_udata($p3, $p6, 8);
  // WARNING: %8 = call i32 @ib_copy_to_udata(%struct.ib_udata* %3, i8* %7, i64 8), !dbg !5833, !verifier.code !5821
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10121, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10121, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10122, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 14);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10128, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10126, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb3;
}
const create_cq: ref;
axiom (create_cq == $sub.ref(0, 320679));
procedure  create_cq($p0: ref, $p1: ref, $p2: ref, $p3: ref, $i4: i64, $p5: ref, $p6: ref)
  returns ($r: ref)
{
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $p55: ref;
  var $i56: i1;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i1;
  var $i75: i8;
  var $i76: i1;
  var $p77: ref;
  var $i78: i64;
  var $i79: i32;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i32;
  var $i98: i1;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
  var $i112: i1;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $i99: i32;
  var $i125: i32;
  var $i80: i32;
  var $i126: i64;
  var $i127: i1;
  var $i43: i32;
  var $p128: ref;
  var $i129: i64;
  var $p130: ref;
  var $p131: ref;
  var $p21: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_uverbs_ex_create_cq* %3, i64 0, metadata !14298, metadata !5829), !dbg !14299, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10016, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10016, 12} true;
  assume {:verifier.code 0} true;
  $M.83 := $store.i32($M.83, $p9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10017, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10017, 20} true;
  assume {:verifier.code 0} true;
  $M.84 := $store.i32($M.84, $p10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10018, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10018, 14} true;
  assume {:verifier.code 0} true;
  $M.85 := $store.i32($M.85, $p11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 12} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 12} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 42} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 42} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 51} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 51} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 24} true;
  assume {:verifier.code 0} true;
  $i18 := $uge.i32($i13, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10019, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10020, 11} true;
  assume {:verifier.code 0} true;
  call $p19 := ERR_PTR($sub.i64(0, 22));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10021, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10021, 5} true;
  assume {:verifier.code 0} true;
  $p21 := $p19;
  goto $bb3;
$bb2:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10112, 1} true;
  assume {:verifier.code 0} true;
  $r := $p21;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10025, 13} true;
  assume {:verifier.code 0} true;
  call $p22 := kmalloc(264, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10026, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10027, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10027, 27} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10027, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10028, 15} true;
  assume {:verifier.code 0} true;
  call $p26 := ERR_PTR($sub.i64(0, 12));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10029, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10029, 5} true;
  assume {:verifier.code 0} true;
  $p21 := $p26;
  goto $bb3;
$bb6:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10033, 20} true;
  assume {:verifier.code 0} true;
  $p28 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10033, 34} true;
  assume {:verifier.code 0} true;
  $p29 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10033, 34} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i64($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10033, 53} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10033, 53} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10033, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p28, $i30, $p32, cq_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10034, 21} true;
  assume {:verifier.code 0} true;
  $p33 := $p23;
  $p34 := $add.ref($p23, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10034, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10035, 12} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10035, 12} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10035, 25} true;
  assume {:verifier.code 0} true;
  $i37 := $sge.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10035, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10036, 47} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10036, 47} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10036, 15} true;
  assume {:verifier.code 0} true;
  call $p40 := ib_uverbs_lookup_comp_file($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10037, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10037, 33} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i64($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10037, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  $p44 := $0.ref;
  goto $bb14;
$bb10:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10039, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $sub.i32(0, 22);
  goto $bb12;
$bb11:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10108, 25} true;
  assume {:verifier.code 0} true;
  $p128 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10108, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10109, 21} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10109, 13} true;
  assume {:verifier.code 0} true;
  call $p130 := ERR_PTR($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10110, 11} true;
  assume {:verifier.code 0} true;
  $p131 := $bitcast.ref.ref($p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10110, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $p130;
  goto $bb3;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10043, 3} true;
  assume {:verifier.code 0} true;
  $p44 := $p40;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10046, 8} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p23, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10046, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10047, 8} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p23, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10047, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10048, 8} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p23, 260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10048, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10049, 25} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p23, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10049, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10050, 25} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p23, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10050, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10051, 19} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10051, 19} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10051, 8} true;
  assume {:verifier.code 0} true;
  $p52 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10051, 12} true;
  assume {:verifier.code 0} true;
  $M.83 := $store.i32($M.83, $p52, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10052, 33} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10052, 33} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10052, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10052, 20} true;
  assume {:verifier.code 0} true;
  $M.84 := $store.i32($M.84, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10053, 14} true;
  assume {:verifier.code 0} true;
  $i56 := $ugt.i64($i4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10053, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10054, 23} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10054, 23} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10054, 10} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10054, 16} true;
  assume {:verifier.code 0} true;
  $M.85 := $store.i32($M.85, $p59, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10055, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 19} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $load.ref($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 28} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 28} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 37} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p63, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 37} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 56} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 56} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 65} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p67, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10058, 65} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10059, 55} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10059, 55} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  call $p72 := devirtbounce.27($p65, $p69, $p8, $p71, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10060, 20} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10060, 13} true;
  assume {:verifier.code 0} true;
  call $i74 := IS_ERR($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10060, 11} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i1.i8($i74);
  // WARNING: %88 = zext i1 %87 to i8, !dbg !5944, !verifier.code !5831
  call {:cexpr "tmp___3"} boogie_si_record_i8($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10061, 13} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i8.i1($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10061, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10062, 23} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10062, 15} true;
  assume {:verifier.code 0} true;
  call $i78 := PTR_ERR($p77);
  // WARNING: %92 = call i64 @PTR_ERR(i8* %91), !dbg !5952, !verifier.code !5831
  call {:cexpr "tmp___2"} boogie_si_record_i64($i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10063, 11} true;
  assume {:verifier.code 0} true;
  $i79 := $trunc.i64.i32($i78);
  // WARNING: %93 = trunc i64 %92 to i32, !dbg !5955, !verifier.code !5831
  call {:cexpr "ret"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10064, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $i79;
  goto $bb20;
$bb19:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10102, 7} true;
  assume {:verifier.code 0} true;
  $i126 := $p2i.ref.i64($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10102, 31} true;
  assume {:verifier.code 0} true;
  $i127 := $ne.i64($i126, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10102, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb30, $bb31;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10068, 23} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10068, 23} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10068, 32} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p82, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10068, 32} true;
  assume {:verifier.code 0} true;
  $p84 := $load.ref($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10068, 7} true;
  assume {:verifier.code 0} true;
  $p85 := $p72;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10068, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p85, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10069, 24} true;
  assume {:verifier.code 0} true;
  $p86 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10069, 7} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p72, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10069, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p87, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10070, 7} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p72, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10070, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p88, ib_uverbs_comp_handler);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p72, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10071, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p89, ib_uverbs_cq_event_handler);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10072, 20} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10072, 7} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p72, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10072, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p91, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10073, 20} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p72, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10073, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p92, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10074, 25} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10074, 8} true;
  assume {:verifier.code 0} true;
  $p94 := $p23;
  $p95 := $add.ref($p23, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10074, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p95, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10075, 49} true;
  assume {:verifier.code 0} true;
  $p96 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10075, 9} true;
  assume {:verifier.code 0} true;
  call $i97 := idr_add_uobj(ib_uverbs_cq_idr, $p96);
  // WARNING: %112 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_cq_idr, %struct.ib_uobject* %111), !dbg !5977, !verifier.code !5831
  call {:cexpr "ret"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10076, 11} true;
  assume {:verifier.code 0} true;
  $i98 := $ne.i32($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10076, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10077, 5} true;
  assume {:verifier.code 0} true;
  $i99 := $i97;
  goto $bb24;
$bb23:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10100, 3} true;
  assume {:verifier.code 0} true;
  call $i125 := ib_destroy_cq($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10100, 3} true;
  assume {:verifier.code 0} true;
  $i80 := $i99;
  goto $bb20;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10081, 3} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10081, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p100, 0, 16, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10082, 38} true;
  assume {:verifier.code 0} true;
  $p101 := $p23;
  $p102 := $add.ref($p23, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10082, 46} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10082, 8} true;
  assume {:verifier.code 0} true;
  $p104 := $p7;
  $p105 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10082, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, $i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10083, 31} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p72, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10083, 31} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10083, 8} true;
  assume {:verifier.code 0} true;
  $p108 := $p7;
  $p109 := $add.ref($p7, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10083, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p109, $i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10084, 8} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p7, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10084, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p110, 16);
  call $i111 := devirtbounce.28($p5, $p0, $p23, $p7, $p1, $p6);
  // WARNING: %128 = call i32 @devirtbounce.28(i32 (%struct.ib_uverbs_file*, %struct.ib_ucq_object*, %struct.ib_uverbs_ex_create_cq_resp*, %struct.ib_udata*, i8*)* %5, %struct.ib_uverbs_file* %0, %struct.ib_ucq_object* %26, %struct.ib_uverbs_ex_create_cq_resp* %8, %struct.ib_udata* %1, i8* %6)
  call {:cexpr "ret"} boogie_si_record_i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10086, 11} true;
  assume {:verifier.code 0} true;
  $i112 := $ne.i32($i111, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10086, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i112 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10087, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10098, 46} true;
  assume {:verifier.code 0} true;
  $p124 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10098, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_cq_idr, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10098, 3} true;
  assume {:verifier.code 0} true;
  $i99 := $i111;
  goto $bb24;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10091, 29} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10091, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10092, 24} true;
  assume {:verifier.code 0} true;
  $p114 := $p23;
  $p115 := $add.ref($p23, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10092, 47} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10092, 47} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10092, 58} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p117, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10092, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p115, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10093, 24} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10093, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10094, 8} true;
  assume {:verifier.code 0} true;
  $p120 := $p23;
  $p121 := $add.ref($p23, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10094, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p121, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10095, 19} true;
  assume {:verifier.code 0} true;
  $p122 := $p23;
  $p123 := $add.ref($p23, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10095, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10096, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $p22;
  goto $bb3;
$bb30:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10103, 5} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_release_ucq($p0, $p44, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10104, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i127 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10102, 83} true;
  assume {:verifier.code 0} true;
  $i43 := $i80;
  goto $bb12;
}
const ib_uverbs_lookup_comp_file: ref;
axiom (ib_uverbs_lookup_comp_file == $sub.ref(0, 321711));
procedure  ib_uverbs_lookup_comp_file($i0: i32)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p28: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p21: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: %4 = alloca %struct.fd, align 8, !verifier.code !5808
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := fdget.2($p4, $i0);
  assume {:verifier.code 0} true;
  $p6 := $p4;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.52, $p6);
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p4, 8);
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.52, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $p10;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  $M.86 := $store.ref($M.86, $p11, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p10, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  $M.86 := $store.i32($M.86, $p12, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6690, 9} true;
  assume {:verifier.code 0} true;
  call $M.86 := $memcpy.i8($M.86, $M.86, $p13, $p14, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6691, 7} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6691, 7} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6691, 7} true;
  assume {:verifier.code 0} true;
  call $M.86 := $memcpy.i8($M.86, $M.86, $p15, $p16, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6692, 25} true;
  assume {:verifier.code 0} true;
  $p17 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6692, 25} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.86, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6692, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6692, 30} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i64($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6692, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6693, 5} true;
  assume {:verifier.code 0} true;
  $p21 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6714, 1} true;
  assume {:verifier.code 0} true;
  $r := $p21;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6697, 26} true;
  assume {:verifier.code 0} true;
  $p22 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6697, 26} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.86, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6697, 33} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6697, 33} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6697, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6697, 38} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, $p2i.ref.i64(uverbs_event_fops));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6697, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6698, 5} true;
  assume {:verifier.code 0} true;
  $p28 := $0.ref;
  goto $bb7;
$bb6:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  $p39 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.86, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p38, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.86, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6711, 3} true;
  assume {:verifier.code 0} true;
  call fdput($p40, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6712, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $p28;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6702, 47} true;
  assume {:verifier.code 0} true;
  $p29 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6702, 47} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.86, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6702, 54} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6702, 54} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6702, 13} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6703, 16} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6703, 16} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6703, 25} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6703, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6705, 5} true;
  assume {:verifier.code 0} true;
  $p28 := $0.ref;
  goto $bb7;
$bb10:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6709, 23} true;
  assume {:verifier.code 0} true;
  $p37 := $p33;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6709, 3} true;
  assume {:verifier.code 0} true;
  call kref_get($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6709, 3} true;
  assume {:verifier.code 0} true;
  $p28 := $p32;
  goto $bb7;
}
const ib_uverbs_comp_handler: ref;
axiom (ib_uverbs_comp_handler == $sub.ref(0, 322743));
procedure  ib_uverbs_comp_handler($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6510, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6511, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6511, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6512, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6543, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6516, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6516, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := spinlock_check($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6517, 11} true;
  assume {:verifier.code 0} true;
  call $i7 := _raw_spin_lock_irqsave($p6);
  // WARNING: %11 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %10), !dbg !5827, !verifier.code !5809
  call {:cexpr "flags"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6518, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6518, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6518, 23} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6518, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6519, 36} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6519, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p11, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6520, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6524, 13} true;
  assume {:verifier.code 0} true;
  call $p12 := kmalloc(56, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6525, 11} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6526, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6526, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6526, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6527, 36} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6527, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p16, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6528, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6532, 45} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6532, 45} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6533, 10} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 37} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 47} true;
  assume {:verifier.code 0} true;
  $p22 := $p21;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 47} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 15} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 20} true;
  assume {:verifier.code 0} true;
  $p26 := $p25;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6534, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p26, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6535, 28} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p19, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6535, 10} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p13, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6535, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6536, 26} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6536, 40} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6536, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p29, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6537, 26} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p13, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6537, 44} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p19, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6537, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p31, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6538, 34} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6538, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p33, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6539, 21} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6539, 3} true;
  assume {:verifier.code 0} true;
  call __wake_up($p34, 1, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6540, 23} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p2, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6540, 3} true;
  assume {:verifier.code 0} true;
  call kill_fasync($p35, 29, 131073);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6541, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const ib_uverbs_cq_event_handler: ref;
axiom (ib_uverbs_cq_event_handler == $sub.ref(0, 323775));
procedure  ib_uverbs_cq_event_handler($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6591, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6591, 57} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6591, 57} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6591, 62} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6591, 62} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6592, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 52} true;
  assume {:verifier.code 0} true;
  $p10 := $p7;
  $p11 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 60} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i64($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 88} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 88} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 73} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6594, 35} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p7, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6594, 55} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p7, 260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6593, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_async_handler($p9, $i12, $i15, $p16, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6595, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kref_get: ref;
axiom (kref_get == $sub.ref(0, 324807));
procedure  kref_get($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i1;
  var $i18: i1;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $i23: i1;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5334, 38} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5334, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := atomic_add_return(1, $p1);
  // WARNING: %3 = call i32 @atomic_add_return(i32 1, %struct.__anonstruct_atomic_t_6* %2), !dbg !5812, !verifier.code !5809
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5335, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $sle.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5335, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  // WARNING: %5 = zext i1 %4 to i32, !dbg !5815, !verifier.code !5809
  call {:cexpr "__ret_warn_once"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5336, 49} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5336, 49} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5336, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5336, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv__builtin_expect($i7, 0);
  // WARNING: %9 = call i64 @ldv__builtin_expect(i64 %8, i64 0), !dbg !5820, !verifier.code !5809
  call {:cexpr "tmp___2"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5337, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5337, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5338, 23} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5338, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $xor.i1($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5338, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  // WARNING: %14 = zext i1 %13 to i32, !dbg !5828, !verifier.code !5809
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5339, 49} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5339, 49} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i1.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5339, 35} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5339, 15} true;
  assume {:verifier.code 0} true;
  call $i16 := ldv__builtin_expect($i15, 0);
  // WARNING: %18 = call i64 @ldv__builtin_expect(i64 %17, i64 0), !dbg !5833, !verifier.code !5809
  call {:cexpr "tmp___0"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5340, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5340, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb3:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5341, 7} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.20, 47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5342, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5345, 49} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5345, 49} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i1.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5345, 35} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5345, 15} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv__builtin_expect($i20, 0);
  // WARNING: %26 = call i64 @ldv__builtin_expect(i64 %25, i64 0), !dbg !5844, !verifier.code !5809
  call {:cexpr "tmp___1"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5346, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5346, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5348, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5354, 39} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5354, 39} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5354, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5354, 3} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5355, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_copy_to_udata: ref;
axiom (ib_copy_to_udata == $sub.ref(0, 325839));
procedure  ib_copy_to_udata($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !14689, metadata !5829), !dbg !14690, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8358, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8358, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8358, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := copy_to_user($p4, $p1, $i2);
  // WARNING: %6 = call i64 @copy_to_user(i8* %5, i8* %1, i64 %2), !dbg !5818, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8359, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8359, 11} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == $sub.i32(0, 14))) && (($i6 != 1) ==> ($i7 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8359, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const get_unused_fd_flags: ref;
axiom (get_unused_fd_flags == $sub.ref(0, 326871));
procedure  get_unused_fd_flags($i0: i32)
  returns ($r: i32);
const ib_uverbs_alloc_event_file: ref;
axiom (ib_uverbs_alloc_event_file == $sub.ref(0, 327903));
procedure  ib_uverbs_alloc_event_file($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i1;
  var $i27: i8;
  var $i28: i1;
  var $p29: ref;
  var $p10: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_uverbs_file* %0, i64 0, metadata !14704, metadata !5829), !dbg !14705, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6653, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := kmalloc(208, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6654, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6655, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6655, 31} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6655, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6656, 15} true;
  assume {:verifier.code 0} true;
  call $p8 := ERR_PTR($sub.i64(0, 12));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6657, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6657, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $p8;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6681, 1} true;
  assume {:verifier.code 0} true;
  $r := $p10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6661, 24} true;
  assume {:verifier.code 0} true;
  $p11 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6661, 3} true;
  assume {:verifier.code 0} true;
  call kref_init($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6662, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6662, 3} true;
  assume {:verifier.code 0} true;
  call $p13 := spinlock_check($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6663, 35} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p5, 16);
  $p15 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6663, 59} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6663, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p16, .str.10, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6665, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p5, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6665, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6666, 36} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p5, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6666, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p18, .str.11, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6667, 12} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6667, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p19, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6668, 12} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p5, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6668, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p20, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6669, 12} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6669, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6670, 12} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p5, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6670, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6671, 71} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6671, 10} true;
  assume {:verifier.code 0} true;
  call $p24 := anon_inode_getfile(.str.12, uverbs_event_fops, $p23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6673, 20} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6673, 13} true;
  assume {:verifier.code 0} true;
  call $i26 := IS_ERR($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6673, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i1.i8($i26);
  // WARNING: %30 = zext i1 %29 to i8, !dbg !5860, !verifier.code !5808
  call {:cexpr "tmp___1"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6674, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i8.i1($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6674, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6675, 11} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6675, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6676, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6679, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $p24;
  goto $bb3;
}
const put_unused_fd: ref;
axiom (put_unused_fd == $sub.ref(0, 328935));
procedure  put_unused_fd($i0: i32);
const fd_install: ref;
axiom (fd_install == $sub.ref(0, 329967));
procedure  fd_install($i0: i32, $p1: ref);
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 330999));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref);
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 332031));
procedure  __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref);
const anon_inode_getfile: ref;
axiom (anon_inode_getfile == $sub.ref(0, 333063));
procedure  anon_inode_getfile($p0: ref, $p1: ref, $p2: ref, $i3: i32)
  returns ($r: ref);
const ib_dealloc_mw: ref;
axiom (ib_dealloc_mw == $sub.ref(0, 334095));
procedure  ib_dealloc_mw($p0: ref)
  returns ($r: i32);
const ib_dereg_mr: ref;
axiom (ib_dereg_mr == $sub.ref(0, 335127));
procedure  ib_dereg_mr($p0: ref)
  returns ($r: i32);
const ib_check_mr_access: ref;
axiom (ib_check_mr_access == $sub.ref(0, 336159));
procedure  ib_check_mr_access($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 14} true;
  assume {:verifier.code 0} true;
  $i1 := $and.i32($i0, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 20} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 35} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 40} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 25} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8399, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 22);
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8398, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8405, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8403, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb6;
}
const ib_query_device: ref;
axiom (ib_query_device == $sub.ref(0, 337191));
procedure  ib_query_device($p0: ref, $p1: ref)
  returns ($r: i32);
const __dynamic_pr_debug: ref;
axiom (__dynamic_pr_debug == $sub.ref(0, 338223));
procedure  __dynamic_pr_debug.ref.ref($p0: ref, $p1: ref);
const ib_destroy_ah: ref;
axiom (ib_destroy_ah == $sub.ref(0, 339255));
procedure  ib_destroy_ah($p0: ref)
  returns ($r: i32);
const ib_create_ah: ref;
axiom (ib_create_ah == $sub.ref(0, 340287));
procedure  ib_create_ah($p0: ref, $p1: ref)
  returns ($r: ref);
const ib_dealloc_pd: ref;
axiom (ib_dealloc_pd == $sub.ref(0, 341319));
procedure  ib_dealloc_pd($p0: ref)
  returns ($r: i32);
const ib_query_port: ref;
axiom (ib_query_port == $sub.ref(0, 342351));
procedure  ib_query_port($p0: ref, $i1: i8, $p2: ref)
  returns ($r: i32);
const rdma_port_get_link_layer: ref;
axiom (rdma_port_get_link_layer == $sub.ref(0, 343383));
procedure  rdma_port_get_link_layer($p0: ref, $i1: i8)
  returns ($r: i32);
const copy_query_dev_fields: ref;
axiom (copy_query_dev_fields == $sub.ref(0, 344415));
procedure  copy_query_dev_fields($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $i65: i32;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $i83: i32;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $p90: ref;
  var $p91: ref;
  var $i92: i32;
  var $p93: ref;
  var $p94: ref;
  var $i95: i32;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
  var $p99: ref;
  var $p100: ref;
  var $i101: i32;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $p108: ref;
  var $p109: ref;
  var $i110: i32;
  var $p111: ref;
  var $p112: ref;
  var $i113: i32;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $p117: ref;
  var $p118: ref;
  var $i119: i16;
  var $p120: ref;
  var $p121: ref;
  var $i122: i8;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: i8;
  var $p130: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8857, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8857, 24} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8857, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8857, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p5, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 38} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 38} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 47} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 2472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8858, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8859, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8859, 32} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8859, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8859, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p15, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8860, 29} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8860, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8860, 9} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8860, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8861, 31} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8861, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8861, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8861, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8862, 27} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8862, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8862, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8862, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8863, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8863, 32} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8863, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8863, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8864, 24} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p2, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8864, 24} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8864, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8864, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8865, 32} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p2, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8865, 32} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8865, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8865, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8866, 35} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p2, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8866, 35} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8866, 9} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8866, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8867, 42} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p2, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8867, 42} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8867, 9} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8867, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8868, 33} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p2, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8868, 33} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8868, 9} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8868, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8869, 36} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p2, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8869, 36} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8869, 9} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p1, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8869, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p45, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8870, 32} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p2, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8870, 32} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8870, 9} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8870, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8871, 33} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p2, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8871, 33} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8871, 9} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p1, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8871, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p51, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8872, 32} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p2, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8872, 32} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8872, 9} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p1, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8872, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p54, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8873, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p2, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8873, 32} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8873, 9} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p1, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8873, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p57, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8874, 40} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p2, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8874, 40} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8874, 9} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p1, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8874, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8875, 40} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p2, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8875, 40} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8875, 9} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p1, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8875, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8876, 41} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p2, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8876, 41} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8876, 9} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p1, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8876, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p66, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8877, 45} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p2, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8877, 45} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8877, 9} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p1, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8877, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8878, 45} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p2, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8878, 45} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8878, 9} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p1, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8878, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8879, 36} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p2, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8879, 36} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8879, 9} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p1, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8879, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8880, 32} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p2, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8880, 32} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8880, 9} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p1, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8880, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p78, $i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8881, 33} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p2, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8881, 33} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8881, 9} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p1, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8881, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, $i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8882, 32} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p2, 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8882, 32} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8882, 9} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p1, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8882, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p84, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8883, 41} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8883, 41} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8883, 9} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p1, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8883, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, $i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8884, 41} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p2, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8884, 41} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8884, 9} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p1, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8884, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p90, $i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8885, 39} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p2, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8885, 39} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8885, 9} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p1, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8885, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8886, 45} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p2, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8886, 45} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i32($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8886, 9} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p1, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8886, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p96, $i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8887, 51} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p2, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8887, 51} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8887, 9} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p1, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8887, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8888, 32} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p2, 140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8888, 32} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8888, 9} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p1, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8888, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8889, 33} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p2, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8889, 33} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8889, 9} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p1, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8889, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, $i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8890, 41} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p2, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8890, 41} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8890, 9} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p1, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8890, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p108, $i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8891, 33} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8891, 33} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8891, 9} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p1, 156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8891, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p111, $i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8892, 36} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p2, 156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8892, 36} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i32($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8892, 9} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p1, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8892, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p114, $i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8893, 37} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p2, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8893, 37} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8893, 9} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p1, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8893, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p117, $i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8894, 27} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p2, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8894, 27} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i16($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8894, 9} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p1, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8894, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p120, $i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8895, 36} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p2, 170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8895, 36} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i8($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8895, 9} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p1, 170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8895, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p123, $i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 33} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 33} true;
  assume {:verifier.code 0} true;
  $p125 := $load.ref($M.0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 42} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p125, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 42} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 51} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, 2485);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 51} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i8($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 9} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p1, 171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8896, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p130, $i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8897, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const rcu_read_lock: ref;
axiom (rcu_read_lock == $sub.ref(0, 345447));
procedure  rcu_read_lock()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8155, 3} true;
  assume {:verifier.code 0} true;
  call __rcu_read_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8156, 3} true;
  assume {:verifier.code 0} true;
  call rcu_lock_acquire(rcu_lock_map);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8157, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := debug_lockdep_rcu_enabled();
  // WARNING: %1 = call i32 @debug_lockdep_rcu_enabled(), !dbg !5810, !verifier.code !5808
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8158, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8158, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8158, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8158, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8158, 16} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8158, 7} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb3;
$bb5:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8159, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := rcu_is_watching();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8159, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %7 = zext i1 %6 to i8, !dbg !5822, !verifier.code !5808
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8160, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8160, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8162, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb8;
$bb7:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8165, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8165, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8167, 7} true;
  assume {:verifier.code 0} true;
  call lockdep_rcu_suspicious(.str.41, 849, .str.42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8168, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8171, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8174, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_current: ref;
axiom (get_current == $sub.ref(0, 346479));
procedure  get_current()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  call $p0 := devirtbounce.29(0, current_task);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7935, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7940, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const get_task_pid: ref;
axiom (get_task_pid == $sub.ref(0, 347511));
procedure  get_task_pid($p0: ref, $i1: i32)
  returns ($r: ref);
const rcu_read_unlock: ref;
axiom (rcu_read_unlock == $sub.ref(0, 348543));
procedure  rcu_read_unlock()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8185, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := debug_lockdep_rcu_enabled();
  // WARNING: %1 = call i32 @debug_lockdep_rcu_enabled(), !dbg !5806, !verifier.code !5808
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8186, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8186, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8186, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8186, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8186, 16} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8186, 7} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb3;
$bb5:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8187, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := rcu_is_watching();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8187, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %7 = zext i1 %6 to i8, !dbg !5820, !verifier.code !5808
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8188, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8188, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8190, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb8;
$bb7:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8193, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8193, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8195, 7} true;
  assume {:verifier.code 0} true;
  call lockdep_rcu_suspicious(.str.41, 900, .str.43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8196, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8199, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8202, 3} true;
  assume {:verifier.code 0} true;
  call __rcu_read_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8203, 3} true;
  assume {:verifier.code 0} true;
  call rcu_lock_release(rcu_lock_map);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8204, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_uverbs_event_handler: ref;
axiom (ib_uverbs_event_handler == $sub.ref(0, 349575));
procedure  ib_uverbs_event_handler($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i64;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6636, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6636, 42} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, $mul.ref($sub.ref(0, 184), 224));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 48} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 56} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 56} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 81} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 81} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 66} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6637, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_async_handler($p3, $i7, $i10, $0.ref, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6639, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_register_event_handler: ref;
axiom (ib_register_event_handler == $sub.ref(0, 350607));
procedure  ib_register_event_handler($p0: ref)
  returns ($r: i32);
const put_pid: ref;
axiom (put_pid == $sub.ref(0, 351639));
procedure  put_pid($p0: ref);
const rcu_is_watching: ref;
axiom (rcu_is_watching == $sub.ref(0, 352671));
procedure  rcu_is_watching()
  returns ($r: i1);
const lockdep_rcu_suspicious: ref;
axiom (lockdep_rcu_suspicious == $sub.ref(0, 353703));
procedure  lockdep_rcu_suspicious($p0: ref, $i1: i32, $p2: ref);
const rcu_lock_release: ref;
axiom (rcu_lock_release == $sub.ref(0, 354735));
procedure  rcu_lock_release($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8141, 3} true;
  assume {:verifier.code 0} true;
  call lock_release($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8142, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const lock_release: ref;
axiom (lock_release == $sub.ref(0, 355767));
procedure  lock_release($p0: ref, $i1: i32, $i2: i64);
const __rcu_read_lock: ref;
axiom (__rcu_read_lock == $sub.ref(0, 356799));
procedure  __rcu_read_lock()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8111, 3} true;
  assume {:verifier.code 0} true;
  call __preempt_count_add(1);
  call devirtbounce.20(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8113, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const rcu_lock_acquire: ref;
axiom (rcu_lock_acquire == $sub.ref(0, 357831));
procedure  rcu_lock_acquire($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8132, 3} true;
  assume {:verifier.code 0} true;
  call lock_acquire($p0, 0, 0, 2, 0, $0.ref, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8133, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const lock_acquire: ref;
axiom (lock_acquire == $sub.ref(0, 358863));
procedure  lock_acquire($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32, $p5: ref, $i6: i64);
const __preempt_count_add: ref;
axiom (__preempt_count_add == $sub.ref(0, 359895));
procedure  __preempt_count_add($i0: i32)
{
  var $i1: i1;
  var $i2: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !15034, metadata !5829), !dbg !15035, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8014, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8014, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  call devirtbounce.19(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8016, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8017, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8017, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8022, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i2 == 1);
  call devirtbounce.19(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8019, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i2 == 1));
  call devirtbounce.21(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8037, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_uverbs_ex_query_device: ref;
axiom (ib_uverbs_ex_query_device == $sub.ref(0, 360927));
procedure  ib_uverbs_ex_query_device($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i64;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $p39: ref;
  var $i40: i32;
  var $i41: i64;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $i74: i32;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $p78: ref;
  var $i79: i32;
  var $i80: i64;
  var $i81: i64;
  var $i82: i1;
  var $p83: ref;
  var $i84: i64;
  var $p85: ref;
  var $p86: ref;
  var $i87: i32;
  var $i88: i32;
  var $p89: ref;
  var $p90: ref;
  var $i91: i64;
  var $p92: ref;
  var $i93: i32;
  var $i94: i64;
  var $i95: i64;
  var $i96: i1;
  var $p97: ref;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $i101: i32;
  var $i102: i32;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $i106: i32;
  var $i107: i64;
  var $i108: i32;
  var $i109: i1;
  var $i13: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(224, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(224, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12660, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12660, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12660, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12660, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12661, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12661, 14} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12661, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $ule.i64($i11, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12661, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12662, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12731, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12666, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12666, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := ib_copy_from_udata($p14, $p1, 8);
  // WARNING: %18 = call i32 @ib_copy_from_udata(i8* %17, %struct.ib_udata* %1, i64 8), !dbg !5898, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12667, 11} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12667, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12668, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i15;
  goto $bb3;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12672, 11} true;
  assume {:verifier.code 0} true;
  $p17 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12672, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12672, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12672, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12673, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 22);
  goto $bb3;
$bb9:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12677, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12677, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12677, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12677, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12678, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 22);
  goto $bb3;
$bb12:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12682, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12682, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12683, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12683, 14} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i64($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12683, 37} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12683, 37} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12683, 23} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i32.i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12683, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $ult.i64($i25, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12683, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12684, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 28);
  goto $bb3;
$bb15:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12688, 3} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12688, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p30, 0, 224, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12689, 20} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p9, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12689, 20} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  call $i33 := devirtbounce.30($p32, $p9, $p5, $p2);
  // WARNING: %48 = call i32 @devirtbounce.30(i32 (%struct.ib_device*, %struct.ib_device_attr*, %struct.ib_udata*)* %47, %struct.ib_device* %10, %struct.ib_device_attr* %6, %struct.ib_udata* %2)
  call {:cexpr "err"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12690, 11} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12690, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12691, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i33;
  goto $bb3;
$bb18:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12695, 38} true;
  assume {:verifier.code 0} true;
  $p35 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12695, 3} true;
  assume {:verifier.code 0} true;
  call copy_query_dev_fields($p0, $p35, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12696, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p3, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12696, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 14} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 14} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 44} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 44} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 23} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 60} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i41, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 21} true;
  assume {:verifier.code 0} true;
  $i43 := $ult.i64($i38, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12697, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12698, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12723, 33} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12723, 65} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12723, 65} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12723, 51} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i32.i64($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12723, 9} true;
  assume {:verifier.code 0} true;
  call $i108 := ib_copy_to_udata($p1, $p104, $i107);
  // WARNING: %136 = call i32 @ib_copy_to_udata(%struct.ib_udata* %1, i8* %132, i64 %135), !dbg !6006, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12724, 11} true;
  assume {:verifier.code 0} true;
  $i109 := $ne.i32($i108, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12724, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb30, $bb31;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12702, 37} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p5, 184);
  $p45 := $add.ref($p5, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12702, 46} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12702, 8} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p3, 184);
  $p48 := $add.ref($p3, 184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12702, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12703, 55} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p5, 184);
  $p50 := $add.ref($add.ref($p5, 184), 8);
  $p51 := $add.ref($add.ref($p5, 184), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12703, 83} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12703, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p3, 184);
  $p54 := $add.ref($add.ref($p3, 184), 8);
  $p55 := $add.ref($add.ref($p3, 184), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12703, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12704, 55} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p5, 184);
  $p57 := $add.ref($add.ref($p5, 184), 8);
  $p58 := $add.ref($add.ref($add.ref($p5, 184), 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12704, 83} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12704, 8} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p3, 184);
  $p61 := $add.ref($add.ref($p3, 184), 8);
  $p62 := $add.ref($add.ref($add.ref($p3, 184), 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12704, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p62, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12705, 55} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p5, 184);
  $p64 := $add.ref($add.ref($p5, 184), 8);
  $p65 := $add.ref($add.ref($add.ref($p5, 184), 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12705, 83} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12705, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p3, 184);
  $p68 := $add.ref($add.ref($p3, 184), 8);
  $p69 := $add.ref($add.ref($add.ref($p3, 184), 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12705, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12706, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p3, 184);
  $p71 := $add.ref($add.ref($p3, 184), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12706, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12707, 31} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12707, 31} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i32($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12707, 47} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i32($i73, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12707, 8} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12707, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 14} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 14} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i64($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 44} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 44} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 23} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i32.i64($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 60} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 21} true;
  assume {:verifier.code 0} true;
  $i82 := $ult.i64($i77, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12708, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i82 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12709, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb25:
  assume !(($i82 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12713, 30} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p5, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12713, 30} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i64($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12713, 8} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p3, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12713, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p85, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12714, 31} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12714, 31} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12714, 47} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i32($i87, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12714, 8} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12714, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p89, $i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 14} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 14} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i64($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 44} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 44} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 23} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 60} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i64($i94, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 21} true;
  assume {:verifier.code 0} true;
  $i96 := $ult.i64($i91, $i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12715, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12716, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb28:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12720, 30} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p5, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12720, 30} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i64($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12720, 8} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p3, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12720, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12721, 31} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12721, 31} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12721, 47} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12721, 8} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p3, 180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12721, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p103, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12721, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb30:
  assume ($i109 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12725, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i108;
  goto $bb3;
$bb31:
  assume !(($i109 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12729, 3} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb3;
}
const ib_uverbs_ex_create_cq: ref;
axiom (ib_uverbs_ex_create_cq == $sub.ref(0, 361959));
procedure  ib_uverbs_ex_create_cq($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i1;
  var $i27: i8;
  var $i28: i1;
  var $p29: ref;
  var $i30: i64;
  var $i31: i32;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10206, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10206, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10206, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i64($i5, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10206, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10207, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10245, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10211, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10211, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ib_copy_from_udata($p8, $p1, 32);
  // WARNING: %12 = call i32 @ib_copy_from_udata(i8* %11, %struct.ib_udata* %1, i64 32), !dbg !5833, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10212, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10212, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10213, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10217, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10217, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10217, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10217, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10218, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10222, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10222, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10222, 20} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10222, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10223, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb12:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10227, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10227, 14} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10227, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $ule.i64($i18, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10227, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10228, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 28);
  goto $bb3;
$bb15:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10232, 18} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10232, 18} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.0, $p20);
  // WARNING: %36 = load i64, i64* %35, align 8, !dbg !5859, !verifier.code !5806
  call {:cexpr "_min1"} boogie_si_record_i64($i21);
  // WARNING: call void @llvm.dbg.value(metadata i64 %36, i64 0, metadata !15258, metadata !5829), !dbg !15259, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10234, 50} true;
  assume {:verifier.code 0} true;
  $i22 := $ult.i64($i21, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10234, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10234, 44} true;
  assume {:verifier.code 0} true;
  $i23 := $i21;
  goto $bb19;
$bb18:
  assume !(($i22 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10234, 44} true;
  assume {:verifier.code 0} true;
  $i23 := 32;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10234, 44} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10234, 9} true;
  assume {:verifier.code 0} true;
  call $p24 := create_cq($p0, $p1, $p2, $p3, $i23, ib_uverbs_ex_create_cq_cb, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10236, 20} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10236, 13} true;
  assume {:verifier.code 0} true;
  call $i26 := IS_ERR($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10236, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i1.i8($i26);
  // WARNING: %45 = zext i1 %44 to i8, !dbg !5877, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10237, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i8.i1($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10237, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10238, 19} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10238, 11} true;
  assume {:verifier.code 0} true;
  call $i30 := PTR_ERR($p29);
  // WARNING: %49 = call i64 @PTR_ERR(i8* %48), !dbg !5885, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10239, 13} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i64.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10239, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i31;
  goto $bb3;
$bb21:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10243, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
}
const ib_uverbs_ex_create_flow: ref;
axiom (ib_uverbs_ex_create_flow == $sub.ref(0, 362991));
procedure  ib_uverbs_ex_create_flow($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $i30: i1;
  var $i31: i8;
  var $i32: i1;
  var $i33: i32;
  var $i34: i1;
  var $i35: i1;
  var $i36: i8;
  var $i37: i1;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i8;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $i47: i16;
  var $i48: i64;
  var $p49: ref;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $p53: ref;
  var $i54: i16;
  var $i55: i64;
  var $p56: ref;
  var $p57: ref;
  var $i58: i8;
  var $i59: i64;
  var $i60: i64;
  var $i61: i1;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i8;
  var $i66: i32;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i8;
  var $i72: i32;
  var $i73: i1;
  var $p74: ref;
  var $p75: ref;
  var $i76: i8;
  var $i77: i32;
  var $i78: i1;
  var $p79: ref;
  var $p80: ref;
  var $i81: i16;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $p85: ref;
  var $i86: i64;
  var $i87: i1;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i16;
  var $i96: i64;
  var $i97: i32;
  var $i98: i1;
  var $p102: ref;
  var $p101: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i64;
  var $i106: i1;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i32;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i64;
  var $i116: i1;
  var $p118: ref;
  var $p119: ref;
  var $i120: i16;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $p124: ref;
  var $i125: i64;
  var $i126: i1;
  var $p128: ref;
  var $i129: i32;
  var $p130: ref;
  var $p131: ref;
  var $i132: i16;
  var $p133: ref;
  var $p134: ref;
  var $i135: i8;
  var $p136: ref;
  var $p137: ref;
  var $i138: i8;
  var $p139: ref;
  var $p140: ref;
  var $i141: i32;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $i149: i8;
  var $i150: i32;
  var $i151: i1;
  var $p156: ref;
  var $p157: ref;
  var $i158: i32;
  var $i159: i1;
  var $i160: i32;
  var $p162: ref;
  var $i163: i16;
  var $i164: i32;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: i16;
  var $i169: i32;
  var $i170: i32;
  var $i171: i16;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $i175: i16;
  var $i176: i32;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $i182: i16;
  var $i183: i32;
  var $i184: i32;
  var $i185: i16;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $i193: i16;
  var $i194: i64;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $i199: i16;
  var $i200: i64;
  var $p201: ref;
  var $i202: i32;
  var $i203: i8;
  var $i204: i32;
  var $i205: i1;
  var $i153: i32;
  var $p154: ref;
  var $p155: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i16;
  var $i210: i32;
  var $i211: i1;
  var $p213: ref;
  var $p214: ref;
  var $i215: i16;
  var $i216: i32;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $i222: i16;
  var $i223: i32;
  var $i224: i1;
  var $i225: i32;
  var $i212: i32;
  var $i206: i32;
  var $i152: i32;
  var $p226: ref;
  var $p227: ref;
  var $i228: i16;
  var $i229: i32;
  var $i230: i1;
  var $p231: ref;
  var $i232: i8;
  var $i233: i32;
  var $i234: i1;
  var $p235: ref;
  var $p236: ref;
  var $i237: i16;
  var $i238: i32;
  var $i239: i32;
  var $p240: ref;
  var $p241: ref;
  var $i242: i1;
  var $i243: i8;
  var $i244: i1;
  var $p245: ref;
  var $i246: i64;
  var $i247: i32;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $i252: i32;
  var $i253: i1;
  var $p255: ref;
  var $p256: ref;
  var $i257: i32;
  var $p258: ref;
  var $p259: ref;
  var $i260: i32;
  var $i261: i1;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $p270: ref;
  var $p271: ref;
  var $p272: ref;
  var $i273: i8;
  var $i274: i32;
  var $i275: i1;
  var $p276: ref;
  var $i254: i32;
  var $i277: i32;
  var $i161: i32;
  var $p278: ref;
  var $i127: i32;
  var $i117: i32;
  var $i99: i32;
  var $p100: ref;
  var $p279: ref;
  var $p280: ref;
  var $i281: i8;
  var $i282: i32;
  var $i283: i1;
  var $p284: ref;
  var $i8: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(24, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.__anonstruct____missing_field_name_9* %5, metadata !15304, metadata !5829), !dbg !15309, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12026, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12026, 14} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12026, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $ule.i64($i6, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12026, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12027, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12226, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12031, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12031, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12031, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $ule.i64($i10, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12031, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12032, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 28);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12036, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12036, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := ib_copy_from_udata($p12, $p1, 24);
  // WARNING: %19 = call i32 @ib_copy_from_udata(i8* %18, %struct.ib_udata* %1, i64 24), !dbg !5843, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12037, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12037, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12038, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i13;
  goto $bb3;
$bb9:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12042, 25} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12042, 25} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12042, 31} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12042, 10} true;
  assume {:verifier.code 0} true;
  $p18 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12042, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p18, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12043, 25} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12043, 25} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12043, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i64($i20, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12043, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12043, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12044, 11} true;
  assume {:verifier.code 0} true;
  $p23 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12044, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12044, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12044, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12045, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb12:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12049, 11} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p3, 8);
  $p27 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12049, 21} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12049, 26} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12049, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12050, 11} true;
  assume {:verifier.code 0} true;
  call $i30 := capable(12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12050, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i1.i8($i30);
  // WARNING: %44 = zext i1 %43 to i8, !dbg !5870, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i8($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12051, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i8.i1($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12051, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i29 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12061, 10} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb16:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12053, 5} true;
  assume {:verifier.code 0} true;
  $i33 := 0;
  goto $bb18;
$bb17:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  $i33 := 1;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12056, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12056, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12057, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 1);
  goto $bb3;
$bb20:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12059, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12063, 15} true;
  assume {:verifier.code 0} true;
  call $i35 := capable(13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12063, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i1.i8($i35);
  // WARNING: %55 = zext i1 %54 to i8, !dbg !5890, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12064, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i8.i1($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12064, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12066, 5} true;
  assume {:verifier.code 0} true;
  $i38 := 0;
  goto $bb24;
$bb23:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  $i38 := 1;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12069, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12069, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12070, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 1);
  goto $bb3;
$bb26:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12075, 26} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p3, 8);
  $p41 := $add.ref($add.ref($p3, 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12075, 36} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12075, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12075, 49} true;
  assume {:verifier.code 0} true;
  $i44 := $ugt.i32($i43, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12075, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12076, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb30:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 20} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p3, 8);
  $p46 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i16($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i16.i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 44} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 44} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i64($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 35} true;
  assume {:verifier.code 0} true;
  $i51 := $ugt.i64($i48, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb32, $bb34;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 50} true;
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12081, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb34:
  assume !(($i51 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 73} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p3, 8);
  $p53 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 83} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i16($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 53} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i16.i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 110} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p3, 8);
  $p57 := $add.ref($add.ref($p3, 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 120} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i8($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 90} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 133} true;
  assume {:verifier.code 0} true;
  $i60 := $mul.i64($i59, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 88} true;
  assume {:verifier.code 0} true;
  $i61 := $ugt.i64($i55, $i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb35, $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12080, 7} true;
  assume {:verifier.code 0} true;
  assume ($i61 == 1);
  goto $bb33;
$bb36:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p3, 8);
  $p63 := $add.ref($add.ref($p3, 8), 9);
  $p64 := $add.ref($add.ref($p3, 8), 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 22} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 48} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i32($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 54} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb38, $bb40;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 54} true;
  assume {:verifier.code 0} true;
  assume ($i67 == 1);
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12086, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb40:
  assume !(($i67 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 76} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p3, 8);
  $p69 := $add.ref($add.ref($p3, 8), 9);
  $p70 := $add.ref($add.ref($add.ref($p3, 8), 9), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 72} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 57} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 98} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb41, $bb42;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12085, 7} true;
  assume {:verifier.code 0} true;
  assume ($i73 == 1);
  goto $bb39;
$bb42:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12090, 26} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p3, 8);
  $p75 := $add.ref($add.ref($p3, 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12090, 36} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i8($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12090, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i8.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12090, 49} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i32($i77, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12090, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12091, 43} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p3, 8);
  $p80 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12091, 53} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i16($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12091, 23} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i16.i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12091, 58} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12091, 15} true;
  assume {:verifier.code 0} true;
  call $p84 := kmalloc($i83, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12092, 22} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12093, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12093, 40} true;
  assume {:verifier.code 0} true;
  $i87 := $eq.i64($i86, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12093, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb46, $bb47;
$bb45:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12106, 28} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p3, 8);
  assume {:verifier.code 0} true;
  $p101 := $p102;
  goto $bb53;
$bb46:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12094, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 12);
  goto $bb3;
$bb47:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12098, 5} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12098, 59} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12098, 5} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12098, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p88, $p90, 16, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12099, 30} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12099, 53} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12099, 79} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p3, 8);
  $p94 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12099, 89} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i16($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12099, 66} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i16.i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12099, 11} true;
  assume {:verifier.code 0} true;
  call $i97 := ib_copy_from_udata($p92, $p1, $i96);
  // WARNING: %137 = call i32 @ib_copy_from_udata(i8* %132, %struct.ib_udata* %1, i64 %136), !dbg !5976, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12100, 13} true;
  assume {:verifier.code 0} true;
  $i98 := $ne.i32($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12100, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12101, 7} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $i97, $p84;
  goto $bb51;
$bb50:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12219, 26} true;
  assume {:verifier.code 0} true;
  $p279 := $add.ref($p3, 8);
  $p280 := $add.ref($add.ref($p3, 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12219, 36} true;
  assume {:verifier.code 0} true;
  $i281 := $load.i8($M.0, $p280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12219, 7} true;
  assume {:verifier.code 0} true;
  $i282 := $zext.i8.i32($i281);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12219, 49} true;
  assume {:verifier.code 0} true;
  $i283 := $ne.i32($i282, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12219, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i283} true;
  goto $bb101, $bb102;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12105, 3} true;
  assume {:verifier.code 0} true;
  $p101 := $p84;
  goto $bb53;
$bb53:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12108, 13} true;
  assume {:verifier.code 0} true;
  call $p103 := kmalloc(216, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12109, 10} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12110, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12110, 28} true;
  assume {:verifier.code 0} true;
  $i106 := $eq.i64($i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12110, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12112, 5} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $sub.i32(0, 12), $p101;
  goto $bb51;
$bb55:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12116, 31} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12116, 31} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12116, 3} true;
  assume {:verifier.code 0} true;
  call init_uobj($p104, 0, $p108, rule_lock_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12117, 22} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p104, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12117, 3} true;
  assume {:verifier.code 0} true;
  call down_write($p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12118, 30} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12118, 30} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12118, 47} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12118, 47} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12118, 8} true;
  assume {:verifier.code 0} true;
  call $p114 := idr_read_qp($i111, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12119, 7} true;
  assume {:verifier.code 0} true;
  $i115 := $p2i.ref.i64($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12119, 26} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i64($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12119, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12121, 5} true;
  assume {:verifier.code 0} true;
  $i117 := $sub.i32(0, 22);
  goto $bb59;
$bb58:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12217, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12217, 3} true;
  assume {:verifier.code 0} true;
  $i99, $p100 := $i117, $p101;
  goto $bb51;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12125, 41} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p3, 8);
  $p119 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12125, 51} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i16($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12125, 21} true;
  assume {:verifier.code 0} true;
  $i121 := $zext.i16.i64($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12125, 56} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i64($i121, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12125, 13} true;
  assume {:verifier.code 0} true;
  call $p123 := kmalloc($i122, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12126, 15} true;
  assume {:verifier.code 0} true;
  $p124 := $bitcast.ref.ref($p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12127, 7} true;
  assume {:verifier.code 0} true;
  $i125 := $p2i.ref.i64($p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12127, 33} true;
  assume {:verifier.code 0} true;
  $i126 := $eq.i64($i125, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12127, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i126 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12129, 5} true;
  assume {:verifier.code 0} true;
  $i127 := $sub.i32(0, 12);
  goto $bb63;
$bb62:
  assume !(($i126 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12215, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_read($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12215, 3} true;
  assume {:verifier.code 0} true;
  $i117 := $i127;
  goto $bb59;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12133, 62} true;
  assume {:verifier.code 0} true;
  $p128 := $p101;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12133, 62} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12133, 14} true;
  assume {:verifier.code 0} true;
  $p130 := $p124;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12133, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p130, $i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12134, 41} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p101, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12134, 41} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i16($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12134, 14} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p124, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12134, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p133, $i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12135, 45} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p101, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12135, 45} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i8($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12135, 14} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p124, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12135, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p136, $i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12136, 37} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p101, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12136, 37} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i8($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12136, 14} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p124, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12136, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p139, $i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12137, 38} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p101, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12137, 38} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i32($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12137, 14} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p124, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12137, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p142, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12138, 14} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p124, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12138, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p143, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12139, 15} true;
  assume {:verifier.code 0} true;
  $p144 := $bitcast.ref.ref($p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12139, 38} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p144, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12140, 13} true;
  assume {:verifier.code 0} true;
  $p146 := $bitcast.ref.ref($p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12140, 31} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p146, 1);
  // WARNING: call void @llvm.dbg.value(metadata i8* %196, i64 0, metadata !15534, metadata !5829), !dbg !15535, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 25} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p124, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 25} true;
  assume {:verifier.code 0} true;
  $i149 := $load.i8($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 8} true;
  assume {:verifier.code 0} true;
  $i150 := $zext.i8.i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 38} true;
  assume {:verifier.code 0} true;
  $i151 := $sgt.i32($i150, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 42} true;
  assume {:verifier.code 0} true;
  $i152 := 0;
  assume {:branchcond $i151} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i151 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 42} true;
  assume {:verifier.code 0} true;
  $i153, $p154, $p155 := 0, $p147, $p145;
  goto $bb68;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 42} true;
  assume {:verifier.code 0} true;
  assume !(($i151 == 1));
  goto $bb67;
$bb67:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb68:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 64} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p3, 8);
  $p208 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 74} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i16($M.0, $p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 45} true;
  assume {:verifier.code 0} true;
  $i210 := $zext.i16.i32($i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 79} true;
  assume {:verifier.code 0} true;
  $i211 := $ugt.i32($i210, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 85} true;
  assume {:verifier.code 0} true;
  $i212 := $i153;
  assume {:branchcond $i211} true;
  goto $bb76, $bb77;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12144, 30} true;
  assume {:verifier.code 0} true;
  $p156 := $bitcast.ref.ref($p155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12144, 71} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12144, 9} true;
  assume {:verifier.code 0} true;
  call $i158 := kern_spec_to_ib_spec($p156, $p157);
  // WARNING: %204 = call i32 @kern_spec_to_ib_spec(%struct.ib_uverbs_flow_spec* %202, %union.ib_flow_spec* %203), !dbg !6062, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12145, 11} true;
  assume {:verifier.code 0} true;
  $i159 := $ne.i32($i158, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12145, 7} true;
  assume {:verifier.code 0} true;
  $i160 := $i158;
  assume {:branchcond $i159} true;
  goto $bb70, $bb71;
$bb70:
  assume ($i159 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12146, 5} true;
  assume {:verifier.code 0} true;
  $i161 := $i160;
  goto $bb72;
$bb71:
  assume !(($i159 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12213, 9} true;
  assume {:verifier.code 0} true;
  $p278 := $bitcast.ref.ref($p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12213, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p278);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12213, 3} true;
  assume {:verifier.code 0} true;
  $i127 := $i161;
  goto $bb63;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 38} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p124, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 38} true;
  assume {:verifier.code 0} true;
  $i163 := $load.i16($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 21} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.i16.i32($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 52} true;
  assume {:verifier.code 0} true;
  $p165 := $bitcast.ref.ref($p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 84} true;
  assume {:verifier.code 0} true;
  $p166 := $bitcast.ref.ref($p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 103} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p166, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 103} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i16($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 45} true;
  assume {:verifier.code 0} true;
  $i169 := $zext.i16.i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 43} true;
  assume {:verifier.code 0} true;
  $i170 := $add.i32($i164, $i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 21} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i16($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 14} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p124, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12150, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p172, $i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 34} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p3, 8);
  $p174 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 44} true;
  assume {:verifier.code 0} true;
  $i175 := $load.i16($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 24} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.i16.i32($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 58} true;
  assume {:verifier.code 0} true;
  $p177 := $bitcast.ref.ref($p155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 100} true;
  assume {:verifier.code 0} true;
  $p178 := $p177;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 119} true;
  assume {:verifier.code 0} true;
  $p179 := $bitcast.ref.ref($p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 138} true;
  assume {:verifier.code 0} true;
  $p180 := $bitcast.ref.ref($p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 157} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p180, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 157} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i16($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 51} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i16.i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 49} true;
  assume {:verifier.code 0} true;
  $i184 := $sub.i32($i176, $i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 24} true;
  assume {:verifier.code 0} true;
  $i185 := $trunc.i32.i16($i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 7} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p3, 8);
  $p187 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12151, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p187, $i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 44} true;
  assume {:verifier.code 0} true;
  $p188 := $bitcast.ref.ref($p155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 86} true;
  assume {:verifier.code 0} true;
  $p189 := $p188;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 105} true;
  assume {:verifier.code 0} true;
  $p190 := $bitcast.ref.ref($p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 124} true;
  assume {:verifier.code 0} true;
  $p191 := $bitcast.ref.ref($p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 143} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p191, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 143} true;
  assume {:verifier.code 0} true;
  $i193 := $load.i16($M.0, $p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 27} true;
  assume {:verifier.code 0} true;
  $i194 := $zext.i16.i64($i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12152, 25} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p155, $mul.ref($i194, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12153, 40} true;
  assume {:verifier.code 0} true;
  $p196 := $bitcast.ref.ref($p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12153, 72} true;
  assume {:verifier.code 0} true;
  $p197 := $bitcast.ref.ref($p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12153, 91} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p197, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12153, 91} true;
  assume {:verifier.code 0} true;
  $i199 := $load.i16($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12153, 23} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i16.i64($i199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12153, 21} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($p154, $mul.ref($i200, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12154, 9} true;
  assume {:verifier.code 0} true;
  $i202 := $add.i32($i153, 1);
  // WARNING: %249 = add nsw i32 %.0312, 1, !dbg !6101, !verifier.code !5806
  call {:cexpr "i"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 25} true;
  assume {:verifier.code 0} true;
  $i203 := $load.i8($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 8} true;
  assume {:verifier.code 0} true;
  $i204 := $zext.i8.i32($i203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 38} true;
  assume {:verifier.code 0} true;
  $i205 := $sgt.i32($i204, $i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 42} true;
  assume {:verifier.code 0} true;
  $i153, $p154, $p155, $i206 := $i202, $p201, $p195, $i202;
  assume {:branchcond $i205} true;
  goto $bb74, $bb75;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 42} true;
  assume {:verifier.code 0} true;
  assume ($i205 == 1);
  goto $bb68;
$bb75:
  assume !(($i205 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 42} true;
  assume {:verifier.code 0} true;
  $i152 := $i206;
  goto $bb67;
$bb76:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 98} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p3, 8);
  $p214 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 108} true;
  assume {:verifier.code 0} true;
  $i215 := $load.i16($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 88} true;
  assume {:verifier.code 0} true;
  $i216 := $zext.i16.i32($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 123} true;
  assume {:verifier.code 0} true;
  $p217 := $bitcast.ref.ref($p155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 165} true;
  assume {:verifier.code 0} true;
  $p218 := $p217;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 184} true;
  assume {:verifier.code 0} true;
  $p219 := $bitcast.ref.ref($p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 203} true;
  assume {:verifier.code 0} true;
  $p220 := $bitcast.ref.ref($p219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 222} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p220, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 222} true;
  assume {:verifier.code 0} true;
  $i222 := $load.i16($M.0, $p221);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 116} true;
  assume {:verifier.code 0} true;
  $i223 := $zext.i16.i32($i222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 113} true;
  assume {:verifier.code 0} true;
  $i224 := $sge.i32($i216, $i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 7} true;
  assume {:verifier.code 0} true;
  $i225 := $i153;
  assume {:branchcond $i224} true;
  goto $bb78, $bb79;
$bb77:
  assume !(($i211 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 85} true;
  assume {:verifier.code 0} true;
  $i152 := $i212;
  goto $bb67;
$bb78:
  assume ($i224 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12157, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb79:
  assume !(($i224 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12156, 7} true;
  assume {:verifier.code 0} true;
  $i152 := $i225;
  goto $bb67;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 26} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p3, 8);
  $p227 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 36} true;
  assume {:verifier.code 0} true;
  $i228 := $load.i16($M.0, $p227);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 7} true;
  assume {:verifier.code 0} true;
  $i229 := $zext.i16.i32($i228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 41} true;
  assume {:verifier.code 0} true;
  $i230 := $ne.i32($i229, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb81, $bb83;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 47} true;
  assume {:verifier.code 0} true;
  assume ($i230 == 1);
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12163, 90} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p3, 8);
  $p236 := $add.ref($add.ref($p3, 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12163, 100} true;
  assume {:verifier.code 0} true;
  $i237 := $load.i16($M.0, $p236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12163, 80} true;
  assume {:verifier.code 0} true;
  $i238 := $zext.i16.i32($i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12163, 5} true;
  assume {:verifier.code 0} true;
  call $i239 := printk.ref.i32.i32(.str.19, $i152, $i238);
  // WARNING: %290 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.19, i32 0, i32 0), i32 %.03.lcssa, i32 %289), !dbg !6137, !verifier.code !5806
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12165, 5} true;
  assume {:verifier.code 0} true;
  $i161 := $sub.i32(0, 22);
  goto $bb72;
$bb83:
  assume !(($i230 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 67} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($p124, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 67} true;
  assume {:verifier.code 0} true;
  $i232 := $load.i8($M.0, $p231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 50} true;
  assume {:verifier.code 0} true;
  $i233 := $zext.i8.i32($i232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 80} true;
  assume {:verifier.code 0} true;
  $i234 := $ne.i32($i233, $i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i234} true;
  goto $bb84, $bb85;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12162, 7} true;
  assume {:verifier.code 0} true;
  assume ($i234 == 1);
  goto $bb82;
$bb85:
  assume !(($i234 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12169, 13} true;
  assume {:verifier.code 0} true;
  call $p240 := ib_create_flow($p114, $p124, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12170, 20} true;
  assume {:verifier.code 0} true;
  $p241 := $bitcast.ref.ref($p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12170, 13} true;
  assume {:verifier.code 0} true;
  call $i242 := IS_ERR($p241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12170, 11} true;
  assume {:verifier.code 0} true;
  $i243 := $zext.i1.i8($i242);
  // WARNING: %296 = zext i1 %295 to i8, !dbg !6144, !verifier.code !5806
  call {:cexpr "tmp___7"} boogie_si_record_i8($i243);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12171, 13} true;
  assume {:verifier.code 0} true;
  $i244 := $trunc.i8.i1($i243);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12171, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i244} true;
  goto $bb87, $bb88;
$bb87:
  assume ($i244 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12172, 23} true;
  assume {:verifier.code 0} true;
  $p245 := $bitcast.ref.ref($p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12172, 15} true;
  assume {:verifier.code 0} true;
  call $i246 := PTR_ERR($p245);
  // WARNING: %300 = call i64 @PTR_ERR(i8* %299), !dbg !6152, !verifier.code !5806
  call {:cexpr "tmp___6"} boogie_si_record_i64($i246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12173, 11} true;
  assume {:verifier.code 0} true;
  $i247 := $trunc.i64.i32($i246);
  // WARNING: %301 = trunc i64 %300 to i32, !dbg !6155, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i247);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12174, 5} true;
  assume {:verifier.code 0} true;
  $i161 := $i247;
  goto $bb72;
$bb88:
  assume !(($i244 == 1));
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12178, 12} true;
  assume {:verifier.code 0} true;
  $p248 := $p240;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12178, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p248, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12179, 12} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($p240, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12179, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p249, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12180, 18} true;
  assume {:verifier.code 0} true;
  $p250 := $bitcast.ref.ref($p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12180, 9} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p104, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12180, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p251, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12181, 9} true;
  assume {:verifier.code 0} true;
  call $i252 := idr_add_uobj(ib_uverbs_rule_idr, $p104);
  // WARNING: %308 = call i32 @idr_add_uobj(%struct.idr* @ib_uverbs_rule_idr, %struct.ib_uobject* %146), !dbg !6164, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12182, 11} true;
  assume {:verifier.code 0} true;
  $i253 := $ne.i32($i252, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12182, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i253} true;
  goto $bb90, $bb91;
$bb90:
  assume ($i253 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12183, 5} true;
  assume {:verifier.code 0} true;
  $i254 := $i252;
  goto $bb92;
$bb91:
  assume !(($i253 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12211, 3} true;
  assume {:verifier.code 0} true;
  call $i277 := ib_destroy_flow($p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12211, 3} true;
  assume {:verifier.code 0} true;
  $i161 := $i254;
  goto $bb72;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12187, 3} true;
  assume {:verifier.code 0} true;
  $p255 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12187, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p255, 0, 8, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12188, 36} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($p104, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12188, 36} true;
  assume {:verifier.code 0} true;
  $i257 := $load.i32($M.0, $p256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12188, 8} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12188, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p258, $i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12189, 33} true;
  assume {:verifier.code 0} true;
  $p259 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12189, 9} true;
  assume {:verifier.code 0} true;
  call $i260 := ib_copy_to_udata($p1, $p259, 8);
  // WARNING: %318 = call i32 @ib_copy_to_udata(%struct.ib_udata* %1, i8* %317, i64 8), !dbg !6175, !verifier.code !5806
  call {:cexpr "err"} boogie_si_record_i32($i260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12190, 11} true;
  assume {:verifier.code 0} true;
  $i261 := $ne.i32($i260, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12190, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i261} true;
  goto $bb94, $bb95;
$bb94:
  assume ($i261 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12191, 5} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12209, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_rule_idr, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12209, 3} true;
  assume {:verifier.code 0} true;
  $i254 := $i260;
  goto $bb92;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12195, 3} true;
  assume {:verifier.code 0} true;
  call put_qp_read($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12196, 29} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12196, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p262, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12197, 25} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($p104, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12197, 40} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12197, 40} true;
  assume {:verifier.code 0} true;
  $p265 := $load.ref($M.0, $p264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12197, 51} true;
  assume {:verifier.code 0} true;
  $p266 := $add.ref($p265, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12197, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p263, $p266);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12198, 24} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12198, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p267);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12199, 9} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p104, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12199, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p268, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12200, 20} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p104, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12200, 3} true;
  assume {:verifier.code 0} true;
  call up_write($p269);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12201, 9} true;
  assume {:verifier.code 0} true;
  $p270 := $bitcast.ref.ref($p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12201, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12202, 26} true;
  assume {:verifier.code 0} true;
  $p271 := $add.ref($p3, 8);
  $p272 := $add.ref($add.ref($p3, 8), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12202, 36} true;
  assume {:verifier.code 0} true;
  $i273 := $load.i8($M.0, $p272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  $i274 := $zext.i8.i32($i273);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12202, 49} true;
  assume {:verifier.code 0} true;
  $i275 := $ne.i32($i274, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  goto $bb98, $bb99;
$bb98:
  assume ($i275 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12203, 11} true;
  assume {:verifier.code 0} true;
  $p276 := $bitcast.ref.ref($p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12203, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p276);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12204, 3} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb99:
  assume !(($i275 == 1));
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12207, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb101:
  assume ($i283 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12220, 11} true;
  assume {:verifier.code 0} true;
  $p284 := $bitcast.ref.ref($p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12220, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12221, 3} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume !(($i283 == 1));
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12224, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i99;
  goto $bb3;
}
const ib_uverbs_ex_destroy_flow: ref;
axiom (ib_uverbs_ex_destroy_flow == $sub.ref(0, 364023));
procedure  ib_uverbs_ex_destroy_flow($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12236, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12236, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12236, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i64($i5, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12236, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12237, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12273, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12241, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12241, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ib_copy_from_udata($p8, $p1, 8);
  // WARNING: %12 = call i32 @ib_copy_from_udata(i8* %11, %struct.ib_udata* %1, i64 8), !dbg !5828, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12242, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12242, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12243, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12247, 11} true;
  assume {:verifier.code 0} true;
  $p11 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12247, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12247, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12248, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12252, 57} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12252, 57} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12252, 76} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12252, 76} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12252, 10} true;
  assume {:verifier.code 0} true;
  call $p18 := idr_write_uobj(ib_uverbs_rule_idr, $i15, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12253, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12253, 28} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i64($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12253, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12254, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb12:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12258, 37} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p18, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12258, 37} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12258, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12259, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := ib_destroy_flow($p23);
  // WARNING: %36 = call i32 @ib_destroy_flow(%struct.ib_flow* %35), !dbg !5857, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12260, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12260, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12261, 11} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p18, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12261, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12262, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12265, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj_write($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12266, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_rule_idr, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12267, 29} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12267, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12268, 20} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p18, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12268, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12269, 24} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12269, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12270, 3} true;
  assume {:verifier.code 0} true;
  call put_uobj($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12271, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i24;
  goto $bb3;
}
const ib_copy_from_udata: ref;
axiom (ib_copy_from_udata == $sub.ref(0, 365055));
procedure  ib_copy_from_udata($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ib_udata* %1, i64 0, metadata !15782, metadata !5829), !dbg !15783, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8349, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8349, 37} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8349, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := copy_from_user($p0, $p4, $i2);
  // WARNING: %6 = call i64 @copy_from_user(i8* %0, i8* %5, i64 %2), !dbg !5818, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8350, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8350, 11} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == $sub.i32(0, 14))) && (($i6 != 1) ==> ($i7 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 8350, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const ib_destroy_flow: ref;
axiom (ib_destroy_flow == $sub.ref(0, 366087));
procedure  ib_destroy_flow($p0: ref)
  returns ($r: i32);
const kern_spec_to_ib_spec: ref;
axiom (kern_spec_to_ib_spec == $sub.ref(0, 367119));
procedure  kern_spec_to_ib_spec($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i16;
  var $i7: i32;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i16;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i16;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i16;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i16;
  var $i66: i32;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i16;
  var $i87: i32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i16;
  var $i94: i32;
  var $i95: i1;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 52} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 71} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 90} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 90} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 99} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11949, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11950, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11999, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 74} true;
  assume {:verifier.code 0} true;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 93} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 112} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 131} true;
  assume {:verifier.code 0} true;
  $p13 := $p12;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 131} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 12} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 31} true;
  assume {:verifier.code 0} true;
  $p16 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11954, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11955, 35} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11955, 54} true;
  assume {:verifier.code 0} true;
  $p18 := $p17;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11955, 54} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i19, 64);
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i20 == 1);
  assume {:verifier.code 0} true;
  $i23 := $slt.i32($i19, 48);
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb14, $bb15;
$bb7:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i19, 65);
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11979, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb9:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i19, 65);
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb10, $bb12;
$bb10:
  assume {:verifier.code 0} true;
  assume ($i22 == 1);
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11982, 12} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11982, 20} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p82, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11982, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p83, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 22} true;
  assume {:verifier.code 0} true;
  $p84 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 30} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p84, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 30} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i16($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i16.i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 55} true;
  assume {:verifier.code 0} true;
  $p88 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 74} true;
  assume {:verifier.code 0} true;
  $p89 := $bitcast.ref.ref($p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 82} true;
  assume {:verifier.code 0} true;
  $p90 := $p89;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 101} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 120} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 120} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i16($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 38} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i16.i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 35} true;
  assume {:verifier.code 0} true;
  $i95 := $ne.i32($i87, $i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11983, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb27, $bb28;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i22 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb30;
$bb14:
  assume ($i23 == 1);
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i19, 32);
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb18, $bb19;
$bb15:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i19, 48);
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11969, 12} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11969, 17} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11969, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p55, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 22} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 27} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 27} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i16($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i16.i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 52} true;
  assume {:verifier.code 0} true;
  $p60 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 71} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 76} true;
  assume {:verifier.code 0} true;
  $p62 := $p61;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 95} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 114} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p63, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 114} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i16($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 35} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i16.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 32} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i32($i59, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11970, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb24, $bb25;
$bb17:
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb13;
$bb18:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11957, 12} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11957, 16} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11957, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p27, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 22} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 26} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 26} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i16($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 51} true;
  assume {:verifier.code 0} true;
  $p32 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 70} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 74} true;
  assume {:verifier.code 0} true;
  $p34 := $p33;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 93} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 112} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 112} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i16($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 34} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 31} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i31, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11958, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb20, $bb21;
$bb19:
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb13;
$bb20:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11959, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 22);
  goto $bb3;
$bb21:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 30} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 34} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p40, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 3} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 70} true;
  assume {:verifier.code 0} true;
  $p43 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 89} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 93} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 3} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11963, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p42, $p46, 16, $zext.i32.i64(2), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 30} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 34} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 3} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 71} true;
  assume {:verifier.code 0} true;
  $p50 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 90} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 94} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 3} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11965, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p49, $p53, 16, $zext.i32.i64(2), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11967, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11997, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb3;
$bb24:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11971, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 22);
  goto $bb3;
$bb25:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 30} true;
  assume {:verifier.code 0} true;
  $p68 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 35} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p68, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 3} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 71} true;
  assume {:verifier.code 0} true;
  $p71 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 90} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 95} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 3} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11975, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p70, $p74, 8, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 30} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 35} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 3} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 72} true;
  assume {:verifier.code 0} true;
  $p78 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 91} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 96} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p79, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 3} true;
  assume {:verifier.code 0} true;
  $p81 := $bitcast.ref.ref($p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11977, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p77, $p81, 8, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11979, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb27:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11984, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 22);
  goto $bb3;
$bb28:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 30} true;
  assume {:verifier.code 0} true;
  $p96 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 38} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p96, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 3} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 74} true;
  assume {:verifier.code 0} true;
  $p99 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 93} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 101} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p100, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 3} true;
  assume {:verifier.code 0} true;
  $p102 := $bitcast.ref.ref($p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11988, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p98, $p102, 4, $zext.i32.i64(2), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 30} true;
  assume {:verifier.code 0} true;
  $p103 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 38} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $p105 := $bitcast.ref.ref($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 75} true;
  assume {:verifier.code 0} true;
  $p106 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 94} true;
  assume {:verifier.code 0} true;
  $p107 := $bitcast.ref.ref($p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 102} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $p109 := $bitcast.ref.ref($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p105, $p109, 4, $zext.i32.i64(2), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11992, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 11994, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 22);
  goto $bb3;
}
const printk: ref;
axiom (printk == $sub.ref(0, 368151));
procedure  printk.ref($p0: ref)
  returns ($r: i32);
procedure  printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32)
  returns ($r: i32);
const ib_create_flow: ref;
axiom (ib_create_flow == $sub.ref(0, 369183));
procedure  ib_create_flow($p0: ref, $p1: ref, $i2: i32)
  returns ($r: ref);
const ib_uverbs_ex_create_cq_cb: ref;
axiom (ib_uverbs_ex_create_cq_cb == $sub.ref(0, 370215));
procedure  ib_uverbs_ex_create_cq_cb($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i64;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10185, 33} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10185, 62} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10185, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10185, 47} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10185, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ib_copy_to_udata($p3, $p5, $i8);
  // WARNING: %10 = call i32 @ib_copy_to_udata(%struct.ib_udata* %3, i8* %6, i64 %9), !dbg !5834, !verifier.code !5821
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10186, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10186, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10187, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 14);
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10193, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 10191, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb3;
}
const ib_uverbs_write: ref;
axiom (ib_uverbs_write == $sub.ref(0, 371247));
procedure  ib_uverbs_write($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i1;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i1;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $i37: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $i47: i1;
  var $p48: ref;
  var $i49: i16;
  var $i50: i32;
  var $i51: i32;
  var $i52: i64;
  var $i53: i1;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i16;
  var $i60: i32;
  var $i61: i32;
  var $p62: ref;
  var $i63: i16;
  var $i64: i32;
  var $i65: i32;
  var $i66: i64;
  var $i67: i1;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $i71: i1;
  var $p72: ref;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $i76: i64;
  var $p77: ref;
  var $p78: ref;
  var $i79: i64;
  var $i80: i1;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i64;
  var $i91: i64;
  var $i92: i64;
  var $i93: i64;
  var $i94: i1;
  var $i95: i1;
  var $p96: ref;
  var $p97: ref;
  var $i98: i64;
  var $i99: i1;
  var $i100: i64;
  var $p101: ref;
  var $p102: ref;
  var $i103: i16;
  var $i104: i32;
  var $p105: ref;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i64;
  var $i111: i1;
  var $p112: ref;
  var $i113: i32;
  var $i114: i1;
  var $p115: ref;
  var $i116: i64;
  var $i117: i1;
  var $p118: ref;
  var $i119: i16;
  var $i120: i32;
  var $i121: i1;
  var $p122: ref;
  var $i123: i16;
  var $i124: i32;
  var $i125: i1;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $p129: ref;
  var $i130: i16;
  var $i131: i32;
  var $p132: ref;
  var $i133: i16;
  var $i134: i32;
  var $i135: i32;
  var $i136: i32;
  var $i137: i64;
  var $p138: ref;
  var $p139: ref;
  var $i140: i64;
  var $i141: i1;
  var $i142: i8;
  var $i143: i1;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $i147: i1;
  var $p148: ref;
  var $i149: i16;
  var $i150: i32;
  var $i151: i1;
  var $p152: ref;
  var $i153: i16;
  var $i154: i32;
  var $i155: i1;
  var $p156: ref;
  var $i157: i16;
  var $i158: i32;
  var $i159: i32;
  var $i160: i1;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $i164: i16;
  var $i165: i32;
  var $i166: i32;
  var $i167: i1;
  var $p168: ref;
  var $i169: i64;
  var $p170: ref;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $i174: i16;
  var $i175: i32;
  var $i176: i32;
  var $i177: i64;
  var $p178: ref;
  var $p179: ref;
  var $i180: i16;
  var $i181: i32;
  var $i182: i32;
  var $i183: i64;
  var $p184: ref;
  var $p185: ref;
  var $i186: i16;
  var $i187: i32;
  var $i188: i32;
  var $i189: i1;
  var $p190: ref;
  var $i191: i64;
  var $i192: i64;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $i197: i16;
  var $i198: i32;
  var $i199: i32;
  var $i200: i1;
  var $p201: ref;
  var $i202: i64;
  var $p203: ref;
  var $i204: i64;
  var $i205: i64;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $i210: i16;
  var $i211: i32;
  var $i212: i32;
  var $i213: i64;
  var $p214: ref;
  var $p215: ref;
  var $i216: i16;
  var $i217: i32;
  var $i218: i32;
  var $i219: i64;
  var $p220: ref;
  var $i221: i64;
  var $p222: ref;
  var $p223: ref;
  var $i224: i32;
  var $i225: i1;
  var $i226: i64;
  var $i12: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !15945, metadata !5829), !dbg !15946, !verifier.code !5831
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6737, 41} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6737, 41} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6737, 10} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6738, 13} true;
  assume {:verifier.code 0} true;
  $i11 := $ule.i64($i2, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6738, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6739, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6878, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6743, 24} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6743, 9} true;
  assume {:verifier.code 0} true;
  call $i14 := copy_from_user($p13, $p1, 8);
  // WARNING: %17 = call i64 @copy_from_user(i8* %16, i8* %1, i64 8), !dbg !5846, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6744, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6744, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6745, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 14);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6749, 15} true;
  assume {:verifier.code 0} true;
  $p16 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6749, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6749, 23} true;
  assume {:verifier.code 0} true;
  $i18 := $lshr.i32($i17, 24);
  // WARNING: %24 = lshr i32 %23, 24, !dbg !5855, !verifier.code !5806
  call {:cexpr "flags"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6750, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6750, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6751, 14} true;
  assume {:verifier.code 0} true;
  $p20 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6751, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6751, 22} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i32($i21, 16776960);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6751, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6751, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6784, 13} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i18, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6784, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb31, $bb32;
$bb10:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6752, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb11:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6756, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6756, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6756, 27} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32($i25, 255);
  // WARNING: %36 = and i32 %35, 255, !dbg !5870, !verifier.code !5806
  call {:cexpr "command"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $ugt.i32($i26, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb13, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 23} true;
  assume {:verifier.code 0} true;
  assume ($i27 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6761, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb15:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 42} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 42} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref(uverbs_cmd_table, $mul.ref($i28, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 42} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.87, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 26} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 68} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i64($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6757, 9} true;
  assume {:verifier.code 0} true;
  assume ($i32 == 1);
  goto $bb14;
$bb17:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 31} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p10, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 31} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 9} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 40} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i64($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 85} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 96} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 85} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb22:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6766, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6765, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i37 == 1));
  goto $bb21;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 19} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p10, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 19} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 28} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p39, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 28} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 37} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 2392);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 37} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i64($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 53} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 53} true;
  assume {:verifier.code 0} true;
  $i45 := $lshr.i64($i43, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 71} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i64($i45, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 79} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i64($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6770, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6771, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 38);
  goto $bb3;
$bb26:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6775, 29} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6775, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i16($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6775, 19} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i16.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6775, 38} true;
  assume {:verifier.code 0} true;
  $i51 := $mul.i32($i50, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6775, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6775, 43} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i64($i52, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6775, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6776, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb29:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 18} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 18} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref(uverbs_cmd_table, $mul.ref($i54, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 18} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.87, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 56} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 73} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 73} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i16($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 63} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i16.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6780, 82} true;
  assume {:verifier.code 0} true;
  $i61 := $mul.i32($i60, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6781, 56} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6781, 56} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i16($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6781, 46} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i16.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6781, 66} true;
  assume {:verifier.code 0} true;
  $i65 := $mul.i32($i64, 4);
  call $i66 := devirtbounce.31($p56, $p10, $p57, $i61, $i65);
  // WARNING: %90 = call i64 @devirtbounce.31(i64 (%struct.ib_uverbs_file*, i8*, i32, i32)* %80, %struct.ib_uverbs_file* %11, i8* %81, i32 %85, i32 %89)
  call {:cexpr "tmp___0"} boogie_si_record_i64($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6782, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $i66;
  goto $bb3;
$bb31:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6786, 14} true;
  assume {:verifier.code 0} true;
  $p68 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6786, 14} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6786, 22} true;
  assume {:verifier.code 0} true;
  $i70 := $and.i32($i69, 16776960);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6786, 35} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6786, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb33, $bb34;
$bb32:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb33:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6787, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb34:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6791, 23} true;
  assume {:verifier.code 0} true;
  $p72 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6791, 23} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i32($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6791, 31} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73, 255);
  // WARNING: %103 = and i32 %102, 255, !dbg !5937, !verifier.code !5806
  call {:cexpr "command___0"} boogie_si_record_i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 21} true;
  assume {:verifier.code 0} true;
  $i75 := $ugt.i32($i74, 51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb36, $bb38;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 27} true;
  assume {:verifier.code 0} true;
  assume ($i75 == 1);
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6795, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 38);
  goto $bb3;
$bb38:
  assume !(($i75 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 46} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 46} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref(uverbs_ex_cmd_table, $mul.ref($i76, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 46} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.88, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 30} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 79} true;
  assume {:verifier.code 0} true;
  $i80 := $eq.i64($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb39, $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6792, 9} true;
  assume {:verifier.code 0} true;
  assume ($i80 == 1);
  goto $bb37;
$bb40:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6799, 31} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p10, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6799, 31} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6799, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6799, 40} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.i64($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6799, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6800, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb43:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 19} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p10, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 19} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 28} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p86, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 28} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 37} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p88, 2400);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 37} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i64($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 56} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 56} true;
  assume {:verifier.code 0} true;
  $i92 := $lshr.i64($i90, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 78} true;
  assume {:verifier.code 0} true;
  $i93 := $and.i64($i92, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 86} true;
  assume {:verifier.code 0} true;
  $i94 := $eq.i64($i93, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6804, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6805, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 38);
  goto $bb3;
$bb46:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6809, 15} true;
  assume {:verifier.code 0} true;
  $i95 := $ule.i64($i2, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6809, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6810, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb49:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6814, 30} true;
  assume {:verifier.code 0} true;
  $p96 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6814, 70} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6814, 15} true;
  assume {:verifier.code 0} true;
  call $i98 := copy_from_user($p96, $p97, 16);
  // WARNING: %140 = call i64 @copy_from_user(i8* %138, i8* %139, i64 16), !dbg !5974, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6815, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.i64($i98, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6815, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6816, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 14);
  goto $bb3;
$bb52:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6820, 19} true;
  assume {:verifier.code 0} true;
  $i100 := $sub.i64($i2, 24);
  // WARNING: %145 = sub i64 %2, 24, !dbg !5982, !verifier.code !5806
  call {:cexpr "count"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6821, 15} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 30} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 30} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i16($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 20} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i16.i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 54} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 54} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i16($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 41} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i16.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 39} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i32($i104, $i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 73} true;
  assume {:verifier.code 0} true;
  $i109 := $mul.i32($i108, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 9} true;
  assume {:verifier.code 0} true;
  $i110 := $sext.i32.i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 78} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i64($i110, $i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6822, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6823, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb55:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6827, 16} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p5, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6827, 16} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i32($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6827, 33} true;
  assume {:verifier.code 0} true;
  $i114 := $ne.i32($i113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6827, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6828, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb58:
  assume !(($i114 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6832, 16} true;
  assume {:verifier.code 0} true;
  $p115 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6832, 16} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i64($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6832, 25} true;
  assume {:verifier.code 0} true;
  $i117 := $ne.i64($i116, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6832, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i117 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 30} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 30} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i16($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 11} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i16.i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 40} true;
  assume {:verifier.code 0} true;
  $i121 := $eq.i32($i120, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 46} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb62, $bb63;
$bb61:
  assume !(($i117 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 28} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 28} true;
  assume {:verifier.code 0} true;
  $i149 := $load.i16($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 9} true;
  assume {:verifier.code 0} true;
  $i150 := $zext.i16.i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 38} true;
  assume {:verifier.code 0} true;
  $i151 := $ne.i32($i150, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i151} true;
  goto $bb75, $bb77;
$bb62:
  assume ($i121 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 71} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p5, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 71} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i16($M.0, $p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 49} true;
  assume {:verifier.code 0} true;
  $i124 := $zext.i16.i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 90} true;
  assume {:verifier.code 0} true;
  $i125 := $eq.i32($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb65, $bb66;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 46} true;
  assume {:verifier.code 0} true;
  assume !(($i121 == 1));
  goto $bb64;
$bb64:
  assume {:verifier.code 0} true;
  goto $bb67;
$bb65:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6834, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6833, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i125 == 1));
  goto $bb64;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6838, 17} true;
  assume {:verifier.code 0} true;
  call $p126 := current_thread_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 59} true;
  assume {:verifier.code 0} true;
  $p127 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 59} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i64($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 97} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 97} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i16($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 87} true;
  assume {:verifier.code 0} true;
  $i131 := $zext.i16.i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 122} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p5, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 122} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i16($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 109} true;
  assume {:verifier.code 0} true;
  $i134 := $zext.i16.i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 107} true;
  assume {:verifier.code 0} true;
  $i135 := $add.i32($i131, $i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 142} true;
  assume {:verifier.code 0} true;
  $i136 := $mul.i32($i135, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 69} true;
  assume {:verifier.code 0} true;
  $i137 := $sext.i32.i64($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6840, 45} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p126, 24);
  $p139 := $add.ref($p126, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6840, 56} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i64($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 17} true;
  assume {:verifier.code 0} true;
  call $i141 := __chk_range_not_ok($i128, $i137, $i140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6839, 15} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i1.i8($i141);
  // WARNING: %198 = zext i1 %197 to i8, !dbg !6033, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i8($i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6841, 11} true;
  assume {:verifier.code 0} true;
  $i143 := $trunc.i8.i1($i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6841, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb68, $bb69;
$bb68:
  assume ($i143 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6843, 7} true;
  assume {:verifier.code 0} true;
  $i144 := 0;
  goto $bb70;
$bb69:
  assume !(($i143 == 1));
  assume {:verifier.code 0} true;
  $i144 := 1;
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6846, 37} true;
  assume {:verifier.code 0} true;
  $i145 := $sext.i32.i64($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6846, 17} true;
  assume {:verifier.code 0} true;
  call $i146 := ldv__builtin_expect($i145, 1);
  // WARNING: %204 = call i64 @ldv__builtin_expect(i64 %203, i64 1), !dbg !6044, !verifier.code !5806
  call {:cexpr "tmp___5"} boogie_si_record_i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6847, 19} true;
  assume {:verifier.code 0} true;
  $i147 := $eq.i64($i146, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6847, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i147} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i147 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6848, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 14);
  goto $bb3;
$bb72:
  assume !(($i147 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6852, 5} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 29} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 29} true;
  assume {:verifier.code 0} true;
  $i157 := $load.i16($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 19} true;
  assume {:verifier.code 0} true;
  $i158 := $zext.i16.i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 38} true;
  assume {:verifier.code 0} true;
  $i159 := $mul.i32($i158, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 42} true;
  assume {:verifier.code 0} true;
  $i160 := $ne.i32($i159, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i160} true;
  goto $bb81, $bb82;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 44} true;
  assume {:verifier.code 0} true;
  assume ($i151 == 1);
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6854, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 22);
  goto $bb3;
$bb77:
  assume !(($i151 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 69} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p5, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 69} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i16($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 47} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i16.i32($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 88} true;
  assume {:verifier.code 0} true;
  $i155 := $ne.i32($i154, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb78, $bb79;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6853, 9} true;
  assume {:verifier.code 0} true;
  assume ($i155 == 1);
  goto $bb76;
$bb79:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:verifier.code 0} true;
  goto $bb74;
$bb81:
  assume ($i160 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 19} true;
  assume {:verifier.code 0} true;
  $p161 := $p101;
  goto $bb83;
$bb82:
  assume !(($i160 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 19} true;
  assume {:verifier.code 0} true;
  $p161 := $0.ref;
  goto $bb83;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 19} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 11} true;
  assume {:verifier.code 0} true;
  $p162 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6858, 17} true;
  assume {:verifier.code 0} true;
  $M.89 := $store.ref($M.89, $p162, $p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 30} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 30} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i16($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 20} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i16.i32($i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 40} true;
  assume {:verifier.code 0} true;
  $i166 := $mul.i32($i165, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 44} true;
  assume {:verifier.code 0} true;
  $i167 := $ne.i32($i166, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb84, $bb85;
$bb84:
  assume ($i167 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 66} true;
  assume {:verifier.code 0} true;
  $p168 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 66} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i64($M.0, $p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 51} true;
  assume {:verifier.code 0} true;
  $p170 := $i2p.i64.ref($i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 20} true;
  assume {:verifier.code 0} true;
  $p171 := $p170;
  goto $bb86;
$bb85:
  assume !(($i167 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 20} true;
  assume {:verifier.code 0} true;
  $p171 := $0.ref;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 11} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6859, 18} true;
  assume {:verifier.code 0} true;
  $M.90 := $store.ref($M.90, $p172, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6860, 39} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6860, 39} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i16($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6860, 29} true;
  assume {:verifier.code 0} true;
  $i175 := $zext.i16.i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6860, 48} true;
  assume {:verifier.code 0} true;
  $i176 := $mul.i32($i175, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6860, 19} true;
  assume {:verifier.code 0} true;
  $i177 := $sext.i32.i64($i176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6860, 11} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6860, 17} true;
  assume {:verifier.code 0} true;
  $M.91 := $store.i64($M.91, $p178, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6861, 40} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6861, 40} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i16($M.0, $p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6861, 30} true;
  assume {:verifier.code 0} true;
  $i181 := $zext.i16.i32($i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6861, 50} true;
  assume {:verifier.code 0} true;
  $i182 := $mul.i32($i181, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6861, 20} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i32.i64($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6861, 11} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6861, 18} true;
  assume {:verifier.code 0} true;
  $M.92 := $store.i64($M.92, $p184, $i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 30} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 30} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i16($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 17} true;
  assume {:verifier.code 0} true;
  $i187 := $zext.i16.i32($i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 48} true;
  assume {:verifier.code 0} true;
  $i188 := $mul.i32($i187, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 52} true;
  assume {:verifier.code 0} true;
  $i189 := $ne.i32($i188, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i189} true;
  goto $bb87, $bb88;
$bb87:
  assume ($i189 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 88} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 88} true;
  assume {:verifier.code 0} true;
  $i191 := $load.i64($M.91, $p190);
  $i192 := $add.i64(24, $i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 80} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p1, $mul.ref($i192, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 17} true;
  assume {:verifier.code 0} true;
  $p194 := $p193;
  goto $bb89;
$bb88:
  assume !(($i189 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 17} true;
  assume {:verifier.code 0} true;
  $p194 := $0.ref;
  goto $bb89;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 17} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 9} true;
  assume {:verifier.code 0} true;
  $p195 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6862, 15} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p195, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 31} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p5, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 31} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i16($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 18} true;
  assume {:verifier.code 0} true;
  $i198 := $zext.i16.i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 50} true;
  assume {:verifier.code 0} true;
  $i199 := $mul.i32($i198, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 54} true;
  assume {:verifier.code 0} true;
  $i200 := $ne.i32($i199, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb90, $bb91;
$bb90:
  assume ($i200 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 93} true;
  assume {:verifier.code 0} true;
  $p201 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 93} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i64($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 110} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 110} true;
  assume {:verifier.code 0} true;
  $i204 := $load.i64($M.92, $p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 102} true;
  assume {:verifier.code 0} true;
  $i205 := $add.i64($i202, $i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 61} true;
  assume {:verifier.code 0} true;
  $p206 := $i2p.i64.ref($i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 18} true;
  assume {:verifier.code 0} true;
  $p207 := $p206;
  goto $bb92;
$bb91:
  assume !(($i200 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 18} true;
  assume {:verifier.code 0} true;
  $p207 := $0.ref;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 9} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6863, 16} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.ref($M.21, $p208, $p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6864, 40} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6864, 40} true;
  assume {:verifier.code 0} true;
  $i210 := $load.i16($M.0, $p209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6864, 27} true;
  assume {:verifier.code 0} true;
  $i211 := $zext.i16.i32($i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6864, 58} true;
  assume {:verifier.code 0} true;
  $i212 := $mul.i32($i211, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6864, 17} true;
  assume {:verifier.code 0} true;
  $i213 := $sext.i32.i64($i212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6864, 9} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6864, 15} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i64($M.22, $p214, $i213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6865, 41} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p5, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6865, 41} true;
  assume {:verifier.code 0} true;
  $i216 := $load.i16($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6865, 28} true;
  assume {:verifier.code 0} true;
  $i217 := $zext.i16.i32($i216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6865, 60} true;
  assume {:verifier.code 0} true;
  $i218 := $mul.i32($i217, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6865, 18} true;
  assume {:verifier.code 0} true;
  $i219 := $sext.i32.i64($i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6865, 9} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p7, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6865, 16} true;
  assume {:verifier.code 0} true;
  $M.23 := $store.i64($M.23, $p220, $i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6866, 14} true;
  assume {:verifier.code 0} true;
  $i221 := $zext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6866, 14} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref(uverbs_ex_cmd_table, $mul.ref($i221, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6866, 14} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.88, $p222);
  call $i224 := devirtbounce.32($p223, $p10, $p6, $p7);
  // WARNING: %302 = call i32 @devirtbounce.32(i32 (%struct.ib_uverbs_file*, %struct.ib_udata*, %struct.ib_udata*)* %301, %struct.ib_uverbs_file* %11, %struct.ib_udata* %7, %struct.ib_udata* %8)
  call {:cexpr "err"} boogie_si_record_i32($i224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6867, 13} true;
  assume {:verifier.code 0} true;
  $i225 := $ne.i32($i224, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6867, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i225} true;
  goto $bb93, $bb94;
$bb93:
  assume ($i225 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6868, 15} true;
  assume {:verifier.code 0} true;
  $i226 := $sext.i32.i64($i224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6868, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $i226;
  goto $bb3;
$bb94:
  assume !(($i225 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6872, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $i2;
  goto $bb3;
$bb96:
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6876, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 38);
  goto $bb3;
}
const ib_uverbs_mmap: ref;
axiom (ib_uverbs_mmap == $sub.ref(0, 372279));
procedure  ib_uverbs_mmap($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6885, 41} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6885, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6885, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6886, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6886, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6886, 38} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6886, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6887, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 22} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 22} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 31} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 31} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 40} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 40} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 53} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6889, 53} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  call $i18 := devirtbounce.33($p15, $p17, $p1);
  // WARNING: %20 = call i32 @devirtbounce.33(i32 (%struct.ib_ucontext*, %struct.vm_area_struct*)* %17, %struct.ib_ucontext* %19, %struct.vm_area_struct* %1)
  call {:cexpr "tmp"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6890, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i18;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6893, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const ib_uverbs_open: ref;
axiom (ib_uverbs_open == $sub.ref(0, 373311));
procedure  ib_uverbs_open($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p10: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i1;
  var $i17: i8;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i21: i32;
  var $p38: ref;
  var $i39: i32;
  var $i11: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6907, 42} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6907, 61} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6907, 61} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6908, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6908, 43} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, $mul.ref($sub.ref(0, 128), 632));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6909, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6909, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6909, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6910, 21} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p6, $mul.ref($sub.ref(0, 128), 632));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6910, 5} true;
  assume {:verifier.code 0} true;
  call kref_get($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6911, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6912, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 6);
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6914, 36} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 128), 632)), 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6914, 36} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6914, 45} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6914, 45} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6914, 9} true;
  assume {:verifier.code 0} true;
  call $i16 := ldv_try_module_get_6($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6914, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i8($i16);
  // WARNING: %20 = zext i1 %19 to i8, !dbg !5836, !verifier.code !5806
  call {:cexpr "tmp"} boogie_si_record_i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6915, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i8.i1($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6915, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb5, $bb6;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6948, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb5:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6917, 3} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb7;
$bb6:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i19 := 1;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6920, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6920, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6922, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i32(0, 19);
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6945, 19} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p6, $mul.ref($sub.ref(0, 128), 632));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6945, 3} true;
  assume {:verifier.code 0} true;
  call $i39 := kref_put($p38, ib_uverbs_release_dev);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6946, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i21;
  goto $bb4;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6926, 13} true;
  assume {:verifier.code 0} true;
  call $p22 := kmalloc(224, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6927, 10} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6928, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6928, 28} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6928, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6930, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6943, 26} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p6, $mul.ref($sub.ref(0, 128), 632)), 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6943, 26} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6943, 35} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 928);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6943, 35} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6943, 3} true;
  assume {:verifier.code 0} true;
  call ldv_module_put_8($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6943, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i32(0, 12);
  goto $bb10;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6934, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p23, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6934, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p26, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6935, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p23, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6935, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p27, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6936, 9} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p23, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6936, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6937, 21} true;
  assume {:verifier.code 0} true;
  $p29 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6937, 3} true;
  assume {:verifier.code 0} true;
  call kref_init($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6938, 24} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6938, 3} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p30, .str.21, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6939, 24} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6939, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6939, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6940, 13} true;
  assume {:verifier.code 0} true;
  call $i33 := ldv_nonseekable_open_7($p0, $p1);
  // WARNING: %43 = call i32 @ldv_nonseekable_open_7(%struct.inode* %0, %struct.file* %1), !dbg !5878, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6941, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i33;
  goto $bb4;
}
const ib_uverbs_close: ref;
axiom (ib_uverbs_close == $sub.ref(0, 374343));
procedure  ib_uverbs_close($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6954, 41} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6954, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6954, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6955, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6955, 42} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6955, 3} true;
  assume {:verifier.code 0} true;
  call $i7 := ib_uverbs_cleanup_ucontext($p4, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6956, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p4, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6956, 29} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6956, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6956, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6956, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6957, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6957, 23} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6957, 36} true;
  assume {:verifier.code 0} true;
  $p14 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6957, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := kref_put($p14, ib_uverbs_release_event_file);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6958, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6961, 20} true;
  assume {:verifier.code 0} true;
  $p16 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6961, 3} true;
  assume {:verifier.code 0} true;
  call $i17 := kref_put($p16, ib_uverbs_release_file);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6962, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ib_uverbs_cleanup_ucontext: ref;
axiom (ib_uverbs_cleanup_ucontext == $sub.ref(0, 375375));
procedure  ib_uverbs_cleanup_ucontext($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p21: ref;
  var $p22: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $p48: ref;
  var $i49: i64;
  var $i50: i1;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $i65: i1;
  var $p51: ref;
  var $p52: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i1;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $i95: i1;
  var $p81: ref;
  var $p82: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i64;
  var $p108: ref;
  var $i109: i64;
  var $i110: i1;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i64;
  var $i120: i64;
  var $i121: i1;
  var $i122: i32;
  var $i123: i32;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $i132: i64;
  var $i133: i1;
  var $p111: ref;
  var $p112: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $i145: i64;
  var $p146: ref;
  var $i147: i64;
  var $i148: i1;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $i155: i32;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $i163: i64;
  var $i164: i1;
  var $p149: ref;
  var $p150: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $i176: i64;
  var $p177: ref;
  var $i178: i64;
  var $i179: i1;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: i32;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $i197: i64;
  var $i198: i1;
  var $p180: ref;
  var $p181: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i64;
  var $i210: i64;
  var $i211: i1;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $i217: i32;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $i224: i64;
  var $i225: i1;
  var $p212: ref;
  var $p213: ref;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $i240: i64;
  var $p241: ref;
  var $i242: i64;
  var $i243: i1;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $p256: ref;
  var $p257: ref;
  var $p258: ref;
  var $i259: i64;
  var $i260: i1;
  var $p244: ref;
  var $p245: ref;
  var $p261: ref;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $p270: ref;
  var $p271: ref;
  var $p272: ref;
  var $p273: ref;
  var $p274: ref;
  var $i275: i64;
  var $p276: ref;
  var $i277: i64;
  var $i278: i1;
  var $p281: ref;
  var $p282: ref;
  var $p283: ref;
  var $i284: i32;
  var $p285: ref;
  var $p286: ref;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $p290: ref;
  var $p291: ref;
  var $i292: i64;
  var $i293: i1;
  var $p279: ref;
  var $p280: ref;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $p299: ref;
  var $i300: i32;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6095, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6095, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6095, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6096, 5} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6295, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6100, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6100, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6101, 49} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 104);
  $p7 := $add.ref($p1, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6101, 57} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6102, 10} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6102, 38} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6103, 50} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p9, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p12 := $add.ref($add.ref($p9, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6103, 55} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6104, 9} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6104, 41} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 32} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p9, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 69} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 41} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 38} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64($i17, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  $p21, $p22 := $p15, $p10;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6116, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6107, 30} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6107, 30} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6107, 8} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6108, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_ah_idr, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6109, 3} true;
  assume {:verifier.code 0} true;
  call $i26 := ib_destroy_ah($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6110, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6110, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6112, 49} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p21, 24);
  $p29 := $add.ref($p21, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6112, 54} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6113, 9} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6113, 41} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 32} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p21, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 38} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i64($i34, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  $p21, $p22 := $p32, $p21;
  assume {:branchcond $i35} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb8;
$bb11:
  assume !(($i35 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6115, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6120, 53} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 40);
  $p37 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6120, 61} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6121, 10} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6121, 42} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p39, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6122, 50} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p39, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p42 := $add.ref($add.ref($p39, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6122, 55} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6123, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6123, 41} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 32} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p39, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 69} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 41} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 38} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i47, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  $p51, $p52 := $p45, $p40;
  goto $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i50 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb16:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6135, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6126, 30} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p52, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6126, 30} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6126, 8} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6127, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_mw_idr, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6128, 3} true;
  assume {:verifier.code 0} true;
  call $i56 := ib_dealloc_mw($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6129, 9} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6129, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6131, 49} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p51, 24);
  $p59 := $add.ref($p51, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6131, 54} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6132, 9} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6132, 41} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 32} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p51, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 38} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i64($i64, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  $p51, $p52 := $p62, $p51;
  assume {:branchcond $i65} true;
  goto $bb18, $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb16;
$bb19:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6134, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6139, 53} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p1, 136);
  $p67 := $add.ref($p1, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6139, 63} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6140, 10} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6140, 42} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p69, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6141, 50} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p69, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p72 := $add.ref($add.ref($p69, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6141, 55} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6142, 9} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6142, 41} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p74, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 32} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p69, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 69} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p1, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 41} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 38} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i64($i77, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  $p81, $p82 := $p75, $p70;
  goto $bb24;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i80 == 1));
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb24:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6154, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6145, 37} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p82, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6145, 37} true;
  assume {:verifier.code 0} true;
  $p84 := $load.ref($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6145, 13} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6146, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_rule_idr, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6147, 3} true;
  assume {:verifier.code 0} true;
  call $i86 := ib_destroy_flow($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6148, 9} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6148, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6150, 49} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p81, 24);
  $p89 := $add.ref($p81, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6150, 54} true;
  assume {:verifier.code 0} true;
  $p90 := $load.ref($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6151, 9} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6151, 41} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 32} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p81, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 38} true;
  assume {:verifier.code 0} true;
  $i95 := $ne.i64($i94, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  $p81, $p82 := $p92, $p81;
  assume {:branchcond $i95} true;
  goto $bb26, $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  assume ($i95 == 1);
  goto $bb24;
$bb27:
  assume !(($i95 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6153, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6158, 53} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p1, 72);
  $p97 := $add.ref($p1, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6158, 61} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6159, 10} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6159, 42} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p99, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6160, 50} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p99, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p102 := $add.ref($add.ref($p99, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6160, 55} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6161, 9} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6161, 41} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p104, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 32} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p99, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  $i107 := $p2i.ref.i64($p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 69} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p1, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 41} true;
  assume {:verifier.code 0} true;
  $i109 := $p2i.ref.i64($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 38} true;
  assume {:verifier.code 0} true;
  $i110 := $ne.i64($i107, $i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i110 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  $p111, $p112 := $p105, $p100;
  goto $bb32;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i110 == 1));
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb39;
$bb32:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6181, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6164, 30} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p112, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6164, 30} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6164, 8} true;
  assume {:verifier.code 0} true;
  $p115 := $bitcast.ref.ref($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6166, 9} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6167, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_qp_idr, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6168, 27} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p115, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6168, 27} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6168, 7} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.i64($p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6168, 38} true;
  assume {:verifier.code 0} true;
  $i120 := $p2i.ref.i64($p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6168, 35} true;
  assume {:verifier.code 0} true;
  $i121 := $ne.i64($i119, $i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6168, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i121 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6169, 5} true;
  assume {:verifier.code 0} true;
  call $i122 := ib_close_qp($p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6170, 3} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i121 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6171, 5} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_detach_umcast($p115, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6172, 5} true;
  assume {:verifier.code 0} true;
  call $i123 := ib_destroy_qp($p115);
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6174, 41} true;
  assume {:verifier.code 0} true;
  $p124 := $p116;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6174, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_release_uevent($p0, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6175, 9} true;
  assume {:verifier.code 0} true;
  $p125 := $bitcast.ref.ref($p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6175, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6177, 50} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p111, 24);
  $p127 := $add.ref($p111, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6177, 55} true;
  assume {:verifier.code 0} true;
  $p128 := $load.ref($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6178, 9} true;
  assume {:verifier.code 0} true;
  $p129 := $bitcast.ref.ref($p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6178, 42} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p129, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 32} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p111, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  $i132 := $p2i.ref.i64($p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 38} true;
  assume {:verifier.code 0} true;
  $i133 := $ne.i64($i132, $i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  $p111, $p112 := $p130, $p111;
  assume {:branchcond $i133} true;
  goto $bb37, $bb38;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  assume ($i133 == 1);
  goto $bb32;
$bb38:
  assume !(($i133 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6180, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6185, 54} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p1, 88);
  $p135 := $add.ref($p1, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6185, 63} true;
  assume {:verifier.code 0} true;
  $p136 := $load.ref($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6186, 10} true;
  assume {:verifier.code 0} true;
  $p137 := $bitcast.ref.ref($p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6186, 43} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p137, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6187, 51} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($add.ref($p137, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p140 := $add.ref($add.ref($p137, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6187, 56} true;
  assume {:verifier.code 0} true;
  $p141 := $load.ref($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6188, 9} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6188, 42} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p142, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 32} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($add.ref($p137, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  $i145 := $p2i.ref.i64($p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 69} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p1, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 41} true;
  assume {:verifier.code 0} true;
  $i147 := $p2i.ref.i64($p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 38} true;
  assume {:verifier.code 0} true;
  $i148 := $ne.i64($i145, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i148 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  $p149, $p150 := $p143, $p138;
  goto $bb43;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i148 == 1));
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb47;
$bb43:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6203, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6191, 32} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p150, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6191, 32} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6191, 9} true;
  assume {:verifier.code 0} true;
  $p153 := $bitcast.ref.ref($p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6193, 12} true;
  assume {:verifier.code 0} true;
  $p154 := $bitcast.ref.ref($p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6194, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_srq_idr, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6195, 3} true;
  assume {:verifier.code 0} true;
  call $i155 := ib_destroy_srq($p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6196, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_release_uevent($p0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6197, 9} true;
  assume {:verifier.code 0} true;
  $p156 := $bitcast.ref.ref($p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6197, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6199, 50} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p149, 24);
  $p158 := $add.ref($p149, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6199, 55} true;
  assume {:verifier.code 0} true;
  $p159 := $load.ref($M.0, $p158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6200, 9} true;
  assume {:verifier.code 0} true;
  $p160 := $bitcast.ref.ref($p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6200, 42} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p160, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 32} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p149, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  $i163 := $p2i.ref.i64($p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 38} true;
  assume {:verifier.code 0} true;
  $i164 := $ne.i64($i163, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  $p149, $p150 := $p161, $p149;
  assume {:branchcond $i164} true;
  goto $bb45, $bb46;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  assume ($i164 == 1);
  goto $bb43;
$bb46:
  assume !(($i164 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6202, 7} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6207, 54} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p1, 56);
  $p166 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6207, 62} true;
  assume {:verifier.code 0} true;
  $p167 := $load.ref($M.0, $p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6208, 10} true;
  assume {:verifier.code 0} true;
  $p168 := $bitcast.ref.ref($p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6208, 43} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p168, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6209, 51} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($add.ref($p168, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p171 := $add.ref($add.ref($p168, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6209, 56} true;
  assume {:verifier.code 0} true;
  $p172 := $load.ref($M.0, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6210, 9} true;
  assume {:verifier.code 0} true;
  $p173 := $bitcast.ref.ref($p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6210, 42} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p173, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 32} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($add.ref($p168, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  $i176 := $p2i.ref.i64($p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 69} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 41} true;
  assume {:verifier.code 0} true;
  $i178 := $p2i.ref.i64($p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 38} true;
  assume {:verifier.code 0} true;
  $i179 := $ne.i64($i176, $i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i179 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  $p180, $p181 := $p174, $p169;
  goto $bb51;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i179 == 1));
  goto $bb50;
$bb50:
  assume {:verifier.code 0} true;
  goto $bb55;
$bb51:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6226, 5} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6213, 30} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p181, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6213, 30} true;
  assume {:verifier.code 0} true;
  $p183 := $load.ref($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6213, 8} true;
  assume {:verifier.code 0} true;
  $p184 := $bitcast.ref.ref($p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6214, 48} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p184, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6214, 48} true;
  assume {:verifier.code 0} true;
  $p186 := $load.ref($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6214, 13} true;
  assume {:verifier.code 0} true;
  $p187 := $bitcast.ref.ref($p186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6216, 9} true;
  assume {:verifier.code 0} true;
  $p188 := $bitcast.ref.ref($p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6217, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_cq_idr, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6218, 3} true;
  assume {:verifier.code 0} true;
  call $i189 := ib_destroy_cq($p184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6219, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_release_ucq($p0, $p187, $p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6220, 9} true;
  assume {:verifier.code 0} true;
  $p190 := $bitcast.ref.ref($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6220, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6222, 50} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p180, 24);
  $p192 := $add.ref($p180, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6222, 55} true;
  assume {:verifier.code 0} true;
  $p193 := $load.ref($M.0, $p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6223, 9} true;
  assume {:verifier.code 0} true;
  $p194 := $bitcast.ref.ref($p193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6223, 42} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p194, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 32} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p180, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  $i197 := $p2i.ref.i64($p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 38} true;
  assume {:verifier.code 0} true;
  $i198 := $ne.i64($i197, $i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  $p180, $p181 := $p195, $p180;
  assume {:branchcond $i198} true;
  goto $bb53, $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  assume ($i198 == 1);
  goto $bb51;
$bb54:
  assume !(($i198 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6225, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6230, 54} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p1, 24);
  $p200 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6230, 62} true;
  assume {:verifier.code 0} true;
  $p201 := $load.ref($M.0, $p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6231, 10} true;
  assume {:verifier.code 0} true;
  $p202 := $bitcast.ref.ref($p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6231, 43} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p202, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6232, 51} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($add.ref($p202, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p205 := $add.ref($add.ref($p202, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6232, 56} true;
  assume {:verifier.code 0} true;
  $p206 := $load.ref($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6233, 9} true;
  assume {:verifier.code 0} true;
  $p207 := $bitcast.ref.ref($p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6233, 42} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p207, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  $i209 := $p2i.ref.i64($p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 31} true;
  assume {:verifier.code 0} true;
  $i210 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 28} true;
  assume {:verifier.code 0} true;
  $i211 := $ne.i64($i209, $i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  $p212, $p213 := $p208, $p203;
  goto $bb59;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i211 == 1));
  goto $bb58;
$bb58:
  assume {:verifier.code 0} true;
  goto $bb63;
$bb59:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6245, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6236, 30} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p213, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6236, 30} true;
  assume {:verifier.code 0} true;
  $p215 := $load.ref($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6236, 8} true;
  assume {:verifier.code 0} true;
  $p216 := $bitcast.ref.ref($p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6237, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_mr_idr, $p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6238, 3} true;
  assume {:verifier.code 0} true;
  call $i217 := ib_dereg_mr($p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6239, 9} true;
  assume {:verifier.code 0} true;
  $p218 := $bitcast.ref.ref($p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6239, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6241, 50} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p212, 24);
  $p220 := $add.ref($p212, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6241, 55} true;
  assume {:verifier.code 0} true;
  $p221 := $load.ref($M.0, $p220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6242, 9} true;
  assume {:verifier.code 0} true;
  $p222 := $bitcast.ref.ref($p221);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6242, 42} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p222, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  $i224 := $p2i.ref.i64($p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 28} true;
  assume {:verifier.code 0} true;
  $i225 := $ne.i64($i224, $i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  $p212, $p213 := $p223, $p212;
  assume {:branchcond $i225} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  assume ($i225 == 1);
  goto $bb59;
$bb62:
  assume !(($i225 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6244, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6249, 30} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6249, 30} true;
  assume {:verifier.code 0} true;
  $p227 := $load.ref($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6249, 39} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p227, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6249, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p228, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6250, 54} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p1, 120);
  $p230 := $add.ref($p1, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6250, 64} true;
  assume {:verifier.code 0} true;
  $p231 := $load.ref($M.0, $p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6251, 10} true;
  assume {:verifier.code 0} true;
  $p232 := $bitcast.ref.ref($p231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6251, 43} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p232, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6252, 51} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($add.ref($p232, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p235 := $add.ref($add.ref($p232, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6252, 56} true;
  assume {:verifier.code 0} true;
  $p236 := $load.ref($M.0, $p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6253, 9} true;
  assume {:verifier.code 0} true;
  $p237 := $bitcast.ref.ref($p236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6253, 42} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p237, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 32} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($add.ref($p232, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  $i240 := $p2i.ref.i64($p239);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 69} true;
  assume {:verifier.code 0} true;
  $p241 := $add.ref($p1, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 41} true;
  assume {:verifier.code 0} true;
  $i242 := $p2i.ref.i64($p241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 38} true;
  assume {:verifier.code 0} true;
  $i243 := $ne.i64($i240, $i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i243 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  $p244, $p245 := $p238, $p233;
  goto $bb67;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i243 == 1));
  goto $bb66;
$bb66:
  assume {:verifier.code 0} true;
  goto $bb71;
$bb67:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6267, 5} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6256, 34} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p245, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6256, 34} true;
  assume {:verifier.code 0} true;
  $p247 := $load.ref($M.0, $p246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6256, 10} true;
  assume {:verifier.code 0} true;
  $p248 := $bitcast.ref.ref($p247);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6258, 11} true;
  assume {:verifier.code 0} true;
  $p249 := $bitcast.ref.ref($p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6259, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_xrcd_idr, $p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6260, 32} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6260, 32} true;
  assume {:verifier.code 0} true;
  $p251 := $load.ref($M.0, $p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6260, 3} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_dealloc_xrcd($p251, $p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6261, 9} true;
  assume {:verifier.code 0} true;
  $p252 := $bitcast.ref.ref($p249);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6261, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6263, 50} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p244, 24);
  $p254 := $add.ref($p244, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6263, 55} true;
  assume {:verifier.code 0} true;
  $p255 := $load.ref($M.0, $p254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6264, 9} true;
  assume {:verifier.code 0} true;
  $p256 := $bitcast.ref.ref($p255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6264, 42} true;
  assume {:verifier.code 0} true;
  $p257 := $add.ref($p256, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 32} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($p244, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  $i259 := $p2i.ref.i64($p258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 38} true;
  assume {:verifier.code 0} true;
  $i260 := $ne.i64($i259, $i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  $p244, $p245 := $p257, $p244;
  assume {:branchcond $i260} true;
  goto $bb69, $bb70;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  assume ($i260 == 1);
  goto $bb67;
$bb70:
  assume !(($i260 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6266, 7} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6271, 25} true;
  assume {:verifier.code 0} true;
  $p261 := $add.ref($p0, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6271, 25} true;
  assume {:verifier.code 0} true;
  $p262 := $load.ref($M.0, $p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6271, 34} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($p262, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6271, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p263);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6272, 54} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p1, 8);
  $p265 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6272, 62} true;
  assume {:verifier.code 0} true;
  $p266 := $load.ref($M.0, $p265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6273, 10} true;
  assume {:verifier.code 0} true;
  $p267 := $bitcast.ref.ref($p266);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6273, 43} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p267, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6274, 51} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($add.ref($p267, $mul.ref($sub.ref(0, 24), 216)), 24);
  $p270 := $add.ref($add.ref($p267, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6274, 56} true;
  assume {:verifier.code 0} true;
  $p271 := $load.ref($M.0, $p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6275, 9} true;
  assume {:verifier.code 0} true;
  $p272 := $bitcast.ref.ref($p271);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6275, 42} true;
  assume {:verifier.code 0} true;
  $p273 := $add.ref($p272, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 32} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($add.ref($p267, $mul.ref($sub.ref(0, 24), 216)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  $i275 := $p2i.ref.i64($p274);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 69} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 41} true;
  assume {:verifier.code 0} true;
  $i277 := $p2i.ref.i64($p276);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 38} true;
  assume {:verifier.code 0} true;
  $i278 := $ne.i64($i275, $i277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i278} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i278 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  $p279, $p280 := $p273, $p268;
  goto $bb75;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i278 == 1));
  goto $bb74;
$bb74:
  assume {:verifier.code 0} true;
  goto $bb79;
$bb75:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6287, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6278, 30} true;
  assume {:verifier.code 0} true;
  $p281 := $add.ref($p280, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6278, 30} true;
  assume {:verifier.code 0} true;
  $p282 := $load.ref($M.0, $p281);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6278, 8} true;
  assume {:verifier.code 0} true;
  $p283 := $bitcast.ref.ref($p282);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6279, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove_uobj(ib_uverbs_pd_idr, $p280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6280, 3} true;
  assume {:verifier.code 0} true;
  call $i284 := ib_dealloc_pd($p283);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6281, 9} true;
  assume {:verifier.code 0} true;
  $p285 := $bitcast.ref.ref($p280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6281, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6283, 50} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($p279, 24);
  $p287 := $add.ref($p279, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6283, 55} true;
  assume {:verifier.code 0} true;
  $p288 := $load.ref($M.0, $p287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6284, 9} true;
  assume {:verifier.code 0} true;
  $p289 := $bitcast.ref.ref($p288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6284, 42} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($p289, $mul.ref($sub.ref(0, 24), 216));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 32} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($p279, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  $i292 := $p2i.ref.i64($p291);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 38} true;
  assume {:verifier.code 0} true;
  $i293 := $ne.i64($i292, $i277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  $p279, $p280 := $p290, $p279;
  assume {:branchcond $i293} true;
  goto $bb77, $bb78;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  assume ($i293 == 1);
  goto $bb75;
$bb78:
  assume !(($i293 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6286, 7} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6291, 20} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($p1, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6291, 20} true;
  assume {:verifier.code 0} true;
  $p295 := $load.ref($M.0, $p294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6291, 3} true;
  assume {:verifier.code 0} true;
  call put_pid($p295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6292, 26} true;
  assume {:verifier.code 0} true;
  $p296 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6292, 26} true;
  assume {:verifier.code 0} true;
  $p297 := $load.ref($M.0, $p296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6292, 35} true;
  assume {:verifier.code 0} true;
  $p298 := $add.ref($p297, 488);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6292, 35} true;
  assume {:verifier.code 0} true;
  $p299 := $load.ref($M.0, $p298);
  call $i300 := devirtbounce.6($p299, $p1);
  // WARNING: %324 = call i32 @devirtbounce.6(i32 (%struct.ib_ucontext*)* %323, %struct.ib_ucontext* %1)
  call {:cexpr "tmp___0"} boogie_si_record_i32($i300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6293, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i300;
  goto $bb3;
}
const ib_close_qp: ref;
axiom (ib_close_qp == $sub.ref(0, 376407));
procedure  ib_close_qp($p0: ref)
  returns ($r: i32);
const ib_uverbs_detach_umcast: ref;
axiom (ib_uverbs_detach_umcast == $sub.ref(0, 377439));
procedure  ib_uverbs_detach_umcast($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i16;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $p15: ref;
  var $p16: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6021, 46} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 240);
  $p3 := $add.ref($p1, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6021, 57} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6022, 11} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6023, 51} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  $p7 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6023, 56} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6024, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 33} true;
  assume {:verifier.code 0} true;
  $p10 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 67} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 42} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 39} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i11, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  $p15, $p16 := $p8, $p4;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6035, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6027, 32} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6027, 50} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p16, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6027, 50} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i16($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6027, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6027, 37} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i16($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6027, 3} true;
  assume {:verifier.code 0} true;
  call $i22 := ib_detach_mcast($p0, $p17, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6028, 21} true;
  assume {:verifier.code 0} true;
  $p23 := $p16;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6028, 3} true;
  assume {:verifier.code 0} true;
  call list_del($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6029, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6029, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6031, 49} true;
  assume {:verifier.code 0} true;
  $p25 := $p15;
  $p26 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6031, 54} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6032, 9} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 33} true;
  assume {:verifier.code 0} true;
  $p29 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 39} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  $p15, $p16 := $p27, $p15;
  assume {:branchcond $i31} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  assume ($i31 == 1);
  goto $bb4;
$bb7:
  assume !(($i31 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6034, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6040, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_uverbs_dealloc_xrcd: ref;
axiom (ib_uverbs_dealloc_xrcd == $sub.ref(0, 378471));
procedure  ib_uverbs_dealloc_xrcd($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9495, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9495, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9496, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9496, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9496, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9497, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9497, 11} true;
  assume {:verifier.code 0} true;
  call $i7 := atomic_dec_and_test($p6);
  // WARNING: %9 = call i32 @atomic_dec_and_test(%struct.__anonstruct_atomic_t_6* %8), !dbg !5824, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9498, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9498, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9499, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9514, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9503, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9506, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := ib_dealloc_xrcd($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9507, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9507, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9507, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9508, 5} true;
  assume {:verifier.code 0} true;
  call xrcd_table_delete($p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9509, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 9512, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
}
const ldv_try_module_get_6: ref;
axiom (ldv_try_module_get_6 == $sub.ref(0, 379503));
procedure  ldv_try_module_get_6($p0: ref)
  returns ($r: i1)
{
  var $i1: i32;
  var $i2: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7836, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_try_module_get($p0);
  // WARNING: %2 = call i32 @ldv_try_module_get(%struct.module* %0), !dbg !5812, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7837, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7837, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_nonseekable_open_7: ref;
axiom (ldv_nonseekable_open_7 == $sub.ref(0, 380535));
procedure  ldv_nonseekable_open_7($p0: ref, $p1: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7845, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_module_put_8: ref;
axiom (ldv_module_put_8 == $sub.ref(0, 381567));
procedure  ldv_module_put_8($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7853, 3} true;
  assume {:verifier.code 0} true;
  call ldv_module_put($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7854, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_try_module_get: ref;
axiom (ldv_try_module_get == $sub.ref(0, 382599));
procedure  ldv_try_module_get($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12962, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12962, 30} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12962, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12963, 28} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %5 = call i32 @ldv_undef_int(), !dbg !5815, !verifier.code !5809
  call {:cexpr "module_get_succeeded"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12964, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12964, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12965, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12965, 53} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12965, 29} true;
  assume {:verifier.code 0} true;
  $M.2 := $i6;
  call {:cexpr "ldv_module_refcounter"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12966, 7} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12968, 7} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12975, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 12973, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb5;
}
const ldv_undef_int: ref;
axiom (ldv_undef_int == $sub.ref(0, 383631));
procedure  ldv_undef_int()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5496, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__VERIFIER_nondet_int(), !dbg !5806, !verifier.code !5808
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5497, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const current_thread_info: ref;
axiom (current_thread_info == $sub.ref(0, 384663));
procedure  current_thread_info()
  returns ($r: ref)
{
  var $i0: i64;
  var $i1: i64;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5230, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := current_top_of_stack();
  // WARNING: %1 = call i64 @current_top_of_stack(), !dbg !5808, !verifier.code !5810
  call {:cexpr "tmp"} boogie_si_record_i64($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5231, 38} true;
  assume {:verifier.code 0} true;
  $i1 := $sub.i64($i0, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5231, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5231, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __chk_range_not_ok: ref;
axiom (__chk_range_not_ok == $sub.ref(0, 385695));
procedure  __chk_range_not_ok($i0: i64, $i1: i64, $i2: i64)
  returns ($r: i1)
{
  var $i3: i64;
  var $i4: i1;
  var $i6: i1;
  var $i5: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !16951, metadata !5829), !dbg !16952, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !16953, metadata !5829), !dbg !16954, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5619, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i0, $i1);
  // WARNING: %4 = add i64 %0, %1, !dbg !5816, !verifier.code !5811
  call {:cexpr "addr"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5620, 12} true;
  assume {:verifier.code 0} true;
  $i4 := $ult.i64($i3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5620, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5621, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5627, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5625, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $ugt.i64($i3, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5625, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i6;
  goto $bb3;
}
const current_top_of_stack: ref;
axiom (current_top_of_stack == $sub.ref(0, 386727));
procedure  current_top_of_stack()
  returns ($r: i64)
{
  var $i0: i64;
$bb0:
  call $i0 := devirtbounce.34(0, $add.ref(cpu_tss, 8));
  // WARNING: %1 = call i64 @devirtbounce.34(i64 (i64*)* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}", i64* getelementptr inbounds (%struct.tss_struct, %struct.tss_struct* @cpu_tss, i32 0, i32 0, i32 1))
  call {:cexpr "pfo_ret__"} boogie_si_record_i64($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5167, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5172, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const show_ibdev: ref;
axiom (show_ibdev == $sub.ref(0, 387759));
procedure  show_ibdev($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i64;
  var $i7: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6981, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6982, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6983, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6983, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6983, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6984, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 19);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6991, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6988, 51} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p4, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6988, 51} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6988, 60} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6988, 34} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6988, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := sprintf.ref.ref.ref($p2, .str.22, $p11);
  // WARNING: %15 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i8* %14), !dbg !5830, !verifier.code !5809
  call {:cexpr "tmp___0"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6989, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 6989, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i13;
  goto $bb3;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 388791));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5591, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5591, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5591, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const sprintf: ref;
axiom (sprintf == $sub.ref(0, 389823));
procedure  sprintf.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  sprintf.ref.ref.ref($p0: ref, $p1: ref, p.2: ref)
  returns ($r: i32);
const show_dev_abi_version: ref;
axiom (show_dev_abi_version == $sub.ref(0, 390855));
procedure  show_dev_abi_version($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i64;
  var $i7: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7003, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7004, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7005, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7005, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7005, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7006, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 19);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7013, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7010, 40} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p4, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7010, 40} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7010, 49} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 2388);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7010, 49} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7010, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := sprintf.ref.ref.i32($p2, .str.24, $i11);
  // WARNING: %15 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i32 %14), !dbg !5829, !verifier.code !5809
  call {:cexpr "tmp___0"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7011, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7011, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i13;
  goto $bb3;
}
const ib_uverbs_add_one: ref;
axiom (ib_uverbs_add_one == $sub.ref(0, 391887));
procedure  ib_uverbs_add_one($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i64;
  var $p30: ref;
  var $i31: i32;
  var $i32: i64;
  var $i28: i32;
  var $i29: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i1;
  var $i70: i8;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $p77: ref;
  var $i78: i32;
  var $i79: i1;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $p85: ref;
  var $p86: ref;
  var $i87: i32;
  var $i88: i1;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $p93: ref;
  var $p94: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7066, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7066, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7066, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7066, 46} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7066, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7068, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7155, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7072, 9} true;
  assume {:verifier.code 0} true;
  call $p7 := kzalloc(632, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7073, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7074, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7074, 34} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7074, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7075, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7079, 27} true;
  assume {:verifier.code 0} true;
  $p11 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7079, 3} true;
  assume {:verifier.code 0} true;
  call kref_init($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7080, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7080, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7081, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7081, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p13, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7082, 15} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p8, 464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7082, 27} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7082, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7082, 27} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p15, $p16, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7083, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p8, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7083, 3} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p17, .str.25, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7084, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(map_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7085, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := find_first_zero_bit(dev_map, 32);
  // WARNING: %25 = call i64 @find_first_zero_bit(i64* getelementptr inbounds ([1 x i64], [1 x i64]* @dev_map, i32 0, i32 0), i64 32), !dbg !5845, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7086, 12} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i64.i32($i18);
  // WARNING: %26 = trunc i64 %25 to i32, !dbg !5848, !verifier.code !5806
  call {:cexpr "devnum"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7087, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $sgt.i32($i19, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7087, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7088, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock(map_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7089, 14} true;
  assume {:verifier.code 0} true;
  call $i21 := find_overflow_devnum();
  // WARNING: %29 = call i32 @find_overflow_devnum(), !dbg !5856, !verifier.code !5806
  call {:cexpr "devnum"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7090, 16} true;
  assume {:verifier.code 0} true;
  $i22 := $slt.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7090, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7100, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p8, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7100, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7101, 28} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i32($i19, 242221248);
  // WARNING: %41 = add nsw i32 %26, 242221248, !dbg !5876, !verifier.code !5806
  call {:cexpr "base"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7102, 13} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7102, 5} true;
  assume {:verifier.code 0} true;
  call set_bit($i32, dev_map);
  assume {:verifier.code 0} true;
  $i28, $i29 := $i19, $i31;
  goto $bb14;
$bb10:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7091, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7150, 26} true;
  assume {:verifier.code 0} true;
  $p91 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7150, 3} true;
  assume {:verifier.code 0} true;
  call $i92 := kref_put($p91, ib_uverbs_release_dev);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7151, 37} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7151, 3} true;
  assume {:verifier.code 0} true;
  call wait_for_completion($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7152, 9} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7152, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7153, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7095, 5} true;
  assume {:verifier.code 0} true;
  call spin_lock(map_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7096, 33} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i21, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7096, 17} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p8, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7096, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7097, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, overflow_maj);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7097, 27} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i21, $i25);
  // WARNING: %37 = add i32 %29, %36, !dbg !5867, !verifier.code !5806
  call {:cexpr "base"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7098, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7098, 5} true;
  assume {:verifier.code 0} true;
  call set_bit($i27, overflow_map);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7099, 3} true;
  assume {:verifier.code 0} true;
  $i28, $i29 := $i21, $i26;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7104, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(map_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7105, 15} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p8, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7105, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p33, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7106, 42} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 400);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7106, 42} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7106, 15} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7106, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7107, 33} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p8, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7107, 3} true;
  assume {:verifier.code 0} true;
  call ldv_cdev_init_9($p37, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7108, 15} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p8, 128);
  $p39 := $add.ref($add.ref($p8, 128), 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7108, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p39, __this_module);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7109, 50} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 496);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7109, 50} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7109, 26} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7109, 55} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7109, 26} true;
  assume {:verifier.code 0} true;
  havoc $p44;
  assume ((($i43 == 1) ==> ($p44 == uverbs_mmap_fops)) && (($i43 != 1) ==> ($p44 == uverbs_fops)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7109, 15} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p8, 128);
  $p46 := $add.ref($add.ref($p8, 128), 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7109, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7111, 34} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p8, 128);
  $p48 := $add.ref($p8, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7111, 69} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p8, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7111, 69} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7111, 3} true;
  assume {:verifier.code 0} true;
  call $i51 := kobject_set_name.ref.ref.i32($p48, .str.26, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7112, 36} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p8, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7112, 13} true;
  assume {:verifier.code 0} true;
  call $i53 := cdev_add($p52, $i29, 1);
  // WARNING: %64 = call i32 @cdev_add(%struct.cdev* %63, i32 %.0, i32 1), !dbg !5898, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7113, 15} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7113, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7114, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7143, 33} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p8, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7143, 3} true;
  assume {:verifier.code 0} true;
  call ldv_cdev_del_10($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7144, 19} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p8, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7144, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7144, 26} true;
  assume {:verifier.code 0} true;
  $i88 := $sle.i32($i87, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7144, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb29, $bb30;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 35} true;
  assume {:verifier.code 0} true;
  $p55 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 57} true;
  assume {:verifier.code 0} true;
  $p56 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 57} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 81} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p8, 128);
  $p59 := $add.ref($add.ref($p8, 128), 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 86} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7119, 35} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7119, 79} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p8, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7119, 79} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 21} true;
  assume {:verifier.code 0} true;
  call $p64 := device_create.ref.ref.i32.ref.ref.i32($p55, $p57, $i60, $p61, .str.26, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 15} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p8, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7118, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p65, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7120, 48} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p8, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7120, 48} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7120, 20} true;
  assume {:verifier.code 0} true;
  $p68 := $bitcast.ref.ref($p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7120, 13} true;
  assume {:verifier.code 0} true;
  call $i69 := IS_ERR($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7120, 11} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i1.i8($i69);
  // WARNING: %84 = zext i1 %83 to i8, !dbg !5918, !verifier.code !5806
  call {:cexpr "tmp___2"} boogie_si_record_i8($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7121, 13} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i8.i1($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7121, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7122, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb20:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7126, 44} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p8, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7126, 44} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7126, 13} true;
  assume {:verifier.code 0} true;
  call $i74 := device_create_file($p73, dev_attr_ibdev);
  // WARNING: %91 = call i32 @device_create_file(%struct.device* %90, %struct.device_attribute* @dev_attr_ibdev), !dbg !5927, !verifier.code !5806
  call {:cexpr "tmp___3"} boogie_si_record_i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7127, 15} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7127, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7128, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7141, 18} true;
  assume {:verifier.code 0} true;
  $p81 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7141, 44} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p8, 128);
  $p83 := $add.ref($add.ref($p8, 128), 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7141, 49} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i32($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7141, 3} true;
  assume {:verifier.code 0} true;
  call device_destroy($p81, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7141, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7132, 44} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p8, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7132, 44} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7132, 13} true;
  assume {:verifier.code 0} true;
  call $i78 := device_create_file($p77, dev_attr_abi_version);
  // WARNING: %98 = call i32 @device_create_file(%struct.device* %97, %struct.device_attribute* @dev_attr_abi_version), !dbg !5936, !verifier.code !5806
  call {:cexpr "tmp___4"} boogie_si_record_i32($i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7133, 15} true;
  assume {:verifier.code 0} true;
  $i79 := $ne.i32($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7133, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i79 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7134, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb27:
  assume !(($i79 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7138, 47} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7138, 3} true;
  assume {:verifier.code 0} true;
  call ib_set_client_data($p0, uverbs_client, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7139, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb29:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7145, 15} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7145, 5} true;
  assume {:verifier.code 0} true;
  call clear_bit($i89, dev_map);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7146, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i88 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7147, 15} true;
  assume {:verifier.code 0} true;
  $i90 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7147, 5} true;
  assume {:verifier.code 0} true;
  call clear_bit($i90, overflow_map);
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7144, 29} true;
  assume {:verifier.code 0} true;
  goto $bb12;
}
const ib_uverbs_remove_one: ref;
axiom (ib_uverbs_remove_one == $sub.ref(0, 392919));
procedure  ib_uverbs_remove_one($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $i21: i64;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7162, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ib_get_client_data($p0, uverbs_client);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7163, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7164, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7165, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7182, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7169, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7169, 31} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7169, 3} true;
  assume {:verifier.code 0} true;
  call dev_set_drvdata($p6, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7170, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7170, 44} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 128);
  $p9 := $add.ref($add.ref($p2, 128), 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7170, 49} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7170, 3} true;
  assume {:verifier.code 0} true;
  call device_destroy($p7, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7171, 33} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7171, 3} true;
  assume {:verifier.code 0} true;
  call ldv_cdev_del_11($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7172, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7172, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7172, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $sle.i32($i13, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7172, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7173, 34} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7173, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7173, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7173, 5} true;
  assume {:verifier.code 0} true;
  call clear_bit($i17, dev_map);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7174, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7175, 35} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7175, 35} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7175, 42} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i19, $sub.i32(0, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7175, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7175, 5} true;
  assume {:verifier.code 0} true;
  call clear_bit($i21, overflow_map);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7177, 26} true;
  assume {:verifier.code 0} true;
  $p22 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7177, 3} true;
  assume {:verifier.code 0} true;
  call $i23 := kref_put($p22, ib_uverbs_release_dev);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7178, 37} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7178, 3} true;
  assume {:verifier.code 0} true;
  call wait_for_completion($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7179, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7179, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7180, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const ib_get_client_data: ref;
axiom (ib_get_client_data == $sub.ref(0, 393951));
procedure  ib_get_client_data($p0: ref, $p1: ref)
  returns ($r: ref);
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 394983));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5599, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5599, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5600, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const device_destroy: ref;
axiom (device_destroy == $sub.ref(0, 396015));
procedure  device_destroy($p0: ref, $i1: i32);
const ldv_cdev_del_11: ref;
axiom (ldv_cdev_del_11 == $sub.ref(0, 397047));
procedure  ldv_cdev_del_11($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7883, 3} true;
  assume {:verifier.code 0} true;
  call cdev_del($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7884, 24} true;
  assume {:verifier.code 0} true;
  $M.94 := 0;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7885, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const clear_bit: ref;
axiom (clear_bit == $sub.ref(0, 398079));
procedure  clear_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.35(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5102, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const wait_for_completion: ref;
axiom (wait_for_completion == $sub.ref(0, 399111));
procedure  wait_for_completion($p0: ref);
const cdev_del: ref;
axiom (cdev_del == $sub.ref(0, 400143));
procedure  cdev_del($p0: ref);
const init_completion: ref;
axiom (init_completion == $sub.ref(0, 401175));
procedure  init_completion($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5306, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5306, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5307, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5307, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p3, .str.27, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5308, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const find_first_zero_bit: ref;
axiom (find_first_zero_bit == $sub.ref(0, 402207));
procedure  find_first_zero_bit($p0: ref, $i1: i64)
  returns ($r: i64);
const find_overflow_devnum: ref;
axiom (find_overflow_devnum == $sub.ref(0, 403239));
procedure  find_overflow_devnum()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i6: i64;
  var $i7: i32;
  var $i8: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7030, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $load.i32($M.0, overflow_maj);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7030, 20} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7030, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7031, 11} true;
  assume {:verifier.code 0} true;
  call $i2 := alloc_chrdev_region(overflow_maj, 0, 32, .str.29);
  // WARNING: %4 = call i32 @alloc_chrdev_region(i32* @overflow_maj, i32 0, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0)), !dbg !5812, !verifier.code !5809
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7032, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7032, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7033, 7} true;
  assume {:verifier.code 0} true;
  call $i4 := printk.ref(.str.30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7034, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i2;
  goto $bb5;
$bb4:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7050, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7038, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7041, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := find_first_zero_bit(overflow_map, 32);
  // WARNING: %12 = call i64 @find_first_zero_bit(i64* getelementptr inbounds ([1 x i64], [1 x i64]* @overflow_map, i32 0, i32 0), i64 32), !dbg !5824, !verifier.code !5809
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7042, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i32($i6);
  // WARNING: %13 = trunc i64 %12 to i32, !dbg !5827, !verifier.code !5809
  call {:cexpr "ret"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7043, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $sgt.i32($i7, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7043, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7044, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 1);
  goto $bb5;
$bb9:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7048, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i7;
  goto $bb5;
}
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 404271));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.35(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5093, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_cdev_init_9: ref;
axiom (ldv_cdev_init_9 == $sub.ref(0, 405303));
procedure  ldv_cdev_init_9($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  call cdev_init($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7863, 24} true;
  assume {:verifier.code 0} true;
  $M.94 := 1;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7864, 3} true;
  assume {:verifier.code 0} true;
  call ldv_file_operations_6();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7865, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kobject_set_name: ref;
axiom (kobject_set_name == $sub.ref(0, 406335));
procedure  kobject_set_name.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const cdev_add: ref;
axiom (cdev_add == $sub.ref(0, 407367));
procedure  cdev_add($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32);
const device_create: ref;
axiom (device_create == $sub.ref(0, 408399));
procedure  device_create.ref.ref.i32.ref.ref.i32($p0: ref, $p1: ref, $i2: i32, $p3: ref, $p4: ref, p.5: i32)
  returns ($r: ref);
const device_create_file: ref;
axiom (device_create_file == $sub.ref(0, 409431));
procedure  device_create_file($p0: ref, $p1: ref)
  returns ($r: i32);
const ib_set_client_data: ref;
axiom (ib_set_client_data == $sub.ref(0, 410463));
procedure  ib_set_client_data($p0: ref, $p1: ref, $p2: ref);
const ldv_cdev_del_10: ref;
axiom (ldv_cdev_del_10 == $sub.ref(0, 411495));
procedure  ldv_cdev_del_10($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7873, 3} true;
  assume {:verifier.code 0} true;
  call cdev_del($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7874, 24} true;
  assume {:verifier.code 0} true;
  $M.94 := 0;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7875, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const cdev_init: ref;
axiom (cdev_init == $sub.ref(0, 412527));
procedure  cdev_init($p0: ref, $p1: ref);
const ldv_file_operations_6: ref;
axiom (ldv_file_operations_6 == $sub.ref(0, 413559));
procedure  ldv_file_operations_6()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7299, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_init_zalloc(1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7300, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7300, 22} true;
  assume {:verifier.code 0} true;
  $M.95 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7301, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_init_zalloc(504);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7302, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7302, 22} true;
  assume {:verifier.code 0} true;
  $M.96 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7303, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_init_zalloc: ref;
axiom (ldv_init_zalloc == $sub.ref(0, 414591));
procedure  ldv_init_zalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5476, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5478, 21} true;
  assume {:verifier.code 1} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5478, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5478, 39} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5478, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5479, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const alloc_chrdev_region: ref;
axiom (alloc_chrdev_region == $sub.ref(0, 415623));
procedure  alloc_chrdev_region($p0: ref, $i1: i32, $i2: i32, $p3: ref)
  returns ($r: i32);
const show_class_attr_string: ref;
axiom (show_class_attr_string == $sub.ref(0, 416655));
procedure  show_class_attr_string($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64);
const malloc: ref;
axiom (malloc == $sub.ref(0, 417687));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const ldv_memset: ref;
axiom (ldv_memset == $sub.ref(0, 418719));
procedure  ldv_memset($p0: ref, $i1: i32, $i2: i64)
  returns ($r: ref)
{
  var $i3: i8;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !17380, metadata !5829), !dbg !17381, !verifier.code !5831
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !17382, metadata !5829), !dbg !17383, !verifier.code !5831
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5487, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5487, 9} true;
  assume {:verifier.code 0} true;
  call $M.97 := $memset.i8($M.97, $p0, $i3, $i2, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5488, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const ldv_initialize_ib_client_4: ref;
axiom (ldv_initialize_ib_client_4 == $sub.ref(0, 419751));
procedure  ldv_initialize_ib_client_4()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7324, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_init_zalloc(2488);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7325, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7325, 24} true;
  assume {:verifier.code 0} true;
  $M.98 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7326, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 420783));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $i63: i1;
  var $i64: i1;
  var $i65: i1;
  var $i66: i1;
  var $i67: i1;
  var $i68: i1;
  var $i69: i1;
  var $i70: i1;
  var $i71: i32;
  var $i72: i1;
  var $i73: i32;
  var $i74: i1;
  var $i75: i1;
  var $i76: i1;
  var $i77: i1;
  var $i78: i1;
  var $i79: i32;
  var $i80: i1;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i64;
  var $i88: i64;
  var $i89: i32;
  var $i90: i1;
  var $p91: ref;
  var $p92: ref;
  var $i93: i32;
  var $i94: i32;
  var $i95: i32;
  var $i96: i32;
  var $i97: i1;
  var $p98: ref;
  var $i99: i64;
  var $i100: i32;
  var $i101: i64;
  var $i102: i32;
  var $i103: i1;
  var $p104: ref;
  var $p105: ref;
  var $i106: i32;
  var $i107: i32;
  var $i108: i1;
  var $i109: i32;
  var $i110: i32;
  var $i111: i32;
  var $i112: i1;
  var $i113: i32;
  var $i114: i1;
  var $i115: i32;
  var $i116: i1;
  var $i117: i64;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i1;
  var $i122: i1;
  var $i123: i1;
  var $i124: i1;
  var $i125: i1;
  var $i126: i1;
  var $i127: i1;
  var $i128: i32;
  var $i129: i1;
  var $p130: ref;
  var $p131: ref;
  var $i132: i32;
  var $i133: i32;
  var $i134: i32;
  var $i135: i32;
  var $i136: i1;
  var $p137: ref;
  var $i138: i64;
  var $i139: i64;
  var $i140: i32;
  var $i141: i1;
  var $p142: ref;
  var $i143: i32;
  var $i144: i32;
  var $i145: i1;
  var $p146: ref;
  var $i147: i32;
  var $i148: i32;
  var $i149: i1;
  var $i150: i32;
  var $p151: ref;
  var $i152: i32;
  var $i153: i32;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $p157: ref;
  var $i158: i32;
  var $i159: i32;
  var $i160: i32;
  var $i161: i1;
  var $p162: ref;
  var $i163: i64;
  var $i164: i32;
  var $i165: i64;
  var $i166: i32;
  var $i167: i1;
  var $i168: i32;
  var $i169: i32;
  var $i170: i1;
  var $i171: i32;
  var $i172: i32;
  var $i173: i32;
  var $i174: i1;
  var $i175: i32;
  var $i176: i1;
  var $i177: i32;
  var $i178: i1;
  var $i179: i64;
  var $i180: i32;
  var $i181: i1;
  var $i182: i32;
  var $i183: i1;
  var $i184: i32;
  var $i185: i1;
  var $i186: i64;
  var $i187: i32;
  var $i188: i1;
  var $i189: i32;
  var $i190: i1;
  var $i191: i1;
  var $i192: i1;
  var $i193: i32;
  var $i194: i1;
  var $p195: ref;
  var $i196: i32;
  var $i197: i32;
  var $i198: i32;
  var $i199: i1;
  var $p200: ref;
  var $i201: i32;
  var $i202: i32;
  var $i203: i32;
  var $i204: i1;
  var $i205: i32;
  var $i206: i1;
  var $i207: i1;
  var $i208: i1;
  var $i209: i32;
  var $i210: i1;
  var $i211: i32;
  var $i212: i1;
  var $i213: i32;
  var $i214: i1;
  var $i215: i32;
  var $i216: i32;
  var $i217: i1;
  var $i218: i32;
  var $i219: i1;
  var $i220: i32;
  var $i221: i1;
  var $i222: i32;
  var $i223: i1;
  var $i224: i1;
  var $i225: i1;
  var $i226: i1;
  var $i227: i1;
  var $i228: i1;
  var $i229: i32;
  var $i230: i1;
  var $p231: ref;
  var $i232: i32;
  var $i233: i32;
  var $i234: i1;
  var $p235: ref;
  var $i236: i32;
  var $i237: i32;
  var $i238: i1;
  var $p239: ref;
  var $i240: i64;
  var $i241: i64;
  var $i242: i32;
  var $i243: i1;
  var $p244: ref;
  var $i245: i64;
  var $i246: i64;
  var $i247: i32;
  var $i248: i1;
  var $p249: ref;
  var $p250: ref;
  var $i251: i32;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $i255: i1;
  var $p256: ref;
  var $i257: i64;
  var $i258: i32;
  var $i259: i64;
  var $i260: i32;
  var $i261: i1;
  var $p262: ref;
  var $p263: ref;
  var $i264: i32;
  var $i265: i32;
  var $i266: i1;
  var $i267: i32;
  var $i268: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7387, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p10 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7387, 9} true;
  assume {:verifier.code 0} true;
  call $p11 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7389, 13} true;
  assume {:verifier.code 0} true;
  call $p12 := ldv_init_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7390, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7391, 13} true;
  assume {:verifier.code 0} true;
  call $p14 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7392, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7393, 13} true;
  assume {:verifier.code 0} true;
  call $p16 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7394, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7395, 13} true;
  assume {:verifier.code 0} true;
  call $p18 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7397, 13} true;
  assume {:verifier.code 0} true;
  call $p19 := ldv_init_zalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7398, 14} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7399, 13} true;
  assume {:verifier.code 0} true;
  call $p21 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7401, 13} true;
  assume {:verifier.code 0} true;
  call $p22 := ldv_init_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7402, 14} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7403, 13} true;
  assume {:verifier.code 0} true;
  call $p24 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7404, 14} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7405, 13} true;
  assume {:verifier.code 0} true;
  call $p26 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7407, 13} true;
  assume {:verifier.code 0} true;
  call $p27 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7408, 14} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7409, 14} true;
  assume {:verifier.code 0} true;
  call $p29 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7410, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7411, 14} true;
  assume {:verifier.code 0} true;
  call $p31 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7413, 14} true;
  assume {:verifier.code 0} true;
  call $p32 := ldv_init_zalloc(120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7414, 14} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7415, 14} true;
  assume {:verifier.code 0} true;
  call $p34 := ldv_init_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7416, 14} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7417, 14} true;
  assume {:verifier.code 0} true;
  call $p36 := ldv_init_zalloc(184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7418, 14} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7419, 14} true;
  assume {:verifier.code 0} true;
  call $p38 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7421, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7422, 14} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7422, 3} true;
  assume {:verifier.code 0} true;
  call $p40 := ldv_memset($p39, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7423, 14} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7423, 3} true;
  assume {:verifier.code 0} true;
  call $p42 := ldv_memset($p41, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7424, 14} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7424, 3} true;
  assume {:verifier.code 0} true;
  call $p44 := ldv_memset($p43, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7425, 14} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7425, 3} true;
  assume {:verifier.code 0} true;
  call $p46 := ldv_memset($p45, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7426, 14} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7426, 3} true;
  assume {:verifier.code 0} true;
  call $p48 := ldv_memset($p47, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7427, 14} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7427, 3} true;
  assume {:verifier.code 0} true;
  call $p50 := ldv_memset($p49, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7428, 14} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7428, 3} true;
  assume {:verifier.code 0} true;
  call $p52 := ldv_memset($p51, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7429, 14} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7429, 3} true;
  assume {:verifier.code 0} true;
  call $p54 := ldv_memset($p53, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7430, 14} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7430, 3} true;
  assume {:verifier.code 0} true;
  call $p56 := ldv_memset($p55, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7431, 14} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7431, 3} true;
  assume {:verifier.code 0} true;
  call $p58 := ldv_memset($p57, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7432, 14} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7432, 3} true;
  assume {:verifier.code 0} true;
  call $p60 := ldv_memset($p59, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7433, 24} true;
  assume {:verifier.code 0} true;
  $M.94 := 0;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7434, 24} true;
  assume {:verifier.code 0} true;
  $M.99 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7435, 24} true;
  assume {:verifier.code 0} true;
  $M.100 := 0;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7436, 24} true;
  assume {:verifier.code 0} true;
  $M.101 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7437, 24} true;
  assume {:verifier.code 0} true;
  $M.102 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7438, 24} true;
  assume {:verifier.code 0} true;
  $M.103 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7439, 11} true;
  assume {:verifier.code 0} true;
  $M.104 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7440, 24} true;
  assume {:verifier.code 0} true;
  $M.105 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7441, 24} true;
  assume {:verifier.code 0} true;
  $M.106 := 0;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7441, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7443, 14} true;
  assume {:verifier.code 1} true;
  call $i61 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i61);
  // WARNING: %63 = call i32 @__VERIFIER_nondet_int(), !dbg !5960, !verifier.code !5961
  call {:cexpr "tmp___16"} boogie_si_record_i32($i61);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i62 := $slt.i32($i61, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i62 == 1);
  assume {:verifier.code 0} true;
  $i67 := $slt.i32($i61, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb14, $bb15;
$bb4:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i61, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i63 == 1);
  assume {:verifier.code 0} true;
  $i66 := $slt.i32($i61, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb12, $bb13;
$bb6:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  $i64 := $slt.i32($i61, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7670, 7} true;
  assume {:verifier.code 0} true;
  $i203 := $M.105;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7670, 28} true;
  assume {:verifier.code 0} true;
  $i204 := $ne.i32($i203, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7670, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i204} true;
  goto $bb164, $bb165;
$bb8:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i61, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7714, 7} true;
  assume {:verifier.code 0} true;
  $i220 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7714, 28} true;
  assume {:verifier.code 0} true;
  $i221 := $ne.i32($i220, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7714, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb194, $bb195;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb238;
$bb12:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7620, 7} true;
  assume {:verifier.code 0} true;
  $i180 := $M.102;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7620, 28} true;
  assume {:verifier.code 0} true;
  $i181 := $ne.i32($i180, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7620, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i181} true;
  goto $bb132, $bb133;
$bb13:
  assume !(($i66 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7640, 7} true;
  assume {:verifier.code 0} true;
  $i187 := $M.103;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7640, 28} true;
  assume {:verifier.code 0} true;
  $i188 := $ne.i32($i187, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7640, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i188} true;
  goto $bb144, $bb145;
$bb14:
  assume ($i67 == 1);
  assume {:verifier.code 0} true;
  $i69 := $slt.i32($i61, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb18, $bb19;
$bb15:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i61, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  $i118 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7522, 28} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.i32($i118, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb71, $bb72;
$bb17:
  assume !(($i68 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7600, 7} true;
  assume {:verifier.code 0} true;
  $i173 := $M.101;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7600, 28} true;
  assume {:verifier.code 0} true;
  $i174 := $ne.i32($i173, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7600, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb120, $bb121;
$bb18:
  assume ($i69 == 1);
  assume {:verifier.code 0} true;
  $i70 := $eq.i32($i61, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb20, $bb21;
$bb19:
  assume !(($i69 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7502, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $M.99;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7502, 28} true;
  assume {:verifier.code 0} true;
  $i112 := $ne.i32($i111, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7502, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb59, $bb60;
$bb20:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7446, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $M.94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7446, 28} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7446, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb22, $bb23;
$bb21:
  assume {:verifier.code 0} true;
  assume !(($i70 == 1));
  goto $bb11;
$bb22:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7447, 16} true;
  assume {:verifier.code 1} true;
  call $i73 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i73);
  // WARNING: %68 = call i32 @__VERIFIER_nondet_int(), !dbg !5969, !verifier.code !5961
  call {:cexpr "tmp___17"} boogie_si_record_i32($i73);
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb57;
$bb24:
  assume {:verifier.code 0} true;
  $i74 := $slt.i32($i73, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i74 == 1);
  assume {:verifier.code 0} true;
  $i77 := $slt.i32($i73, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb32, $bb33;
$bb26:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  $i75 := $slt.i32($i73, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7473, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $M.94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7473, 30} true;
  assume {:verifier.code 0} true;
  $i97 := $eq.i32($i96, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7473, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb46, $bb47;
$bb28:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  $i76 := $eq.i32($i73, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7481, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $M.94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7481, 30} true;
  assume {:verifier.code 0} true;
  $i103 := $eq.i32($i102, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7481, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb49, $bb50;
$bb30:
  assume {:verifier.code 0} true;
  assume !(($i76 == 1));
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb55;
$bb32:
  assume ($i77 == 1);
  assume {:verifier.code 0} true;
  $i78 := $eq.i32($i73, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb34, $bb35;
$bb33:
  assume !(($i77 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7464, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $M.94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7464, 30} true;
  assume {:verifier.code 0} true;
  $i90 := $eq.i32($i89, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7464, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb43, $bb44;
$bb34:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7450, 9} true;
  assume {:verifier.code 0} true;
  $i79 := $M.94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7450, 30} true;
  assume {:verifier.code 0} true;
  $i80 := $eq.i32($i79, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7450, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb36, $bb37;
$bb35:
  assume {:verifier.code 0} true;
  assume !(($i78 == 1));
  goto $bb31;
$bb36:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7451, 23} true;
  assume {:verifier.code 0} true;
  $p81 := $M.96;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7451, 68} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i64($M.97, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7451, 7} true;
  assume {:verifier.code 0} true;
  call $i83 := ib_uverbs_write($p81, $p11, $i82, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7452, 28} true;
  assume {:verifier.code 0} true;
  $M.94 := 1;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7453, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7456, 9} true;
  assume {:verifier.code 0} true;
  $i84 := $M.94;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7456, 30} true;
  assume {:verifier.code 0} true;
  $i85 := $eq.i32($i84, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7456, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7457, 23} true;
  assume {:verifier.code 0} true;
  $p86 := $M.96;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7457, 68} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i64($M.97, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7457, 7} true;
  assume {:verifier.code 0} true;
  call $i88 := ib_uverbs_write($p86, $p11, $i87, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7458, 28} true;
  assume {:verifier.code 0} true;
  $M.94 := 2;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7459, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7462, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7497, 3} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb43:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7465, 23} true;
  assume {:verifier.code 0} true;
  $p91 := $M.95;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7465, 43} true;
  assume {:verifier.code 0} true;
  $p92 := $M.96;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7465, 7} true;
  assume {:verifier.code 0} true;
  call $i93 := ib_uverbs_close($p91, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7466, 28} true;
  assume {:verifier.code 0} true;
  $M.94 := 1;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7467, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7467, 25} true;
  assume {:verifier.code 0} true;
  $i95 := $sub.i32($i94, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7467, 15} true;
  assume {:verifier.code 0} true;
  $M.104 := $i95;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7468, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7471, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb46:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7474, 17} true;
  assume {:verifier.code 0} true;
  $p98 := $M.96;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7474, 37} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i64($M.97, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7474, 46} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i32($M.97, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7474, 7} true;
  assume {:verifier.code 0} true;
  call $i101 := no_llseek($p98, $i99, $i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7475, 28} true;
  assume {:verifier.code 0} true;
  $M.94 := 2;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7476, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume !(($i97 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7479, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb49:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7482, 37} true;
  assume {:verifier.code 0} true;
  $p104 := $M.95;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7482, 57} true;
  assume {:verifier.code 0} true;
  $p105 := $M.96;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7482, 22} true;
  assume {:verifier.code 0} true;
  call $i106 := ib_uverbs_open($p104, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7482, 20} true;
  assume {:verifier.code 0} true;
  $M.107 := $i106;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7483, 11} true;
  assume {:verifier.code 0} true;
  $i107 := $M.107;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7483, 24} true;
  assume {:verifier.code 0} true;
  $i108 := $eq.i32($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7483, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb51, $bb52;
$bb50:
  assume !(($i103 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb51:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7484, 30} true;
  assume {:verifier.code 0} true;
  $M.94 := 2;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7485, 19} true;
  assume {:verifier.code 0} true;
  $i109 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7485, 27} true;
  assume {:verifier.code 0} true;
  $i110 := $add.i32($i109, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7485, 17} true;
  assume {:verifier.code 0} true;
  $M.104 := $i110;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7486, 7} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7489, 5} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7492, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7494, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7495, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7495, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7500, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7789, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb59:
  assume ($i112 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7503, 16} true;
  assume {:verifier.code 1} true;
  call $i113 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i113);
  // WARNING: %132 = call i32 @__VERIFIER_nondet_int(), !dbg !6052, !verifier.code !5961
  call {:cexpr "tmp___18"} boogie_si_record_i32($i113);
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb61:
  assume {:verifier.code 0} true;
  $i114 := $eq.i32($i113, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7506, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $M.99;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7506, 30} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i32($i115, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7506, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb64, $bb65;
$bb63:
  assume !(($i114 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb64:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7507, 7} true;
  assume {:verifier.code 0} true;
  call $i117 := show_ibdev($p17, $p15, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7508, 28} true;
  assume {:verifier.code 0} true;
  $M.99 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7509, 5} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7512, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7517, 3} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7514, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7515, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7515, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7520, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb71:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7523, 16} true;
  assume {:verifier.code 1} true;
  call $i120 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i120);
  // WARNING: %149 = call i32 @__VERIFIER_nondet_int(), !dbg !6076, !verifier.code !5961
  call {:cexpr "tmp___19"} boogie_si_record_i32($i120);
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb119;
$bb73:
  assume {:verifier.code 0} true;
  $i121 := $slt.i32($i120, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i121 == 1);
  assume {:verifier.code 0} true;
  $i125 := $slt.i32($i120, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb83, $bb84;
$bb75:
  assume !(($i121 == 1));
  assume {:verifier.code 0} true;
  $i122 := $slt.i32($i120, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb76, $bb77;
$bb76:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7557, 9} true;
  assume {:verifier.code 0} true;
  $i148 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7557, 30} true;
  assume {:verifier.code 0} true;
  $i149 := $eq.i32($i148, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7557, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb102, $bb103;
$bb77:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i120, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i123 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7571, 9} true;
  assume {:verifier.code 0} true;
  $i160 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7571, 30} true;
  assume {:verifier.code 0} true;
  $i161 := $eq.i32($i160, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7571, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb108, $bb109;
$bb79:
  assume !(($i123 == 1));
  assume {:verifier.code 0} true;
  $i124 := $eq.i32($i120, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i124 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7579, 9} true;
  assume {:verifier.code 0} true;
  $i166 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7579, 30} true;
  assume {:verifier.code 0} true;
  $i167 := $eq.i32($i166, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7579, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb111, $bb112;
$bb81:
  assume {:verifier.code 0} true;
  assume !(($i124 == 1));
  goto $bb82;
$bb82:
  assume {:verifier.code 0} true;
  goto $bb117;
$bb83:
  assume ($i125 == 1);
  assume {:verifier.code 0} true;
  $i127 := $eq.i32($i120, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb87, $bb88;
$bb84:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i120, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb85, $bb86;
$bb85:
  assume ($i126 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7535, 9} true;
  assume {:verifier.code 0} true;
  $i135 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7535, 30} true;
  assume {:verifier.code 0} true;
  $i136 := $eq.i32($i135, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7535, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb93, $bb94;
$bb86:
  assume !(($i126 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7543, 9} true;
  assume {:verifier.code 0} true;
  $i140 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7543, 30} true;
  assume {:verifier.code 0} true;
  $i141 := $eq.i32($i140, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7543, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb96, $bb97;
$bb87:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7526, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7526, 30} true;
  assume {:verifier.code 0} true;
  $i129 := $eq.i32($i128, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7526, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb89, $bb90;
$bb88:
  assume {:verifier.code 0} true;
  assume !(($i127 == 1));
  goto $bb82;
$bb89:
  assume ($i129 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7527, 29} true;
  assume {:verifier.code 0} true;
  $p130 := $M.108;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7527, 55} true;
  assume {:verifier.code 0} true;
  $p131 := $M.109;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7527, 7} true;
  assume {:verifier.code 0} true;
  call $i132 := ib_uverbs_event_close($p130, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7528, 28} true;
  assume {:verifier.code 0} true;
  $M.100 := 1;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7529, 17} true;
  assume {:verifier.code 0} true;
  $i133 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7529, 25} true;
  assume {:verifier.code 0} true;
  $i134 := $sub.i32($i133, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7529, 15} true;
  assume {:verifier.code 0} true;
  $M.104 := $i134;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7530, 5} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume !(($i129 == 1));
  assume {:verifier.code 0} true;
  goto $bb91;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7533, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7595, 3} true;
  assume {:verifier.code 0} true;
  goto $bb119;
$bb93:
  assume ($i136 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7536, 28} true;
  assume {:verifier.code 0} true;
  $p137 := $M.109;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7536, 64} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i64($M.97, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7536, 7} true;
  assume {:verifier.code 0} true;
  call $i139 := ib_uverbs_event_read($p137, $p21, $i138, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7537, 28} true;
  assume {:verifier.code 0} true;
  $M.100 := 2;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7538, 5} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb94:
  assume !(($i136 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7541, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb96:
  assume ($i141 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7544, 28} true;
  assume {:verifier.code 0} true;
  $p142 := $M.109;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7544, 7} true;
  assume {:verifier.code 0} true;
  call $i143 := ib_uverbs_event_poll($p142, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7545, 28} true;
  assume {:verifier.code 0} true;
  $M.100 := 1;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7546, 5} true;
  assume {:verifier.code 0} true;
  goto $bb98;
$bb97:
  assume !(($i141 == 1));
  assume {:verifier.code 0} true;
  goto $bb98;
$bb98:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7549, 9} true;
  assume {:verifier.code 0} true;
  $i144 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7549, 30} true;
  assume {:verifier.code 0} true;
  $i145 := $eq.i32($i144, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7549, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb99, $bb100;
$bb99:
  assume ($i145 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7550, 28} true;
  assume {:verifier.code 0} true;
  $p146 := $M.109;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7550, 7} true;
  assume {:verifier.code 0} true;
  call $i147 := ib_uverbs_event_poll($p146, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7551, 28} true;
  assume {:verifier.code 0} true;
  $M.100 := 2;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7552, 5} true;
  assume {:verifier.code 0} true;
  goto $bb101;
$bb100:
  assume !(($i145 == 1));
  assume {:verifier.code 0} true;
  goto $bb101;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7555, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb102:
  assume ($i149 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7558, 30} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i32($M.97, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7558, 40} true;
  assume {:verifier.code 0} true;
  $p151 := $M.109;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7558, 66} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i32($M.97, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7558, 7} true;
  assume {:verifier.code 0} true;
  call $i153 := ib_uverbs_event_fasync($i150, $p151, $i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7559, 28} true;
  assume {:verifier.code 0} true;
  $M.100 := 1;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7560, 5} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb103:
  assume !(($i149 == 1));
  assume {:verifier.code 0} true;
  goto $bb104;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7563, 9} true;
  assume {:verifier.code 0} true;
  $i154 := $M.100;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7563, 30} true;
  assume {:verifier.code 0} true;
  $i155 := $eq.i32($i154, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7563, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb105, $bb106;
$bb105:
  assume ($i155 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7564, 30} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.97, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7564, 40} true;
  assume {:verifier.code 0} true;
  $p157 := $M.109;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7564, 66} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i32($M.97, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7564, 7} true;
  assume {:verifier.code 0} true;
  call $i159 := ib_uverbs_event_fasync($i156, $p157, $i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7565, 28} true;
  assume {:verifier.code 0} true;
  $M.100 := 2;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7566, 5} true;
  assume {:verifier.code 0} true;
  goto $bb107;
$bb106:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  goto $bb107;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7569, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb108:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7572, 17} true;
  assume {:verifier.code 0} true;
  $p162 := $M.109;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7572, 43} true;
  assume {:verifier.code 0} true;
  $i163 := $load.i64($M.97, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7572, 52} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i32($M.97, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7572, 7} true;
  assume {:verifier.code 0} true;
  call $i165 := no_llseek($p162, $i163, $i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7573, 28} true;
  assume {:verifier.code 0} true;
  $M.100 := 2;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7574, 5} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb109:
  assume !(($i161 == 1));
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7577, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb111:
  assume ($i167 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7580, 22} true;
  assume {:verifier.code 0} true;
  call $i168 := ldv_open_7();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7580, 20} true;
  assume {:verifier.code 0} true;
  $M.110 := $i168;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7581, 11} true;
  assume {:verifier.code 0} true;
  $i169 := $M.110;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7581, 24} true;
  assume {:verifier.code 0} true;
  $i170 := $eq.i32($i169, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7581, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb113, $bb114;
$bb112:
  assume !(($i167 == 1));
  assume {:verifier.code 0} true;
  goto $bb116;
$bb113:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7582, 30} true;
  assume {:verifier.code 0} true;
  $M.100 := 2;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7583, 19} true;
  assume {:verifier.code 0} true;
  $i171 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7583, 27} true;
  assume {:verifier.code 0} true;
  $i172 := $add.i32($i171, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7583, 17} true;
  assume {:verifier.code 0} true;
  $M.104 := $i172;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7584, 7} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb114:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  goto $bb115;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7587, 5} true;
  assume {:verifier.code 0} true;
  goto $bb116;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7590, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb117:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7592, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7593, 5} true;
  assume {:verifier.code 0} true;
  goto $bb118;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7593, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb119:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7598, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb120:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7601, 16} true;
  assume {:verifier.code 1} true;
  call $i175 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i175);
  // WARNING: %237 = call i32 @__VERIFIER_nondet_int(), !dbg !6189, !verifier.code !5961
  call {:cexpr "tmp___20"} boogie_si_record_i32($i175);
  assume {:verifier.code 0} true;
  goto $bb122;
$bb121:
  assume !(($i174 == 1));
  assume {:verifier.code 0} true;
  goto $bb131;
$bb122:
  assume {:verifier.code 0} true;
  $i176 := $eq.i32($i175, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i176} true;
  goto $bb123, $bb124;
$bb123:
  assume ($i176 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7604, 9} true;
  assume {:verifier.code 0} true;
  $i177 := $M.101;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7604, 30} true;
  assume {:verifier.code 0} true;
  $i178 := $eq.i32($i177, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7604, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i178} true;
  goto $bb125, $bb126;
$bb124:
  assume !(($i176 == 1));
  assume {:verifier.code 0} true;
  goto $bb129;
$bb125:
  assume ($i178 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7605, 7} true;
  assume {:verifier.code 0} true;
  call $i179 := show_dev_abi_version($p28, $p25, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7606, 28} true;
  assume {:verifier.code 0} true;
  $M.101 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7607, 5} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb126:
  assume !(($i178 == 1));
  assume {:verifier.code 0} true;
  goto $bb127;
$bb127:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7610, 5} true;
  assume {:verifier.code 0} true;
  goto $bb128;
$bb128:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7615, 3} true;
  assume {:verifier.code 0} true;
  goto $bb131;
$bb129:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7612, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7613, 5} true;
  assume {:verifier.code 0} true;
  goto $bb130;
$bb130:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7613, 5} true;
  assume {:verifier.code 0} true;
  goto $bb128;
$bb131:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7618, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb132:
  assume ($i181 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7621, 16} true;
  assume {:verifier.code 1} true;
  call $i182 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i182);
  // WARNING: %254 = call i32 @__VERIFIER_nondet_int(), !dbg !6213, !verifier.code !5961
  call {:cexpr "tmp___21"} boogie_si_record_i32($i182);
  assume {:verifier.code 0} true;
  goto $bb134;
$bb133:
  assume !(($i181 == 1));
  assume {:verifier.code 0} true;
  goto $bb143;
$bb134:
  assume {:verifier.code 0} true;
  $i183 := $eq.i32($i182, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i183} true;
  goto $bb135, $bb136;
$bb135:
  assume ($i183 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7624, 9} true;
  assume {:verifier.code 0} true;
  $i184 := $M.102;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7624, 30} true;
  assume {:verifier.code 0} true;
  $i185 := $eq.i32($i184, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7624, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb137, $bb138;
$bb136:
  assume !(($i183 == 1));
  assume {:verifier.code 0} true;
  goto $bb141;
$bb137:
  assume ($i185 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7625, 7} true;
  assume {:verifier.code 0} true;
  call $i186 := show_class_attr_string($p33, $p30, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7626, 28} true;
  assume {:verifier.code 0} true;
  $M.102 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7627, 5} true;
  assume {:verifier.code 0} true;
  goto $bb139;
$bb138:
  assume !(($i185 == 1));
  assume {:verifier.code 0} true;
  goto $bb139;
$bb139:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7630, 5} true;
  assume {:verifier.code 0} true;
  goto $bb140;
$bb140:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7635, 3} true;
  assume {:verifier.code 0} true;
  goto $bb143;
$bb141:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7632, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7633, 5} true;
  assume {:verifier.code 0} true;
  goto $bb142;
$bb142:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7633, 5} true;
  assume {:verifier.code 0} true;
  goto $bb140;
$bb143:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7638, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb144:
  assume ($i188 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7641, 16} true;
  assume {:verifier.code 1} true;
  call $i189 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i189);
  // WARNING: %271 = call i32 @__VERIFIER_nondet_int(), !dbg !6237, !verifier.code !5961
  call {:cexpr "tmp___22"} boogie_si_record_i32($i189);
  assume {:verifier.code 0} true;
  goto $bb146;
$bb145:
  assume !(($i188 == 1));
  assume {:verifier.code 0} true;
  goto $bb163;
$bb146:
  assume {:verifier.code 0} true;
  $i190 := $slt.i32($i189, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb147, $bb148;
$bb147:
  assume ($i190 == 1);
  assume {:verifier.code 0} true;
  $i192 := $eq.i32($i189, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i192} true;
  goto $bb152, $bb153;
$bb148:
  assume !(($i190 == 1));
  assume {:verifier.code 0} true;
  $i191 := $eq.i32($i189, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i191} true;
  goto $bb149, $bb150;
$bb149:
  assume ($i191 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7653, 9} true;
  assume {:verifier.code 0} true;
  $i198 := $M.103;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7653, 30} true;
  assume {:verifier.code 0} true;
  $i199 := $eq.i32($i198, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7653, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i199} true;
  goto $bb158, $bb159;
$bb150:
  assume {:verifier.code 0} true;
  assume !(($i191 == 1));
  goto $bb151;
$bb151:
  assume {:verifier.code 0} true;
  goto $bb161;
$bb152:
  assume ($i192 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7644, 9} true;
  assume {:verifier.code 0} true;
  $i193 := $M.103;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7644, 30} true;
  assume {:verifier.code 0} true;
  $i194 := $eq.i32($i193, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7644, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i194} true;
  goto $bb154, $bb155;
$bb153:
  assume {:verifier.code 0} true;
  assume !(($i192 == 1));
  goto $bb151;
$bb154:
  assume ($i194 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7645, 25} true;
  assume {:verifier.code 0} true;
  $p195 := $M.98;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7645, 7} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_add_one($p195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7646, 28} true;
  assume {:verifier.code 0} true;
  $M.103 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7647, 17} true;
  assume {:verifier.code 0} true;
  $i196 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7647, 25} true;
  assume {:verifier.code 0} true;
  $i197 := $add.i32($i196, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7647, 15} true;
  assume {:verifier.code 0} true;
  $M.104 := $i197;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7648, 5} true;
  assume {:verifier.code 0} true;
  goto $bb156;
$bb155:
  assume !(($i194 == 1));
  assume {:verifier.code 0} true;
  goto $bb156;
$bb156:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7651, 5} true;
  assume {:verifier.code 0} true;
  goto $bb157;
$bb157:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7665, 3} true;
  assume {:verifier.code 0} true;
  goto $bb163;
$bb158:
  assume ($i199 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7654, 28} true;
  assume {:verifier.code 0} true;
  $p200 := $M.98;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7654, 7} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_remove_one($p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7655, 28} true;
  assume {:verifier.code 0} true;
  $M.103 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7656, 17} true;
  assume {:verifier.code 0} true;
  $i201 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7656, 25} true;
  assume {:verifier.code 0} true;
  $i202 := $sub.i32($i201, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7656, 15} true;
  assume {:verifier.code 0} true;
  $M.104 := $i202;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7657, 5} true;
  assume {:verifier.code 0} true;
  goto $bb160;
$bb159:
  assume !(($i199 == 1));
  assume {:verifier.code 0} true;
  goto $bb160;
$bb160:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7660, 5} true;
  assume {:verifier.code 0} true;
  goto $bb157;
$bb161:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7662, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7663, 5} true;
  assume {:verifier.code 0} true;
  goto $bb162;
$bb162:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7663, 5} true;
  assume {:verifier.code 0} true;
  goto $bb157;
$bb163:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7668, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb164:
  assume ($i204 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7671, 16} true;
  assume {:verifier.code 1} true;
  call $i205 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i205);
  // WARNING: %299 = call i32 @__VERIFIER_nondet_int(), !dbg !6278, !verifier.code !5961
  call {:cexpr "tmp___23"} boogie_si_record_i32($i205);
  assume {:verifier.code 0} true;
  goto $bb166;
$bb165:
  assume !(($i204 == 1));
  assume {:verifier.code 0} true;
  goto $bb193;
$bb166:
  assume {:verifier.code 0} true;
  $i206 := $slt.i32($i205, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i206} true;
  goto $bb167, $bb168;
$bb167:
  assume ($i206 == 1);
  assume {:verifier.code 0} true;
  $i208 := $eq.i32($i205, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i208} true;
  goto $bb172, $bb173;
$bb168:
  assume !(($i206 == 1));
  assume {:verifier.code 0} true;
  $i207 := $eq.i32($i205, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb169, $bb170;
$bb169:
  assume ($i207 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7683, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $M.105;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7683, 30} true;
  assume {:verifier.code 0} true;
  $i214 := $eq.i32($i213, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7683, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i214} true;
  goto $bb182, $bb183;
$bb170:
  assume {:verifier.code 0} true;
  assume !(($i207 == 1));
  goto $bb171;
$bb171:
  assume {:verifier.code 0} true;
  goto $bb191;
$bb172:
  assume ($i208 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 9} true;
  assume {:verifier.code 0} true;
  $i209 := $M.105;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 30} true;
  assume {:verifier.code 0} true;
  $i210 := $eq.i32($i209, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i210} true;
  goto $bb174, $bb175;
$bb173:
  assume {:verifier.code 0} true;
  assume !(($i208 == 1));
  goto $bb171;
$bb174:
  assume ($i210 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 38} true;
  assume {:verifier.code 0} true;
  $i211 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 46} true;
  assume {:verifier.code 0} true;
  $i212 := $eq.i32($i211, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i212} true;
  goto $bb177, $bb178;
$bb175:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i210 == 1));
  goto $bb176;
$bb176:
  assume {:verifier.code 0} true;
  goto $bb180;
$bb177:
  assume ($i212 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7675, 7} true;
  assume {:verifier.code 0} true;
  call ib_uverbs_cleanup();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7676, 28} true;
  assume {:verifier.code 0} true;
  $M.105 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7677, 7} true;
  assume {:verifier.code 0} true;
  goto $bb179;
$bb178:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7674, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i212 == 1));
  goto $bb176;
$bb179:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7791, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7792, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb180:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7681, 5} true;
  assume {:verifier.code 0} true;
  goto $bb181;
$bb181:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7709, 3} true;
  assume {:verifier.code 0} true;
  goto $bb193;
$bb182:
  assume ($i214 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7684, 22} true;
  assume {:verifier.code 0} true;
  call $i215 := ib_uverbs_init();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7684, 20} true;
  assume {:verifier.code 0} true;
  $M.111 := $i215;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7685, 11} true;
  assume {:verifier.code 0} true;
  $i216 := $M.111;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7685, 24} true;
  assume {:verifier.code 0} true;
  $i217 := $ne.i32($i216, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7685, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i217} true;
  goto $bb184, $bb185;
$bb183:
  assume !(($i214 == 1));
  assume {:verifier.code 0} true;
  goto $bb190;
$bb184:
  assume ($i217 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7686, 30} true;
  assume {:verifier.code 0} true;
  $M.105 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7687, 9} true;
  assume {:verifier.code 0} true;
  goto $bb179;
$bb185:
  assume !(($i217 == 1));
  assume {:verifier.code 0} true;
  goto $bb186;
$bb186:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7691, 11} true;
  assume {:verifier.code 0} true;
  $i218 := $M.111;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7691, 24} true;
  assume {:verifier.code 0} true;
  $i219 := $eq.i32($i218, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7691, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb187, $bb188;
$bb187:
  assume ($i219 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7692, 30} true;
  assume {:verifier.code 0} true;
  $M.105 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7693, 30} true;
  assume {:verifier.code 0} true;
  $M.101 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7694, 30} true;
  assume {:verifier.code 0} true;
  $M.99 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7695, 30} true;
  assume {:verifier.code 0} true;
  $M.102 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7696, 30} true;
  assume {:verifier.code 0} true;
  $M.103 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7697, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_ib_client_4();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7698, 7} true;
  assume {:verifier.code 0} true;
  goto $bb189;
$bb188:
  assume !(($i219 == 1));
  assume {:verifier.code 0} true;
  goto $bb189;
$bb189:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7701, 5} true;
  assume {:verifier.code 0} true;
  goto $bb190;
$bb190:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7704, 5} true;
  assume {:verifier.code 0} true;
  goto $bb181;
$bb191:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7706, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7707, 5} true;
  assume {:verifier.code 0} true;
  goto $bb192;
$bb192:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7707, 5} true;
  assume {:verifier.code 0} true;
  goto $bb181;
$bb193:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7712, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb194:
  assume ($i221 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7715, 16} true;
  assume {:verifier.code 1} true;
  call $i222 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i222);
  // WARNING: %335 = call i32 @__VERIFIER_nondet_int(), !dbg !6334, !verifier.code !5961
  call {:cexpr "tmp___24"} boogie_si_record_i32($i222);
  assume {:verifier.code 0} true;
  goto $bb196;
$bb195:
  assume !(($i221 == 1));
  assume {:verifier.code 0} true;
  goto $bb237;
$bb196:
  assume {:verifier.code 0} true;
  $i223 := $slt.i32($i222, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i223} true;
  goto $bb197, $bb198;
$bb197:
  assume ($i223 == 1);
  assume {:verifier.code 0} true;
  $i227 := $slt.i32($i222, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i227} true;
  goto $bb206, $bb207;
$bb198:
  assume !(($i223 == 1));
  assume {:verifier.code 0} true;
  $i224 := $slt.i32($i222, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i224} true;
  goto $bb199, $bb200;
$bb199:
  assume ($i224 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7748, 9} true;
  assume {:verifier.code 0} true;
  $i247 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7748, 30} true;
  assume {:verifier.code 0} true;
  $i248 := $eq.i32($i247, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7748, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i248} true;
  goto $bb223, $bb224;
$bb200:
  assume !(($i224 == 1));
  assume {:verifier.code 0} true;
  $i225 := $slt.i32($i222, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i225} true;
  goto $bb201, $bb202;
$bb201:
  assume ($i225 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7757, 9} true;
  assume {:verifier.code 0} true;
  $i254 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7757, 30} true;
  assume {:verifier.code 0} true;
  $i255 := $eq.i32($i254, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7757, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i255} true;
  goto $bb226, $bb227;
$bb202:
  assume !(($i225 == 1));
  assume {:verifier.code 0} true;
  $i226 := $eq.i32($i222, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i226} true;
  goto $bb203, $bb204;
$bb203:
  assume ($i226 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7765, 9} true;
  assume {:verifier.code 0} true;
  $i260 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7765, 30} true;
  assume {:verifier.code 0} true;
  $i261 := $eq.i32($i260, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7765, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i261} true;
  goto $bb229, $bb230;
$bb204:
  assume {:verifier.code 0} true;
  assume !(($i226 == 1));
  goto $bb205;
$bb205:
  assume {:verifier.code 0} true;
  goto $bb235;
$bb206:
  assume ($i227 == 1);
  assume {:verifier.code 0} true;
  $i228 := $eq.i32($i222, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb208, $bb209;
$bb207:
  assume !(($i227 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7732, 9} true;
  assume {:verifier.code 0} true;
  $i237 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7732, 30} true;
  assume {:verifier.code 0} true;
  $i238 := $eq.i32($i237, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7732, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i238} true;
  goto $bb217, $bb218;
$bb208:
  assume ($i228 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7718, 9} true;
  assume {:verifier.code 0} true;
  $i229 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7718, 30} true;
  assume {:verifier.code 0} true;
  $i230 := $eq.i32($i229, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7718, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb210, $bb211;
$bb209:
  assume {:verifier.code 0} true;
  assume !(($i228 == 1));
  goto $bb205;
$bb210:
  assume ($i230 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7719, 22} true;
  assume {:verifier.code 0} true;
  $p231 := $M.112;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7719, 7} true;
  assume {:verifier.code 0} true;
  call $i232 := ib_uverbs_mmap($p231, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7720, 28} true;
  assume {:verifier.code 0} true;
  $M.106 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7721, 5} true;
  assume {:verifier.code 0} true;
  goto $bb212;
$bb211:
  assume !(($i230 == 1));
  assume {:verifier.code 0} true;
  goto $bb212;
$bb212:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7724, 9} true;
  assume {:verifier.code 0} true;
  $i233 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7724, 30} true;
  assume {:verifier.code 0} true;
  $i234 := $eq.i32($i233, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7724, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i234} true;
  goto $bb213, $bb214;
$bb213:
  assume ($i234 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7725, 22} true;
  assume {:verifier.code 0} true;
  $p235 := $M.112;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7725, 7} true;
  assume {:verifier.code 0} true;
  call $i236 := ib_uverbs_mmap($p235, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7726, 28} true;
  assume {:verifier.code 0} true;
  $M.106 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7727, 5} true;
  assume {:verifier.code 0} true;
  goto $bb215;
$bb214:
  assume !(($i234 == 1));
  assume {:verifier.code 0} true;
  goto $bb215;
$bb215:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7730, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb216:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7781, 3} true;
  assume {:verifier.code 0} true;
  goto $bb237;
$bb217:
  assume ($i238 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7733, 23} true;
  assume {:verifier.code 0} true;
  $p239 := $M.112;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7733, 74} true;
  assume {:verifier.code 0} true;
  $i240 := $load.i64($M.97, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  call $i241 := ib_uverbs_write($p239, $p38, $i240, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7735, 28} true;
  assume {:verifier.code 0} true;
  $M.106 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7736, 5} true;
  assume {:verifier.code 0} true;
  goto $bb219;
$bb218:
  assume !(($i238 == 1));
  assume {:verifier.code 0} true;
  goto $bb219;
$bb219:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7739, 9} true;
  assume {:verifier.code 0} true;
  $i242 := $M.106;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7739, 30} true;
  assume {:verifier.code 0} true;
  $i243 := $eq.i32($i242, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7739, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb220, $bb221;
$bb220:
  assume ($i243 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7740, 23} true;
  assume {:verifier.code 0} true;
  $p244 := $M.112;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7740, 74} true;
  assume {:verifier.code 0} true;
  $i245 := $load.i64($M.97, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7740, 7} true;
  assume {:verifier.code 0} true;
  call $i246 := ib_uverbs_write($p244, $p38, $i245, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7742, 28} true;
  assume {:verifier.code 0} true;
  $M.106 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7743, 5} true;
  assume {:verifier.code 0} true;
  goto $bb222;
$bb221:
  assume !(($i243 == 1));
  assume {:verifier.code 0} true;
  goto $bb222;
$bb222:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7746, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb223:
  assume ($i248 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7749, 23} true;
  assume {:verifier.code 0} true;
  $p249 := $M.113;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7749, 48} true;
  assume {:verifier.code 0} true;
  $p250 := $M.112;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7749, 7} true;
  assume {:verifier.code 0} true;
  call $i251 := ib_uverbs_close($p249, $p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7750, 28} true;
  assume {:verifier.code 0} true;
  $M.106 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7751, 17} true;
  assume {:verifier.code 0} true;
  $i252 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7751, 25} true;
  assume {:verifier.code 0} true;
  $i253 := $sub.i32($i252, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7751, 15} true;
  assume {:verifier.code 0} true;
  $M.104 := $i253;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i253);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7752, 5} true;
  assume {:verifier.code 0} true;
  goto $bb225;
$bb224:
  assume !(($i248 == 1));
  assume {:verifier.code 0} true;
  goto $bb225;
$bb225:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7755, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb226:
  assume ($i255 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7758, 17} true;
  assume {:verifier.code 0} true;
  $p256 := $M.112;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7758, 42} true;
  assume {:verifier.code 0} true;
  $i257 := $load.i64($M.97, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7758, 52} true;
  assume {:verifier.code 0} true;
  $i258 := $load.i32($M.97, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7758, 7} true;
  assume {:verifier.code 0} true;
  call $i259 := no_llseek($p256, $i257, $i258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7759, 28} true;
  assume {:verifier.code 0} true;
  $M.106 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7760, 5} true;
  assume {:verifier.code 0} true;
  goto $bb228;
$bb227:
  assume !(($i255 == 1));
  assume {:verifier.code 0} true;
  goto $bb228;
$bb228:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7763, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb229:
  assume ($i261 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7766, 37} true;
  assume {:verifier.code 0} true;
  $p262 := $M.113;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7766, 62} true;
  assume {:verifier.code 0} true;
  $p263 := $M.112;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7766, 22} true;
  assume {:verifier.code 0} true;
  call $i264 := ib_uverbs_open($p262, $p263);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7766, 20} true;
  assume {:verifier.code 0} true;
  $M.114 := $i264;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32($i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7767, 11} true;
  assume {:verifier.code 0} true;
  $i265 := $M.114;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7767, 24} true;
  assume {:verifier.code 0} true;
  $i266 := $eq.i32($i265, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7767, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i266} true;
  goto $bb231, $bb232;
$bb230:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb234;
$bb231:
  assume ($i266 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7768, 30} true;
  assume {:verifier.code 0} true;
  $M.106 := 2;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7769, 19} true;
  assume {:verifier.code 0} true;
  $i267 := $M.104;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7769, 27} true;
  assume {:verifier.code 0} true;
  $i268 := $add.i32($i267, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7769, 17} true;
  assume {:verifier.code 0} true;
  $M.104 := $i268;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i268);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7770, 7} true;
  assume {:verifier.code 0} true;
  goto $bb233;
$bb232:
  assume !(($i266 == 1));
  assume {:verifier.code 0} true;
  goto $bb233;
$bb233:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7773, 5} true;
  assume {:verifier.code 0} true;
  goto $bb234;
$bb234:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7776, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb235:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7778, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7779, 5} true;
  assume {:verifier.code 0} true;
  goto $bb236;
$bb236:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7779, 5} true;
  assume {:verifier.code 0} true;
  goto $bb216;
$bb237:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7784, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb238:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7786, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7787, 3} true;
  assume {:verifier.code 0} true;
  goto $bb239;
$bb239:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7787, 3} true;
  assume {:verifier.code 0} true;
  goto $bb58;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 421815));
procedure  ldv_initialize();
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 422847));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5522, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5524, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5526, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_open_7: ref;
axiom (ldv_open_7 == $sub.ref(0, 423879));
procedure  ldv_open_7()
  returns ($r: i32);
const ib_uverbs_cleanup: ref;
axiom (ib_uverbs_cleanup == $sub.ref(0, 424911));
procedure  ib_uverbs_cleanup()
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7255, 3} true;
  assume {:verifier.code 0} true;
  call ib_unregister_client(uverbs_client);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7256, 17} true;
  assume {:verifier.code 0} true;
  $p0 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7256, 3} true;
  assume {:verifier.code 0} true;
  call class_destroy($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7257, 3} true;
  assume {:verifier.code 0} true;
  call unregister_chrdev_region(242221248, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7258, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $load.i32($M.0, overflow_maj);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7258, 20} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7259, 30} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, overflow_maj);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7259, 5} true;
  assume {:verifier.code 0} true;
  call unregister_chrdev_region($i3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7260, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7263, 3} true;
  assume {:verifier.code 0} true;
  call idr_destroy(ib_uverbs_pd_idr);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7264, 3} true;
  assume {:verifier.code 0} true;
  call idr_destroy(ib_uverbs_mr_idr);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7265, 3} true;
  assume {:verifier.code 0} true;
  call idr_destroy(ib_uverbs_mw_idr);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7266, 3} true;
  assume {:verifier.code 0} true;
  call idr_destroy(ib_uverbs_ah_idr);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7267, 3} true;
  assume {:verifier.code 0} true;
  call idr_destroy(ib_uverbs_cq_idr);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7268, 3} true;
  assume {:verifier.code 0} true;
  call idr_destroy(ib_uverbs_qp_idr);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7269, 3} true;
  assume {:verifier.code 0} true;
  call idr_destroy(ib_uverbs_srq_idr);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7270, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ib_uverbs_init: ref;
axiom (ib_uverbs_init == $sub.ref(0, 425943));
procedure  ib_uverbs_init()
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i1;
  var $i9: i8;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i32;
  var $i15: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $i22: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i23: i32;
  var $p28: ref;
  var $i16: i32;
  var $i4: i32;
  var $i27: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7208, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := register_chrdev_region(242221248, 32, .str.29);
  // WARNING: %2 = call i32 @register_chrdev_region(i32 242221248, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0)), !dbg !5810, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7209, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7209, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7210, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref(.str.34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7211, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i1;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7247, 3} true;
  assume {:verifier.code 0} true;
  $i27 := $i4;
  goto $bb16;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7215, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := __class_create(__this_module, .str.29, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7216, 16} true;
  assume {:verifier.code 0} true;
  $M.93 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7217, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7217, 20} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7217, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := IS_ERR($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7217, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i8($i8);
  // WARNING: %12 = zext i1 %11 to i8, !dbg !5827, !verifier.code !5806
  call {:cexpr "tmp___1"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7218, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i8.i1($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7218, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7219, 39} true;
  assume {:verifier.code 0} true;
  $p11 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7219, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7219, 15} true;
  assume {:verifier.code 0} true;
  call $i13 := PTR_ERR($p12);
  // WARNING: %17 = call i64 @PTR_ERR(i8* %16), !dbg !5836, !verifier.code !5806
  call {:cexpr "tmp___0"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7220, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i13);
  // WARNING: %18 = trunc i64 %17 to i32, !dbg !5839, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7221, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := printk.ref(.str.35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7222, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $i14;
  goto $bb7;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7245, 3} true;
  assume {:verifier.code 0} true;
  call unregister_chrdev_region(242221248, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7245, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i16;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7226, 3} true;
  assume {:verifier.code 0} true;
  $p17 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7226, 17} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7226, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p18, uverbs_devnode);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7227, 27} true;
  assume {:verifier.code 0} true;
  $p19 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7227, 9} true;
  assume {:verifier.code 0} true;
  call $i20 := class_create_file($p19, class_attr_abi_version);
  // WARNING: %25 = call i32 @class_create_file(%struct.class* %24, %struct.class_attribute* getelementptr inbounds (%struct.class_attribute_string, %struct.class_attribute_string* @class_attr_abi_version, i32 0, i32 0)), !dbg !5846, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7228, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7228, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7229, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := printk.ref(.str.36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7230, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $i20;
  goto $bb11;
$bb10:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7243, 17} true;
  assume {:verifier.code 0} true;
  $p28 := $M.93;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7243, 3} true;
  assume {:verifier.code 0} true;
  call class_destroy($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7243, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i23;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7234, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := ib_register_client(uverbs_client);
  // WARNING: %31 = call i32 @ib_register_client(%struct.ib_client* @uverbs_client), !dbg !5853, !verifier.code !5806
  call {:cexpr "ret"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7235, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7235, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7236, 5} true;
  assume {:verifier.code 0} true;
  call $i26 := printk.ref(.str.37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7237, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $i24;
  goto $bb11;
$bb14:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7241, 3} true;
  assume {:verifier.code 0} true;
  $i27 := 0;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7249, 1} true;
  assume {:verifier.code 0} true;
  $r := $i27;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 426975));
procedure  ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 13017, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 13017, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 13017, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 13018, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 13019, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 13022, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const register_chrdev_region: ref;
axiom (register_chrdev_region == $sub.ref(0, 428007));
procedure  register_chrdev_region($i0: i32, $i1: i32, $p2: ref)
  returns ($r: i32);
const __class_create: ref;
axiom (__class_create == $sub.ref(0, 429039));
procedure  __class_create($p0: ref, $p1: ref, $p2: ref)
  returns ($r: ref);
const uverbs_devnode: ref;
axiom (uverbs_devnode == $sub.ref(0, 430071));
procedure  uverbs_devnode($p0: ref, $p1: ref)
  returns ($r: ref)
{
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7189, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7189, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7189, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7190, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p1, 438);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7191, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7194, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := dev_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7195, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := kasprintf.i32.ref.ref(208, .str.38, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 7196, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const class_create_file: ref;
axiom (class_create_file == $sub.ref(0, 431103));
procedure  class_create_file($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5563, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := class_create_file_ns($p0, $p1, $0.ref);
  // WARNING: %3 = call i32 @class_create_file_ns(%struct.class* %0, %struct.class_attribute* %1, i8* null), !dbg !5814, !verifier.code !5811
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5564, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ib_register_client: ref;
axiom (ib_register_client == $sub.ref(0, 432135));
procedure  ib_register_client($p0: ref)
  returns ($r: i32);
const class_destroy: ref;
axiom (class_destroy == $sub.ref(0, 433167));
procedure  class_destroy($p0: ref);
const unregister_chrdev_region: ref;
axiom (unregister_chrdev_region == $sub.ref(0, 434199));
procedure  unregister_chrdev_region($i0: i32, $i1: i32);
const class_create_file_ns: ref;
axiom (class_create_file_ns == $sub.ref(0, 435231));
procedure  class_create_file_ns($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const dev_name: ref;
axiom (dev_name == $sub.ref(0, 436263));
procedure  dev_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p8: ref;
  var $p9: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5577, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5577, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5577, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5577, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5577, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5578, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5578, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5578, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5585, 1} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5582, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5582, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := kobject_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5583, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p9;
  goto $bb3;
}
const kasprintf: ref;
axiom (kasprintf == $sub.ref(0, 437295));
procedure  kasprintf.i32.ref.ref($i0: i32, $p1: ref, p.2: ref)
  returns ($r: ref);
const kobject_name: ref;
axiom (kobject_name == $sub.ref(0, 438327));
procedure  kobject_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5398, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5398, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5398, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ib_unregister_client: ref;
axiom (ib_unregister_client == $sub.ref(0, 439359));
procedure  ib_unregister_client($p0: ref);
const idr_destroy: ref;
axiom (idr_destroy == $sub.ref(0, 440391));
procedure  idr_destroy($p0: ref);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 441423));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !18189, metadata !5829), !dbg !18190, !verifier.code !5831
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 442455));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 443487));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 444519));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 445551));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 446583));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 447615));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 448647));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 449679));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 450711));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 451743));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 452775));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 453807));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !5806, !verifier.code !5807
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 454839));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 455871));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 456903));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 457935));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 458967));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 459999));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 461031));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 462063));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 463095));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 464127));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 465159));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 466191));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 467223));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 468255));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 469287));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 470319));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const calloc: ref;
axiom (calloc == $sub.ref(0, 471351));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !18222, metadata !5829), !dbg !18223, !verifier.code !5831
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 472383));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 473415));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 474447));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 475479));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __to_fd.1: ref;
axiom (__to_fd.1 == $sub.ref(0, 476511));
procedure  __to_fd.1(ret: ref, $i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: %3 = alloca %struct.fd, align 8, !verifier.code !5812
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5706, 44} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i64($i0, $sub.i64(0, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5706, 26} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5706, 19} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5706, 24} true;
  assume {:verifier.code 0} true;
  $M.115 := $store.ref($M.115, $p5, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5707, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5707, 44} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i6, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5707, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5707, 25} true;
  assume {:verifier.code 0} true;
  $M.115 := $store.i32($M.115, $p8, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 11} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 11} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 11} true;
  assume {:verifier.code 0} true;
  call $M.115 := $memcpy.i8($M.115, $M.115, $p9, $p10, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.115, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref(ret);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 3} true;
  assume {:verifier.code 0} true;
  call $M.115 := $memcpy.i8($M.115, $M.115, $p13, $p14, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5708, 3} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
}
const fdget.2: ref;
axiom (fdget.2 == $sub.ref(0, 477543));
procedure  fdget.2(ret: ref, $i0: i32)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: %4 = alloca %struct.fd, align 8, !verifier.code !5812
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5717, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := __fdget($i0);
  // WARNING: %5 = call i64 @__fdget(i32 %0), !dbg !5818, !verifier.code !5812
  call {:cexpr "tmp"} boogie_si_record_i64($i4);
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := __to_fd.1($p5, $i4);
  assume {:verifier.code 0} true;
  $p7 := $p5;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.115, $p7);
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p5, 8);
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.115, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  $M.52 := $store.ref($M.52, $p12, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p11, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  $M.52 := $store.i32($M.52, $p13, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5718, 13} true;
  assume {:verifier.code 0} true;
  call $M.52 := $memcpy.i8($M.52, $M.52, $p14, $p15, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 11} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 11} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 11} true;
  assume {:verifier.code 0} true;
  call $M.52 := $memcpy.i8($M.52, $M.52, $p16, $p17, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 3} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.52, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 3} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref(ret);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 3} true;
  assume {:verifier.code 0} true;
  call $M.52 := $memcpy.i8($M.52, $M.52, $p20, $p21, 16, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-08_1a-drivers--infiniband--core--ib_uverbs.ko-entry_point_true-unreach-call.cil.out-D5S0h8.c", 5719, 3} true;
  assume {:verifier.code 0} true;
  $r := $p19;
  $exn := false;
  return;
}
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 478575));
procedure  __SMACK_static_init()
{
$bb0:
  $M.116 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.0 := $store.i32($M.0, ib_uverbs_idr_lock, 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_idr_lock, 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_idr_lock, 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_idr_lock, 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_idr_lock, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_idr_lock, 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_idr_lock, 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_idr_lock, 24), 24), .str);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_idr_lock, 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(ib_uverbs_idr_lock, 24), 40), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_pd_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_pd_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_pd_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_pd_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_pd_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_pd_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_pd_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_pd_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_pd_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_pd_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_pd_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_pd_idr, 24), 24), 24), .str.1);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_pd_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_pd_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_pd_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_pd_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.1, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 10), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 11), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 13), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 14), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 16), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 19), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 20), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 21), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_mr_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_mr_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mr_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mr_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mr_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_mr_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_mr_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_mr_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_mr_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mr_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_mr_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mr_idr, 24), 24), 24), .str.2);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mr_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mr_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mr_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_mr_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.2, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 10), 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 11), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 13), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 14), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 16), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 19), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 20), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 21), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_mw_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_mw_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mw_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mw_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mw_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_mw_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_mw_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_mw_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_mw_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mw_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_mw_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mw_idr, 24), 24), 24), .str.3);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mw_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_mw_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_mw_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_mw_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.3, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 10), 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 11), 119);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 13), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 14), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 16), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 19), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 20), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.3, 21), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_ah_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_ah_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_ah_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_ah_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_ah_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_ah_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_ah_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_ah_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_ah_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_ah_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_ah_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_ah_idr, 24), 24), 24), .str.4);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_ah_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_ah_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_ah_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_ah_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.4, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 10), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 11), 104);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 13), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 14), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 16), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 19), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 20), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.4, 21), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_cq_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_cq_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_cq_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_cq_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_cq_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_cq_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_cq_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_cq_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_cq_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_cq_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_cq_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_cq_idr, 24), 24), 24), .str.5);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_cq_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_cq_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_cq_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_cq_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.5, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 10), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 11), 113);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 13), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 14), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 16), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 19), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 20), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.5, 21), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_qp_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_qp_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_qp_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_qp_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_qp_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_qp_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_qp_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_qp_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_qp_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_qp_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_qp_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_qp_idr, 24), 24), 24), .str.6);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_qp_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_qp_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_qp_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_qp_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.6, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 10), 113);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 11), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 12), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 13), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 14), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 16), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 19), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 20), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.6, 21), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_srq_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_srq_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_srq_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_srq_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_srq_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_srq_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_srq_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_srq_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_srq_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_srq_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_srq_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_srq_idr, 24), 24), 24), .str.7);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_srq_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_srq_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_srq_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_srq_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.7, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 10), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 11), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 12), 113);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 13), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 14), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 15), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 16), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 17), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 18), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 19), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 20), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 21), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.7, 22), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_xrcd_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_xrcd_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_xrcd_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_xrcd_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_xrcd_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 24), 24), .str.8);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_xrcd_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_xrcd_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_xrcd_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.8, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 10), 120);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 11), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 12), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 13), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 14), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 15), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 16), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 17), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 18), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 19), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 20), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 21), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 22), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.8, 23), 0);
  $M.0 := $store.ref($M.0, ib_uverbs_rule_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_rule_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_rule_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_rule_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_rule_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_rule_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(ib_uverbs_rule_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_rule_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(ib_uverbs_rule_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_rule_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(ib_uverbs_rule_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(ib_uverbs_rule_idr, 24), 24), 24), .str.9);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(ib_uverbs_rule_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(ib_uverbs_rule_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(ib_uverbs_rule_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(ib_uverbs_rule_idr, 104), $0.ref);
  $M.0 := $store.i8($M.0, .str.9, 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 1), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 3), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 6), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 7), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 8), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 9), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 10), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 11), 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 12), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 13), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 14), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 15), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 16), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 17), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 18), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 19), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 20), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 21), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 22), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.9, 23), 0);
  $M.108 := $0.ref;
  $M.109 := $0.ref;
  $M.95 := $0.ref;
  $M.96 := $0.ref;
  $M.113 := $0.ref;
  $M.112 := $0.ref;
  $M.98 := $0.ref;
  $M.94 := 0;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(0);
  $M.99 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  $M.100 := 0;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(0);
  $M.101 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.102 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.103 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  $M.104 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.105 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.106 := 0;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(0);
  $M.107 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.110 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.111 := 0;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32(0);
  $M.114 := 0;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32(0);
  $M.117 := $p2i.ref.i64(ib_copy_ah_attr_to_user);
  $M.118 := __kstrtab_ib_copy_ah_attr_to_user;
  $M.119 := $store.i8($M.119, __kstrtab_ib_copy_ah_attr_to_user, 105);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 1), 98);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 2), 95);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 3), 99);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 4), 111);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 5), 112);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 6), 121);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 7), 95);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 8), 97);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 9), 104);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 10), 95);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 11), 97);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 12), 116);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 13), 116);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 14), 114);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 15), 95);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 16), 116);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 17), 111);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 18), 95);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 19), 117);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 20), 115);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 21), 101);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 22), 114);
  $M.119 := $store.i8($M.119, $add.ref(__kstrtab_ib_copy_ah_attr_to_user, 23), 0);
  $M.120 := $store.i8($M.120, __kstrtab_ib_copy_path_rec_from_user, 105);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 1), 98);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 2), 95);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 3), 99);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 4), 111);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 5), 112);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 6), 121);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 7), 95);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 8), 112);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 9), 97);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 10), 116);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 11), 104);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 12), 95);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 13), 114);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 14), 101);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 15), 99);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 16), 95);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 17), 102);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 18), 114);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 19), 111);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 20), 109);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 21), 95);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 22), 117);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 23), 115);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 24), 101);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 25), 114);
  $M.120 := $store.i8($M.120, $add.ref(__kstrtab_ib_copy_path_rec_from_user, 26), 0);
  $M.121 := $store.i8($M.121, __kstrtab_ib_copy_path_rec_to_user, 105);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 1), 98);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 2), 95);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 3), 99);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 4), 111);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 5), 112);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 6), 121);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 7), 95);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 8), 112);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 9), 97);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 10), 116);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 11), 104);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 12), 95);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 13), 114);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 14), 101);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 15), 99);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 16), 95);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 17), 116);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 18), 111);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 19), 95);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 20), 117);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 21), 115);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 22), 101);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 23), 114);
  $M.121 := $store.i8($M.121, $add.ref(__kstrtab_ib_copy_path_rec_to_user, 24), 0);
  $M.122 := $store.i8($M.122, __kstrtab_ib_copy_qp_attr_to_user, 105);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 1), 98);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 2), 95);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 3), 99);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 4), 111);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 5), 112);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 6), 121);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 7), 95);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 8), 113);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 9), 112);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 10), 95);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 11), 97);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 12), 116);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 13), 116);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 14), 114);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 15), 95);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 16), 116);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 17), 111);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 18), 95);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 19), 117);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 20), 115);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 21), 101);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 22), 114);
  $M.122 := $store.i8($M.122, $add.ref(__kstrtab_ib_copy_qp_attr_to_user, 23), 0);
  $M.0 := $store.i8($M.0, srq_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(srq_lock_class, 8), 83);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 1), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 2), 81);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 3), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 4), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 5), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 6), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 7), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(srq_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, rule_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(rule_lock_class, 8), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 1), 85);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 2), 76);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 3), 69);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 4), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 5), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 7), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 8), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(rule_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, ah_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(ah_lock_class, 8), 65);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 1), 72);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 2), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 3), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 5), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 6), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(ah_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, qp_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(qp_lock_class, 8), 81);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 1), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 2), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 3), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 5), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 6), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(qp_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, cq_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(cq_lock_class, 8), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 1), 81);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 2), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 3), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 5), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 6), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(cq_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, mw_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(mw_lock_class, 8), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 1), 87);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 2), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 3), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 5), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 6), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mw_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, mr_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(mr_lock_class, 8), 77);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 1), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 2), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 3), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 5), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 6), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(mr_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, xrcd_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(xrcd_lock_class, 8), 88);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 1), 82);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 2), 67);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 3), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 4), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 5), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 7), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 8), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(xrcd_lock_class, 8), 15), 0);
  $M.0 := $store.i8($M.0, pd_lock_class, 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(pd_lock_class, 8), 80);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 1), 68);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 2), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 3), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 5), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 6), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(pd_lock_class, 8), 15), 0);
  $M.0 := $store.ref($M.0, class_attr_abi_version, .str.32);
  $M.0 := $store.i16($M.0, $add.ref(class_attr_abi_version, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(class_attr_abi_version, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(class_attr_abi_version, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(class_attr_abi_version, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(class_attr_abi_version, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(class_attr_abi_version, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(class_attr_abi_version, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(class_attr_abi_version, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(class_attr_abi_version, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(class_attr_abi_version, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(class_attr_abi_version, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(class_attr_abi_version, 32), show_class_attr_string);
  $M.0 := $store.ref($M.0, $add.ref(class_attr_abi_version, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(class_attr_abi_version, 48), .str.39);
  $M.0 := $store.ref($M.0, uverbs_client, .str.33);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_client, 8), ib_uverbs_add_one);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_client, 16), ib_uverbs_remove_one);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_client, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(uverbs_client, 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_abi_version, .str.32);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_abi_version, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_abi_version, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_abi_version, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_abi_version, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_abi_version, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_abi_version, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_abi_version, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_abi_version, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_abi_version, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_abi_version, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_abi_version, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_abi_version, 32), show_dev_abi_version);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_abi_version, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_ibdev, .str.31);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_ibdev, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_ibdev, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_ibdev, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_ibdev, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_ibdev, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_ibdev, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_ibdev, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_ibdev, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_ibdev, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_ibdev, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_ibdev, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_ibdev, 32), show_ibdev);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_ibdev, 40), $0.ref);
  $M.93 := $0.ref;
  $M.0 := $store.ref($M.0, uverbs_fops, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 8), no_llseek);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 24), ib_uverbs_write);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 96), ib_uverbs_open);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 112), ib_uverbs_close);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_fops, 216), $0.ref);
  $M.0 := $store.ref($M.0, uverbs_mmap_fops, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 8), no_llseek);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 24), ib_uverbs_write);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 80), ib_uverbs_mmap);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 96), ib_uverbs_open);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 112), ib_uverbs_close);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_mmap_fops, 216), $0.ref);
  $M.0 := $store.i64($M.0, overflow_map, 0);
  $M.0 := $store.i32($M.0, overflow_maj, 0);
  call {:cexpr "overflow_maj"} boogie_si_record_i32(0);
  $M.0 := $store.i64($M.0, dev_map, 0);
  $M.0 := $store.i32($M.0, map_lock, 0);
  $M.0 := $store.i32($M.0, $add.ref(map_lock, 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref(map_lock, 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref(map_lock, 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref(map_lock, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(map_lock, 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(map_lock, 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(map_lock, 24), 24), .str.28);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(map_lock, 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(map_lock, 24), 40), 0);
  $M.88 := $store.ref($M.88, uverbs_ex_cmd_table, $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 8), ib_uverbs_ex_query_device);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 16), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 24), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 32), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 40), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 48), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 56), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 64), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 72), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 80), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 88), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 96), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 104), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 112), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 120), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 128), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 136), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 144), ib_uverbs_ex_create_cq);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 152), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 160), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 168), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 176), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 184), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 192), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 200), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 208), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 216), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 224), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 232), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 240), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 248), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 256), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 264), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 272), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 280), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 288), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 296), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 304), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 312), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 320), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 328), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 336), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 344), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 352), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 360), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 368), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 376), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 384), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 392), $0.ref);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 400), ib_uverbs_ex_create_flow);
  $M.88 := $store.ref($M.88, $add.ref(uverbs_ex_cmd_table, 408), ib_uverbs_ex_destroy_flow);
  $M.87 := $store.ref($M.87, uverbs_cmd_table, ib_uverbs_get_context);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 8), ib_uverbs_query_device);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 16), ib_uverbs_query_port);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 24), ib_uverbs_alloc_pd);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 32), ib_uverbs_dealloc_pd);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 40), ib_uverbs_create_ah);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 48), $0.ref);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 56), $0.ref);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 64), ib_uverbs_destroy_ah);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 72), ib_uverbs_reg_mr);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 80), $0.ref);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 88), ib_uverbs_rereg_mr);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 96), $0.ref);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 104), ib_uverbs_dereg_mr);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 112), ib_uverbs_alloc_mw);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 120), $0.ref);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 128), ib_uverbs_dealloc_mw);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 136), ib_uverbs_create_comp_channel);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 144), ib_uverbs_create_cq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 152), ib_uverbs_resize_cq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 160), ib_uverbs_destroy_cq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 168), ib_uverbs_poll_cq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 176), $0.ref);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 184), ib_uverbs_req_notify_cq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 192), ib_uverbs_create_qp);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 200), ib_uverbs_query_qp);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 208), ib_uverbs_modify_qp);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 216), ib_uverbs_destroy_qp);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 224), ib_uverbs_post_send);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 232), ib_uverbs_post_recv);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 240), ib_uverbs_attach_mcast);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 248), ib_uverbs_detach_mcast);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 256), ib_uverbs_create_srq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 264), ib_uverbs_modify_srq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 272), ib_uverbs_query_srq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 280), ib_uverbs_destroy_srq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 288), ib_uverbs_post_srq_recv);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 296), ib_uverbs_open_xrcd);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 304), ib_uverbs_close_xrcd);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 312), ib_uverbs_create_xsrq);
  $M.87 := $store.ref($M.87, $add.ref(uverbs_cmd_table, 320), ib_uverbs_open_qp);
  $M.0 := $store.ref($M.0, uverbs_event_fops, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 8), no_llseek);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 16), ib_uverbs_event_read);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 56), ib_uverbs_event_poll);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 112), ib_uverbs_event_close);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 136), ib_uverbs_event_fasync);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(uverbs_event_fops, 216), $0.ref);
  $M.2 := 1;
  call {:cexpr "ldv_module_refcounter"} boogie_si_record_i32(1);
  $M.123 := $p2i.ref.i64(ib_copy_path_rec_from_user);
  $M.124 := __kstrtab_ib_copy_path_rec_from_user;
  $M.125 := $p2i.ref.i64(ib_copy_path_rec_to_user);
  $M.126 := __kstrtab_ib_copy_path_rec_to_user;
  $M.127 := $p2i.ref.i64(ib_copy_qp_attr_to_user);
  $M.128 := __kstrtab_ib_copy_qp_attr_to_user;
  $M.129 := $store.i8($M.129, .str.22, 37);
  $M.129 := $store.i8($M.129, $add.ref(.str.22, 1), 115);
  $M.129 := $store.i8($M.129, $add.ref(.str.22, 2), 10);
  $M.129 := $store.i8($M.129, $add.ref(.str.22, 3), 0);
  $M.130 := $store.i8($M.130, .str.24, 37);
  $M.130 := $store.i8($M.130, $add.ref(.str.24, 1), 100);
  $M.130 := $store.i8($M.130, $add.ref(.str.24, 2), 10);
  $M.130 := $store.i8($M.130, $add.ref(.str.24, 3), 0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 479607));
procedure  devirtbounce(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i8 := $eq.ref(ib_uverbs_remove_one, $p0);
  assume {:branchcond $i8} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i3 == 1);
  call ib_uverbs_release_file(arg);
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call ib_uverbs_release_event_file(arg);
  $exn := false;
  return;
$bb4:
  assume ($i5 == 1);
  call ib_uverbs_release_dev(arg);
  $exn := false;
  return;
$bb5:
  assume ($i6 == 1);
  call release_uobj(arg);
  $exn := false;
  return;
$bb6:
  assume ($i7 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call ib_uverbs_add_one($p1);
  $exn := false;
  return;
$bb7:
  assume ($i8 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call ib_uverbs_remove_one($p2);
  $exn := false;
  return;
$bb8:
  assume !(($i3 == 1));
  assume false;
$bb9:
  assume !(($i4 == 1));
  $i3 := $eq.ref(ib_uverbs_release_file, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i5 == 1));
  $i4 := $eq.ref(ib_uverbs_release_event_file, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i6 == 1));
  $i5 := $eq.ref(ib_uverbs_release_dev, $p0);
  assume {:branchcond $i5} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i7 == 1));
  $i6 := $eq.ref(release_uobj, $p0);
  assume {:branchcond $i6} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i8 == 1));
  $i7 := $eq.ref(ib_uverbs_add_one, $p0);
  assume {:branchcond $i7} true;
  goto $bb6, $bb12;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 480639));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 481671));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 482703));
procedure  devirtbounce.5(funcPtr: ref, arg: ref, arg1: ref)
  returns ($r: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(uverbs_devnode, $p0);
  assume {:branchcond $i4} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i4 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg1);
  call $p3 := uverbs_devnode($p1, $p2);
  $r := $p3;
  $exn := false;
  return;
$bb3:
  assume !(($i4 == 1));
  assume false;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 483735));
procedure  devirtbounce.6(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 484767));
procedure  devirtbounce.7(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 485799));
procedure  devirtbounce.8(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i64, arg4: i32, arg5: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 486831));
procedure  devirtbounce.9(funcPtr: ref, arg: ref, arg1: i32, arg2: i64, arg3: i64, arg4: i64, arg5: i32, arg6: ref, arg7: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.10: ref;
axiom (devirtbounce.10 == $sub.ref(0, 487863));
procedure  devirtbounce.10(funcPtr: ref, arg: ref, arg1: i32)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.11: ref;
axiom (devirtbounce.11 == $sub.ref(0, 488895));
procedure  devirtbounce.11(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.12: ref;
axiom (devirtbounce.12 == $sub.ref(0, 489927));
procedure  devirtbounce.12(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.13: ref;
axiom (devirtbounce.13 == $sub.ref(0, 490959));
procedure  devirtbounce.13(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.14: ref;
axiom (devirtbounce.14 == $sub.ref(0, 491991));
procedure  devirtbounce.14(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i24 := $eq.ref(ib_uverbs_ex_destroy_flow, $p0);
  assume {:branchcond $i24} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i19 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i20 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i21 == 1);
  $p3 := $bitcast.ref.ref(arg);
  $p4 := $bitcast.ref.ref(arg1);
  $p5 := $bitcast.ref.ref(arg2);
  call $i6 := ib_uverbs_ex_query_device($p3, $p4, $p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i22 == 1);
  $p7 := $bitcast.ref.ref(arg);
  $p8 := $bitcast.ref.ref(arg1);
  $p9 := $bitcast.ref.ref(arg2);
  call $i10 := ib_uverbs_ex_create_cq($p7, $p8, $p9);
  $r := $i10;
  $exn := false;
  return;
$bb6:
  assume ($i23 == 1);
  $p11 := $bitcast.ref.ref(arg);
  $p12 := $bitcast.ref.ref(arg1);
  $p13 := $bitcast.ref.ref(arg2);
  call $i14 := ib_uverbs_ex_create_flow($p11, $p12, $p13);
  $r := $i14;
  $exn := false;
  return;
$bb7:
  assume ($i24 == 1);
  $p15 := $bitcast.ref.ref(arg);
  $p16 := $bitcast.ref.ref(arg1);
  $p17 := $bitcast.ref.ref(arg2);
  call $i18 := ib_uverbs_ex_destroy_flow($p15, $p16, $p17);
  $r := $i18;
  $exn := false;
  return;
$bb8:
  assume !(($i19 == 1));
  assume false;
$bb9:
  assume !(($i20 == 1));
  $i19 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i19} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i21 == 1));
  $i20 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i20} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i22 == 1));
  $i21 := $eq.ref(ib_uverbs_ex_query_device, $p0);
  assume {:branchcond $i21} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i23 == 1));
  $i22 := $eq.ref(ib_uverbs_ex_create_cq, $p0);
  assume {:branchcond $i22} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i24 == 1));
  $i23 := $eq.ref(ib_uverbs_ex_create_flow, $p0);
  assume {:branchcond $i23} true;
  goto $bb6, $bb12;
}
const devirtbounce.15: ref;
axiom (devirtbounce.15 == $sub.ref(0, 493023));
procedure  devirtbounce.15(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i24 := $eq.ref(ib_uverbs_ex_destroy_flow, $p0);
  assume {:branchcond $i24} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i19 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i20 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i21 == 1);
  $p3 := $bitcast.ref.ref(arg);
  $p4 := $bitcast.ref.ref(arg1);
  $p5 := $bitcast.ref.ref(arg2);
  call $i6 := ib_uverbs_ex_query_device($p3, $p4, $p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i22 == 1);
  $p7 := $bitcast.ref.ref(arg);
  $p8 := $bitcast.ref.ref(arg1);
  $p9 := $bitcast.ref.ref(arg2);
  call $i10 := ib_uverbs_ex_create_cq($p7, $p8, $p9);
  $r := $i10;
  $exn := false;
  return;
$bb6:
  assume ($i23 == 1);
  $p11 := $bitcast.ref.ref(arg);
  $p12 := $bitcast.ref.ref(arg1);
  $p13 := $bitcast.ref.ref(arg2);
  call $i14 := ib_uverbs_ex_create_flow($p11, $p12, $p13);
  $r := $i14;
  $exn := false;
  return;
$bb7:
  assume ($i24 == 1);
  $p15 := $bitcast.ref.ref(arg);
  $p16 := $bitcast.ref.ref(arg1);
  $p17 := $bitcast.ref.ref(arg2);
  call $i18 := ib_uverbs_ex_destroy_flow($p15, $p16, $p17);
  $r := $i18;
  $exn := false;
  return;
$bb8:
  assume !(($i19 == 1));
  assume false;
$bb9:
  assume !(($i20 == 1));
  $i19 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i19} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i21 == 1));
  $i20 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i20} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i22 == 1));
  $i21 := $eq.ref(ib_uverbs_ex_query_device, $p0);
  assume {:branchcond $i21} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i23 == 1));
  $i22 := $eq.ref(ib_uverbs_ex_create_cq, $p0);
  assume {:branchcond $i22} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i24 == 1));
  $i23 := $eq.ref(ib_uverbs_ex_create_flow, $p0);
  assume {:branchcond $i23} true;
  goto $bb6, $bb12;
}
const devirtbounce.16: ref;
axiom (devirtbounce.16 == $sub.ref(0, 494055));
procedure  devirtbounce.16(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.17: ref;
axiom (devirtbounce.17 == $sub.ref(0, 495087));
procedure  devirtbounce.17(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i24 := $eq.ref(ib_uverbs_ex_destroy_flow, $p0);
  assume {:branchcond $i24} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i19 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i20 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i21 == 1);
  $p3 := $bitcast.ref.ref(arg);
  $p4 := $bitcast.ref.ref(arg1);
  $p5 := $bitcast.ref.ref(arg2);
  call $i6 := ib_uverbs_ex_query_device($p3, $p4, $p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i22 == 1);
  $p7 := $bitcast.ref.ref(arg);
  $p8 := $bitcast.ref.ref(arg1);
  $p9 := $bitcast.ref.ref(arg2);
  call $i10 := ib_uverbs_ex_create_cq($p7, $p8, $p9);
  $r := $i10;
  $exn := false;
  return;
$bb6:
  assume ($i23 == 1);
  $p11 := $bitcast.ref.ref(arg);
  $p12 := $bitcast.ref.ref(arg1);
  $p13 := $bitcast.ref.ref(arg2);
  call $i14 := ib_uverbs_ex_create_flow($p11, $p12, $p13);
  $r := $i14;
  $exn := false;
  return;
$bb7:
  assume ($i24 == 1);
  $p15 := $bitcast.ref.ref(arg);
  $p16 := $bitcast.ref.ref(arg1);
  $p17 := $bitcast.ref.ref(arg2);
  call $i18 := ib_uverbs_ex_destroy_flow($p15, $p16, $p17);
  $r := $i18;
  $exn := false;
  return;
$bb8:
  assume !(($i19 == 1));
  assume false;
$bb9:
  assume !(($i20 == 1));
  $i19 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i19} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i21 == 1));
  $i20 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i20} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i22 == 1));
  $i21 := $eq.ref(ib_uverbs_ex_query_device, $p0);
  assume {:branchcond $i21} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i23 == 1));
  $i22 := $eq.ref(ib_uverbs_ex_create_cq, $p0);
  assume {:branchcond $i22} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i24 == 1));
  $i23 := $eq.ref(ib_uverbs_ex_create_flow, $p0);
  assume {:branchcond $i23} true;
  goto $bb6, $bb12;
}
const devirtbounce.18: ref;
axiom (devirtbounce.18 == $sub.ref(0, 496119));
procedure  devirtbounce.18(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.19: ref;
axiom (devirtbounce.19 == $sub.ref(0, 497151));
procedure  devirtbounce.19(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i27 := $eq.ref(ib_uverbs_event_handler, $p0);
  assume {:branchcond $i27} true;
  goto $bb10, $bb19;
$bb2:
  assume ($i19 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg1);
  call ib_copy_ah_attr_to_user($p1, $p2);
  $exn := false;
  return;
$bb3:
  assume ($i20 == 1);
  $p3 := $bitcast.ref.ref(arg);
  $p4 := $bitcast.ref.ref(arg1);
  call ib_copy_qp_attr_to_user($p3, $p4);
  $exn := false;
  return;
$bb4:
  assume ($i21 == 1);
  $p5 := $bitcast.ref.ref(arg);
  $p6 := $bitcast.ref.ref(arg1);
  call ib_copy_path_rec_to_user($p5, $p6);
  $exn := false;
  return;
$bb5:
  assume ($i22 == 1);
  $p7 := $bitcast.ref.ref(arg);
  $p8 := $bitcast.ref.ref(arg1);
  call ib_copy_path_rec_from_user($p7, $p8);
  $exn := false;
  return;
$bb6:
  assume ($i23 == 1);
  $p9 := $bitcast.ref.ref(arg);
  $p10 := $bitcast.ref.ref(arg1);
  call ib_uverbs_qp_event_handler($p9, $p10);
  $exn := false;
  return;
$bb7:
  assume ($i24 == 1);
  $p11 := $bitcast.ref.ref(arg);
  $p12 := $bitcast.ref.ref(arg1);
  call ib_uverbs_srq_event_handler($p11, $p12);
  $exn := false;
  return;
$bb8:
  assume ($i25 == 1);
  $p13 := $bitcast.ref.ref(arg);
  $p14 := $bitcast.ref.ref(arg1);
  call ib_uverbs_comp_handler($p13, $p14);
  $exn := false;
  return;
$bb9:
  assume ($i26 == 1);
  $p15 := $bitcast.ref.ref(arg);
  $p16 := $bitcast.ref.ref(arg1);
  call ib_uverbs_cq_event_handler($p15, $p16);
  $exn := false;
  return;
$bb10:
  assume ($i27 == 1);
  $p17 := $bitcast.ref.ref(arg);
  $p18 := $bitcast.ref.ref(arg1);
  call ib_uverbs_event_handler($p17, $p18);
  $exn := false;
  return;
$bb11:
  assume !(($i19 == 1));
  assume false;
$bb12:
  assume !(($i20 == 1));
  $i19 := $eq.ref(ib_copy_ah_attr_to_user, $p0);
  assume {:branchcond $i19} true;
  goto $bb2, $bb11;
$bb13:
  assume !(($i21 == 1));
  $i20 := $eq.ref(ib_copy_qp_attr_to_user, $p0);
  assume {:branchcond $i20} true;
  goto $bb3, $bb12;
$bb14:
  assume !(($i22 == 1));
  $i21 := $eq.ref(ib_copy_path_rec_to_user, $p0);
  assume {:branchcond $i21} true;
  goto $bb4, $bb13;
$bb15:
  assume !(($i23 == 1));
  $i22 := $eq.ref(ib_copy_path_rec_from_user, $p0);
  assume {:branchcond $i22} true;
  goto $bb5, $bb14;
$bb16:
  assume !(($i24 == 1));
  $i23 := $eq.ref(ib_uverbs_qp_event_handler, $p0);
  assume {:branchcond $i23} true;
  goto $bb6, $bb15;
$bb17:
  assume !(($i25 == 1));
  $i24 := $eq.ref(ib_uverbs_srq_event_handler, $p0);
  assume {:branchcond $i24} true;
  goto $bb7, $bb16;
$bb18:
  assume !(($i26 == 1));
  $i25 := $eq.ref(ib_uverbs_comp_handler, $p0);
  assume {:branchcond $i25} true;
  goto $bb8, $bb17;
$bb19:
  assume !(($i27 == 1));
  $i26 := $eq.ref(ib_uverbs_cq_event_handler, $p0);
  assume {:branchcond $i26} true;
  goto $bb9, $bb18;
}
const devirtbounce.20: ref;
axiom (devirtbounce.20 == $sub.ref(0, 498183));
procedure  devirtbounce.20(funcPtr: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.21: ref;
axiom (devirtbounce.21 == $sub.ref(0, 499215));
procedure  devirtbounce.21(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.22: ref;
axiom (devirtbounce.22 == $sub.ref(0, 500247));
procedure  devirtbounce.22(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.23: ref;
axiom (devirtbounce.23 == $sub.ref(0, 501279));
procedure  devirtbounce.23(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.24: ref;
axiom (devirtbounce.24 == $sub.ref(0, 502311));
procedure  devirtbounce.24(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.25: ref;
axiom (devirtbounce.25 == $sub.ref(0, 503343));
procedure  devirtbounce.25(funcPtr: ref, arg: ref, arg1: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.26: ref;
axiom (devirtbounce.26 == $sub.ref(0, 504375));
procedure  devirtbounce.26(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.27: ref;
axiom (devirtbounce.27 == $sub.ref(0, 505407));
procedure  devirtbounce.27(funcPtr: ref, arg: ref, arg1: ref, arg2: ref, arg3: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.28: ref;
axiom (devirtbounce.28 == $sub.ref(0, 506439));
procedure  devirtbounce.28(funcPtr: ref, arg: ref, arg1: ref, arg2: ref, arg3: ref, arg4: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i8 := $eq.ref(ib_uverbs_ex_create_cq_cb, $p0);
  assume {:branchcond $i8} true;
  goto $bb5, $bb9;
$bb2:
  assume ($i5 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i6 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i7 == 1);
  call $i3 := ib_uverbs_create_cq_cb(arg, arg1, arg2, arg3, arg4);
  $r := $i3;
  $exn := false;
  return;
$bb5:
  assume ($i8 == 1);
  call $i4 := ib_uverbs_ex_create_cq_cb(arg, arg1, arg2, arg3, arg4);
  $r := $i4;
  $exn := false;
  return;
$bb6:
  assume !(($i5 == 1));
  assume false;
$bb7:
  assume !(($i6 == 1));
  $i5 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i5} true;
  goto $bb2, $bb6;
$bb8:
  assume !(($i7 == 1));
  $i6 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i6} true;
  goto $bb3, $bb7;
$bb9:
  assume !(($i8 == 1));
  $i7 := $eq.ref(ib_uverbs_create_cq_cb, $p0);
  assume {:branchcond $i7} true;
  goto $bb4, $bb8;
}
const devirtbounce.29: ref;
axiom (devirtbounce.29 == $sub.ref(0, 507471));
procedure  devirtbounce.29(funcPtr: ref, arg: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.30: ref;
axiom (devirtbounce.30 == $sub.ref(0, 508503));
procedure  devirtbounce.30(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i20 := $eq.ref(ib_uverbs_ex_destroy_flow, $p0);
  assume {:branchcond $i20} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i15 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i16 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i17 == 1);
  $p3 := $bitcast.ref.ref(arg);
  $p4 := $bitcast.ref.ref(arg1);
  call $i5 := ib_uverbs_ex_query_device($p3, $p4, arg2);
  $r := $i5;
  $exn := false;
  return;
$bb5:
  assume ($i18 == 1);
  $p6 := $bitcast.ref.ref(arg);
  $p7 := $bitcast.ref.ref(arg1);
  call $i8 := ib_uverbs_ex_create_cq($p6, $p7, arg2);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i19 == 1);
  $p9 := $bitcast.ref.ref(arg);
  $p10 := $bitcast.ref.ref(arg1);
  call $i11 := ib_uverbs_ex_create_flow($p9, $p10, arg2);
  $r := $i11;
  $exn := false;
  return;
$bb7:
  assume ($i20 == 1);
  $p12 := $bitcast.ref.ref(arg);
  $p13 := $bitcast.ref.ref(arg1);
  call $i14 := ib_uverbs_ex_destroy_flow($p12, $p13, arg2);
  $r := $i14;
  $exn := false;
  return;
$bb8:
  assume !(($i15 == 1));
  assume false;
$bb9:
  assume !(($i16 == 1));
  $i15 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i15} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i17 == 1));
  $i16 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i16} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i18 == 1));
  $i17 := $eq.ref(ib_uverbs_ex_query_device, $p0);
  assume {:branchcond $i17} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i19 == 1));
  $i18 := $eq.ref(ib_uverbs_ex_create_cq, $p0);
  assume {:branchcond $i18} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i20 == 1));
  $i19 := $eq.ref(ib_uverbs_ex_create_flow, $p0);
  assume {:branchcond $i19} true;
  goto $bb6, $bb12;
}
const devirtbounce.31: ref;
axiom (devirtbounce.31 == $sub.ref(0, 509535));
procedure  devirtbounce.31(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: i32)
  returns ($r: i64)
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
  var $i7: i64;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i64;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
  var $i42: i1;
  var $i43: i1;
  var $i44: i1;
  var $i45: i1;
  var $i46: i1;
  var $i47: i1;
  var $i48: i1;
  var $i49: i1;
  var $i50: i1;
  var $i51: i1;
  var $i52: i1;
  var $i53: i1;
  var $i54: i1;
  var $i55: i1;
  var $i56: i1;
  var $i57: i1;
  var $i58: i1;
  var $i59: i1;
  var $i60: i1;
  var $i61: i1;
  var $i62: i1;
  var $i63: i1;
  var $i64: i1;
  var $i65: i1;
  var $i66: i1;
  var $i67: i1;
  var $i68: i1;
  var $i69: i1;
  var $i70: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i70 := $eq.ref(ib_uverbs_open_qp, $p0);
  assume {:branchcond $i70} true;
  goto $bb36, $bb71;
$bb2:
  assume ($i36 == 1);
  call $i1 := ib_uverbs_get_context(arg, arg1, arg2, arg3);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i37 == 1);
  call $i2 := ib_uverbs_query_device(arg, arg1, arg2, arg3);
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i38 == 1);
  call $i3 := ib_uverbs_query_port(arg, arg1, arg2, arg3);
  $r := $i3;
  $exn := false;
  return;
$bb5:
  assume ($i39 == 1);
  call $i4 := ib_uverbs_alloc_pd(arg, arg1, arg2, arg3);
  $r := $i4;
  $exn := false;
  return;
$bb6:
  assume ($i40 == 1);
  call $i5 := ib_uverbs_dealloc_pd(arg, arg1, arg2, arg3);
  $r := $i5;
  $exn := false;
  return;
$bb7:
  assume ($i41 == 1);
  call $i6 := ib_uverbs_create_ah(arg, arg1, arg2, arg3);
  $r := $i6;
  $exn := false;
  return;
$bb8:
  assume ($i42 == 1);
  call $i7 := ib_uverbs_destroy_ah(arg, arg1, arg2, arg3);
  $r := $i7;
  $exn := false;
  return;
$bb9:
  assume ($i43 == 1);
  call $i8 := ib_uverbs_reg_mr(arg, arg1, arg2, arg3);
  $r := $i8;
  $exn := false;
  return;
$bb10:
  assume ($i44 == 1);
  call $i9 := ib_uverbs_rereg_mr(arg, arg1, arg2, arg3);
  $r := $i9;
  $exn := false;
  return;
$bb11:
  assume ($i45 == 1);
  call $i10 := ib_uverbs_dereg_mr(arg, arg1, arg2, arg3);
  $r := $i10;
  $exn := false;
  return;
$bb12:
  assume ($i46 == 1);
  call $i11 := ib_uverbs_alloc_mw(arg, arg1, arg2, arg3);
  $r := $i11;
  $exn := false;
  return;
$bb13:
  assume ($i47 == 1);
  call $i12 := ib_uverbs_dealloc_mw(arg, arg1, arg2, arg3);
  $r := $i12;
  $exn := false;
  return;
$bb14:
  assume ($i48 == 1);
  call $i13 := ib_uverbs_create_comp_channel(arg, arg1, arg2, arg3);
  $r := $i13;
  $exn := false;
  return;
$bb15:
  assume ($i49 == 1);
  call $i14 := ib_uverbs_create_cq(arg, arg1, arg2, arg3);
  $r := $i14;
  $exn := false;
  return;
$bb16:
  assume ($i50 == 1);
  call $i15 := ib_uverbs_resize_cq(arg, arg1, arg2, arg3);
  $r := $i15;
  $exn := false;
  return;
$bb17:
  assume ($i51 == 1);
  call $i16 := ib_uverbs_destroy_cq(arg, arg1, arg2, arg3);
  $r := $i16;
  $exn := false;
  return;
$bb18:
  assume ($i52 == 1);
  call $i17 := ib_uverbs_poll_cq(arg, arg1, arg2, arg3);
  $r := $i17;
  $exn := false;
  return;
$bb19:
  assume ($i53 == 1);
  call $i18 := ib_uverbs_req_notify_cq(arg, arg1, arg2, arg3);
  $r := $i18;
  $exn := false;
  return;
$bb20:
  assume ($i54 == 1);
  call $i19 := ib_uverbs_create_qp(arg, arg1, arg2, arg3);
  $r := $i19;
  $exn := false;
  return;
$bb21:
  assume ($i55 == 1);
  call $i20 := ib_uverbs_query_qp(arg, arg1, arg2, arg3);
  $r := $i20;
  $exn := false;
  return;
$bb22:
  assume ($i56 == 1);
  call $i21 := ib_uverbs_modify_qp(arg, arg1, arg2, arg3);
  $r := $i21;
  $exn := false;
  return;
$bb23:
  assume ($i57 == 1);
  call $i22 := ib_uverbs_destroy_qp(arg, arg1, arg2, arg3);
  $r := $i22;
  $exn := false;
  return;
$bb24:
  assume ($i58 == 1);
  call $i23 := ib_uverbs_post_send(arg, arg1, arg2, arg3);
  $r := $i23;
  $exn := false;
  return;
$bb25:
  assume ($i59 == 1);
  call $i24 := ib_uverbs_post_recv(arg, arg1, arg2, arg3);
  $r := $i24;
  $exn := false;
  return;
$bb26:
  assume ($i60 == 1);
  call $i25 := ib_uverbs_attach_mcast(arg, arg1, arg2, arg3);
  $r := $i25;
  $exn := false;
  return;
$bb27:
  assume ($i61 == 1);
  call $i26 := ib_uverbs_detach_mcast(arg, arg1, arg2, arg3);
  $r := $i26;
  $exn := false;
  return;
$bb28:
  assume ($i62 == 1);
  call $i27 := ib_uverbs_create_srq(arg, arg1, arg2, arg3);
  $r := $i27;
  $exn := false;
  return;
$bb29:
  assume ($i63 == 1);
  call $i28 := ib_uverbs_modify_srq(arg, arg1, arg2, arg3);
  $r := $i28;
  $exn := false;
  return;
$bb30:
  assume ($i64 == 1);
  call $i29 := ib_uverbs_query_srq(arg, arg1, arg2, arg3);
  $r := $i29;
  $exn := false;
  return;
$bb31:
  assume ($i65 == 1);
  call $i30 := ib_uverbs_destroy_srq(arg, arg1, arg2, arg3);
  $r := $i30;
  $exn := false;
  return;
$bb32:
  assume ($i66 == 1);
  call $i31 := ib_uverbs_post_srq_recv(arg, arg1, arg2, arg3);
  $r := $i31;
  $exn := false;
  return;
$bb33:
  assume ($i67 == 1);
  call $i32 := ib_uverbs_open_xrcd(arg, arg1, arg2, arg3);
  $r := $i32;
  $exn := false;
  return;
$bb34:
  assume ($i68 == 1);
  call $i33 := ib_uverbs_close_xrcd(arg, arg1, arg2, arg3);
  $r := $i33;
  $exn := false;
  return;
$bb35:
  assume ($i69 == 1);
  call $i34 := ib_uverbs_create_xsrq(arg, arg1, arg2, arg3);
  $r := $i34;
  $exn := false;
  return;
$bb36:
  assume ($i70 == 1);
  call $i35 := ib_uverbs_open_qp(arg, arg1, arg2, arg3);
  $r := $i35;
  $exn := false;
  return;
$bb37:
  assume !(($i36 == 1));
  assume false;
$bb38:
  assume !(($i37 == 1));
  $i36 := $eq.ref(ib_uverbs_get_context, $p0);
  assume {:branchcond $i36} true;
  goto $bb2, $bb37;
$bb39:
  assume !(($i38 == 1));
  $i37 := $eq.ref(ib_uverbs_query_device, $p0);
  assume {:branchcond $i37} true;
  goto $bb3, $bb38;
$bb40:
  assume !(($i39 == 1));
  $i38 := $eq.ref(ib_uverbs_query_port, $p0);
  assume {:branchcond $i38} true;
  goto $bb4, $bb39;
$bb41:
  assume !(($i40 == 1));
  $i39 := $eq.ref(ib_uverbs_alloc_pd, $p0);
  assume {:branchcond $i39} true;
  goto $bb5, $bb40;
$bb42:
  assume !(($i41 == 1));
  $i40 := $eq.ref(ib_uverbs_dealloc_pd, $p0);
  assume {:branchcond $i40} true;
  goto $bb6, $bb41;
$bb43:
  assume !(($i42 == 1));
  $i41 := $eq.ref(ib_uverbs_create_ah, $p0);
  assume {:branchcond $i41} true;
  goto $bb7, $bb42;
$bb44:
  assume !(($i43 == 1));
  $i42 := $eq.ref(ib_uverbs_destroy_ah, $p0);
  assume {:branchcond $i42} true;
  goto $bb8, $bb43;
$bb45:
  assume !(($i44 == 1));
  $i43 := $eq.ref(ib_uverbs_reg_mr, $p0);
  assume {:branchcond $i43} true;
  goto $bb9, $bb44;
$bb46:
  assume !(($i45 == 1));
  $i44 := $eq.ref(ib_uverbs_rereg_mr, $p0);
  assume {:branchcond $i44} true;
  goto $bb10, $bb45;
$bb47:
  assume !(($i46 == 1));
  $i45 := $eq.ref(ib_uverbs_dereg_mr, $p0);
  assume {:branchcond $i45} true;
  goto $bb11, $bb46;
$bb48:
  assume !(($i47 == 1));
  $i46 := $eq.ref(ib_uverbs_alloc_mw, $p0);
  assume {:branchcond $i46} true;
  goto $bb12, $bb47;
$bb49:
  assume !(($i48 == 1));
  $i47 := $eq.ref(ib_uverbs_dealloc_mw, $p0);
  assume {:branchcond $i47} true;
  goto $bb13, $bb48;
$bb50:
  assume !(($i49 == 1));
  $i48 := $eq.ref(ib_uverbs_create_comp_channel, $p0);
  assume {:branchcond $i48} true;
  goto $bb14, $bb49;
$bb51:
  assume !(($i50 == 1));
  $i49 := $eq.ref(ib_uverbs_create_cq, $p0);
  assume {:branchcond $i49} true;
  goto $bb15, $bb50;
$bb52:
  assume !(($i51 == 1));
  $i50 := $eq.ref(ib_uverbs_resize_cq, $p0);
  assume {:branchcond $i50} true;
  goto $bb16, $bb51;
$bb53:
  assume !(($i52 == 1));
  $i51 := $eq.ref(ib_uverbs_destroy_cq, $p0);
  assume {:branchcond $i51} true;
  goto $bb17, $bb52;
$bb54:
  assume !(($i53 == 1));
  $i52 := $eq.ref(ib_uverbs_poll_cq, $p0);
  assume {:branchcond $i52} true;
  goto $bb18, $bb53;
$bb55:
  assume !(($i54 == 1));
  $i53 := $eq.ref(ib_uverbs_req_notify_cq, $p0);
  assume {:branchcond $i53} true;
  goto $bb19, $bb54;
$bb56:
  assume !(($i55 == 1));
  $i54 := $eq.ref(ib_uverbs_create_qp, $p0);
  assume {:branchcond $i54} true;
  goto $bb20, $bb55;
$bb57:
  assume !(($i56 == 1));
  $i55 := $eq.ref(ib_uverbs_query_qp, $p0);
  assume {:branchcond $i55} true;
  goto $bb21, $bb56;
$bb58:
  assume !(($i57 == 1));
  $i56 := $eq.ref(ib_uverbs_modify_qp, $p0);
  assume {:branchcond $i56} true;
  goto $bb22, $bb57;
$bb59:
  assume !(($i58 == 1));
  $i57 := $eq.ref(ib_uverbs_destroy_qp, $p0);
  assume {:branchcond $i57} true;
  goto $bb23, $bb58;
$bb60:
  assume !(($i59 == 1));
  $i58 := $eq.ref(ib_uverbs_post_send, $p0);
  assume {:branchcond $i58} true;
  goto $bb24, $bb59;
$bb61:
  assume !(($i60 == 1));
  $i59 := $eq.ref(ib_uverbs_post_recv, $p0);
  assume {:branchcond $i59} true;
  goto $bb25, $bb60;
$bb62:
  assume !(($i61 == 1));
  $i60 := $eq.ref(ib_uverbs_attach_mcast, $p0);
  assume {:branchcond $i60} true;
  goto $bb26, $bb61;
$bb63:
  assume !(($i62 == 1));
  $i61 := $eq.ref(ib_uverbs_detach_mcast, $p0);
  assume {:branchcond $i61} true;
  goto $bb27, $bb62;
$bb64:
  assume !(($i63 == 1));
  $i62 := $eq.ref(ib_uverbs_create_srq, $p0);
  assume {:branchcond $i62} true;
  goto $bb28, $bb63;
$bb65:
  assume !(($i64 == 1));
  $i63 := $eq.ref(ib_uverbs_modify_srq, $p0);
  assume {:branchcond $i63} true;
  goto $bb29, $bb64;
$bb66:
  assume !(($i65 == 1));
  $i64 := $eq.ref(ib_uverbs_query_srq, $p0);
  assume {:branchcond $i64} true;
  goto $bb30, $bb65;
$bb67:
  assume !(($i66 == 1));
  $i65 := $eq.ref(ib_uverbs_destroy_srq, $p0);
  assume {:branchcond $i65} true;
  goto $bb31, $bb66;
$bb68:
  assume !(($i67 == 1));
  $i66 := $eq.ref(ib_uverbs_post_srq_recv, $p0);
  assume {:branchcond $i66} true;
  goto $bb32, $bb67;
$bb69:
  assume !(($i68 == 1));
  $i67 := $eq.ref(ib_uverbs_open_xrcd, $p0);
  assume {:branchcond $i67} true;
  goto $bb33, $bb68;
$bb70:
  assume !(($i69 == 1));
  $i68 := $eq.ref(ib_uverbs_close_xrcd, $p0);
  assume {:branchcond $i68} true;
  goto $bb34, $bb69;
$bb71:
  assume !(($i70 == 1));
  $i69 := $eq.ref(ib_uverbs_create_xsrq, $p0);
  assume {:branchcond $i69} true;
  goto $bb35, $bb70;
}
const devirtbounce.32: ref;
axiom (devirtbounce.32 == $sub.ref(0, 510567));
procedure  devirtbounce.32(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i12 := $eq.ref(ib_uverbs_ex_destroy_flow, $p0);
  assume {:branchcond $i12} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i7 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i8 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume ($i9 == 1);
  call $i3 := ib_uverbs_ex_query_device(arg, arg1, arg2);
  $r := $i3;
  $exn := false;
  return;
$bb5:
  assume ($i10 == 1);
  call $i4 := ib_uverbs_ex_create_cq(arg, arg1, arg2);
  $r := $i4;
  $exn := false;
  return;
$bb6:
  assume ($i11 == 1);
  call $i5 := ib_uverbs_ex_create_flow(arg, arg1, arg2);
  $r := $i5;
  $exn := false;
  return;
$bb7:
  assume ($i12 == 1);
  call $i6 := ib_uverbs_ex_destroy_flow(arg, arg1, arg2);
  $r := $i6;
  $exn := false;
  return;
$bb8:
  assume !(($i7 == 1));
  assume false;
$bb9:
  assume !(($i8 == 1));
  $i7 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i7} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i9 == 1));
  $i8 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i8} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i10 == 1));
  $i9 := $eq.ref(ib_uverbs_ex_query_device, $p0);
  assume {:branchcond $i9} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i11 == 1));
  $i10 := $eq.ref(ib_uverbs_ex_create_cq, $p0);
  assume {:branchcond $i10} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i12 == 1));
  $i11 := $eq.ref(ib_uverbs_ex_create_flow, $p0);
  assume {:branchcond $i11} true;
  goto $bb6, $bb12;
}
const devirtbounce.33: ref;
axiom (devirtbounce.33 == $sub.ref(0, 511599));
procedure  devirtbounce.33(funcPtr: ref, arg: ref, arg1: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i23 := $eq.ref(ib_uverbs_close, $p0);
  assume {:branchcond $i23} true;
  goto $bb8, $bb15;
$bb2:
  assume ($i17 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg1);
  call $i3 := ib_uverbs_event_poll($p1, $p2);
  $r := $i3;
  $exn := false;
  return;
$bb3:
  assume ($i18 == 1);
  $p4 := $bitcast.ref.ref(arg);
  $p5 := $bitcast.ref.ref(arg1);
  call $i6 := ib_uverbs_event_close($p4, $p5);
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume ($i19 == 1);
  call $i7 := __builtinx_object_size();
  $r := $i7;
  $exn := false;
  return;
$bb5:
  assume ($i20 == 1);
  call $i8 := __builtinx_memcpy();
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i21 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := ib_uverbs_mmap($p9, arg1);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i22 == 1);
  $p11 := $bitcast.ref.ref(arg);
  $p12 := $bitcast.ref.ref(arg1);
  call $i13 := ib_uverbs_open($p11, $p12);
  $r := $i13;
  $exn := false;
  return;
$bb8:
  assume ($i23 == 1);
  $p14 := $bitcast.ref.ref(arg);
  $p15 := $bitcast.ref.ref(arg1);
  call $i16 := ib_uverbs_close($p14, $p15);
  $r := $i16;
  $exn := false;
  return;
$bb9:
  assume !(($i17 == 1));
  assume false;
$bb10:
  assume !(($i18 == 1));
  $i17 := $eq.ref(ib_uverbs_event_poll, $p0);
  assume {:branchcond $i17} true;
  goto $bb2, $bb9;
$bb11:
  assume !(($i19 == 1));
  $i18 := $eq.ref(ib_uverbs_event_close, $p0);
  assume {:branchcond $i18} true;
  goto $bb3, $bb10;
$bb12:
  assume !(($i20 == 1));
  $i19 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i19} true;
  goto $bb4, $bb11;
$bb13:
  assume !(($i21 == 1));
  $i20 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i20} true;
  goto $bb5, $bb12;
$bb14:
  assume !(($i22 == 1));
  $i21 := $eq.ref(ib_uverbs_mmap, $p0);
  assume {:branchcond $i21} true;
  goto $bb6, $bb13;
$bb15:
  assume !(($i23 == 1));
  $i22 := $eq.ref(ib_uverbs_open, $p0);
  assume {:branchcond $i22} true;
  goto $bb7, $bb14;
}
const devirtbounce.34: ref;
axiom (devirtbounce.34 == $sub.ref(0, 512631));
procedure  devirtbounce.34(funcPtr: ref, arg: ref)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.35: ref;
axiom (devirtbounce.35 == $sub.ref(0, 513663));
procedure  devirtbounce.35(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
