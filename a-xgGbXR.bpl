// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-challenges/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil.c --verifier-options  /bopt:boolControlVC /bopt:z3opt:SMT.MBQI=false /noCallTreeReuse /noInitPruning /nonUniformUnfolding /staticInlining /trackAllVars --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (102 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: [ref] i8;
var $M.3: [ref] i64;
var $M.4: [ref] i32;
var $M.5: [ref] i32;
var $M.6: [ref] i32;
var $M.7: [ref] i32;
var $M.8: [ref] i32;
var $M.9: [ref] i32;
var $M.10: [ref] i32;
var $M.11: [ref] i32;
var $M.12: [ref] i32;
var $M.13: [ref] ref;
var $M.14: i32;
var $M.15: i32;
var $M.16: [ref] i8;
var $M.17: [ref] i64;
var $M.18: [ref] ref;
var $M.19: i32;
var $M.20: [ref] i64;
var $M.21: [ref] i8;
var $M.22: [ref] i8;
var $M.23: [ref] ref;
var $M.24: [ref] ref;
var $M.25: [ref] ref;
var $M.26: [ref] ref;
var $M.27: [ref] ref;
var $M.28: [ref] ref;
var $M.29: [ref] ref;
var $M.30: [ref] ref;
var $M.31: [ref] ref;
var $M.32: [ref] ref;
var $M.33: [ref] ref;
var $M.34: [ref] ref;
var $M.35: [ref] ref;
var $M.36: [ref] ref;
var $M.37: [ref] ref;
var $M.38: [ref] ref;
var $M.39: [ref] ref;
var $M.40: [ref] ref;
var $M.41: [ref] ref;
var $M.42: [ref] ref;
var $M.43: [ref] ref;
var $M.44: [ref] ref;
var $M.45: [ref] ref;
var $M.46: [ref] ref;
var $M.47: [ref] ref;
var $M.48: [ref] ref;
var $M.49: [ref] ref;
var $M.50: [ref] ref;
var $M.51: [ref] ref;
var $M.52: [ref] ref;
var $M.53: [ref] ref;
var $M.54: [ref] ref;
var $M.55: [ref] ref;
var $M.56: [ref] ref;
var $M.57: [ref] ref;
var $M.58: [ref] ref;
var $M.59: [ref] ref;
var $M.60: [ref] ref;
var $M.61: [ref] ref;
var $M.62: [ref] ref;
var $M.63: [ref] i32;
var $M.64: [ref] i32;
var $M.65: [ref] i32;
var $M.66: i32;
var $M.67: i32;
var $M.68: i32;
var $M.69: i32;
var $M.70: i32;
var $M.71: i32;
var $M.72: i32;
var $M.73: i32;
var $M.74: i32;
var $M.75: i32;
var $M.76: i32;
var $M.77: i32;
var $M.78: i32;
var $M.79: i32;
var $M.80: i32;
var $M.81: i32;
var $M.82: i32;
var $M.83: i32;
var $M.84: i32;
var $M.85: i32;
var $M.86: i64;
var $M.87: [ref] i8;
var $M.88: i32;
var $M.89: ref;
var $M.90: i32;
var $M.91: ref;
var $M.92: i32;
var $M.93: ref;
var $M.94: i32;
var $M.95: ref;
var $M.96: i32;
var $M.97: ref;
var $M.98: i32;
var $M.99: ref;
var $M.100: i32;
var $M.101: ref;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 642807));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32824));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const __mod_pci_device_table: ref;
axiom (__mod_pci_device_table == $sub.ref(0, 1056));
const __mod_of_device_table: ref;
axiom (__mod_of_device_table == $sub.ref(0, 2280));
const ldv_thread_0: ref;
axiom (ldv_thread_0 == $sub.ref(0, 3320));
const ldv_thread_1: ref;
axiom (ldv_thread_1 == $sub.ref(0, 4360));
const ldv_thread_18: ref;
axiom (ldv_thread_18 == $sub.ref(0, 5400));
const ldv_thread_2: ref;
axiom (ldv_thread_2 == $sub.ref(0, 6440));
const ldv_thread_3: ref;
axiom (ldv_thread_3 == $sub.ref(0, 7480));
const ldv_thread_4: ref;
axiom (ldv_thread_4 == $sub.ref(0, 8520));
const ldv_thread_5: ref;
axiom (ldv_thread_5 == $sub.ref(0, 9560));
const ldv_spin_tx_global_lock_of_net_device: ref;
axiom (ldv_spin_tx_global_lock_of_net_device == $sub.ref(0, 10588));
const ldv_spin_slock_of_NOT_ARG_SIGN: ref;
axiom (ldv_spin_slock_of_NOT_ARG_SIGN == $sub.ref(0, 11616));
const ldv_spin_sk_dst_lock_of_sock: ref;
axiom (ldv_spin_sk_dst_lock_of_sock == $sub.ref(0, 12644));
const ldv_spin_siglock_of_sighand_struct: ref;
axiom (ldv_spin_siglock_of_sighand_struct == $sub.ref(0, 13672));
const ldv_spin_ptl: ref;
axiom (ldv_spin_ptl == $sub.ref(0, 14700));
const ldv_spin_node_size_lock_of_pglist_data: ref;
axiom (ldv_spin_node_size_lock_of_pglist_data == $sub.ref(0, 15728));
const ldv_spin_lru_lock_of_netns_frags: ref;
axiom (ldv_spin_lru_lock_of_netns_frags == $sub.ref(0, 16756));
const ldv_spin_lock_of_velocity_info: ref;
axiom (ldv_spin_lock_of_velocity_info == $sub.ref(0, 17784));
const ldv_spin_lock_of_res_counter: ref;
axiom (ldv_spin_lock_of_res_counter == $sub.ref(0, 18812));
const ldv_spin_lock_of_NOT_ARG_SIGN: ref;
axiom (ldv_spin_lock_of_NOT_ARG_SIGN == $sub.ref(0, 19840));
const ldv_spin_lock: ref;
axiom (ldv_spin_lock == $sub.ref(0, 20868));
const ldv_spin_i_lock_of_inode: ref;
axiom (ldv_spin_i_lock_of_inode == $sub.ref(0, 21896));
const ldv_spin_alloc_lock_of_task_struct: ref;
axiom (ldv_spin_alloc_lock_of_task_struct == $sub.ref(0, 22924));
const ldv_spin_addr_list_lock_of_net_device: ref;
axiom (ldv_spin_addr_list_lock_of_net_device == $sub.ref(0, 23952));
const ldv_spin__xmit_lock_of_netdev_queue: ref;
axiom (ldv_spin__xmit_lock_of_netdev_queue == $sub.ref(0, 24980));
const rx_copybreak: ref;
axiom (rx_copybreak == $sub.ref(0, 26008));
const velocity_ethtool_ops: ref;
axiom (velocity_ethtool_ops == $sub.ref(0, 27400));
const {:count 8} wol_opts: ref;
axiom (wol_opts == $sub.ref(0, 28456));
const {:count 8} speed_duplex: ref;
axiom (speed_duplex == $sub.ref(0, 29512));
const {:count 8} ValPktLen: ref;
axiom (ValPktLen == $sub.ref(0, 30568));
const {:count 8} IP_byte_align: ref;
axiom (IP_byte_align == $sub.ref(0, 31624));
const {:count 8} flow_control: ref;
axiom (flow_control == $sub.ref(0, 32680));
const {:count 8} TxDescriptors: ref;
axiom (TxDescriptors == $sub.ref(0, 33736));
const {:count 8} RxDescriptors: ref;
axiom (RxDescriptors == $sub.ref(0, 34792));
const {:count 8} DMA_length: ref;
axiom (DMA_length == $sub.ref(0, 35848));
const {:count 8} rx_thresh: ref;
axiom (rx_thresh == $sub.ref(0, 36904));
const velocity_nics: ref;
axiom (velocity_nics == $sub.ref(0, 37932));
const velocity_netdev_ops: ref;
axiom (velocity_netdev_ops == $sub.ref(0, 39428));
const {:count 32} velocity_gstrings: ref;
axiom (velocity_gstrings == $sub.ref(0, 41476));
const msglevel: ref;
axiom (msglevel == $sub.ref(0, 42504));
const {:count 2} chip_info_table: ref;
axiom (chip_info_table == $sub.ref(0, 43576));
const {:count 2} velocity_of_ids: ref;
axiom (velocity_of_ids == $sub.ref(0, 45000));
const velocity_platform_driver: ref;
axiom (velocity_platform_driver == $sub.ref(0, 46200));
const velocity_pm_ops: ref;
axiom (velocity_pm_ops == $sub.ref(0, 47408));
const {:count 2} velocity_pci_id_table: ref;
axiom (velocity_pci_id_table == $sub.ref(0, 48496));
const velocity_pci_driver: ref;
axiom (velocity_pci_driver == $sub.ref(0, 49832));
const velocity_inetaddr_notifier: ref;
axiom (velocity_inetaddr_notifier == $sub.ref(0, 50880));
const init_net: ref;
axiom (init_net == $sub.ref(0, 32776));
const {:count 25} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 51929));
const {:count 44} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 52997));
const rcu_lock_map: ref;
axiom (rcu_lock_map == $sub.ref(0, 32784));
const __preempt_count: ref;
axiom (__preempt_count == $sub.ref(0, 32792));
const {:count 27} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 54048));
const {:count 41} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 55113));
const {:count 42} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 56179));
const {:count 13} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 57216));
const {:count 199} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 58439));
const pv_irq_ops: ref;
axiom (pv_irq_ops == $sub.ref(0, 32800));
const {:count 196} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 59659));
const dma_ops: ref;
axiom (dma_ops == $sub.ref(0, 32808));
const {:count 41} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 60724));
const {:count 26} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 61774));
const {:count 63} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 62861));
const {:count 19} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 63904));
const {:count 24} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 64952));
const {:count 13} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 65989));
const {:count 63} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 67076));
const {:count 5} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 68105));
const {:count 61} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 69190));
const {:count 34} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 70248));
const {:count 9} .str.65: ref;
axiom (.str.65 == $sub.ref(0, 71281));
const {:count 28} .str.66: ref;
axiom (.str.66 == $sub.ref(0, 72333));
const {:count 9} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 73366));
const {:count 19} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 74409));
const {:count 34} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 75467));
const {:count 27} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 76518));
const {:count 17} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 77559));
const {:count 16} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 78599));
const {:count 15} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 79638));
const {:count 14} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 80676));
const {:count 14} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 81714));
const {:count 17} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 82755));
const {:count 30} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 83809));
const {:count 29} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 84862));
const {:count 29} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 85915));
const {:count 28} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 86967));
const {:count 28} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 88019));
const {:count 23} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 89066));
const {:count 34} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 90124));
const {:count 34} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 91182));
const {:count 36} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 92242));
const {:count 36} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 93302));
const x86_dma_fallback_dev: ref;
axiom (x86_dma_fallback_dev == $sub.ref(0, 32816));
const {:count 33} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 94359));
const {:count 45} .str.64: ref;
axiom (.str.64 == $sub.ref(0, 95428));
const {:count 10} .str.49: ref;
axiom (.str.49 == $sub.ref(0, 96462));
const {:count 11} .str.50: ref;
axiom (.str.50 == $sub.ref(0, 97497));
const {:count 14} .str.51: ref;
axiom (.str.51 == $sub.ref(0, 98535));
const {:count 14} .str.52: ref;
axiom (.str.52 == $sub.ref(0, 99573));
const {:count 13} .str.53: ref;
axiom (.str.53 == $sub.ref(0, 100610));
const {:count 14} .str.54: ref;
axiom (.str.54 == $sub.ref(0, 101648));
const {:count 10} .str.55: ref;
axiom (.str.55 == $sub.ref(0, 102682));
const {:count 16} .str.56: ref;
axiom (.str.56 == $sub.ref(0, 103722));
const {:count 20} .str.57: ref;
axiom (.str.57 == $sub.ref(0, 104766));
const {:count 69} .str.60: ref;
axiom (.str.60 == $sub.ref(0, 105859));
const {:count 5} .str.62: ref;
axiom (.str.62 == $sub.ref(0, 106888));
const {:count 6} .str.63: ref;
axiom (.str.63 == $sub.ref(0, 107918));
const {:count 29} .str.61: ref;
axiom (.str.61 == $sub.ref(0, 108971));
const {:count 71} .str.58: ref;
axiom (.str.58 == $sub.ref(0, 110066));
const {:count 38} .str.59: ref;
axiom (.str.59 == $sub.ref(0, 111128));
const {:count 10} .str.46: ref;
axiom (.str.46 == $sub.ref(0, 112162));
const {:count 31} .str.47: ref;
axiom (.str.47 == $sub.ref(0, 113217));
const {:count 29} .str.48: ref;
axiom (.str.48 == $sub.ref(0, 114270));
const {:count 45} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 115339));
const {:count 41} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 116404));
const {:count 25} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 117453));
const {:count 22} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 118499));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32824));
const {:count 56} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 119579));
const {:count 13} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 120616));
const .str: ref;
axiom (.str == $sub.ref(0, 121641));
const {:count 14} .str.2.71: ref;
axiom (.str.2.71 == $sub.ref(0, 122679));
const ldv_EMGentry_exit_velocity_cleanup_module_18_2: ref;
axiom (ldv_EMGentry_exit_velocity_cleanup_module_18_2 == $sub.ref(0, 123711));
procedure  ldv_EMGentry_exit_velocity_cleanup_module_18_2($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13398, 3} true;
  assume {:verifier.code 0} true;
  call velocity_cleanup_module();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13400, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 124743));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const velocity_cleanup_module: ref;
axiom (velocity_cleanup_module == $sub.ref(0, 125775));
procedure  velocity_cleanup_module()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13222, 3} true;
  assume {:verifier.code 0} true;
  call velocity_unregister_notifier();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13223, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_unregister_driver_119(velocity_pci_driver);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13224, 3} true;
  assume {:verifier.code 0} true;
  call ldv_platform_driver_unregister_120(velocity_platform_driver);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13226, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_unregister_notifier: ref;
axiom (velocity_unregister_notifier == $sub.ref(0, 126807));
procedure  velocity_unregister_notifier()
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13188, 3} true;
  assume {:verifier.code 0} true;
  call $i0 := ldv_unregister_inetaddr_notifier_116(velocity_inetaddr_notifier);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13190, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_unregister_driver_119: ref;
axiom (ldv_pci_unregister_driver_119 == $sub.ref(0, 127839));
procedure  ldv_pci_unregister_driver_119($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16221, 3} true;
  assume {:verifier.code 0} true;
  call pci_unregister_driver($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16222, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_unregister_driver($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16224, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_platform_driver_unregister_120: ref;
axiom (ldv_platform_driver_unregister_120 == $sub.ref(0, 128871));
procedure  ldv_platform_driver_unregister_120($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16233, 3} true;
  assume {:verifier.code 0} true;
  call platform_driver_unregister($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16234, 3} true;
  assume {:verifier.code 0} true;
  call ldv_platform_driver_unregister($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16236, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const platform_driver_unregister: ref;
axiom (platform_driver_unregister == $sub.ref(0, 129903));
procedure  platform_driver_unregister($p0: ref);
const ldv_platform_driver_unregister: ref;
axiom (ldv_platform_driver_unregister == $sub.ref(0, 130935));
procedure  ldv_platform_driver_unregister($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15028, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_deregister_10_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15030, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_deregister_10_1: ref;
axiom (ldv_dispatch_deregister_10_1 == $sub.ref(0, 131967));
procedure  ldv_dispatch_deregister_10_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13495, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_unregister_driver: ref;
axiom (pci_unregister_driver == $sub.ref(0, 132999));
procedure  pci_unregister_driver($p0: ref);
const ldv_pci_unregister_driver: ref;
axiom (ldv_pci_unregister_driver == $sub.ref(0, 134031));
procedure  ldv_pci_unregister_driver($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15015, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_deregister_14_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15017, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_deregister_14_1: ref;
axiom (ldv_dispatch_deregister_14_1 == $sub.ref(0, 135063));
procedure  ldv_dispatch_deregister_14_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13511, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_unregister_inetaddr_notifier_116: ref;
axiom (ldv_unregister_inetaddr_notifier_116 == $sub.ref(0, 136095));
procedure  ldv_unregister_inetaddr_notifier_116($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16172, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := unregister_inetaddr_notifier($p0);
  // WARNING: %2 = call i32 @unregister_inetaddr_notifier(%struct.notifier_block* %0), !dbg !8093, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !8173, metadata !8090), !dbg !8174, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16174, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_unregister_inetaddr_notifier($i1, $p0);
  // WARNING: %3 = call i32 @ldv_unregister_inetaddr_notifier(i32 %2, %struct.notifier_block* %0), !dbg !8101, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16176, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const unregister_inetaddr_notifier: ref;
axiom (unregister_inetaddr_notifier == $sub.ref(0, 137127));
procedure  unregister_inetaddr_notifier($p0: ref)
  returns ($r: i32);
const ldv_unregister_inetaddr_notifier: ref;
axiom (ldv_unregister_inetaddr_notifier == $sub.ref(0, 138159));
procedure  ldv_unregister_inetaddr_notifier($i0: i32, $p1: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15817, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_deregister_16_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15819, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_deregister_16_1: ref;
axiom (ldv_dispatch_deregister_16_1 == $sub.ref(0, 139191));
procedure  ldv_dispatch_deregister_16_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13519, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_netdev_event: ref;
axiom (velocity_netdev_event == $sub.ref(0, 140223));
procedure  velocity_netdev_event($p0: ref, $i1: i64, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.notifier_block* %0, i64 0, metadata !8203, metadata !8090), !dbg !8204, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13155, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13156, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13156, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13156, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13156, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13157, 13} true;
  assume {:verifier.code 0} true;
  call $p8 := dev_net($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, $p2i.ref.i64(init_net));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 63} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 87} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p7, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 87} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 66} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 98} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i13, $p2i.ref.i64(velocity_netdev_ops));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 63} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13161, 11} true;
  assume {:verifier.code 0} true;
  call $p15 := netdev_priv($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13162, 21} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13162, 5} true;
  assume {:verifier.code 0} true;
  call $i17 := velocity_get_ip($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13164, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13159, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13167, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const dev_net: ref;
axiom (dev_net == $sub.ref(0, 141255));
procedure  dev_net($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7501, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 1248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7501, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := read_pnet($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7503, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const netdev_priv: ref;
axiom (netdev_priv == $sub.ref(0, 142287));
procedure  netdev_priv($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7511, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7511, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 3200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7511, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const velocity_get_ip: ref;
axiom (velocity_get_ip == $sub.ref(0, 143319));
procedure  velocity_get_ip($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !8263, metadata !8090), !dbg !8264, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7907, 3} true;
  assume {:verifier.code 0} true;
  call rcu_read_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7908, 64} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7908, 64} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7908, 12} true;
  assume {:verifier.code 0} true;
  call $p3 := __in_dev_get_rcu($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7910, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7910, 30} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7910, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7911, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7911, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7912, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7912, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7912, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 2);
  goto $bb6;
$bb3:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7914, 31} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7914, 7} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7914, 65} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p7, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7914, 7} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7914, 7} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p11, $p13, 4, $zext.i32.i64(4), (0 == 1));
  // WARNING: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %16, i64 4, i32 4, i1 false), !dbg !8117, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7917, 5} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb5;
$bb4:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 2);
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7920, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i14;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7924, 3} true;
  assume {:verifier.code 0} true;
  call rcu_read_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7926, 3} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
}
const rcu_read_lock: ref;
axiom (rcu_read_lock == $sub.ref(0, 144351));
procedure  rcu_read_lock()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6617, 3} true;
  assume {:verifier.code 0} true;
  call __rcu_read_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6618, 3} true;
  assume {:verifier.code 0} true;
  call rcu_lock_acquire(rcu_lock_map);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6619, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := debug_lockdep_rcu_enabled();
  // WARNING: %1 = call i32 @debug_lockdep_rcu_enabled(), !dbg !8092, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6621, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6621, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6621, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6621, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6621, 16} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6621, 7} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb3;
$bb5:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6623, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := rcu_is_watching();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6623, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %7 = zext i1 %6 to i8, !dbg !8105, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6625, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6625, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6627, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb8;
$bb7:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6630, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6630, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6633, 7} true;
  assume {:verifier.code 0} true;
  call lockdep_rcu_suspicious(.str.30, 812, .str.31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6635, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6638, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6641, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __in_dev_get_rcu: ref;
axiom (__in_dev_get_rcu == $sub.ref(0, 145383));
procedure  __in_dev_get_rcu($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7820, 65} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 776);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7820, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7821, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := debug_lockdep_rcu_enabled();
  // WARNING: %4 = call i32 @debug_lockdep_rcu_enabled(), !dbg !8099, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7823, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7823, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7823, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7823, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7823, 16} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7823, 7} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb3;
$bb5:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7825, 15} true;
  assume {:verifier.code 0} true;
  call $i6 := rcu_read_lock_held();
  // WARNING: %9 = call i32 @rcu_read_lock_held(), !dbg !8108, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7827, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7827, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7830, 7} true;
  assume {:verifier.code 0} true;
  call lockdep_rcu_suspicious(.str.32, 202, .str.33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7832, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7835, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7838, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 146415));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const rcu_read_unlock: ref;
axiom (rcu_read_unlock == $sub.ref(0, 147447));
procedure  rcu_read_unlock()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6653, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := debug_lockdep_rcu_enabled();
  // WARNING: %1 = call i32 @debug_lockdep_rcu_enabled(), !dbg !8087, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6655, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6655, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6655, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6655, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6655, 16} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6655, 7} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb3;
$bb5:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6657, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := rcu_is_watching();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6657, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %7 = zext i1 %6 to i8, !dbg !8103, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6659, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6659, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6661, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb8;
$bb7:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6664, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6664, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6667, 7} true;
  assume {:verifier.code 0} true;
  call lockdep_rcu_suspicious(.str.30, 833, .str.34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6669, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6672, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6676, 3} true;
  assume {:verifier.code 0} true;
  call rcu_lock_release(rcu_lock_map);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6677, 3} true;
  assume {:verifier.code 0} true;
  call __rcu_read_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6679, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const debug_lockdep_rcu_enabled: ref;
axiom (debug_lockdep_rcu_enabled == $sub.ref(0, 148479));
procedure  debug_lockdep_rcu_enabled()
  returns ($r: i32);
const rcu_is_watching: ref;
axiom (rcu_is_watching == $sub.ref(0, 149511));
procedure  rcu_is_watching()
  returns ($r: i1);
const lockdep_rcu_suspicious: ref;
axiom (lockdep_rcu_suspicious == $sub.ref(0, 150543));
procedure  lockdep_rcu_suspicious($p0: ref, $i1: i32, $p2: ref);
const rcu_lock_release: ref;
axiom (rcu_lock_release == $sub.ref(0, 151575));
procedure  rcu_lock_release($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6551, 3} true;
  assume {:verifier.code 0} true;
  call lock_release($p0, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6553, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __rcu_read_unlock: ref;
axiom (__rcu_read_unlock == $sub.ref(0, 152607));
procedure  __rcu_read_unlock()
{
$bb0:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6527, 3} true;
  assume {:verifier.code 0} true;
  call __preempt_count_sub(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6529, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __preempt_count_sub: ref;
axiom (__preempt_count_sub == $sub.ref(0, 153639));
procedure  __preempt_count_sub($i0: i32)
{
  var $i1: i1;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !8424, metadata !8090), !dbg !8425, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6361, 5} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6392, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6392, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb17, $bb18;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6372, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6372, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i1 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6374, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6375, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6375, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6380, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i2 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6377, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6378, 66} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0, $i0);
  call devirtbounce.2(0, __preempt_count, $i3, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb5;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6418, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6382, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6382, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i4 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6384, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6385, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6385, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6390, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb14:
  assume ($i5 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6388, 66} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, $i0);
  call devirtbounce.2(0, __preempt_count, $i6, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb17:
  assume ($i7 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6394, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6395, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6395, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6400, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb20:
  assume ($i8 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6397, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6398, 66} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, $i0);
  call devirtbounce.2(0, __preempt_count, $i9, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6402, 16} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i10 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6404, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6405, 16} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6405, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb27, $bb28;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6410, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb27:
  assume ($i11 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6407, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6408, 66} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, $i0);
  call devirtbounce.2(0, __preempt_count, $i12, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6413, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6414, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6416, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const __bad_percpu_size: ref;
axiom (__bad_percpu_size == $sub.ref(0, 154671));
procedure  __bad_percpu_size();
const lock_release: ref;
axiom (lock_release == $sub.ref(0, 155703));
procedure  lock_release($p0: ref, $i1: i32, $i2: i64);
const rcu_read_lock_held: ref;
axiom (rcu_read_lock_held == $sub.ref(0, 156735));
procedure  rcu_read_lock_held()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i8;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6569, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := debug_lockdep_rcu_enabled();
  // WARNING: %1 = call i32 @debug_lockdep_rcu_enabled(), !dbg !8087, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6571, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6571, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6572, 5} true;
  assume {:verifier.code 0} true;
  $i2 := 1;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6607, 1} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6577, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := rcu_is_watching();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6577, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %7 = zext i1 %6 to i8, !dbg !8101, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6579, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6579, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6581, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb7;
$bb6:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6584, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6584, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6585, 5} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  goto $bb3;
$bb9:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6590, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := rcu_lockdep_current_cpu_online();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6590, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i8($i8);
  // WARNING: %17 = zext i1 %16 to i8, !dbg !8118, !verifier.code !8090
  call {:cexpr "tmp___2"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6592, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i8.i1($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6592, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6594, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb13;
$bb12:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := 1;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6597, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6597, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6598, 5} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  goto $bb3;
$bb15:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6603, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := lock_is_held(rcu_lock_map);
  // WARNING: %26 = call i32 @lock_is_held(%struct.lockdep_map* @rcu_lock_map), !dbg !8133, !verifier.code !8090
  call {:cexpr "tmp___4"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6605, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i13;
  goto $bb3;
}
const rcu_lockdep_current_cpu_online: ref;
axiom (rcu_lockdep_current_cpu_online == $sub.ref(0, 157767));
procedure  rcu_lockdep_current_cpu_online()
  returns ($r: i1);
const lock_is_held: ref;
axiom (lock_is_held == $sub.ref(0, 158799));
procedure  lock_is_held($p0: ref)
  returns ($r: i32);
const __rcu_read_lock: ref;
axiom (__rcu_read_lock == $sub.ref(0, 159831));
procedure  __rcu_read_lock()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6514, 3} true;
  assume {:verifier.code 0} true;
  call __preempt_count_add(1);
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6517, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const rcu_lock_acquire: ref;
axiom (rcu_lock_acquire == $sub.ref(0, 160863));
procedure  rcu_lock_acquire($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6540, 3} true;
  assume {:verifier.code 0} true;
  call lock_acquire($p0, 0, 0, 2, 1, $0.ref, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6542, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const lock_acquire: ref;
axiom (lock_acquire == $sub.ref(0, 161895));
procedure  lock_acquire($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32, $p5: ref, $i6: i64);
const __preempt_count_add: ref;
axiom (__preempt_count_add == $sub.ref(0, 162927));
procedure  __preempt_count_add($i0: i32)
{
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !8554, metadata !8090), !dbg !8555, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6283, 5} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6314, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6314, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb17, $bb18;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6294, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6294, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i1 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6296, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6297, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6297, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6302, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i2 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6299, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i2 == 1));
  call devirtbounce.2(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb5;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6340, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6304, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6304, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i3 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6306, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6307, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6307, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6312, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb14:
  assume ($i4 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6309, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i4 == 1));
  call devirtbounce.2(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb17:
  assume ($i5 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6316, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6317, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6317, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6322, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb20:
  assume ($i6 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6319, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i6 == 1));
  call devirtbounce.2(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6324, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6324, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i7 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6326, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6327, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6327, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb27, $bb28;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6332, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb27:
  assume ($i8 == 1);
  call devirtbounce.1(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6329, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i8 == 1));
  call devirtbounce.2(0, __preempt_count, $i0, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6335, 3} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6336, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6338, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const read_pnet: ref;
axiom (read_pnet == $sub.ref(0, 163959));
procedure  read_pnet($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7384, 25} true;
  assume {:verifier.code 0} true;
  $p1 := $load.ref($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7384, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const velocity_pci_probe: ref;
axiom (velocity_pci_probe == $sub.ref(0, 164991));
procedure  velocity_pci_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i64;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i32;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i12: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11864, 89} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11864, 89} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.0, $p2);
  $p4 := $add.ref(chip_info_table, $mul.ref($i3, 24));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11865, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := pci_enable_device($p0);
  // WARNING: %6 = call i32 @pci_enable_device(%struct.pci_dev* %0), !dbg !8098, !verifier.code !8090
  call {:cexpr "ret"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11867, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11867, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11868, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i5;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11900, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11873, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := pci_request_regions($p0, .str.1);
  // WARNING: %11 = call i32 @pci_request_regions(%struct.pci_dev* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)), !dbg !8106, !verifier.code !8090
  call {:cexpr "ret"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11875, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11875, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11877, 47} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11877, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := dev_err.ref.ref($p10, .str.36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11879, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $i8;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11896, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11898, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i12;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11884, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11884, 49} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 1540);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11884, 49} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11884, 9} true;
  assume {:verifier.code 0} true;
  call $i16 := velocity_probe($p13, $i15, $p4, 0);
  // WARNING: %21 = call i32 @velocity_probe(%struct.device* %18, i32 %20, %struct.velocity_info_tbl* %5, i32 0), !dbg !8119, !verifier.code !8090
  call {:cexpr "ret"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11886, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11886, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11887, 5} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb10:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11892, 3} true;
  assume {:verifier.code 0} true;
  call pci_release_regions($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11893, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i16;
  goto $bb7;
}
const velocity_pci_remove: ref;
axiom (velocity_pci_remove == $sub.ref(0, 166023));
procedure  velocity_pci_remove($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11907, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11907, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_remove($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11908, 3} true;
  assume {:verifier.code 0} true;
  call pci_release_regions($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11909, 3} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11911, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_remove: ref;
axiom (velocity_remove == $sub.ref(0, 167055));
procedure  velocity_remove($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11844, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata_102($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11845, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11846, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11847, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11848, 3} true;
  assume {:verifier.code 0} true;
  call ldv_unregister_netdev_103($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11849, 26} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11849, 3} true;
  assume {:verifier.code 0} true;
  call netif_napi_del($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11850, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11850, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11850, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11850, 3} true;
  assume {:verifier.code 0} true;
  call iounmap($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11851, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev_104($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11852, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11852, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11852, 17} true;
  assume {:verifier.code 0} true;
  $M.1 := $i10;
  call {:cexpr "velocity_nics"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11854, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const pci_release_regions: ref;
axiom (pci_release_regions == $sub.ref(0, 168087));
procedure  pci_release_regions($p0: ref);
const pci_disable_device: ref;
axiom (pci_disable_device == $sub.ref(0, 169119));
procedure  pci_disable_device($p0: ref);
const ldv_dev_get_drvdata_102: ref;
axiom (ldv_dev_get_drvdata_102 == $sub.ref(0, 170151));
procedure  ldv_dev_get_drvdata_102($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16061, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16063, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_unregister_netdev_103: ref;
axiom (ldv_unregister_netdev_103 == $sub.ref(0, 171183));
procedure  ldv_unregister_netdev_103($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16072, 3} true;
  assume {:verifier.code 0} true;
  call unregister_netdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16073, 3} true;
  assume {:verifier.code 0} true;
  call ldv_unregister_netdev($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16075, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_napi_del: ref;
axiom (netif_napi_del == $sub.ref(0, 172215));
procedure  netif_napi_del($p0: ref);
const iounmap: ref;
axiom (iounmap == $sub.ref(0, 173247));
procedure  iounmap($p0: ref);
const ldv_free_netdev_104: ref;
axiom (ldv_free_netdev_104 == $sub.ref(0, 174279));
procedure  ldv_free_netdev_104($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16084, 3} true;
  assume {:verifier.code 0} true;
  call free_netdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16085, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16087, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_netdev: ref;
axiom (free_netdev == $sub.ref(0, 175311));
procedure  free_netdev($p0: ref);
const ldv_free_netdev: ref;
axiom (ldv_free_netdev == $sub.ref(0, 176343));
procedure  ldv_free_netdev($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14032, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14032, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14034, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free: ref;
axiom (ldv_free == $sub.ref(0, 177375));
procedure  ldv_free($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16513, 3} true;
  assume {:verifier.code 0} true;
  call free_($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16515, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_: ref;
axiom (free_ == $sub.ref(0, 178407));
procedure  free_($p0: ref)
{
  call $free($p0);
}
const unregister_netdev: ref;
axiom (unregister_netdev == $sub.ref(0, 179439));
procedure  unregister_netdev($p0: ref);
const ldv_unregister_netdev: ref;
axiom (ldv_unregister_netdev == $sub.ref(0, 180471));
procedure  ldv_unregister_netdev($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15830, 62} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15830, 62} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15830, 75} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15830, 75} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15830, 3} true;
  assume {:verifier.code 0} true;
  call ldv_unregister_netdev_stop_13_2($p5, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15832, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_deregister_13_1($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15834, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_unregister_netdev_stop_13_2: ref;
axiom (ldv_unregister_netdev_stop_13_2 == $sub.ref(0, 181503));
procedure  ldv_unregister_netdev_stop_13_2($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15844, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_close($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15846, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_deregister_13_1: ref;
axiom (ldv_dispatch_deregister_13_1 == $sub.ref(0, 182535));
procedure  ldv_dispatch_deregister_13_1($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13503, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_close: ref;
axiom (velocity_close == $sub.ref(0, 183567));
procedure  velocity_close($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11356, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11357, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11358, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11358, 3} true;
  assume {:verifier.code 0} true;
  call napi_disable($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11359, 3} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11360, 3} true;
  assume {:verifier.code 0} true;
  call velocity_shutdown($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11362, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p2, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11362, 30} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11362, 8} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11362, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i64($i6, 524288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11362, 48} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11362, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11364, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := velocity_get_ip($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11366, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11370, 39} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11370, 39} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11370, 44} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11370, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq_95($i11, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11371, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_rings($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11372, 23} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11372, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11372, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, $sub.i32(0, 65537));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11372, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11372, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11374, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const napi_disable: ref;
axiom (napi_disable == $sub.ref(0, 184599));
procedure  napi_disable($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7437, 3} true;
  assume {:verifier.code 0} true;
  call __might_sleep(.str.10, 486, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7438, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7438, 3} true;
  assume {:verifier.code 0} true;
  call set_bit(1, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7447, 64} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7447, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := test_and_set_bit(0, $p2);
  // WARNING: %4 = call i32 @test_and_set_bit(i64 0, i64* %3), !dbg !8100, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7450, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7443, 3} true;
  assume {:verifier.code 0} true;
  call msleep(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7447, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := test_and_set_bit(0, $p2);
  // WARNING: %7 = call i32 @test_and_set_bit(i64 0, i64* %3), !dbg !8100, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 7} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb4;
$bb7:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7449, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7455, 51} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7455, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit(1, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7457, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_stop_queue: ref;
axiom (netif_stop_queue == $sub.ref(0, 185631));
procedure  netif_stop_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7629, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7630, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7632, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_shutdown: ref;
axiom (velocity_shutdown == $sub.ref(0, 186663));
procedure  velocity_shutdown($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11038, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11038, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11039, 49} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11039, 21} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11039, 3} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11040, 42} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11040, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11040, 3} true;
  assume {:verifier.code 0} true;
  call writel(2, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11041, 45} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11041, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11041, 3} true;
  assume {:verifier.code 0} true;
  call writew($sub.i16(0, 1), $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11042, 43} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11042, 3} true;
  assume {:verifier.code 0} true;
  call writeb($sub.i8(0, 1), $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11043, 3} true;
  assume {:verifier.code 0} true;
  call safe_disable_mii_autopoll($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11044, 51} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11044, 23} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11044, 3} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11046, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free_irq_95: ref;
axiom (ldv_free_irq_95 == $sub.ref(0, 187695));
procedure  ldv_free_irq_95($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15981, 3} true;
  assume {:verifier.code 0} true;
  call free_irq($i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15982, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq($0.ref, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15984, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_free_rings: ref;
axiom (velocity_free_rings == $sub.ref(0, 188727));
procedure  velocity_free_rings($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10442, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_td_ring($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10443, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_rd_ring($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10444, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_dma_rings($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10446, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_free_td_ring: ref;
axiom (velocity_free_td_ring == $sub.ref(0, 189759));
procedure  velocity_free_td_ring($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $i18: i32;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i13: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !8901, metadata !8090), !dbg !8902, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 576);
  $p2 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 20} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32(0, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10428, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10402, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10402, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 576);
  $p8 := $add.ref($add.ref($p0, 576), 88);
  $p9 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i6, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10402, 23} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10402, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10402, 41} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10402, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10403, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  goto $bb8;
$bb7:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10425, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i13, 1);
  // WARNING: %39 = add nsw i32 %.04, 1, !dbg !8130, !verifier.code !8092
  call {:cexpr "j"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 20} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $slt.i32($i32, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i32;
  assume {:branchcond $i34} true;
  goto $bb18, $bb19;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 17} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 896);
  $p15 := $add.ref($add.ref($p0, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 25} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $slt.i32(0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb13;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10416, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10411, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_td_ring_entry($p0, $i5, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10412, 9} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i18, 1);
  // WARNING: %22 = add nsw i32 %.012, 1, !dbg !8118, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 25} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i19, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $i19;
  assume {:branchcond $i21} true;
  goto $bb15, $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  assume ($i21 == 1);
  goto $bb13;
$bb16:
  assume !(($i21 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10421, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10421, 31} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 576);
  $p24 := $add.ref($add.ref($p0, 576), 88);
  $p25 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i22, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10421, 25} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10421, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10421, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10422, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10422, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 576);
  $p30 := $add.ref($add.ref($p0, 576), 88);
  $p31 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i28, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10422, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p31, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10423, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i5;
  goto $bb8;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 7} true;
  assume {:verifier.code 0} true;
  assume ($i34 == 1);
  goto $bb4;
$bb19:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10427, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10433, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_free_rd_ring: ref;
axiom (velocity_free_rd_ring == $sub.ref(0, 190791));
procedure  velocity_free_rd_ring($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i10: i32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10112, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 728);
  $p2 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10112, 32} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10112, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10112, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10112, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10113, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10151, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 17} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 896);
  $p7 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 25} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32(0, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 7} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10141, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10121, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 728);
  $p12 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10121, 22} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10121, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10121, 27} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10122, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 728);
  $p17 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10122, 17} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10122, 24} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10122, 22} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p18, $mul.ref($i19, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10123, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10123, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p21, 0, 16, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10125, 32} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10125, 32} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10125, 36} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10126, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10138, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i10, 1);
  // WARNING: %46 = add nsw i32 %.01, 1, !dbg !8144, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 25} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $slt.i32($i38, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $i38;
  assume {:branchcond $i40} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 32} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 46} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p13, $mul.ref($i14, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 46} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i64($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 70} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 728);
  $p31 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 73} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 55} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10131, 3} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p27, $i29, $i33, 2, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10133, 12} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p13, $mul.ref($i14, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10133, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10134, 24} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10134, 24} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10134, 3} true;
  assume {:verifier.code 0} true;
  call consume_skb($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10135, 12} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10135, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p37, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10136, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 7} true;
  assume {:verifier.code 0} true;
  assume ($i40 == 1);
  goto $bb8;
$bb15:
  assume !(($i40 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10140, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10146, 31} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 728);
  $p42 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10146, 34} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10146, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10146, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10147, 9} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 728);
  $p46 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10147, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10149, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const velocity_free_dma_rings: ref;
axiom (velocity_free_dma_rings == $sub.ref(0, 191823));
procedure  velocity_free_dma_rings($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 63} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 896);
  $p2 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 71} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 41} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 102} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 896);
  $p6 := $add.ref($add.ref($p0, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 110} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 80} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 140} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 576);
  $p10 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 143} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 118} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 116} true;
  assume {:verifier.code 0} true;
  $i13 := $mul.i64($i8, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 149} true;
  assume {:verifier.code 0} true;
  $i14 := $mul.i64($i13, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 77} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i4, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 25} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i64.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10248, 156} true;
  assume {:verifier.code 0} true;
  $i17 := $mul.i32($i16, 16);
  // WARNING: %18 = mul i32 %17, 16, !dbg !8108, !verifier.code !8092
  call {:cexpr "size"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 24} true;
  assume {:verifier.code 0} true;
  $p18 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 24} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 58} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 728);
  $p22 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 61} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 44} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 73} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 728);
  $p26 := $add.ref($add.ref($p0, 728), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 76} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i64($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10249, 3} true;
  assume {:verifier.code 0} true;
  call dma_free_attrs($p19, $i20, $p24, $i27, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10252, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_free_attrs: ref;
axiom (dma_free_attrs == $sub.ref(0, 192855));
procedure  dma_free_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i64, $p4: ref)
{
  var $p5: ref;
  var $i6: i64;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i1;
  var $i15: i1;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !9041, metadata !8090), !dbg !9042, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !9045, metadata !8090), !dbg !9046, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7168, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7170, 12} true;
  assume {:verifier.code 0} true;
  call $i6 := arch_local_save_flags();
  // WARNING: %7 = call i64 @arch_local_save_flags(), !dbg !8106, !verifier.code !8090
  call {:cexpr "_flags"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7171, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := arch_irqs_disabled_flags($i6);
  // WARNING: %8 = call i32 @arch_irqs_disabled_flags(i64 %7), !dbg !8109, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7172, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7172, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  // WARNING: %10 = zext i1 %9 to i32, !dbg !8112, !verifier.code !8090
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7173, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7173, 47} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7173, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7173, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv__builtin_expect($i12, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !8117, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7175, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7175, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7177, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.8, 166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7180, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7184, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7184, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7184, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7184, 3} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7185, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_free_coherent($p0, $i1, $p2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7187, 28} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7187, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7187, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7187, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7187, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7191, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7191, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  call devirtbounce.3($p24, $p0, $i1, $p2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7193, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7196, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_dma_ops: ref;
axiom (get_dma_ops == $sub.ref(0, 193887));
procedure  get_dma_ops($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p13: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6870, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6870, 49} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6870, 49} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6870, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6870, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8097, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 17} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6874, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, dma_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6874, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p12;
  goto $bb6;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 41} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 1184);
  $p8 := $add.ref($p0, 1184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 58} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6873, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6876, 18} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 1184);
  $p15 := $add.ref($p0, 1184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6876, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6876, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p16;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6879, 1} true;
  assume {:verifier.code 0} true;
  $r := $p13;
  $exn := false;
  return;
}
const arch_local_save_flags: ref;
axiom (arch_local_save_flags == $sub.ref(0, 194919));
procedure  arch_local_save_flags()
  returns ($r: i64)
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9126, metadata !8090), !dbg !9127, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9128, metadata !8090), !dbg !9129, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9130, metadata !8090), !dbg !9131, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 undef, i64 0, metadata !9132, metadata !8090), !dbg !9133, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6208, 64} true;
  assume {:verifier.code 0} true;
  $p0 := $load.ref($M.0, pv_irq_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6208, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6208, 69} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6208, 69} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6208, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6208, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !8106, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6211, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6211, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  call devirtbounce.4(0, .str.9, 804, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6215, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  call $i7 := devirtbounce.5(0, 44, pv_irq_ops, 1);
  // WARNING: %11 = call i64 @devirtbounce.5(i64 (i64, i8**, i32)* asm sideeffect "771:\0A\09call *${2:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${1:c}\0A  .byte 772b-771b\0A  .short ${3:c}\0A.popsection\0A", "={ax},i,i,i,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}", i64 44, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 0, i32 0), i32 1)
  call {:cexpr "__eax"} boogie_si_record_i64($i7);
  // WARNING: call void @llvm.dbg.value(metadata i64 %11, i64 0, metadata !9134, metadata !8090), !dbg !9135, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6224, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const arch_irqs_disabled_flags: ref;
axiom (arch_irqs_disabled_flags == $sub.ref(0, 195951));
procedure  arch_irqs_disabled_flags($i0: i64)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6232, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $and.i64($i0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6232, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6232, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6232, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 196983));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !9165, metadata !8090), !dbg !9166, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16422, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 198015));
procedure  warn_slowpath_null($p0: ref, $i1: i32);
const debug_dma_free_coherent: ref;
axiom (debug_dma_free_coherent == $sub.ref(0, 199047));
procedure  debug_dma_free_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i64);
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 200079));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const dma_unmap_single_attrs: ref;
axiom (dma_unmap_single_attrs == $sub.ref(0, 201111));
procedure  dma_unmap_single_attrs($p0: ref, $i1: i64, $i2: i64, $i3: i32, $p4: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !9172, metadata !8090), !dbg !9173, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !9174, metadata !8090), !dbg !9175, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !9176, metadata !8090), !dbg !9177, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6930, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6932, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := valid_dma_direction($i3);
  // WARNING: %7 = call i32 @valid_dma_direction(i32 %3), !dbg !8106, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6933, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6933, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6933, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6933, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0);
  // WARNING: %11 = call i64 @ldv__builtin_expect(i64 %10, i64 0), !dbg !8111, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6935, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6935, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  call devirtbounce.4(0, .str.7, 36, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6939, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6944, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6944, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6944, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6944, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6944, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6949, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6949, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  call devirtbounce.6($p17, $p0, $i1, $i2, $i3, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6951, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6955, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_unmap_page($p0, $i1, $i2, $i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6957, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const consume_skb: ref;
axiom (consume_skb == $sub.ref(0, 202143));
procedure  consume_skb($p0: ref);
const kfree: ref;
axiom (kfree == $sub.ref(0, 203175));
procedure  kfree($p0: ref);
const valid_dma_direction: ref;
axiom (valid_dma_direction == $sub.ref(0, 204207));
procedure  valid_dma_direction($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6841, 40} true;
  assume {:verifier.code 0} true;
  $i1 := $ule.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6841, 40} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6841, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const debug_dma_unmap_page: ref;
axiom (debug_dma_unmap_page == $sub.ref(0, 205239));
procedure  debug_dma_unmap_page($p0: ref, $i1: i64, $i2: i64, $i3: i32, $i4: i1);
const velocity_free_td_ring_entry: ref;
axiom (velocity_free_td_ring_entry == $sub.ref(0, 206271));
procedure  velocity_free_td_ring_entry($p0: ref, $i1: i32, $i2: i32)
{
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i19: i32;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !9224, metadata !8090), !dbg !9225, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !9226, metadata !8090), !dbg !9227, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10357, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10357, 19} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 576);
  $p5 := $add.ref($add.ref($p0, 576), 88);
  $p6 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i3, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10357, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10357, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10357, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10358, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10358, 31} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10359, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10392, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10363, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p7, $mul.ref($i8, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10363, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10363, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10363, 36} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10363, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 22} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p7, $mul.ref($i8, 72)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 22} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32(0, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 9} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10379, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10367, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10367, 18} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p7, $mul.ref($i8, 72)), 16);
  $p22 := $add.ref($add.ref($add.ref($p7, $mul.ref($i8, 72)), 16), $mul.ref($i20, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10367, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10367, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10367, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 36} true;
  assume {:verifier.code 0} true;
  $p25 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 36} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 41} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 50} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p7, $mul.ref($i8, 72)), 16);
  $p29 := $add.ref($add.ref($add.ref($p7, $mul.ref($i8, 72)), 16), $mul.ref($i27, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 41} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i64($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 81} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p7, $mul.ref($i8, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 81} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 87} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 87} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 62} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i32.i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10369, 7} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p26, $i30, $i35, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10371, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10371, 16} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p7, $mul.ref($i8, 72)), 16);
  $p38 := $add.ref($add.ref($add.ref($p7, $mul.ref($i8, 72)), 16), $mul.ref($i36, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10371, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10373, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10376, 11} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i32($i19, 1);
  // WARNING: %47 = add nsw i32 %.01, 1, !dbg !8140, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 22} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $slt.i32($i39, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 9} true;
  assume {:verifier.code 0} true;
  $i19 := $i39;
  assume {:branchcond $i41} true;
  goto $bb15, $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 9} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb10;
$bb16:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10378, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10384, 26} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p7, $mul.ref($i8, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10384, 26} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10384, 5} true;
  assume {:verifier.code 0} true;
  call consume_skb($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10385, 14} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p7, $mul.ref($i8, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10385, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10390, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const free_irq: ref;
axiom (free_irq == $sub.ref(0, 207303));
procedure  free_irq($i0: i32, $p1: ref);
const ldv_free_irq: ref;
axiom (ldv_free_irq == $sub.ref(0, 208335));
procedure  ldv_free_irq($p0: ref, $i1: i32, $p2: ref)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !9287, metadata !8090), !dbg !9288, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !9291, metadata !8090), !dbg !9292, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14019, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_irq_deregister_8_1($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14021, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_irq_deregister_8_1: ref;
axiom (ldv_dispatch_irq_deregister_8_1 == $sub.ref(0, 209367));
procedure  ldv_dispatch_irq_deregister_8_1($i0: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13527, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const writel: ref;
axiom (writel == $sub.ref(0, 210399));
procedure  writel($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6748, 58} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  call devirtbounce.7(0, $i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6749, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const writew: ref;
axiom (writew == $sub.ref(0, 211431));
procedure  writew($i0: i16, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6739, 58} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  call devirtbounce.8(0, $i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6740, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const writeb: ref;
axiom (writeb == $sub.ref(0, 212463));
procedure  writeb($i0: i8, $p1: ref)
{
$bb0:
  call devirtbounce.9(0, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6731, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const safe_disable_mii_autopoll: ref;
axiom (safe_disable_mii_autopoll == $sub.ref(0, 213495));
procedure  safe_disable_mii_autopoll($p0: ref)
{
  var $p1: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i32;
  var $i9: i16;
  var $i10: i32;
  var $i11: i1;
  var $i2: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8565, 41} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8565, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p1);
  // WARNING: call void @writeb(i8 zeroext 0, i8* %2), !dbg !8096, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8581, 7} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8582, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8571, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8572, 49} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8572, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := readb($p3);
  // WARNING: %5 = call zeroext i8 @readb(i8* %4), !dbg !8103, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8574, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8574, 33} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8574, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8575, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8587, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8579, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8579, 24} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8579, 8} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i16($i8);
  // WARNING: %13 = trunc i32 %12 to i16, !dbg !8114, !verifier.code !8092
  call {:cexpr "ww"} boogie_si_record_i16($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8581, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i16.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8581, 25} true;
  assume {:verifier.code 0} true;
  $i11 := $ule.i32($i10, 4094);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8581, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $i9;
  assume {:branchcond $i11} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8581, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb1;
$bb8:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8581, 28} true;
  assume {:verifier.code 0} true;
  goto $bb5;
}
const __const_udelay: ref;
axiom (__const_udelay == $sub.ref(0, 214527));
procedure  __const_udelay($i0: i64);
const readb: ref;
axiom (readb == $sub.ref(0, 215559));
procedure  readb($p0: ref)
  returns ($r: i8)
{
  var $i1: i8;
$bb0:
  call $i1 := devirtbounce.10(0, $p0);
  // WARNING: %2 = call i8 @devirtbounce.10(i8 (i8*)* asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i8* %0)
  call {:cexpr "ret"} boogie_si_record_i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6704, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const netdev_get_tx_queue: ref;
axiom (netdev_get_tx_queue == $sub.ref(0, 216591));
procedure  netdev_get_tx_queue($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !9380, metadata !8090), !dbg !9381, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7492, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 904);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7492, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7492, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7492, 43} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, $mul.ref($i4, 496));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7492, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const netif_tx_stop_queue: ref;
axiom (netif_tx_stop_queue == $sub.ref(0, 217623));
procedure  netif_tx_stop_queue($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $p15: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7596, 19} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7596, 45} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7596, 45} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  // WARNING: %4 = zext i1 %3 to i32, !dbg !8096, !verifier.code !8092
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7597, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7597, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7597, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7597, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 0);
  // WARNING: %8 = call i64 @ldv__builtin_expect(i64 %7, i64 0), !dbg !8101, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7599, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7599, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7601, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.10, 2128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7603, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7607, 47} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7607, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7607, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7607, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 0);
  // WARNING: %16 = call i64 @ldv__builtin_expect(i64 %15, i64 0), !dbg !8114, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7609, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7609, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7611, 5} true;
  assume {:verifier.code 0} true;
  call $i14 := printk.ref(.str.11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7613, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7622, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7618, 57} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7618, 3} true;
  assume {:verifier.code 0} true;
  call set_bit(0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7620, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const printk: ref;
axiom (printk == $sub.ref(0, 218655));
procedure  printk.ref.ref.ref.i32($p0: ref, p.1: ref, p.2: ref, p.3: i32)
  returns ($r: i32);
procedure  printk.ref.ref.ref.i32.i32($p0: ref, p.1: ref, p.2: ref, p.3: i32, p.4: i32)
  returns ($r: i32);
procedure  printk.ref.ref.ref.ref($p0: ref, p.1: ref, p.2: ref, p.3: ref)
  returns ($r: i32);
procedure  printk.ref.ref.ref($p0: ref, p.1: ref, p.2: ref)
  returns ($r: i32);
procedure  printk.ref.ref($p0: ref, p.1: ref)
  returns ($r: i32);
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32);
procedure  printk.ref($p0: ref)
  returns ($r: i32);
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 219687));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.11(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6141, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __might_sleep: ref;
axiom (__might_sleep == $sub.ref(0, 220719));
procedure  __might_sleep($p0: ref, $i1: i32, $i2: i32);
const msleep: ref;
axiom (msleep == $sub.ref(0, 221751));
procedure  msleep($i0: i32);
const test_and_set_bit: ref;
axiom (test_and_set_bit == $sub.ref(0, 222783));
procedure  test_and_set_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
$bb0:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6159, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const clear_bit: ref;
axiom (clear_bit == $sub.ref(0, 223815));
procedure  clear_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.11(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6150, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dev_get_drvdata: ref;
axiom (ldv_dev_get_drvdata == $sub.ref(0, 224847));
procedure  ldv_dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 75} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 99} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 99} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 78} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 101} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 75} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16246, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16246, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16246, 23} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16246, 23} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16246, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $p10;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16245, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16252, 1} true;
  assume {:verifier.code 0} true;
  $r := $p11;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16250, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $0.ref;
  goto $bb6;
}
const pci_enable_device: ref;
axiom (pci_enable_device == $sub.ref(0, 225879));
procedure  pci_enable_device($p0: ref)
  returns ($r: i32);
const pci_request_regions: ref;
axiom (pci_request_regions == $sub.ref(0, 226911));
procedure  pci_request_regions($p0: ref, $p1: ref)
  returns ($r: i32);
const dev_err: ref;
axiom (dev_err == $sub.ref(0, 227943));
procedure  dev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  dev_err.ref.ref.ref($p0: ref, $p1: ref, p.2: ref)
  returns ($r: i32);
const velocity_probe: ref;
axiom (velocity_probe == $sub.ref(0, 228975));
procedure  velocity_probe($p0: ref, $i1: i32, $p2: ref, $i3: i32)
  returns ($r: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i32;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i1;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i8;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $p64: ref;
  var $i65: i32;
  var $i66: i32;
  var $i67: i32;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $i75: i32;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: i32;
  var $i86: i32;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $p100: ref;
  var $i101: i32;
  var $i102: i32;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i13: i32;
  var $p110: ref;
  var $p111: ref;
  var $i31: i32;
  var $i9: i32;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i8;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i8;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: i8;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i8;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $i143: i8;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !9477, metadata !8090), !dbg !9478, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info_tbl* %2, i64 0, metadata !9481, metadata !8090), !dbg !9482, !verifier.code !8092
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata i32* %5, metadata !9485, metadata !8090), !dbg !9486, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !9487, metadata !8090), !dbg !9488, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11694, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11694, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i5, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11694, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11696, 74} true;
  assume {:verifier.code 0} true;
  $i7 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11696, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := dev_notice.ref.ref.i32($p0, .str.37, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11698, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11834, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11703, 12} true;
  assume {:verifier.code 0} true;
  call $p10 := ldv_alloc_etherdev_mqs_98(2096, 1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11705, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11705, 30} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11705, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11706, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 12);
  goto $bb7;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11822, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i13;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11711, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p10, 1280);
  $p15 := $add.ref($p10, 1280);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11711, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11712, 9} true;
  assume {:verifier.code 0} true;
  call $p16 := netdev_priv($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11713, 10} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11715, 13} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32(1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11715, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11717, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := printk.ref.ref.ref(.str.38, .str.39, .str.28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11719, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := printk.ref(.str.40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11720, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := printk.ref(.str.41);
  // WARNING: %27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i32 0, i32 0)), !dbg !8141, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11723, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11727, 11} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p10, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11727, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11728, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p17, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11728, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11729, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $p17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11729, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p24, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11730, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_info($p17, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11732, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11732, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11735, 18} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11735, 43} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, $mul.ref($sub.ref(0, 152), 2936));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11735, 11} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p17, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11735, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11736, 11} true;
  assume {:verifier.code 0} true;
  call $i29 := velocity_get_pci_info($p17);
  // WARNING: %38 = call i32 @velocity_get_pci_info(%struct.velocity_info* %22), !dbg !8162, !verifier.code !8089
  call {:cexpr "ret"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11738, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $slt.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11738, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i25 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11745, 11} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p17, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11745, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11746, 11} true;
  assume {:verifier.code 0} true;
  call $i33 := velocity_get_platform_info($p17);
  // WARNING: %45 = call i32 @velocity_get_platform_info(%struct.velocity_info* %22), !dbg !8173, !verifier.code !8089
  call {:cexpr "ret"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11748, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $slt.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11748, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb19, $bb20;
$bb14:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11739, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $i29;
  goto $bb16;
$bb15:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11830, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev_101($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11832, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i31;
  goto $bb7;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11743, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11755, 45} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p17, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11755, 45} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i64($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11755, 13} true;
  assume {:verifier.code 0} true;
  call $p37 := ioremap($i36, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11756, 10} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11758, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11758, 28} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11758, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb22, $bb23;
$bb19:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11749, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $i33;
  goto $bb16;
$bb20:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb22:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11760, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 5);
  goto $bb16;
$bb23:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11765, 9} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p17, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11765, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11766, 58} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p38, 134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11766, 18} true;
  assume {:verifier.code 0} true;
  call $i43 := readb($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11766, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p17, 3824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11766, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11767, 3} true;
  assume {:verifier.code 0} true;
  call mac_wol_reset($p38);
  // WARNING: call void @mac_wol_reset(%struct.mac_regs* %54), !dbg !8200, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11777, 7} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 85} true;
  assume {:verifier.code 0} true;
  $p45 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 51} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 45} true;
  assume {:verifier.code 0} true;
  call $i47 := readb($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p10, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p49, $i47);
  // WARNING: store i8 %67, i8* %69, align 1, !dbg !8209, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 85} true;
  assume {:verifier.code 0} true;
  $p112 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 51} true;
  assume {:verifier.code 0} true;
  $p113 := $bitcast.ref.ref($p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 90} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p113, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 45} true;
  assume {:verifier.code 0} true;
  call $i115 := readb($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p10, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 22} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p117, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p118, $i115);
  // WARNING: store i8 %148, i8* %151, align 1, !dbg !8209, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11783, 16} true;
  assume {:verifier.code 0} true;
  call $p50 := dev_driver_string($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11784, 32} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p17, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11784, 41} true;
  assume {:verifier.code 0} true;
  $i52 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11784, 3} true;
  assume {:verifier.code 0} true;
  call velocity_get_options($p51, $i52, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11785, 31} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p17, 896);
  $p54 := $add.ref($add.ref($p17, 896), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11785, 39} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11785, 59} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11785, 59} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11785, 45} true;
  assume {:verifier.code 0} true;
  $i58 := $and.i32($i55, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11785, 9} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p17, 896);
  $p60 := $add.ref($add.ref($p17, 896), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11785, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 23} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p17, 896);
  $p62 := $add.ref($add.ref($p17, 896), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i32($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 52} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 52} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 58} true;
  assume {:verifier.code 0} true;
  $i66 := $and.i32($i65, $sub.i32(0, 16777216));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 37} true;
  assume {:verifier.code 0} true;
  $i67 := $or.i32($i63, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 9} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p17, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11786, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p68, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11787, 26} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p17, 896);
  $p70 := $add.ref($add.ref($p17, 896), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11787, 34} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11787, 9} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p17, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11787, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11788, 23} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p17, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11788, 23} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11788, 29} true;
  assume {:verifier.code 0} true;
  $i75 := $or.i32($i74, 524288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11788, 9} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p17, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11788, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p76, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11789, 27} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p17, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11789, 27} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11789, 40} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11789, 3} true;
  assume {:verifier.code 0} true;
  call $i80 := velocity_mii_read($p78, 3, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11790, 27} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p17, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11790, 27} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11790, 40} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11790, 54} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11790, 3} true;
  assume {:verifier.code 0} true;
  call $i85 := velocity_mii_read($p82, 2, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11791, 18} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11791, 9} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p17, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11791, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, $i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11792, 11} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p10, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11792, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p88, velocity_netdev_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11793, 11} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p10, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11793, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p89, velocity_ethtool_ops);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11794, 34} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p17, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11794, 3} true;
  assume {:verifier.code 0} true;
  call netif_napi_add($p10, $p90, velocity_poll, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11795, 11} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p10, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11795, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p91, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11796, 30} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p10, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11796, 30} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i64($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11796, 39} true;
  assume {:verifier.code 0} true;
  $i94 := $or.i64($i93, 898);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11796, 11} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p10, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11796, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p95, $i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11797, 9} true;
  assume {:verifier.code 0} true;
  call $i96 := ldv_register_netdev_99($p10);
  // WARNING: %118 = call i32 @ldv_register_netdev_99(%struct.net_device* %13), !dbg !8263, !verifier.code !8089
  call {:cexpr "ret"} boogie_si_record_i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11799, 11} true;
  assume {:verifier.code 0} true;
  $i97 := $slt.i32($i96, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11799, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11800, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i97 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11825, 26} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p17, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11825, 3} true;
  assume {:verifier.code 0} true;
  call netif_napi_del($p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11826, 11} true;
  assume {:verifier.code 0} true;
  $p111 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11826, 3} true;
  assume {:verifier.code 0} true;
  call iounmap($p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11827, 3} true;
  assume {:verifier.code 0} true;
  $i31 := $i96;
  goto $bb16;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11805, 13} true;
  assume {:verifier.code 0} true;
  call $i98 := velocity_get_link($p10);
  // WARNING: %123 = call i32 @velocity_get_link(%struct.net_device* %13), !dbg !8269, !verifier.code !8089
  call {:cexpr "tmp___1"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11807, 15} true;
  assume {:verifier.code 0} true;
  $i99 := $eq.i32($i98, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11807, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11809, 5} true;
  assume {:verifier.code 0} true;
  call netif_carrier_off($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11810, 30} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p17, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11810, 30} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11810, 41} true;
  assume {:verifier.code 0} true;
  $i102 := $or.i32($i101, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11810, 11} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p17, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11810, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p103, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11812, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11816, 3} true;
  assume {:verifier.code 0} true;
  call velocity_print_info($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11817, 33} true;
  assume {:verifier.code 0} true;
  $p104 := $p17;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11817, 33} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11817, 38} true;
  assume {:verifier.code 0} true;
  $p106 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11817, 3} true;
  assume {:verifier.code 0} true;
  call $i107 := ldv_dev_set_drvdata_100($p105, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11818, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p17, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11819, 19} true;
  assume {:verifier.code 0} true;
  $i108 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11819, 33} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i32($i108, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11819, 17} true;
  assume {:verifier.code 0} true;
  $M.1 := $i109;
  call {:cexpr "velocity_nics"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11820, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i96;
  goto $bb7;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 85} true;
  assume {:verifier.code 0} true;
  $p119 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 51} true;
  assume {:verifier.code 0} true;
  $p120 := $bitcast.ref.ref($p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 90} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p120, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 45} true;
  assume {:verifier.code 0} true;
  call $i122 := readb($p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p10, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 22} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p124, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p125, $i122);
  // WARNING: store i8 %156, i8* %159, align 1, !dbg !8209, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 85} true;
  assume {:verifier.code 0} true;
  $p126 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 51} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 90} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 45} true;
  assume {:verifier.code 0} true;
  call $i129 := readb($p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p10, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 22} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p131, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p132, $i129);
  // WARNING: store i8 %164, i8* %167, align 1, !dbg !8209, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 85} true;
  assume {:verifier.code 0} true;
  $p133 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 51} true;
  assume {:verifier.code 0} true;
  $p134 := $bitcast.ref.ref($p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 90} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p134, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 45} true;
  assume {:verifier.code 0} true;
  call $i136 := readb($p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p10, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p138 := $load.ref($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 22} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p138, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p139, $i136);
  // WARNING: store i8 %172, i8* %175, align 1, !dbg !8209, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11778, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 85} true;
  assume {:verifier.code 0} true;
  $p140 := $p38;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 51} true;
  assume {:verifier.code 0} true;
  $p141 := $bitcast.ref.ref($p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 90} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p141, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 45} true;
  assume {:verifier.code 0} true;
  call $i143 := readb($p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p10, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 13} true;
  assume {:verifier.code 0} true;
  $p145 := $load.ref($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 22} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p145, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11773, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p146, $i143);
  // WARNING: store i8 %180, i8* %183, align 1, !dbg !8209, !verifier.code !8089
  assume {:verifier.code 0} true;
  goto $bb28;
}
const dev_notice: ref;
axiom (dev_notice == $sub.ref(0, 230007));
procedure  dev_notice.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const ldv_alloc_etherdev_mqs_98: ref;
axiom (ldv_alloc_etherdev_mqs_98 == $sub.ref(0, 231039));
procedure  ldv_alloc_etherdev_mqs_98($i0: i32, $i1: i32, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !9696, metadata !8090), !dbg !9697, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !9698, metadata !8090), !dbg !9699, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16008, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := alloc_etherdev_mqs($i0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16010, 13} true;
  assume {:verifier.code 0} true;
  call $p4 := ldv_alloc_etherdev_mqs($p3, $i0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16012, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const velocity_init_info: ref;
axiom (velocity_init_info == $sub.ref(0, 232071));
procedure  velocity_init_info($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11552, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11552, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11552, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11552, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p5, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11553, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11553, 25} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11553, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 576);
  $p9 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11553, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11554, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 980);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11554, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11555, 26} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11555, 3} true;
  assume {:verifier.code 0} true;
  call $p12 := spinlock_check($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11556, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 1000);
  $p14 := $add.ref($p0, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11556, 56} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11556, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p15, .str.42, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11559, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_get_pci_info: ref;
axiom (velocity_get_pci_info == $sub.ref(0, 233103));
procedure  velocity_get_pci_info($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $i20: i32;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i64;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $i21: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11568, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11568, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11569, 3} true;
  assume {:verifier.code 0} true;
  call pci_set_master($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11570, 40} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 1544);
  $p4 := $add.ref($p2, 1544);
  $p5 := $add.ref($p2, 1544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11570, 52} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i64($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11570, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 568);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11570, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11571, 41} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 1544);
  $p9 := $add.ref($add.ref($p2, 1544), 56);
  $p10 := $add.ref($add.ref($p2, 1544), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11571, 53} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11571, 9} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11571, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11573, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2, 1544);
  $p14 := $add.ref($p2, 1544);
  $p15 := $add.ref($add.ref($p2, 1544), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11573, 26} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i64($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11573, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11573, 41} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11573, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11575, 47} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11575, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := dev_err.ref.ref($p19, .str.43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11577, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11599, 1} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11581, 14} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p2, 1544);
  $p23 := $add.ref($add.ref($p2, 1544), 56);
  $p24 := $add.ref($add.ref($add.ref($p2, 1544), 56), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11581, 26} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i64($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11581, 32} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i64($i25, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11581, 41} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11581, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11583, 47} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11583, 5} true;
  assume {:verifier.code 0} true;
  call $i29 := dev_err.ref.ref($p28, .str.44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11585, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i32(0, 22);
  goto $bb3;
$bb6:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 1544);
  $p31 := $add.ref($add.ref($p2, 1544), 56);
  $p32 := $add.ref($add.ref($p2, 1544), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 26} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i64($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 32} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 40} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 49} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p2, 1544);
  $p36 := $add.ref($add.ref($p2, 1544), 56);
  $p37 := $add.ref($add.ref($add.ref($p2, 1544), 56), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 61} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 74} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p2, 1544);
  $p40 := $add.ref($add.ref($p2, 1544), 56);
  $p41 := $add.ref($add.ref($p2, 1544), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 86} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i64($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 65} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i64($i38, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 93} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb11, $bb13;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 40} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 103} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p2, 1544);
  $p45 := $add.ref($add.ref($p2, 1544), 56);
  $p46 := $add.ref($add.ref($add.ref($p2, 1544), 56), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 115} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i64($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 127} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p2, 1544);
  $p49 := $add.ref($add.ref($p2, 1544), 56);
  $p50 := $add.ref($add.ref($p2, 1544), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 139} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i64($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 119} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i64($i47, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 146} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 153} true;
  assume {:verifier.code 0} true;
  $i54 := $ule.i64($i53, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb14, $bb15;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 93} true;
  assume {:verifier.code 0} true;
  assume ($i43 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11591, 47} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p2, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11591, 5} true;
  assume {:verifier.code 0} true;
  call $i56 := dev_err.ref.ref($p55, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11593, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sub.i32(0, 22);
  goto $bb3;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 93} true;
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb10;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11589, 7} true;
  assume {:verifier.code 0} true;
  assume ($i54 == 1);
  goto $bb12;
$bb15:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11597, 3} true;
  assume {:verifier.code 0} true;
  $i21 := 0;
  goto $bb3;
}
const velocity_get_platform_info: ref;
axiom (velocity_get_platform_info == $sub.ref(0, 234135));
procedure  velocity_get_platform_info($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i19: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(56, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11609, 62} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11609, 62} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11609, 68} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 1200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11609, 68} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11609, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := of_get_property($p5, .str.46, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11612, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11612, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11612, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11613, 11} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11613, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11614, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11618, 39} true;
  assume {:verifier.code 0} true;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11618, 39} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11618, 45} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 1200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11618, 45} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11618, 9} true;
  assume {:verifier.code 0} true;
  call $i14 := of_address_to_resource($p13, 0, $p1);
  // WARNING: %18 = call i32 @of_address_to_resource(%struct.device_node* %17, i32 0, %struct.resource* %2), !dbg !8113, !verifier.code !8089
  call {:cexpr "ret"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11620, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11620, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11622, 44} true;
  assume {:verifier.code 0} true;
  $p16 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11622, 44} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11622, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := dev_err.ref.ref($p17, .str.47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11624, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $i14;
  goto $bb6;
$bb5:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11642, 1} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11629, 39} true;
  assume {:verifier.code 0} true;
  $p20 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11629, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.3, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11629, 9} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11629, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11630, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := resource_size($p1);
  // WARNING: %29 = call i64 @resource_size(%struct.resource* %2), !dbg !8128, !verifier.code !8089
  call {:cexpr "tmp___0"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11632, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $ule.i64($i23, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11632, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11634, 44} true;
  assume {:verifier.code 0} true;
  $p25 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11634, 44} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11634, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := dev_err.ref.ref($p26, .str.48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11636, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32(0, 22);
  goto $bb6;
$bb9:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11640, 3} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb6;
}
const ioremap: ref;
axiom (ioremap == $sub.ref(0, 235167));
procedure  ioremap($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !9860, metadata !8090), !dbg !9861, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6759, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ioremap_nocache($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6761, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const mac_wol_reset: ref;
axiom (mac_wol_reset == $sub.ref(0, 236199));
procedure  mac_wol_reset($p0: ref)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i32;
  var $i11: i8;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8193, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8193, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := readb($p1);
  // WARNING: %3 = call zeroext i8 @readb(i8* %2), !dbg !8096, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8194, 10} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8194, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i3, 239);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8194, 10} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8194, 55} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8194, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8195, 53} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8195, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := readb($p7);
  // WARNING: %9 = call zeroext i8 @readb(i8* %8), !dbg !8104, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8196, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8196, 24} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 252);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8196, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i8($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8196, 59} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8196, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i11, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8197, 53} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8197, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := readb($p13);
  // WARNING: %15 = call zeroext i8 @readb(i8* %14), !dbg !8112, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8198, 10} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8198, 24} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i15, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8198, 10} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8198, 59} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8198, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i17, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8199, 53} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8199, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := readb($p19);
  // WARNING: %21 = call zeroext i8 @readb(i8* %20), !dbg !8120, !verifier.code !8092
  call {:cexpr "tmp___2"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8200, 10} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8200, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i32($i21, 239);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8200, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8200, 59} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8200, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i23, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8201, 43} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8201, 3} true;
  assume {:verifier.code 0} true;
  call writeb($sub.i8(0, 128), $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8202, 45} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8202, 17} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8202, 3} true;
  assume {:verifier.code 0} true;
  call writew($sub.i16(0, 1), $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8203, 45} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8203, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8203, 3} true;
  assume {:verifier.code 0} true;
  call writew($sub.i16(0, 1), $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8205, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dev_driver_string: ref;
axiom (dev_driver_string == $sub.ref(0, 237231));
procedure  dev_driver_string($p0: ref)
  returns ($r: ref);
const velocity_get_options: ref;
axiom (velocity_get_options == $sub.ref(0, 238263));
procedure  velocity_get_options($p0: ref, $i1: i32, $p2: ref)
{
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i64;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $i34: i32;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $p42: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_opt* %0, i64 0, metadata !9920, metadata !8090), !dbg !9921, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8341, 32} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8341, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8341, 43} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref(rx_thresh, $mul.ref($i4, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8341, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8341, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_int_opt($p3, $i6, 0, 3, 0, .str.49, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8343, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8343, 44} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8343, 44} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref(DMA_length, $mul.ref($i8, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8343, 44} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.5, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8343, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_int_opt($p7, $i10, 0, 7, 6, .str.50, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8345, 32} true;
  assume {:verifier.code 0} true;
  $p11 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8345, 39} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8345, 39} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref(RxDescriptors, $mul.ref($i12, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8345, 39} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.6, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8345, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_int_opt($p11, $i14, 64, 255, 64, .str.51, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8347, 32} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8347, 39} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8347, 39} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref(TxDescriptors, $mul.ref($i16, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8347, 39} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.7, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8347, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_int_opt($p15, $i18, 16, 256, 64, .str.52, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8349, 32} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8349, 43} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8349, 43} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref(flow_control, $mul.ref($i20, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8349, 43} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.8, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8349, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_int_opt($p19, $i22, 1, 5, 1, .str.53, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8351, 33} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8351, 40} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8351, 40} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref(IP_byte_align, $mul.ref($i24, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8351, 40} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.9, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8351, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_bool_opt($p23, $i26, 0, 8, .str.54, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8353, 33} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8353, 40} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8353, 40} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref(ValPktLen, $mul.ref($i28, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8353, 40} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.10, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8353, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_bool_opt($p27, $i30, 0, 16, .str.55, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8355, 40} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8355, 50} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8355, 50} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref(speed_duplex, $mul.ref($i32, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8355, 50} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.11, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8355, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_int_opt($p31, $i34, 0, 5, 0, .str.56, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8357, 32} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8357, 42} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8357, 42} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref(wol_opts, $mul.ref($i36, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8357, 42} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.12, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8357, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_int_opt($p35, $i38, 0, 7, 0, .str.57, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8359, 23} true;
  assume {:verifier.code 0} true;
  $p39 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8359, 23} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8359, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $and.i32($i40, $sub.i32(0, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8359, 9} true;
  assume {:verifier.code 0} true;
  $p42 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8359, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8361, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_mii_read: ref;
axiom (velocity_mii_read == $sub.ref(0, 239295));
procedure  velocity_mii_read($p0: ref, $i1: i8, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i8;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i18: i16;
  var $i20: i32;
  var $i21: i32;
  var $i22: i16;
  var $i23: i32;
  var $i24: i1;
  var $i12: i16;
  var $i25: i16;
  var $i19: i16;
  var $p26: ref;
  var $p27: ref;
  var $i28: i16;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.mac_regs* %0, i64 0, metadata !9963, metadata !8090), !dbg !9964, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8655, 3} true;
  assume {:verifier.code 0} true;
  call safe_disable_mii_autopoll($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8656, 10} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8656, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8656, 51} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8656, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8657, 49} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8657, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := readb($p6);
  // WARNING: %8 = call zeroext i8 @readb(i8* %7), !dbg !8104, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8658, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8658, 36} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i8, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8658, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8658, 72} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8658, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i10, $p11);
  // WARNING: call void @writeb(i8 zeroext %11, i8* %12), !dbg !8111, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8673, 7} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8674, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8664, 53} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8664, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := readb($p13);
  // WARNING: %15 = call zeroext i8 @readb(i8* %14), !dbg !8117, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8666, 8} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8666, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i15, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8666, 28} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8666, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $i12;
  assume {:branchcond $i17} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i17 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8667, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $i18;
  goto $bb5;
$bb4:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8680, 51} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8680, 17} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8680, 11} true;
  assume {:verifier.code 0} true;
  call $i28 := readw($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8680, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8681, 3} true;
  assume {:verifier.code 0} true;
  call enable_mii_autopoll($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8683, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8683, 25} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8683, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb10, $bb11;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8671, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8671, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i20, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8671, 8} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i16($i21);
  // WARNING: %24 = trunc i32 %23 to i16, !dbg !8129, !verifier.code !8092
  call {:cexpr "ww"} boogie_si_record_i16($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8673, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8673, 25} true;
  assume {:verifier.code 0} true;
  $i24 := $ule.i32($i23, 4094);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8673, 7} true;
  assume {:verifier.code 0} true;
  $i12, $i25 := $i22, $i22;
  assume {:branchcond $i24} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8673, 7} true;
  assume {:verifier.code 0} true;
  assume ($i24 == 1);
  goto $bb1;
$bb8:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8673, 28} true;
  assume {:verifier.code 0} true;
  $i19 := $i25;
  goto $bb5;
$bb10:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8684, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 110);
  goto $bb12;
$bb11:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8690, 1} true;
  assume {:verifier.code 0} true;
  $r := $i31;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8688, 3} true;
  assume {:verifier.code 0} true;
  $i31 := 0;
  goto $bb12;
}
const velocity_poll: ref;
axiom (velocity_poll == $sub.ref(0, 240327));
procedure  velocity_poll($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.napi_struct* %0, i64 0, metadata !10024, metadata !8090), !dbg !10025, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10918, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10918, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, $mul.ref($sub.ref(0, 1912), 4016));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10919, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := velocity_rx_srv($p3, $i1);
  // WARNING: %5 = call i32 @velocity_rx_srv(%struct.velocity_info* %4, i32 %1), !dbg !8101, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !10037, metadata !8090), !dbg !10038, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10921, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 1912), 4016)), 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10921, 3} true;
  assume {:verifier.code 0} true;
  call ldv___ldv_spin_lock_83($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10922, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := velocity_tx_srv($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10924, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ult.i32($i4, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10924, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10926, 5} true;
  assume {:verifier.code 0} true;
  call napi_complete($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10927, 52} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 1912), 4016)), 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10927, 52} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10927, 63} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10927, 23} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10927, 5} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10929, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10933, 41} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 1912), 4016)), 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10933, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_84($p12, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10935, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const netif_napi_add: ref;
axiom (netif_napi_add == $sub.ref(0, 241359));
procedure  netif_napi_add($p0: ref, $p1: ref, $p2: ref, $i3: i32);
const ldv_register_netdev_99: ref;
axiom (ldv_register_netdev_99 == $sub.ref(0, 242391));
procedure  ldv_register_netdev_99($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16024, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := register_netdev($p0);
  // WARNING: %2 = call i32 @register_netdev(%struct.net_device* %0), !dbg !8091, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !10065, metadata !8090), !dbg !10066, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16026, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_register_netdev($i1, $p0);
  // WARNING: %3 = call i32 @ldv_register_netdev(i32 %2, %struct.net_device* %0), !dbg !8099, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16028, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const velocity_get_link: ref;
axiom (velocity_get_link == $sub.ref(0, 243423));
procedure  velocity_get_link($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11667, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11668, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11669, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11669, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11670, 53} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11670, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := readb($p5);
  // WARNING: %7 = call zeroext i8 @readb(i8* %6), !dbg !8103, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11672, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11672, 26} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11672, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11672, 32} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11672, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const netif_carrier_off: ref;
axiom (netif_carrier_off == $sub.ref(0, 244455));
procedure  netif_carrier_off($p0: ref);
const velocity_print_info: ref;
axiom (velocity_print_info == $sub.ref(0, 245487));
procedure  velocity_print_info($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11650, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11650, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11651, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11651, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11651, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_chip_name($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11652, 42} true;
  assume {:verifier.code 0} true;
  $p6 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11652, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11652, 3} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.ref(.str.65, $p7, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11653, 61} true;
  assume {:verifier.code 0} true;
  $p9 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11653, 45} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11653, 73} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11653, 73} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11653, 3} true;
  assume {:verifier.code 0} true;
  call $i13 := printk.ref.ref.ref(.str.66, $p10, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11655, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dev_set_drvdata_100: ref;
axiom (ldv_dev_set_drvdata_100 == $sub.ref(0, 246519));
procedure  ldv_dev_set_drvdata_100($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16038, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_dev_set_drvdata($p0, $p1);
  // WARNING: %3 = call i32 @ldv_dev_set_drvdata(%struct.device* %0, i8* %1), !dbg !8095, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16040, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const velocity_set_power_state: ref;
axiom (velocity_set_power_state == $sub.ref(0, 247551));
procedure  velocity_set_power_state($p0: ref, $i1: i8)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i8;
  var $p15: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !10132, metadata !8090), !dbg !10133, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7999, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7999, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7999, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8000, 29} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8000, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8000, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8000, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8000, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8002, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8002, 31} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8002, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8002, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := pci_set_power_state($p10, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8004, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8006, 12} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8006, 12} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8006, 67} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 340);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8006, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i14, $p15);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8009, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free_netdev_101: ref;
axiom (ldv_free_netdev_101 == $sub.ref(0, 248583));
procedure  ldv_free_netdev_101($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16049, 3} true;
  assume {:verifier.code 0} true;
  call free_netdev($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16050, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev($0.ref, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16052, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_set_power_state: ref;
axiom (pci_set_power_state == $sub.ref(0, 249615));
procedure  pci_set_power_state($p0: ref, $i1: i32)
  returns ($r: i32);
const ldv_dev_set_drvdata: ref;
axiom (ldv_dev_set_drvdata == $sub.ref(0, 250647));
procedure  ldv_dev_set_drvdata($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16259, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_xzalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16260, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16260, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16260, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16261, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16261, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16261, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16261, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16263, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_xzalloc: ref;
axiom (ldv_xzalloc == $sub.ref(0, 251679));
procedure  ldv_xzalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16543, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16545, 14} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16545, 34} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16545, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16545, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16546, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv_is_err($p1);
  // WARNING: %6 = call i64 @ldv_is_err(i8* %2), !dbg !8103, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16547, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16547, 22} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16547, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16549, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_assume: ref;
axiom (ldv_assume == $sub.ref(0, 252711));
procedure  ldv_assume($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16399, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16399, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16399, 24} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16401, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16405, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_is_err: ref;
axiom (ldv_is_err == $sub.ref(0, 253743));
procedure  ldv_is_err($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16293, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16293, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $ugt.i64($i1, 4294967295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16293, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16293, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16293, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const get_chip_name: ref;
axiom (get_chip_name == $sub.ref(0, 254775));
procedure  get_chip_name($i0: i32)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i13: i32;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $i5: i32;
  var $i20: i32;
  var $i4: i32;
  var $i12: i32;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !10229, metadata !8090), !dbg !10230, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 42} true;
  assume {:verifier.code 0} true;
  $p1 := $load.ref($M.0, $add.ref(chip_info_table, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 47} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8270, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8262, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8262, 22} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref(chip_info_table, $mul.ref($i6, 24));
  $p8 := $add.ref(chip_info_table, $mul.ref($i6, 24));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8262, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8262, 49} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8262, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i5;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8263, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $i11;
  goto $bb8;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8275, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8275, 11} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref(chip_info_table, $mul.ref($i21, 24));
  $p23 := $add.ref($add.ref(chip_info_table, $mul.ref($i21, 24)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8275, 30} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8275, 3} true;
  assume {:verifier.code 0} true;
  $r := $p24;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8267, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i5, 1);
  // WARNING: %14 = add nsw i32 %.03, 1, !dbg !8108, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 23} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref(chip_info_table, $mul.ref($i14, 24));
  $p16 := $add.ref($add.ref(chip_info_table, $mul.ref($i14, 24)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 42} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 47} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  $i5, $i20 := $i13, $i13;
  assume {:branchcond $i19} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1);
  goto $bb4;
$bb11:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i20;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8269, 84} true;
  assume {:verifier.code 0} true;
  $i12 := $i4;
  goto $bb8;
}
const register_netdev: ref;
axiom (register_netdev == $sub.ref(0, 255807));
procedure  register_netdev($p0: ref)
  returns ($r: i32);
const ldv_register_netdev: ref;
axiom (ldv_register_netdev == $sub.ref(0, 256839));
procedure  ldv_register_netdev($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i19: i1;
  var $i20: i32;
  var $i18: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !10260, metadata !8090), !dbg !10261, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15696, 24} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_pre_register_netdev();
  // WARNING: %3 = call i32 @ldv_pre_register_netdev(), !dbg !8097, !verifier.code !8092
  call {:cexpr "ldv_11_ret_default"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15698, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %4 = call i32 @ldv_undef_int(), !dbg !8102, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15700, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15700, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15702, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15702, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15702, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15703, 83} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15703, 83} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15703, 96} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15703, 96} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15703, 26} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv_register_netdev_open_11_6($p10, $p1);
  // WARNING: %13 = call i32 @ldv_register_netdev_open_11_6(i32 (%struct.net_device*)* %12, %struct.net_device* %1), !dbg !8114, !verifier.code !8092
  call {:cexpr "ldv_11_ret_default"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15705, 11} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv_undef_int();
  // WARNING: %14 = call i32 @ldv_undef_int(), !dbg !8115, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15707, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15707, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15719, 35} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15719, 35} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15719, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i20);
  assume {:verifier.code 0} true;
  $i18 := $i2;
  goto $bb6;
$bb3:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15709, 37} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15709, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i1.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15709, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15710, 7} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_register_11_4($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15712, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15714, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15714, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15714, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i17);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15717, 3} true;
  assume {:verifier.code 0} true;
  $i18 := $i11;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15722, 3} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
}
const ldv_pre_register_netdev: ref;
axiom (ldv_pre_register_netdev == $sub.ref(0, 257871));
procedure  ldv_pre_register_netdev()
  returns ($r: i32);
const ldv_undef_int: ref;
axiom (ldv_undef_int == $sub.ref(0, 258903));
procedure  ldv_undef_int()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16644, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__VERIFIER_nondet_int(), !dbg !8087, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16646, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_register_netdev_open_11_6: ref;
axiom (ldv_register_netdev_open_11_6 == $sub.ref(0, 259935));
procedure  ldv_register_netdev_open_11_6($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15733, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_open($p1);
  // WARNING: %3 = call i32 @velocity_open(%struct.net_device* %1), !dbg !8095, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15735, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_dispatch_register_11_4: ref;
axiom (ldv_dispatch_register_11_4 == $sub.ref(0, 260967));
procedure  ldv_dispatch_register_11_4($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13578, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13579, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13580, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13580, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13581, 41} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13581, 3} true;
  assume {:verifier.code 0} true;
  call ldv_net_dummy_resourceless_instance_1($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13583, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_xmalloc: ref;
axiom (ldv_xmalloc == $sub.ref(0, 261999));
procedure  ldv_xmalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16526, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := malloc($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16528, 14} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16528, 34} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16528, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16528, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16529, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv_is_err($p1);
  // WARNING: %6 = call i64 @ldv_is_err(i8* %2), !dbg !8103, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16530, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16530, 22} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16530, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16532, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_net_dummy_resourceless_instance_1: ref;
axiom (ldv_net_dummy_resourceless_instance_1 == $sub.ref(0, 263031));
procedure  ldv_net_dummy_resourceless_instance_1($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $i32: i1;
  var $i33: i1;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i16;
  var $i38: i32;
  var $i39: i16;
  var $i40: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i16;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14168, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14169, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14169, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14169, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14171, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14171, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14172, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14172, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14174, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $p7 := $u1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14177, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14181, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv_undef_int();
  // WARNING: %12 = call i32 @ldv_undef_int(), !dbg !8108, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14184, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14184, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14185, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14317, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_46($u2, $p7, $u3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14320, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14189, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i8, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14189, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14190, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14323, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_45($u4, $p7, $u5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14326, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14194, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i8, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14194, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14330, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_42($u6, $p7, $u7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14333, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14199, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14199, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14200, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14338, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_41($u8, $p7, $u9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14341, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14204, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i8, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14204, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14205, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14348, 77} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i16.i32($u10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14348, 77} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i16($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14349, 49} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($u10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14349, 49} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i32.i16($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14347, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_38($u11, $p7, $i37, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14209, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i8, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14209, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14210, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14359, 77} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i16.i32($u10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14359, 77} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i16($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14360, 49} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($u10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14360, 49} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i16($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14358, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_35($u11, $p7, $i41, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14362, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14214, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i8, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14214, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14215, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14370, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_34($u12, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14373, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14219, 11} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14219, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14220, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14382, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_33($u13, $u14, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14385, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14224, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i8, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14224, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14225, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14395, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_32($u15, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14397, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14229, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i8, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14229, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14230, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14409, 77} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($u5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14408, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_31($u16, $p7, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14411, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14234, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i8, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14235, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14423, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_30($u15, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14426, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14239, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i8, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14239, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14240, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14439, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_29($u17, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14441, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14244, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i8, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14244, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14245, 5} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14455, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_26($u18, $p7, $u19, $u7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14459, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14249, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i8, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14249, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14250, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14474, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_23($u20, $p7, $u7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14477, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14254, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i8, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14254, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14255, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14493, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_22($u21, $p7, $u3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14496, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14259, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14259, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14260, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14513, 13} true;
  assume {:verifier.code 0} true;
  call $p45 := ldv_xmalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14515, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_19($u22, $p7, $u7, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14517, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14519, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14264, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i8, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14264, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14265, 5} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb72;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14537, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_16($u20, $p7, $u7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14540, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14269, 11} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i8, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14269, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb73, $bb74;
$bb73:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14270, 5} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb74:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14559, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_15($u4, $p7, $u5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14562, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14274, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i8, 19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14274, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14275, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14582, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_14($u12, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14584, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14279, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i8, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14279, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14280, 5} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb82:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb84;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14605, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_13($u12, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14607, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14284, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i8, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14284, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb85, $bb86;
$bb85:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14285, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb86:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14629, 13} true;
  assume {:verifier.code 0} true;
  call $p46 := ldv_xmalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14630, 34} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14631, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_10($u23, $p7, $u24, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14634, 12} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14634, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14636, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14289, 11} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i8, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14289, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb89, $bb90;
$bb89:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14290, 5} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb92;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14659, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_9($u25, $p7, $u26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14662, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14294, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i8, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14294, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb93, $bb94;
$bb93:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14295, 5} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb94:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14686, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_8($u8, $p7, $u9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14689, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14299, 11} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14299, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb97, $bb98;
$bb97:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14300, 5} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb98:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb100;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14714, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_7($u15, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14716, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14304, 11} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i8, 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14304, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $i8;
  assume {:branchcond $i33} true;
  goto $bb101, $bb102;
$bb101:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14305, 5} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb102:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14742, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_1_3($u12, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14744, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14309, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14309, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb105, $bb106;
$bb105:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14310, 5} true;
  assume {:verifier.code 0} true;
  goto $bb107;
$bb106:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb108;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14770, 3} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14314, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14773, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14774, 3} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14181, 9} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14779, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14777, 3} true;
  assume {:verifier.code 0} true;
  goto $bb111;
}
const ldv_dummy_resourceless_instance_callback_1_46: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_46 == $sub.ref(0, 264063));
procedure  ldv_dummy_resourceless_instance_callback_1_46($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13911, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_ethtool_set_wol($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13913, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_45: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_45 == $sub.ref(0, 265095));
procedure  ldv_dummy_resourceless_instance_callback_1_45($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13898, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_set_settings($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13900, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_42: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_42 == $sub.ref(0, 266127));
procedure  ldv_dummy_resourceless_instance_callback_1_42($p0: ref, $p1: ref, $i2: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !10650, metadata !8090), !dbg !10651, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13885, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_msglevel($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13887, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_41: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_41 == $sub.ref(0, 267159));
procedure  ldv_dummy_resourceless_instance_callback_1_41($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13872, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_set_coalesce($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13874, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_38: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_38 == $sub.ref(0, 268191));
procedure  ldv_dummy_resourceless_instance_callback_1_38($p0: ref, $p1: ref, $i2: i16, $i3: i16)
{
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i16;
  var $i8: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !10679, metadata !8090), !dbg !10680, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i16 %2, i64 0, metadata !10681, metadata !8090), !dbg !10682, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13859, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13859, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13859, 47} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13859, 47} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13859, 3} true;
  assume {:verifier.code 0} true;
  call $i8 := velocity_vlan_rx_kill_vid($p1, $i5, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13861, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_35: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_35 == $sub.ref(0, 269223));
procedure  ldv_dummy_resourceless_instance_callback_1_35($p0: ref, $p1: ref, $i2: i16, $i3: i16)
{
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i16;
  var $i8: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !10694, metadata !8090), !dbg !10695, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i16 %2, i64 0, metadata !10696, metadata !8090), !dbg !10697, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13845, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13845, 34} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13845, 46} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13845, 46} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13845, 3} true;
  assume {:verifier.code 0} true;
  call $i8 := velocity_vlan_rx_add_vid($p1, $i5, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13847, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_34: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_34 == $sub.ref(0, 270255));
procedure  ldv_dummy_resourceless_instance_callback_1_34($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13831, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := eth_validate_addr($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13833, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_33: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_33 == $sub.ref(0, 271287));
procedure  ldv_dummy_resourceless_instance_callback_1_33($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13819, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_xmit($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13821, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_32: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_32 == $sub.ref(0, 272319));
procedure  ldv_dummy_resourceless_instance_callback_1_32($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13806, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_multi($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13808, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_31: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_31 == $sub.ref(0, 273351));
procedure  ldv_dummy_resourceless_instance_callback_1_31($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13794, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := eth_mac_addr($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13796, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_30: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_30 == $sub.ref(0, 274383));
procedure  ldv_dummy_resourceless_instance_callback_1_30($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13781, 3} true;
  assume {:verifier.code 0} true;
  call velocity_poll_controller($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13783, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_29: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_29 == $sub.ref(0, 275415));
procedure  ldv_dummy_resourceless_instance_callback_1_29($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13757, 3} true;
  assume {:verifier.code 0} true;
  call $p2 := velocity_get_stats($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13759, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_26: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_26 == $sub.ref(0, 276447));
procedure  ldv_dummy_resourceless_instance_callback_1_26($p0: ref, $p1: ref, $p2: ref, $i3: i32)
{
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ifreq* %2, i64 0, metadata !10782, metadata !8090), !dbg !10783, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13745, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := velocity_ioctl($p1, $p2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13747, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_23: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_23 == $sub.ref(0, 277479));
procedure  ldv_dummy_resourceless_instance_callback_1_23($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !10795, metadata !8090), !dbg !10796, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13731, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_change_mtu($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13733, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_22: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_22 == $sub.ref(0, 278511));
procedure  ldv_dummy_resourceless_instance_callback_1_22($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13718, 3} true;
  assume {:verifier.code 0} true;
  call velocity_ethtool_get_wol($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13720, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_19: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_19 == $sub.ref(0, 279543));
procedure  ldv_dummy_resourceless_instance_callback_1_19($p0: ref, $p1: ref, $i2: i32, $p3: ref)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !10824, metadata !8090), !dbg !10825, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13705, 3} true;
  assume {:verifier.code 0} true;
  call velocity_get_strings($p1, $i2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13707, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_16: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_16 == $sub.ref(0, 280575));
procedure  ldv_dummy_resourceless_instance_callback_1_16($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %1, i64 0, metadata !10837, metadata !8090), !dbg !10838, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13691, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_get_sset_count($p1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13693, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_15: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_15 == $sub.ref(0, 281607));
procedure  ldv_dummy_resourceless_instance_callback_1_15($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13678, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_get_settings($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13680, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_14: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_14 == $sub.ref(0, 282639));
procedure  ldv_dummy_resourceless_instance_callback_1_14($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13665, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_get_msglevel($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13667, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_13: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_13 == $sub.ref(0, 283671));
procedure  ldv_dummy_resourceless_instance_callback_1_13($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13653, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_get_link($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13655, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_10: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_10 == $sub.ref(0, 284703));
procedure  ldv_dummy_resourceless_instance_callback_1_10($p0: ref, $p1: ref, $p2: ref, $p3: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13641, 3} true;
  assume {:verifier.code 0} true;
  call velocity_get_ethtool_stats($p1, $p2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13643, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_9: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_9 == $sub.ref(0, 285735));
procedure  ldv_dummy_resourceless_instance_callback_1_9($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13949, 3} true;
  assume {:verifier.code 0} true;
  call velocity_get_drvinfo($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13951, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_8: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_8 == $sub.ref(0, 286767));
procedure  ldv_dummy_resourceless_instance_callback_1_8($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13936, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_get_coalesce($p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13938, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_7: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_7 == $sub.ref(0, 287799));
procedure  ldv_dummy_resourceless_instance_callback_1_7($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13923, 3} true;
  assume {:verifier.code 0} true;
  call velocity_ethtool_down($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13925, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dummy_resourceless_instance_callback_1_3: ref;
axiom (ldv_dummy_resourceless_instance_callback_1_3 == $sub.ref(0, 288831));
procedure  ldv_dummy_resourceless_instance_callback_1_3($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13769, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_ethtool_up($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13771, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 289863));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16412, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16414, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16416, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_ethtool_up: ref;
axiom (velocity_ethtool_up == $sub.ref(0, 290895));
procedure  velocity_ethtool_up($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12471, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12472, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12473, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := netif_running($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12473, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %5 = zext i1 %4 to i8, !dbg !8100, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12475, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12475, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12477, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12480, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12480, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12482, 5} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12484, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12487, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const netif_running: ref;
axiom (netif_running == $sub.ref(0, 291927));
procedure  netif_running($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7665, 73} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7665, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 0, i64* %2), !dbg !8096, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7667, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7667, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const constant_test_bit: ref;
axiom (constant_test_bit == $sub.ref(0, 292959));
procedure  constant_test_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 63} true;
  assume {:verifier.code 0} true;
  $i2 := $ashr.i64($i0, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, $mul.ref($i2, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 74} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 83} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 70} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 70} true;
  assume {:verifier.code 0} true;
  $i8 := $lshr.i64($i4, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 90} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6169, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const velocity_ethtool_down: ref;
axiom (velocity_ethtool_down == $sub.ref(0, 293991));
procedure  velocity_ethtool_down($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12499, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12500, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12501, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := netif_running($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12501, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %5 = zext i1 %4 to i8, !dbg !8100, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12503, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12503, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12505, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12508, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12508, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12510, 5} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12512, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12515, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_get_coalesce: ref;
axiom (velocity_get_coalesce == $sub.ref(0, 295023));
procedure  velocity_get_coalesce($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $p21: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12865, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12866, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12867, 49} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 896);
  $p5 := $add.ref($add.ref($p3, 896), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12867, 57} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12867, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12867, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12868, 49} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 896);
  $p9 := $add.ref($add.ref($p3, 896), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12868, 57} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12868, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12868, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12869, 41} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p3, 896);
  $p13 := $add.ref($add.ref($p3, 896), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12869, 49} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12869, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := get_pending_timer_val($i14);
  // WARNING: %16 = call i32 @get_pending_timer_val(i32 %15), !dbg !8111, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12870, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12870, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12871, 41} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p3, 896);
  $p18 := $add.ref($add.ref($p3, 896), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12871, 49} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12871, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := get_pending_timer_val($i19);
  // WARNING: %21 = call i32 @get_pending_timer_val(i32 %20), !dbg !8118, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12872, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12872, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12874, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const get_pending_timer_val: ref;
axiom (get_pending_timer_val == $sub.ref(0, 296055));
procedure  get_pending_timer_val($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12784, 19} true;
  assume {:verifier.code 0} true;
  $i1 := $ashr.i32($i0, 6);
  // WARNING: %2 = ashr i32 %0, 6, !dbg !8091, !verifier.code !8090
  call {:cexpr "mult_bits"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !11075, metadata !8090), !dbg !11076, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12787, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12787, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12788, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12810, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 4;
  goto $bb18;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12792, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12792, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12793, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12813, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 16;
  goto $bb18;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12797, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12797, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12798, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12816, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 64;
  goto $bb18;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12802, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12802, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12803, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12816, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12807, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12819, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12823, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i0, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12823, 22} true;
  assume {:verifier.code 0} true;
  $i8 := $mul.i32($i7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12823, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12821, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $u7;
  goto $bb18;
}
const velocity_get_drvinfo: ref;
axiom (velocity_get_drvinfo == $sub.ref(0, 297087));
procedure  velocity_get_drvinfo($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12675, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12676, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12677, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12677, 11} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12677, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := strlcpy($p5, .str.1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12678, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12678, 11} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12678, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := strlcpy($p8, .str.28, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12680, 29} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12680, 29} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12680, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12680, 34} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12680, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12682, 56} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12682, 56} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12682, 15} true;
  assume {:verifier.code 0} true;
  call $p16 := pci_name($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12683, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12683, 13} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12683, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := strlcpy($p18, $p16, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12685, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12687, 30} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12687, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12687, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := strlcpy($p21, .str.29, 32);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12690, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const strlcpy: ref;
axiom (strlcpy == $sub.ref(0, 298119));
procedure  strlcpy($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64);
const pci_name: ref;
axiom (pci_name == $sub.ref(0, 299151));
procedure  pci_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7722, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7722, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_name($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7724, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_name: ref;
axiom (dev_name == $sub.ref(0, 300183));
procedure  dev_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p8: ref;
  var $p9: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6770, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6770, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6770, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6770, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6770, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6771, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 312);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6771, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6771, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6780, 1} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6776, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6776, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := kobject_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6778, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p9;
  goto $bb3;
}
const kobject_name: ref;
axiom (kobject_name == $sub.ref(0, 301215));
procedure  kobject_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6695, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6695, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6695, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const velocity_get_ethtool_stats: ref;
axiom (velocity_get_ethtool_stats == $sub.ref(0, 302247));
procedure  velocity_get_ethtool_stats($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $i20: i32;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i64;
  var $p43: ref;
  var $i44: i32;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i64;
  var $p49: ref;
  var $i50: i32;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $i56: i32;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $i66: i64;
  var $p67: ref;
  var $i68: i32;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i64;
  var $p73: ref;
  var $i74: i32;
  var $i75: i64;
  var $i76: i64;
  var $p77: ref;
  var $i78: i64;
  var $p79: ref;
  var $i80: i32;
  var $i81: i64;
  var $i82: i64;
  var $p83: ref;
  var $i84: i64;
  var $p85: ref;
  var $i86: i32;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i64;
  var $p103: ref;
  var $i104: i32;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i108: i64;
  var $p109: ref;
  var $i110: i32;
  var $i111: i64;
  var $i112: i64;
  var $p113: ref;
  var $i114: i64;
  var $p115: ref;
  var $i116: i32;
  var $i117: i64;
  var $i118: i64;
  var $p119: ref;
  var $i120: i64;
  var $p121: ref;
  var $i122: i32;
  var $i123: i64;
  var $i124: i64;
  var $p125: ref;
  var $i126: i64;
  var $p127: ref;
  var $i128: i32;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i64;
  var $p133: ref;
  var $i134: i32;
  var $i135: i64;
  var $i136: i64;
  var $p137: ref;
  var $i138: i64;
  var $p139: ref;
  var $i140: i32;
  var $i141: i64;
  var $i142: i64;
  var $p143: ref;
  var $i144: i64;
  var $p145: ref;
  var $i146: i32;
  var $i147: i64;
  var $i148: i64;
  var $p149: ref;
  var $i150: i64;
  var $p151: ref;
  var $i152: i32;
  var $i153: i64;
  var $i154: i64;
  var $p155: ref;
  var $i156: i64;
  var $p157: ref;
  var $i158: i32;
  var $i159: i64;
  var $i160: i64;
  var $p161: ref;
  var $i162: i64;
  var $p163: ref;
  var $i164: i32;
  var $i165: i64;
  var $i166: i64;
  var $p167: ref;
  var $i168: i64;
  var $p169: ref;
  var $i170: i32;
  var $i171: i64;
  var $i172: i64;
  var $p173: ref;
  var $i174: i64;
  var $p175: ref;
  var $i176: i32;
  var $i177: i64;
  var $i178: i64;
  var $p179: ref;
  var $i180: i64;
  var $p181: ref;
  var $i182: i32;
  var $i183: i64;
  var $i184: i64;
  var $p185: ref;
  var $i186: i64;
  var $p187: ref;
  var $i188: i32;
  var $i189: i64;
  var $i190: i64;
  var $p191: ref;
  var $i192: i64;
  var $p193: ref;
  var $i194: i32;
  var $i195: i64;
  var $i196: i32;
  var $i197: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13105, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := netif_running($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13105, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %5 = zext i1 %4 to i8, !dbg !8098, !verifier.code !8090
  call {:cexpr "tmp___2"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13107, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13107, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13109, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13110, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13111, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13111, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13112, 34} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p7, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13112, 5} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_irq_79($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13113, 5} true;
  assume {:verifier.code 0} true;
  call velocity_update_hw_mibs($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13114, 36} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p7, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13114, 5} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irq_80($p11);
  // WARNING: call void @ldv_spin_unlock_irq_80(%struct.spinlock* %13), !dbg !8120, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13126, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p9, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p2, $i15);
  // WARNING: store i64 %18, i64* %2, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  $i16 := $add.i64(1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2, $mul.ref($i16, 8));
  $i18 := $add.i64(1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p9, $mul.ref($i18, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i32.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, $i21);
  // WARNING: store i64 %27, i64* %15, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13132, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13135, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb8:
  $i22 := $add.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p2, $mul.ref($i22, 8));
  $i24 := $add.i64($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p9, $mul.ref($i24, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p17, $i27);
  // WARNING: store i64 %32, i64* %24, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $i28 := $add.i64($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p2, $mul.ref($i28, 8));
  $i30 := $add.i64($i24, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p9, $mul.ref($i30, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p23, $i33);
  // WARNING: store i64 %37, i64* %29, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  $i34 := $add.i64($i28, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p2, $mul.ref($i34, 8));
  $i36 := $add.i64($i30, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p9, $mul.ref($i36, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p29, $i39);
  // WARNING: store i64 %42, i64* %34, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  $i40 := $add.i64($i34, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p2, $mul.ref($i40, 8));
  $i42 := $add.i64($i36, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p9, $mul.ref($i42, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i32.i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p35, $i45);
  // WARNING: store i64 %47, i64* %39, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  $i46 := $add.i64($i40, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p2, $mul.ref($i46, 8));
  $i48 := $add.i64($i42, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p9, $mul.ref($i48, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p41, $i51);
  // WARNING: store i64 %52, i64* %44, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  $i52 := $add.i64($i46, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p2, $mul.ref($i52, 8));
  $i54 := $add.i64($i48, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p9, $mul.ref($i54, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i32.i64($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p47, $i57);
  // WARNING: store i64 %57, i64* %49, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  $i58 := $add.i64($i52, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p2, $mul.ref($i58, 8));
  $i60 := $add.i64($i54, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p9, $mul.ref($i60, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i32.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p53, $i63);
  // WARNING: store i64 %62, i64* %54, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  $i64 := $add.i64($i58, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p2, $mul.ref($i64, 8));
  $i66 := $add.i64($i60, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p9, $mul.ref($i66, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i32.i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p59, $i69);
  // WARNING: store i64 %67, i64* %59, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  $i70 := $add.i64($i64, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p2, $mul.ref($i70, 8));
  $i72 := $add.i64($i66, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p9, $mul.ref($i72, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i32.i64($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p65, $i75);
  // WARNING: store i64 %72, i64* %64, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  $i76 := $add.i64($i70, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p2, $mul.ref($i76, 8));
  $i78 := $add.i64($i72, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p9, $mul.ref($i78, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i32.i64($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p71, $i81);
  // WARNING: store i64 %77, i64* %69, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  $i82 := $add.i64($i76, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p2, $mul.ref($i82, 8));
  $i84 := $add.i64($i78, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p9, $mul.ref($i84, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i32.i64($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p77, $i87);
  // WARNING: store i64 %82, i64* %74, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  $i88 := $add.i64($i82, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p2, $mul.ref($i88, 8));
  $i90 := $add.i64($i84, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p9, $mul.ref($i90, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i32.i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p83, $i93);
  // WARNING: store i64 %87, i64* %79, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  $i94 := $add.i64($i88, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p2, $mul.ref($i94, 8));
  $i96 := $add.i64($i90, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p9, $mul.ref($i96, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i32.i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p89, $i99);
  // WARNING: store i64 %92, i64* %84, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  $i100 := $add.i64($i94, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p2, $mul.ref($i100, 8));
  $i102 := $add.i64($i96, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p9, $mul.ref($i102, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i105 := $zext.i32.i64($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p95, $i105);
  // WARNING: store i64 %97, i64* %89, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  $i106 := $add.i64($i100, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p2, $mul.ref($i106, 8));
  $i108 := $add.i64($i102, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p9, $mul.ref($i108, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i111 := $zext.i32.i64($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p101, $i111);
  // WARNING: store i64 %102, i64* %94, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  $i112 := $add.i64($i106, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p2, $mul.ref($i112, 8));
  $i114 := $add.i64($i108, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p9, $mul.ref($i114, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i32.i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p107, $i117);
  // WARNING: store i64 %107, i64* %99, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  $i118 := $add.i64($i112, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p2, $mul.ref($i118, 8));
  $i120 := $add.i64($i114, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p9, $mul.ref($i120, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i32($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i32.i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p113, $i123);
  // WARNING: store i64 %112, i64* %104, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  $i124 := $add.i64($i118, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p2, $mul.ref($i124, 8));
  $i126 := $add.i64($i120, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p9, $mul.ref($i126, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i32($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i32.i64($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p119, $i129);
  // WARNING: store i64 %117, i64* %109, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  $i130 := $add.i64($i124, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p2, $mul.ref($i130, 8));
  $i132 := $add.i64($i126, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p9, $mul.ref($i132, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i32($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i32.i64($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p125, $i135);
  // WARNING: store i64 %122, i64* %114, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  $i136 := $add.i64($i130, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p2, $mul.ref($i136, 8));
  $i138 := $add.i64($i132, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p9, $mul.ref($i138, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i32($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i141 := $zext.i32.i64($i140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p131, $i141);
  // WARNING: store i64 %127, i64* %119, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  $i142 := $add.i64($i136, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p2, $mul.ref($i142, 8));
  $i144 := $add.i64($i138, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p9, $mul.ref($i144, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i32($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i32.i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p137, $i147);
  // WARNING: store i64 %132, i64* %124, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  $i148 := $add.i64($i142, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p2, $mul.ref($i148, 8));
  $i150 := $add.i64($i144, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p9, $mul.ref($i150, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i32($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i32.i64($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p143, $i153);
  // WARNING: store i64 %137, i64* %129, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  $i154 := $add.i64($i148, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p2, $mul.ref($i154, 8));
  $i156 := $add.i64($i150, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p9, $mul.ref($i156, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i32($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i32.i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p149, $i159);
  // WARNING: store i64 %142, i64* %134, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  $i160 := $add.i64($i154, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p2, $mul.ref($i160, 8));
  $i162 := $add.i64($i156, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p9, $mul.ref($i162, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i32($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i32.i64($i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p155, $i165);
  // WARNING: store i64 %147, i64* %139, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  $i166 := $add.i64($i160, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p2, $mul.ref($i166, 8));
  $i168 := $add.i64($i162, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p9, $mul.ref($i168, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i32($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i171 := $zext.i32.i64($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p161, $i171);
  // WARNING: store i64 %152, i64* %144, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  $i172 := $add.i64($i166, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p2, $mul.ref($i172, 8));
  $i174 := $add.i64($i168, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p9, $mul.ref($i174, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i176 := $load.i32($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i177 := $zext.i32.i64($i176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p167, $i177);
  // WARNING: store i64 %157, i64* %149, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  $i178 := $add.i64($i172, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p2, $mul.ref($i178, 8));
  $i180 := $add.i64($i174, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p9, $mul.ref($i180, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i32($M.0, $p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i32.i64($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p173, $i183);
  // WARNING: store i64 %162, i64* %154, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  $i184 := $add.i64($i178, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p2, $mul.ref($i184, 8));
  $i186 := $add.i64($i180, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p9, $mul.ref($i186, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i32($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i32.i64($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p179, $i189);
  // WARNING: store i64 %167, i64* %159, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  $i190 := $add.i64($i184, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13120, 17} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p2, $mul.ref($i190, 8));
  $i192 := $add.i64($i186, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13122, 11} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p9, $mul.ref($i192, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i32($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i195 := $zext.i32.i64($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p185, $i195);
  // WARNING: store i64 %172, i64* %164, align 8, !dbg !8132, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 22} true;
  assume {:verifier.code 0} true;
  $i196 := $load.i32($M.0, $p193);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 16} true;
  assume {:verifier.code 0} true;
  $i197 := $zext.i32.i64($i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13123, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p191, $i197);
  // WARNING: store i64 %175, i64* %169, align 8, !dbg !8132, !verifier.code !8090
  assume {:verifier.code 0} true;
  goto $bb6;
}
const ldv_spin_lock_irq_79: ref;
axiom (ldv_spin_lock_irq_79 == $sub.ref(0, 303279));
procedure  ldv_spin_lock_irq_79($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15866, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15867, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock_irq($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15869, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_update_hw_mibs: ref;
axiom (velocity_update_hw_mibs == $sub.ref(0, 304311));
procedure  velocity_update_hw_mibs($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $i7: i8;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $i75: i32;
  var $p76: ref;
  var $p77: ref;
  var $i78: i32;
  var $i79: i32;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $i87: i32;
  var $p88: ref;
  var $p89: ref;
  var $i90: i32;
  var $i91: i32;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $p100: ref;
  var $p101: ref;
  var $i102: i32;
  var $i103: i32;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $p112: ref;
  var $p113: ref;
  var $i114: i32;
  var $i115: i32;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $i123: i32;
  var $p124: ref;
  var $p125: ref;
  var $i126: i32;
  var $i127: i32;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $i135: i32;
  var $p136: ref;
  var $p137: ref;
  var $i138: i32;
  var $i139: i32;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: i32;
  var $i147: i32;
  var $p148: ref;
  var $p149: ref;
  var $i150: i32;
  var $i151: i32;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $i158: i32;
  var $i159: i32;
  var $p160: ref;
  var $p161: ref;
  var $i162: i32;
  var $i163: i32;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $i170: i32;
  var $i171: i32;
  var $p172: ref;
  var $p173: ref;
  var $i174: i32;
  var $i175: i32;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $i182: i32;
  var $i183: i32;
  var $p184: ref;
  var $p185: ref;
  var $i186: i32;
  var $i187: i32;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $i194: i32;
  var $i195: i32;
  var $p196: ref;
  var $p197: ref;
  var $i198: i32;
  var $i199: i32;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $i206: i32;
  var $i207: i32;
  var $p208: ref;
  var $p209: ref;
  var $i210: i32;
  var $i211: i32;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $i218: i32;
  var $i219: i32;
  var $p220: ref;
  var $p221: ref;
  var $i222: i32;
  var $i223: i32;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $i230: i32;
  var $i231: i32;
  var $p232: ref;
  var $p233: ref;
  var $i234: i32;
  var $i235: i32;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $i242: i32;
  var $i243: i32;
  var $p244: ref;
  var $p245: ref;
  var $i246: i32;
  var $i247: i32;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $i254: i32;
  var $i255: i32;
  var $p256: ref;
  var $p257: ref;
  var $i258: i32;
  var $i259: i32;
  var $p260: ref;
  var $p261: ref;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $i266: i32;
  var $i267: i32;
  var $p268: ref;
  var $p269: ref;
  var $i270: i32;
  var $i271: i32;
  var $p272: ref;
  var $p273: ref;
  var $p274: ref;
  var $p275: ref;
  var $p276: ref;
  var $p277: ref;
  var $i278: i32;
  var $i279: i32;
  var $p280: ref;
  var $p281: ref;
  var $i282: i32;
  var $i283: i32;
  var $p284: ref;
  var $p285: ref;
  var $p286: ref;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $i290: i32;
  var $i291: i32;
  var $p292: ref;
  var $p293: ref;
  var $i294: i32;
  var $i295: i32;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $p299: ref;
  var $p300: ref;
  var $p301: ref;
  var $i302: i32;
  var $i303: i32;
  var $p304: ref;
  var $p305: ref;
  var $i306: i32;
  var $i307: i32;
  var $p308: ref;
  var $p309: ref;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $p313: ref;
  var $i314: i32;
  var $i315: i32;
  var $p316: ref;
  var $p317: ref;
  var $i318: i32;
  var $i319: i32;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $p324: ref;
  var $p325: ref;
  var $i326: i32;
  var $i327: i32;
  var $p328: ref;
  var $p329: ref;
  var $i330: i32;
  var $i331: i32;
  var $p332: ref;
  var $p333: ref;
  var $p334: ref;
  var $p335: ref;
  var $p336: ref;
  var $p337: ref;
  var $i338: i32;
  var $i339: i32;
  var $p340: ref;
  var $p341: ref;
  var $i342: i32;
  var $i343: i32;
  var $p344: ref;
  var $p345: ref;
  var $p346: ref;
  var $p347: ref;
  var $p348: ref;
  var $p349: ref;
  var $i350: i32;
  var $i351: i32;
  var $p352: ref;
  var $p353: ref;
  var $i354: i32;
  var $i355: i32;
  var $p356: ref;
  var $p357: ref;
  var $p358: ref;
  var $p359: ref;
  var $p360: ref;
  var $p361: ref;
  var $i362: i32;
  var $i363: i32;
  var $p364: ref;
  var $p365: ref;
  var $i366: i32;
  var $i367: i32;
  var $p368: ref;
  var $p369: ref;
  var $p370: ref;
  var $p371: ref;
  var $p372: ref;
  var $p373: ref;
  var $i374: i32;
  var $i375: i32;
  var $p376: ref;
  var $p377: ref;
  var $i378: i32;
  var $i379: i32;
  var $p380: ref;
  var $p381: ref;
  var $p382: ref;
  var $p383: ref;
  var $p384: ref;
  var $p385: ref;
  var $i386: i32;
  var $i387: i32;
  var $p388: ref;
  var $p389: ref;
  var $i390: i32;
  var $i391: i32;
  var $p392: ref;
  var $p393: ref;
  var $p394: ref;
  var $p395: ref;
  var $p396: ref;
  var $p397: ref;
  var $i398: i32;
  var $i399: i32;
  var $p400: ref;
  var $p401: ref;
  var $i402: i32;
  var $i403: i32;
  var $p404: ref;
  var $p405: ref;
  var $p406: ref;
  var $p407: ref;
  var $p408: ref;
  var $p409: ref;
  var $i410: i32;
  var $i411: i32;
  var $p412: ref;
  var $p413: ref;
  var $i414: i32;
  var $i415: i32;
  var $p416: ref;
  var $p417: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7940, 54} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7940, 54} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7940, 65} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7940, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := readb($p3);
  // WARNING: %5 = call zeroext i8 @readb(i8* %4), !dbg !8097, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7941, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7941, 40} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7941, 10} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7941, 76} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7941, 76} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7941, 87} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7941, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i7, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7947, 54} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7947, 54} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7947, 65} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7947, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := readb($p13);
  // WARNING: %15 = call zeroext i8 @readb(i8* %14), !dbg !8109, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 8} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i15, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 27} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7950, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7947, 54} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7947, 65} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p18, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7947, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := readb($p19);
  // WARNING: %22 = call zeroext i8 @readb(i8* %21), !dbg !8109, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 8} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 22} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i32($i21, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  assume ($i23 == 1);
  goto $bb4;
$bb7:
  assume !(($i23 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7949, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7955, 54} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7955, 54} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7955, 65} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7955, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := readb($p26);
  // WARNING: %32 = call zeroext i8 @readb(i8* %31), !dbg !8122, !verifier.code !8092
  call {:cexpr "tmp___2"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7956, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7956, 40} true;
  assume {:verifier.code 0} true;
  $i29 := $or.i32($i28, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7956, 10} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7956, 76} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7956, 76} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7956, 87} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7956, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i30, $p33);
  // WARNING: call void @writeb(i8 zeroext %35, i8* %38), !dbg !8130, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7968, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i38 := readl($p37);
  // WARNING: %44 = call i32 @readl(i8* %43), !dbg !8138, !verifier.code !8092
  call {:cexpr "tmp___3"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i32($i38, 16777215);
  // WARNING: %45 = and i32 %44, 16777215, !dbg !8141, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 768);
  $p41 := $add.ref($p0, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i42, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 768);
  $p45 := $add.ref($p0, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p45, $i43);
  // WARNING: store i32 %49, i32* %51, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i50 := readl($p49);
  // WARNING: %59 = call i32 @readl(i8* %58), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i50, 16777215);
  // WARNING: %60 = and i32 %59, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 768);
  $p53 := $add.ref($add.ref($p0, 768), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i32($i54, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 768);
  $p57 := $add.ref($add.ref($p0, 768), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p57, $i55);
  // WARNING: store i32 %64, i32* %66, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7974, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i62 := readl($p61);
  // WARNING: %72 = call i32 @readl(i8* %71), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $and.i32($i62, 16777215);
  // WARNING: %73 = and i32 %72, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 768);
  $p65 := $add.ref($add.ref($p0, 768), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i66, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 768);
  $p69 := $add.ref($add.ref($p0, 768), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i67);
  // WARNING: store i32 %77, i32* %79, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i74 := readl($p73);
  // WARNING: %85 = call i32 @readl(i8* %84), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i75 := $and.i32($i74, 16777215);
  // WARNING: %86 = and i32 %85, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 768);
  $p77 := $add.ref($add.ref($p0, 768), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i32($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i32($i78, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 768);
  $p81 := $add.ref($add.ref($p0, 768), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, $i79);
  // WARNING: store i32 %90, i32* %92, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p83, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i86 := readl($p85);
  // WARNING: %98 = call i32 @readl(i8* %97), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i87 := $and.i32($i86, 16777215);
  // WARNING: %99 = and i32 %98, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 768);
  $p89 := $add.ref($add.ref($p0, 768), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i91 := $add.i32($i90, $i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 768);
  $p93 := $add.ref($add.ref($p0, 768), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, $i91);
  // WARNING: store i32 %103, i32* %105, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p95, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i98 := readl($p97);
  // WARNING: %111 = call i32 @readl(i8* %110), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $and.i32($i98, 16777215);
  // WARNING: %112 = and i32 %111, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0, 768);
  $p101 := $add.ref($add.ref($p0, 768), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i32($i102, $i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p0, 768);
  $p105 := $add.ref($add.ref($p0, 768), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, $i103);
  // WARNING: store i32 %116, i32* %118, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p109 := $bitcast.ref.ref($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i110 := readl($p109);
  // WARNING: %124 = call i32 @readl(i8* %123), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i111 := $and.i32($i110, 16777215);
  // WARNING: %125 = and i32 %124, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 768);
  $p113 := $add.ref($add.ref($p0, 768), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i115 := $add.i32($i114, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 768);
  $p117 := $add.ref($add.ref($p0, 768), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p117, $i115);
  // WARNING: store i32 %129, i32* %131, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p119, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p121 := $bitcast.ref.ref($p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i122 := readl($p121);
  // WARNING: %137 = call i32 @readl(i8* %136), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i123 := $and.i32($i122, 16777215);
  // WARNING: %138 = and i32 %137, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p0, 768);
  $p125 := $add.ref($add.ref($p0, 768), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i127 := $add.i32($i126, $i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p0, 768);
  $p129 := $add.ref($add.ref($p0, 768), 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p129, $i127);
  // WARNING: store i32 %142, i32* %144, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p131, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p133 := $bitcast.ref.ref($p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i134 := readl($p133);
  // WARNING: %150 = call i32 @readl(i8* %149), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i135 := $and.i32($i134, 16777215);
  // WARNING: %151 = and i32 %150, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p0, 768);
  $p137 := $add.ref($add.ref($p0, 768), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i32($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i139 := $add.i32($i138, $i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 768);
  $p141 := $add.ref($add.ref($p0, 768), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p141, $i139);
  // WARNING: store i32 %155, i32* %157, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p143, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p145 := $bitcast.ref.ref($p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i146 := readl($p145);
  // WARNING: %163 = call i32 @readl(i8* %162), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i147 := $and.i32($i146, 16777215);
  // WARNING: %164 = and i32 %163, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p0, 768);
  $p149 := $add.ref($add.ref($p0, 768), 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i32($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i151 := $add.i32($i150, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p0, 768);
  $p153 := $add.ref($add.ref($p0, 768), 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p153, $i151);
  // WARNING: store i32 %168, i32* %170, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p155 := $load.ref($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p155, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i158 := readl($p157);
  // WARNING: %176 = call i32 @readl(i8* %175), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i159 := $and.i32($i158, 16777215);
  // WARNING: %177 = and i32 %176, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 768);
  $p161 := $add.ref($add.ref($p0, 768), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i32($M.0, $p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i163 := $add.i32($i162, $i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p0, 768);
  $p165 := $add.ref($add.ref($p0, 768), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p165, $i163);
  // WARNING: store i32 %181, i32* %183, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p167 := $load.ref($M.0, $p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p167, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p169 := $bitcast.ref.ref($p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i170 := readl($p169);
  // WARNING: %189 = call i32 @readl(i8* %188), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i171 := $and.i32($i170, 16777215);
  // WARNING: %190 = and i32 %189, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p0, 768);
  $p173 := $add.ref($add.ref($p0, 768), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i32($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i175 := $add.i32($i174, $i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p0, 768);
  $p177 := $add.ref($add.ref($p0, 768), 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p177, $i175);
  // WARNING: store i32 %194, i32* %196, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p179 := $load.ref($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p179, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p181 := $bitcast.ref.ref($p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i182 := readl($p181);
  // WARNING: %202 = call i32 @readl(i8* %201), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i183 := $and.i32($i182, 16777215);
  // WARNING: %203 = and i32 %202, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p0, 768);
  $p185 := $add.ref($add.ref($p0, 768), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i32($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i187 := $add.i32($i186, $i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p0, 768);
  $p189 := $add.ref($add.ref($p0, 768), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p189, $i187);
  // WARNING: store i32 %207, i32* %209, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p191 := $load.ref($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($p191, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p193 := $bitcast.ref.ref($p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i194 := readl($p193);
  // WARNING: %215 = call i32 @readl(i8* %214), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i195 := $and.i32($i194, 16777215);
  // WARNING: %216 = and i32 %215, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p0, 768);
  $p197 := $add.ref($add.ref($p0, 768), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i198 := $load.i32($M.0, $p197);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i199 := $add.i32($i198, $i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p0, 768);
  $p201 := $add.ref($add.ref($p0, 768), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p201, $i199);
  // WARNING: store i32 %220, i32* %222, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p203 := $load.ref($M.0, $p202);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p203, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p205 := $bitcast.ref.ref($p204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i206 := readl($p205);
  // WARNING: %228 = call i32 @readl(i8* %227), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i207 := $and.i32($i206, 16777215);
  // WARNING: %229 = and i32 %228, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p0, 768);
  $p209 := $add.ref($add.ref($p0, 768), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i210 := $load.i32($M.0, $p209);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i211 := $add.i32($i210, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p0, 768);
  $p213 := $add.ref($add.ref($p0, 768), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p213, $i211);
  // WARNING: store i32 %233, i32* %235, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p215 := $load.ref($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($p215, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p217 := $bitcast.ref.ref($p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i218 := readl($p217);
  // WARNING: %241 = call i32 @readl(i8* %240), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i219 := $and.i32($i218, 16777215);
  // WARNING: %242 = and i32 %241, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p0, 768);
  $p221 := $add.ref($add.ref($p0, 768), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i222 := $load.i32($M.0, $p221);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i223 := $add.i32($i222, $i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p0, 768);
  $p225 := $add.ref($add.ref($p0, 768), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p225, $i223);
  // WARNING: store i32 %246, i32* %248, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p227 := $load.ref($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p227, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p229 := $bitcast.ref.ref($p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i230 := readl($p229);
  // WARNING: %254 = call i32 @readl(i8* %253), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i231 := $and.i32($i230, 16777215);
  // WARNING: %255 = and i32 %254, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($p0, 768);
  $p233 := $add.ref($add.ref($p0, 768), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i234 := $load.i32($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i235 := $add.i32($i234, $i231);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p0, 768);
  $p237 := $add.ref($add.ref($p0, 768), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p237, $i235);
  // WARNING: store i32 %259, i32* %261, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p239 := $load.ref($M.0, $p238);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p239, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p241 := $bitcast.ref.ref($p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i242 := readl($p241);
  // WARNING: %267 = call i32 @readl(i8* %266), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i243 := $and.i32($i242, 16777215);
  // WARNING: %268 = and i32 %267, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p0, 768);
  $p245 := $add.ref($add.ref($p0, 768), 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i246 := $load.i32($M.0, $p245);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i32($i246, $i243);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p0, 768);
  $p249 := $add.ref($add.ref($p0, 768), 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p249, $i247);
  // WARNING: store i32 %272, i32* %274, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p251 := $load.ref($M.0, $p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p251, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p253 := $bitcast.ref.ref($p252);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i254 := readl($p253);
  // WARNING: %280 = call i32 @readl(i8* %279), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i255 := $and.i32($i254, 16777215);
  // WARNING: %281 = and i32 %280, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($p0, 768);
  $p257 := $add.ref($add.ref($p0, 768), 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i258 := $load.i32($M.0, $p257);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i259 := $add.i32($i258, $i255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($p0, 768);
  $p261 := $add.ref($add.ref($p0, 768), 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p261, $i259);
  // WARNING: store i32 %285, i32* %287, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p262 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p263 := $load.ref($M.0, $p262);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p263, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p265 := $bitcast.ref.ref($p264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i266 := readl($p265);
  // WARNING: %293 = call i32 @readl(i8* %292), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i267 := $and.i32($i266, 16777215);
  // WARNING: %294 = and i32 %293, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p0, 768);
  $p269 := $add.ref($add.ref($p0, 768), 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i32($M.0, $p269);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i271 := $add.i32($i270, $i267);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p272 := $add.ref($p0, 768);
  $p273 := $add.ref($add.ref($p0, 768), 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p273, $i271);
  // WARNING: store i32 %298, i32* %300, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p275 := $load.ref($M.0, $p274);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p275, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p277 := $bitcast.ref.ref($p276);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i278 := readl($p277);
  // WARNING: %306 = call i32 @readl(i8* %305), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i279 := $and.i32($i278, 16777215);
  // WARNING: %307 = and i32 %306, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($p0, 768);
  $p281 := $add.ref($add.ref($p0, 768), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i32($M.0, $p281);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i282, $i279);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p284 := $add.ref($p0, 768);
  $p285 := $add.ref($add.ref($p0, 768), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p285, $i283);
  // WARNING: store i32 %311, i32* %313, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p287 := $load.ref($M.0, $p286);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p288 := $add.ref($p287, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p289 := $bitcast.ref.ref($p288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i290 := readl($p289);
  // WARNING: %319 = call i32 @readl(i8* %318), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i291 := $and.i32($i290, 16777215);
  // WARNING: %320 = and i32 %319, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p292 := $add.ref($p0, 768);
  $p293 := $add.ref($add.ref($p0, 768), 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i294 := $load.i32($M.0, $p293);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i295 := $add.i32($i294, $i291);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p296 := $add.ref($p0, 768);
  $p297 := $add.ref($add.ref($p0, 768), 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p297, $i295);
  // WARNING: store i32 %324, i32* %326, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p298 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p299 := $load.ref($M.0, $p298);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p300 := $add.ref($p299, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p301 := $bitcast.ref.ref($p300);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i302 := readl($p301);
  // WARNING: %332 = call i32 @readl(i8* %331), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i303 := $and.i32($i302, 16777215);
  // WARNING: %333 = and i32 %332, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p304 := $add.ref($p0, 768);
  $p305 := $add.ref($add.ref($p0, 768), 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i306 := $load.i32($M.0, $p305);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i307 := $add.i32($i306, $i303);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p308 := $add.ref($p0, 768);
  $p309 := $add.ref($add.ref($p0, 768), 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p309, $i307);
  // WARNING: store i32 %337, i32* %339, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p311 := $load.ref($M.0, $p310);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($p311, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p313 := $bitcast.ref.ref($p312);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i314 := readl($p313);
  // WARNING: %345 = call i32 @readl(i8* %344), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i315 := $and.i32($i314, 16777215);
  // WARNING: %346 = and i32 %345, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p316 := $add.ref($p0, 768);
  $p317 := $add.ref($add.ref($p0, 768), 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i318 := $load.i32($M.0, $p317);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i319 := $add.i32($i318, $i315);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p320 := $add.ref($p0, 768);
  $p321 := $add.ref($add.ref($p0, 768), 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p321, $i319);
  // WARNING: store i32 %350, i32* %352, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p322 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p323 := $load.ref($M.0, $p322);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($p323, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p325 := $bitcast.ref.ref($p324);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i326 := readl($p325);
  // WARNING: %358 = call i32 @readl(i8* %357), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i327 := $and.i32($i326, 16777215);
  // WARNING: %359 = and i32 %358, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p328 := $add.ref($p0, 768);
  $p329 := $add.ref($add.ref($p0, 768), 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i330 := $load.i32($M.0, $p329);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i331 := $add.i32($i330, $i327);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p332 := $add.ref($p0, 768);
  $p333 := $add.ref($add.ref($p0, 768), 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p333, $i331);
  // WARNING: store i32 %363, i32* %365, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p334 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p335 := $load.ref($M.0, $p334);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p336 := $add.ref($p335, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p337 := $bitcast.ref.ref($p336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i338 := readl($p337);
  // WARNING: %371 = call i32 @readl(i8* %370), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i339 := $and.i32($i338, 16777215);
  // WARNING: %372 = and i32 %371, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p0, 768);
  $p341 := $add.ref($add.ref($p0, 768), 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i342 := $load.i32($M.0, $p341);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i343 := $add.i32($i342, $i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p344 := $add.ref($p0, 768);
  $p345 := $add.ref($add.ref($p0, 768), 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p345, $i343);
  // WARNING: store i32 %376, i32* %378, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p346 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p347 := $load.ref($M.0, $p346);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p348 := $add.ref($p347, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p349 := $bitcast.ref.ref($p348);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i350 := readl($p349);
  // WARNING: %384 = call i32 @readl(i8* %383), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i351 := $and.i32($i350, 16777215);
  // WARNING: %385 = and i32 %384, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p352 := $add.ref($p0, 768);
  $p353 := $add.ref($add.ref($p0, 768), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i354 := $load.i32($M.0, $p353);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i355 := $add.i32($i354, $i351);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p356 := $add.ref($p0, 768);
  $p357 := $add.ref($add.ref($p0, 768), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p357, $i355);
  // WARNING: store i32 %389, i32* %391, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p358 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p359 := $load.ref($M.0, $p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p360 := $add.ref($p359, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p361 := $bitcast.ref.ref($p360);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i362 := readl($p361);
  // WARNING: %397 = call i32 @readl(i8* %396), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i363 := $and.i32($i362, 16777215);
  // WARNING: %398 = and i32 %397, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($p0, 768);
  $p365 := $add.ref($add.ref($p0, 768), 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i366 := $load.i32($M.0, $p365);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i367 := $add.i32($i366, $i363);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p368 := $add.ref($p0, 768);
  $p369 := $add.ref($add.ref($p0, 768), 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p369, $i367);
  // WARNING: store i32 %402, i32* %404, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p371 := $load.ref($M.0, $p370);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p372 := $add.ref($p371, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p373 := $bitcast.ref.ref($p372);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i374 := readl($p373);
  // WARNING: %410 = call i32 @readl(i8* %409), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i375 := $and.i32($i374, 16777215);
  // WARNING: %411 = and i32 %410, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p376 := $add.ref($p0, 768);
  $p377 := $add.ref($add.ref($p0, 768), 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i378 := $load.i32($M.0, $p377);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i379 := $add.i32($i378, $i375);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p380 := $add.ref($p0, 768);
  $p381 := $add.ref($add.ref($p0, 768), 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p381, $i379);
  // WARNING: store i32 %415, i32* %417, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p382 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p383 := $load.ref($M.0, $p382);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p384 := $add.ref($p383, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p385 := $bitcast.ref.ref($p384);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i386 := readl($p385);
  // WARNING: %423 = call i32 @readl(i8* %422), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i387 := $and.i32($i386, 16777215);
  // WARNING: %424 = and i32 %423, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p388 := $add.ref($p0, 768);
  $p389 := $add.ref($add.ref($p0, 768), 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i390 := $load.i32($M.0, $p389);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i391 := $add.i32($i390, $i387);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p392 := $add.ref($p0, 768);
  $p393 := $add.ref($add.ref($p0, 768), 116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p393, $i391);
  // WARNING: store i32 %428, i32* %430, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p394 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p395 := $load.ref($M.0, $p394);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p396 := $add.ref($p395, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p397 := $bitcast.ref.ref($p396);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i398 := readl($p397);
  // WARNING: %436 = call i32 @readl(i8* %435), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i399 := $and.i32($i398, 16777215);
  // WARNING: %437 = and i32 %436, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p400 := $add.ref($p0, 768);
  $p401 := $add.ref($add.ref($p0, 768), 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i402 := $load.i32($M.0, $p401);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i403 := $add.i32($i402, $i399);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p404 := $add.ref($p0, 768);
  $p405 := $add.ref($add.ref($p0, 768), 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p405, $i403);
  // WARNING: store i32 %441, i32* %443, align 4, !dbg !8148, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7969, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p406 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 54} true;
  assume {:verifier.code 0} true;
  $p407 := $load.ref($M.0, $p406);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 65} true;
  assume {:verifier.code 0} true;
  $p408 := $add.ref($p407, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 19} true;
  assume {:verifier.code 0} true;
  $p409 := $bitcast.ref.ref($p408);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7962, 13} true;
  assume {:verifier.code 0} true;
  call $i410 := readl($p409);
  // WARNING: %449 = call i32 @readl(i8* %448), !dbg !8138, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7963, 17} true;
  assume {:verifier.code 0} true;
  $i411 := $and.i32($i410, 16777215);
  // WARNING: %450 = and i32 %449, 16777215, !dbg !8141, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 32} true;
  assume {:verifier.code 0} true;
  $p412 := $add.ref($p0, 768);
  $p413 := $add.ref($add.ref($p0, 768), 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 26} true;
  assume {:verifier.code 0} true;
  $i414 := $load.i32($M.0, $p413);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 47} true;
  assume {:verifier.code 0} true;
  $i415 := $add.i32($i414, $i411);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 9} true;
  assume {:verifier.code 0} true;
  $p416 := $add.ref($p0, 768);
  $p417 := $add.ref($add.ref($p0, 768), 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7964, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p417, $i415);
  // WARNING: store i32 %454, i32* %456, align 4, !dbg !8148, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb12;
}
const ldv_spin_unlock_irq_80: ref;
axiom (ldv_spin_unlock_irq_80 == $sub.ref(0, 305343));
procedure  ldv_spin_unlock_irq_80($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15878, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15879, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irq($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15881, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_lock_of_velocity_info: ref;
axiom (ldv_spin_unlock_lock_of_velocity_info == $sub.ref(0, 306375));
procedure  ldv_spin_unlock_lock_of_velocity_info()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17607, 70} true;
  assume {:verifier.code 0} true;
  $i0 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17607, 101} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17607, 101} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17607, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17608, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17608, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17608, 45} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17608, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17609, 34} true;
  assume {:verifier.code 0} true;
  $M.14 := 1;
  call {:cexpr "ldv_spin_lock_of_velocity_info"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17611, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_unlock_irq: ref;
axiom (spin_unlock_irq == $sub.ref(0, 307407));
procedure  spin_unlock_irq($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6481, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6481, 51} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6481, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6483, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irq: ref;
axiom (_raw_spin_unlock_irq == $sub.ref(0, 308439));
procedure  _raw_spin_unlock_irq($p0: ref);
const ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock: ref;
axiom (ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock == $sub.ref(0, 309471));
procedure  ldv_assert_linux_kernel_locking_spinlock__one_thread_double_unlock($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18667, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18667, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18669, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18671, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18674, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const readl: ref;
axiom (readl == $sub.ref(0, 310503));
procedure  readl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6721, 57} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  call $i2 := devirtbounce.12(0, $p1);
  // WARNING: %3 = call i32 @devirtbounce.12(i32 (i32*)* asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i32* %2)
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6722, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_spin_lock_lock_of_velocity_info: ref;
axiom (ldv_spin_lock_lock_of_velocity_info == $sub.ref(0, 311535));
procedure  ldv_spin_lock_lock_of_velocity_info()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17594, 68} true;
  assume {:verifier.code 0} true;
  $i0 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17594, 99} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17594, 99} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17594, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17595, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17595, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17595, 45} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17595, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17596, 34} true;
  assume {:verifier.code 0} true;
  $M.14 := 2;
  call {:cexpr "ldv_spin_lock_of_velocity_info"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 17598, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_lock_irq: ref;
axiom (spin_lock_irq == $sub.ref(0, 312567));
procedure  spin_lock_irq($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6453, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6453, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6453, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock_irq($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6455, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock_irq: ref;
axiom (_raw_spin_lock_irq == $sub.ref(0, 313599));
procedure  _raw_spin_lock_irq($p0: ref);
const ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock: ref;
axiom (ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock == $sub.ref(0, 314631));
procedure  ldv_assert_linux_kernel_locking_spinlock__one_thread_double_lock($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18637, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18637, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18639, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18641, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18644, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_get_msglevel: ref;
axiom (velocity_get_msglevel == $sub.ref(0, 315663));
procedure  velocity_get_msglevel($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12766, 17} true;
  assume {:verifier.code 0} true;
  $i1 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12766, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const velocity_get_settings: ref;
axiom (velocity_get_settings == $sub.ref(0, 316695));
procedure  velocity_get_settings($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $i61: i1;
  var $i62: i64;
  var $i63: i64;
  var $i64: i1;
  var $i65: i64;
  var $i66: i64;
  var $i67: i1;
  var $i68: i32;
  var $i69: i8;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $i81: i1;
  var $p82: ref;
  var $p83: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12528, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12529, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12530, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12530, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12531, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12531, 40} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12531, 12} true;
  assume {:verifier.code 0} true;
  call $i8 := check_connection_type($p7);
  // WARNING: %9 = call i32 @check_connection_type(%struct.mac_regs* %8), !dbg !8105, !verifier.code !8090
  call {:cexpr "status"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12532, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12532, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12533, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12533, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12535, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, 896);
  $p12 := $add.ref($add.ref($p3, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12535, 36} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12535, 44} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12536, 29} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12536, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12536, 41} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i16, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12536, 10} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12536, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12537, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12539, 30} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p3, 896);
  $p20 := $add.ref($add.ref($p3, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12539, 38} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12539, 46} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12539, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12586, 8} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12586, 31} true;
  assume {:verifier.code 0} true;
  $i60 := $and.i64($i59, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12586, 38} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i64($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12586, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb27, $bb28;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12540, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12566, 29} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12566, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12566, 41} true;
  assume {:verifier.code 0} true;
  $i41 := $or.i32($i40, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12566, 10} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12566, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12567, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12544, 30} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p3, 896);
  $p24 := $add.ref($add.ref($p3, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12544, 38} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12544, 46} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12544, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12545, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12569, 29} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12569, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12569, 41} true;
  assume {:verifier.code 0} true;
  $i45 := $or.i32($i44, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12569, 10} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12569, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p46, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12570, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12549, 30} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p3, 896);
  $p28 := $add.ref($add.ref($p3, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12549, 38} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12549, 46} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12549, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12550, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12572, 29} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12572, 29} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12572, 41} true;
  assume {:verifier.code 0} true;
  $i49 := $or.i32($i48, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12572, 10} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12572, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12573, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12554, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p3, 896);
  $p32 := $add.ref($add.ref($p3, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12554, 38} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12554, 46} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i33, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12554, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12555, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12575, 29} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12575, 29} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i32($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12575, 41} true;
  assume {:verifier.code 0} true;
  $i53 := $or.i32($i52, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12575, 10} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12575, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p54, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12576, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12559, 30} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p3, 896);
  $p36 := $add.ref($add.ref($p3, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12559, 38} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12559, 46} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i37, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12559, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12560, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12578, 29} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12578, 29} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12578, 41} true;
  assume {:verifier.code 0} true;
  $i57 := $or.i32($i56, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12578, 10} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12578, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12579, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12564, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12581, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb3;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12583, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb27:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12588, 5} true;
  assume {:verifier.code 0} true;
  call ethtool_cmd_speed_set($p1, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12590, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12591, 8} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12591, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $and.i64($i62, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12591, 38} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i64($i63, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12591, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb30, $bb31;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12601, 19} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12601, 42} true;
  assume {:verifier.code 0} true;
  $i66 := $and.i64($i65, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12601, 50} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i64($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12601, 50} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i1.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12601, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12601, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p1, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12601, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12602, 8} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p1, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12602, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12603, 8} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p1, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12603, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12604, 53} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p5, 113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12604, 13} true;
  assume {:verifier.code 0} true;
  call $i74 := readb($p73);
  // WARNING: %107 = call zeroext i8 @readb(i8* %106), !dbg !8221, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12605, 22} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12605, 45} true;
  assume {:verifier.code 0} true;
  $i76 := $and.i32($i75, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12605, 22} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12605, 8} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12605, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p78, $i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12607, 8} true;
  assume {:verifier.code 0} true;
  $i79 := $zext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12607, 31} true;
  assume {:verifier.code 0} true;
  $i80 := $and.i64($i79, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12607, 39} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i64($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12607, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb33, $bb34;
$bb30:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12593, 5} true;
  assume {:verifier.code 0} true;
  call ethtool_cmd_speed_set($p1, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12595, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i64 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12597, 5} true;
  assume {:verifier.code 0} true;
  call ethtool_cmd_speed_set($p1, 10);
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb33:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12608, 10} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p1, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12608, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p82, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12609, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i81 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12610, 10} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p1, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12610, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p83, 0);
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12612, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const check_connection_type: ref;
axiom (check_connection_type == $sub.ref(0, 317727));
procedure  check_connection_type($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i32;
  var $i20: i32;
  var $i15: i32;
  var $i22: i32;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i16;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i16;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata i16* %4, metadata !11567, metadata !8090), !dbg !11568, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8928, 52} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8928, 12} true;
  assume {:verifier.code 0} true;
  call $i5 := readb($p4);
  // WARNING: %6 = call zeroext i8 @readb(i8* %5), !dbg !8104, !verifier.code !8089
  call {:cexpr "PHYSR0"} boogie_si_record_i8($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8930, 8} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8930, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8930, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8930, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8931, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32(0, 16);
  // WARNING: %11 = or i32 0, 16, !dbg !8112, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8932, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8935, 8} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8935, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i11, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8935, 26} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8935, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8936, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i32($i10, 8);
  // WARNING: %18 = or i32 %.0, 8, !dbg !8120, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8937, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i14;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8938, 8} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8938, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8938, 26} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8944, 3} true;
  assume {:verifier.code 0} true;
  call $i22 := velocity_mii_read($p0, 0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8946, 14} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8946, 8} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8946, 20} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8946, 28} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8946, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb10, $bb11;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8939, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i10, 2);
  // WARNING: %24 = or i32 %.0, 2, !dbg !8128, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8940, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb9;
$bb8:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8941, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $or.i32($i10, 4);
  // WARNING: %26 = or i32 %.0, 4, !dbg !8131, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i21);
  assume {:verifier.code 0} true;
  $i20 := $i21;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i15 := $i20;
  goto $bb6;
$bb10:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8948, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := velocity_mii_read($p0, 4, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8950, 16} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8950, 10} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8950, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8950, 28} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8950, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  $i40 := $i15;
  goto $bb18;
$bb12:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8952, 7} true;
  assume {:verifier.code 0} true;
  call $i32 := velocity_mii_read($p0, 9, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8954, 18} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8954, 12} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i16.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8954, 20} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i32($i34, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8954, 27} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8954, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i39 := $i15;
  goto $bb17;
$bb14:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8955, 25} true;
  assume {:verifier.code 0} true;
  $i37 := $or.i32($i15, 32);
  // WARNING: %47 = or i32 %.2, 32, !dbg !8159, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8956, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $i37;
  goto $bb16;
$bb15:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  $i38 := $i15;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8959, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $i38;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8962, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $i39;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8965, 3} true;
  assume {:verifier.code 0} true;
  $r := $i40;
  $exn := false;
  return;
}
const ethtool_cmd_speed_set: ref;
axiom (ethtool_cmd_speed_set == $sub.ref(0, 318759));
procedure  ethtool_cmd_speed_set($p0: ref, $i1: i32)
{
  var $i2: i16;
  var $p3: ref;
  var $i4: i32;
  var $i5: i16;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ethtool_cmd* %0, i64 0, metadata !11638, metadata !8090), !dbg !11639, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7365, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $trunc.i32.i16($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7365, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7365, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7366, 42} true;
  assume {:verifier.code 0} true;
  $i4 := $lshr.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7366, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7366, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7366, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p6, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7367, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_get_sset_count: ref;
axiom (velocity_get_sset_count == $sub.ref(0, 319791));
procedure  velocity_get_sset_count($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i1;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !11652, metadata !8090), !dbg !11653, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13078, 12} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13078, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13079, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13085, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 32;
  goto $bb6;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13083, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13087, 3} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0, 95);
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13091, 1} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const velocity_get_strings: ref;
axiom (velocity_get_strings == $sub.ref(0, 320823));
procedure  velocity_get_strings($p0: ref, $i1: i32, $p2: ref)
{
  var $i3: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !11668, metadata !8090), !dbg !11669, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13055, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13055, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13056, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13063, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p2, velocity_gstrings, 1024, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13065, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13060, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13067, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13069, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_ethtool_get_wol: ref;
axiom (velocity_ethtool_get_wol == $sub.ref(0, 321855));
procedure  velocity_ethtool_get_wol($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12700, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12701, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12702, 8} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12702, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12703, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12703, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12703, 31} true;
  assume {:verifier.code 0} true;
  $i7 := $or.i32($i6, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12703, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12703, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p8, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12705, 30} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12705, 30} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12705, 8} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12705, 39} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i64($i11, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12705, 46} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12705, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12706, 25} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12706, 25} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12706, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i32($i15, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12706, 10} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12706, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12707, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12710, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12710, 30} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12710, 8} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12710, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i64($i20, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12710, 46} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12710, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12711, 25} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12711, 25} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12711, 33} true;
  assume {:verifier.code 0} true;
  $i25 := $or.i32($i24, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12711, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12711, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12712, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12716, 26} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12716, 3} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12716, 60} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p3, 1076);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12716, 3} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12716, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p28, $p30, 6, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12718, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_change_mtu: ref;
axiom (velocity_change_mtu == $sub.ref(0, 322887));
procedure  velocity_change_mtu($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i16: i1;
  var $i17: i8;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $i15: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(152, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !11736, metadata !8090), !dbg !11737, !verifier.code !8092
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11064, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11065, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %6, i64 0, metadata !11750, metadata !8090), !dbg !11751, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11068, 30} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32($i1, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11068, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $ugt.i32($i6, 8936);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11068, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11069, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11069, 18} true;
  assume {:verifier.code 0} true;
  $i9 := $sge.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11069, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11071, 56} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11071, 56} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11071, 65} true;
  assume {:verifier.code 0} true;
  $p12 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11071, 38} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11071, 7} true;
  assume {:verifier.code 0} true;
  call $i14 := printk.ref.ref(.str.4, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11073, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11077, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 22);
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11147, 3} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11082, 13} true;
  assume {:verifier.code 0} true;
  call $i16 := netif_running($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11082, 11} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i8($i16);
  // WARNING: %23 = zext i1 %22 to i8, !dbg !8126, !verifier.code !8087
  call {:cexpr "tmp___0"} boogie_si_record_i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11084, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i8.i1($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11084, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11086, 3} true;
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb10;
$bb9:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i19 := 1;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11089, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11089, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11090, 10} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11090, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11091, 5} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb6;
$bb12:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11095, 12} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11095, 12} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11095, 16} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11095, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11097, 15} true;
  assume {:verifier.code 0} true;
  call $p25 := kzalloc(2096, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11098, 16} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11100, 9} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11100, 34} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11100, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  $i77 := 0;
  goto $bb23;
$bb16:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11102, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 12);
  goto $bb6;
$bb17:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11107, 15} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p26, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11107, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p29, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11108, 28} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11108, 28} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11108, 15} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p26, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11108, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11109, 27} true;
  assume {:verifier.code 0} true;
  $p33 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11109, 27} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11109, 15} true;
  assume {:verifier.code 0} true;
  $p35 := $p26;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11109, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p35, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11110, 15} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p26, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11110, 31} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p5, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11110, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11110, 31} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11110, 31} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p38, $p39, 68, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11111, 31} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p5, 576);
  $p41 := $add.ref($p5, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11111, 34} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11111, 15} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p26, 576);
  $p44 := $add.ref($p26, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11111, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11112, 11} true;
  assume {:verifier.code 0} true;
  call $i45 := velocity_init_rings($p26, $i1);
  // WARNING: %60 = call i32 @velocity_init_rings(%struct.velocity_info* %38, i32 %1), !dbg !8176, !verifier.code !8087
  call {:cexpr "ret"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11114, 13} true;
  assume {:verifier.code 0} true;
  $i46 := $slt.i32($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11114, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11115, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11141, 11} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11141, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11143, 3} true;
  assume {:verifier.code 0} true;
  $i77 := $i45;
  goto $bb23;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11120, 26} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p5, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11120, 5} true;
  assume {:verifier.code 0} true;
  call napi_disable($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11121, 36} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p5, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11121, 5} true;
  assume {:verifier.code 0} true;
  call ldv___ldv_spin_lock_89($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11122, 5} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11123, 5} true;
  assume {:verifier.code 0} true;
  call velocity_shutdown($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11124, 16} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p5, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11124, 16} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11124, 16} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11124, 16} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p50, $p51, 40, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11125, 16} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p5, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11125, 16} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11125, 16} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11125, 16} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p53, $p54, 152, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11126, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p5, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11126, 26} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p26, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11126, 26} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11126, 26} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11126, 26} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p57, $p58, 40, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11127, 11} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p5, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11127, 26} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p26, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11127, 26} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11127, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11127, 26} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p61, $p62, 152, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11128, 15} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p26, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11128, 20} true;
  assume {:verifier.code 0} true;
  $p64 := $bitcast.ref.ref($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11128, 20} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11128, 20} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p64, $p65, 40, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11129, 15} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p26, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11129, 20} true;
  assume {:verifier.code 0} true;
  $p67 := $bitcast.ref.ref($p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11129, 20} true;
  assume {:verifier.code 0} true;
  $p68 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11129, 20} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p67, $p68, 152, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11130, 10} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11130, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11131, 5} true;
  assume {:verifier.code 0} true;
  call velocity_init_registers($p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11132, 5} true;
  assume {:verifier.code 0} true;
  call velocity_give_many_rx_descs($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11133, 25} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p5, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11133, 5} true;
  assume {:verifier.code 0} true;
  call napi_enable($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11134, 52} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p5, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11134, 52} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11134, 63} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11134, 23} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11134, 5} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11135, 5} true;
  assume {:verifier.code 0} true;
  call netif_start_queue($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11136, 43} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p5, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11136, 5} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_84($p75, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11137, 5} true;
  assume {:verifier.code 0} true;
  call velocity_free_rings($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11138, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11095, 34} true;
  assume {:verifier.code 0} true;
  $i15 := $i77;
  goto $bb6;
}
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 323919));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11871, metadata !8090), !dbg !11872, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15855, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_kzalloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15857, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const velocity_init_rings: ref;
axiom (velocity_init_rings == $sub.ref(0, 324951));
procedure  velocity_init_rings($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i32;
  var $i6: i1;
  var $i8: i32;
  var $i9: i1;
  var $i4: i32;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !11884, metadata !8090), !dbg !11885, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10261, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_rxbufsize($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10262, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_init_dma_rings($p0);
  // WARNING: %3 = call i32 @velocity_init_dma_rings(%struct.velocity_info* %0), !dbg !8098, !verifier.code !8092
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10264, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10264, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10265, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10286, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10270, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := velocity_init_rd_ring($p0);
  // WARNING: %8 = call i32 @velocity_init_rd_ring(%struct.velocity_info* %0), !dbg !8106, !verifier.code !8092
  call {:cexpr "ret"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10272, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10272, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10273, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i5;
  goto $bb7;
$bb6:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10293, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_dma_rings($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10295, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i7;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10278, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := velocity_init_td_ring($p0);
  // WARNING: %13 = call i32 @velocity_init_td_ring(%struct.velocity_info* %0), !dbg !8113, !verifier.code !8092
  call {:cexpr "ret"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10280, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10280, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10281, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10289, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_rd_ring($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10290, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10280, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $i8;
  goto $bb3;
}
const ldv___ldv_spin_lock_89: ref;
axiom (ldv___ldv_spin_lock_89 == $sub.ref(0, 325983));
procedure  ldv___ldv_spin_lock_89($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15957, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15958, 3} true;
  assume {:verifier.code 0} true;
  call __ldv_spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15960, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_init_registers: ref;
axiom (velocity_init_registers == $sub.ref(0, 327015));
procedure  velocity_init_registers($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $i33: i8;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $i40: i8;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $i54: i32;
  var $i55: i8;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i8;
  var $i61: i32;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $i65: i32;
  var $i66: i8;
  var $i67: i32;
  var $i68: i32;
  var $i69: i8;
  var $i70: i32;
  var $i71: i8;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i8;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i8;
  var $i81: i32;
  var $i82: i8;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i64;
  var $i87: i32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i32;
  var $i93: i16;
  var $i94: i32;
  var $i95: i32;
  var $i96: i16;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $i104: i16;
  var $i105: i32;
  var $i106: i32;
  var $i107: i16;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $i112: i32;
  var $i113: i1;
  var $i115: i64;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i64;
  var $i120: i32;
  var $p121: ref;
  var $p122: ref;
  var $i123: i64;
  var $p124: ref;
  var $i125: i32;
  var $i126: i32;
  var $i127: i16;
  var $i128: i32;
  var $i129: i16;
  var $p130: ref;
  var $p131: ref;
  var $i132: i32;
  var $i133: i32;
  var $i134: i1;
  var $i114: i32;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: i32;
  var $i140: i32;
  var $i141: i1;
  var $p142: ref;
  var $i143: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i1;
  var $p147: ref;
  var $i148: i8;
  var $i149: i32;
  var $i150: i32;
  var $i151: i8;
  var $p152: ref;
  var $p153: ref;
  var $i154: i8;
  var $i155: i32;
  var $i156: i32;
  var $i157: i8;
  var $p158: ref;
  var $p159: ref;
  var $i160: i8;
  var $i161: i32;
  var $i162: i32;
  var $i163: i1;
  var $p164: ref;
  var $i165: i8;
  var $i166: i32;
  var $i167: i32;
  var $i168: i8;
  var $p169: ref;
  var $p170: ref;
  var $i171: i32;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $i179: i8;
  var $i180: i32;
  var $i181: i8;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
  var $i188: i8;
  var $i189: i32;
  var $i190: i8;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $i197: i8;
  var $i198: i32;
  var $i199: i8;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $i206: i8;
  var $i207: i32;
  var $i208: i8;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $i215: i8;
  var $i216: i32;
  var $i217: i8;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !11933, metadata !8090), !dbg !11934, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9750, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9750, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9751, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9751, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9752, 3} true;
  assume {:verifier.code 0} true;
  call mac_wol_reset($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9755, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9755, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9756, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9770, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9760, 27} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9760, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9761, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9774, 3} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9775, 3} true;
  assume {:verifier.code 0} true;
  call velocity_rx_reset($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9776, 41} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9776, 3} true;
  assume {:verifier.code 0} true;
  call writeb(1, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9777, 41} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p3, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9777, 3} true;
  assume {:verifier.code 0} true;
  call writeb(4, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9778, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := velocity_get_opt_media_mode($p0);
  // WARNING: %23 = call i32 @velocity_get_opt_media_mode(%struct.velocity_info* %0), !dbg !8130, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i11);
  // WARNING: call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !11973, metadata !8090), !dbg !11974, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9780, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := velocity_set_media_mode($p0, $i11);
  // WARNING: %24 = call i32 @velocity_set_media_mode(%struct.velocity_info* %0, i32 %23), !dbg !8135, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9782, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9782, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb14, $bb15;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9765, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9765, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9766, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9802, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9770, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9806, 3} true;
  assume {:verifier.code 0} true;
  call $i25 := velocity_soft_reset($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9808, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 1} true;
  goto $bb21, $bb22;
$bb14:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9784, 5} true;
  assume {:verifier.code 0} true;
  call velocity_print_link_status($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9786, 32} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9786, 32} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9786, 10} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9786, 43} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9786, 50} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9786, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9788, 7} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9790, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9793, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9797, 3} true;
  assume {:verifier.code 0} true;
  call enable_flow_control_ability($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9798, 51} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p3, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9798, 23} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9798, 3} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9799, 42} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9799, 14} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9799, 3} true;
  assume {:verifier.code 0} true;
  call writel(2, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9800, 45} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9800, 17} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9800, 3} true;
  assume {:verifier.code 0} true;
  call writel(2061, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9802, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9935, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb21:
  assume (1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9810, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(21475000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9812, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !((1 == 1));
  // WARNING: call void @llvm.dbg.value(metadata i64 5, i64 0, metadata !12018, metadata !8090), !dbg !12019, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 5, i64 0, metadata !12020, metadata !8090), !dbg !12021, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9822, 9} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9829, 13} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9829, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9829, 23} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9829, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb28, $bb29;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9823, 7} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9817, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8182, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !12020, metadata !8090), !dbg !12021, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9823, 7} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9817, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8182, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !12020, metadata !8090), !dbg !12021, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9823, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb23;
$bb28:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9831, 5} true;
  assume {:verifier.code 0} true;
  call mac_eeprom_reload($p3);
  // WARNING: call void @mac_eeprom_reload(%struct.mac_regs* %4), !dbg !8191, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9841, 9} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p5, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 18} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i32.i8($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 87} true;
  assume {:verifier.code 0} true;
  $p34 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 59} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i33, $p35);
  // WARNING: call void @writeb(i8 zeroext %61, i8* %63), !dbg !8203, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p5, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p177 := $load.ref($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 37} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p177, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 18} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i8($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i180 := $zext.i8.i32($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.i32.i8($i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 87} true;
  assume {:verifier.code 0} true;
  $p182 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 59} true;
  assume {:verifier.code 0} true;
  $p183 := $bitcast.ref.ref($p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 92} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p183, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i181, $p184);
  // WARNING: call void @writeb(i8 zeroext %228, i8* %231), !dbg !8203, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9847, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9851, 53} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p3, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9851, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := readb($p36);
  // WARNING: %69 = call zeroext i8 @readb(i8* %68), !dbg !8210, !verifier.code !8092
  call {:cexpr "tmp___2"} boogie_si_record_i8($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9852, 10} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9852, 24} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i32($i38, 254);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9852, 10} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i32.i8($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9852, 59} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p3, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9852, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i40, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9853, 53} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p3, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9853, 19} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9853, 13} true;
  assume {:verifier.code 0} true;
  call $i44 := readb($p43);
  // WARNING: %76 = call zeroext i8 @readb(i8* %75), !dbg !8219, !verifier.code !8092
  call {:cexpr "tmp___3"} boogie_si_record_i8($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 35} true;
  assume {:verifier.code 0} true;
  $i45 := $sext.i8.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 65} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i45, $sub.i32(0, 49));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 101} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 896);
  $p48 := $add.ref($add.ref($p0, 896), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 109} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 81} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i8($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 74} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i8.i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 72} true;
  assume {:verifier.code 0} true;
  $i52 := $or.i32($i46, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $trunc.i32.i8($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 10} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i8.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 10} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9855, 38} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p3, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9855, 10} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9854, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i55, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9856, 53} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p3, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9856, 19} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9856, 13} true;
  assume {:verifier.code 0} true;
  call $i60 := readb($p59);
  // WARNING: %92 = call zeroext i8 @readb(i8* %91), !dbg !8236, !verifier.code !8092
  call {:cexpr "tmp___4"} boogie_si_record_i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 35} true;
  assume {:verifier.code 0} true;
  $i61 := $sext.i8.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 65} true;
  assume {:verifier.code 0} true;
  $i62 := $and.i32($i61, $sub.i32(0, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 100} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 896);
  $p64 := $add.ref($add.ref($p0, 896), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 108} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 80} true;
  assume {:verifier.code 0} true;
  $i66 := $trunc.i32.i8($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 73} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i8.i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 71} true;
  assume {:verifier.code 0} true;
  $i68 := $or.i32($i62, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 10} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 10} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i32.i8($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9858, 38} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p3, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9858, 10} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9857, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i71, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9859, 42} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p3, 163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9859, 3} true;
  assume {:verifier.code 0} true;
  call writeb(48, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9860, 53} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p3, 121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9860, 13} true;
  assume {:verifier.code 0} true;
  call $i76 := readb($p75);
  // WARNING: %108 = call zeroext i8 @readb(i8* %107), !dbg !8254, !verifier.code !8092
  call {:cexpr "tmp___5"} boogie_si_record_i8($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 35} true;
  assume {:verifier.code 0} true;
  $i77 := $sext.i8.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 65} true;
  assume {:verifier.code 0} true;
  $i78 := $and.i32($i77, $sub.i32(0, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 72} true;
  assume {:verifier.code 0} true;
  $i79 := $or.i32($i78, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i32.i8($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 10} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i8.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 10} true;
  assume {:verifier.code 0} true;
  $i82 := $trunc.i32.i8($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 108} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p3, 121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9861, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i82, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9862, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_cam_filter($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9863, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_multi($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9864, 3} true;
  assume {:verifier.code 0} true;
  call enable_mii_autopoll($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9865, 3} true;
  assume {:verifier.code 0} true;
  call setup_adaptive_interrupts($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9866, 31} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 728);
  $p85 := $add.ref($add.ref($p0, 728), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9866, 34} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i64($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9866, 10} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i64.i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9866, 72} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p3, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9866, 44} true;
  assume {:verifier.code 0} true;
  $p89 := $bitcast.ref.ref($p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9866, 3} true;
  assume {:verifier.code 0} true;
  call writel($i87, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 56} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 896);
  $p91 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 64} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 33} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i16($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i16.i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 71} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i32($i94, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 10} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i32.i16($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 110} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p3, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 82} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9867, 3} true;
  assume {:verifier.code 0} true;
  call writew($i96, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9868, 41} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p3, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9868, 3} true;
  assume {:verifier.code 0} true;
  call writeb(1, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9869, 41} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p3, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9869, 3} true;
  assume {:verifier.code 0} true;
  call writeb(4, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 56} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p0, 896);
  $p102 := $add.ref($add.ref($p0, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 64} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 33} true;
  assume {:verifier.code 0} true;
  $i104 := $trunc.i32.i16($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 17} true;
  assume {:verifier.code 0} true;
  $i105 := $zext.i16.i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 71} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i32($i105, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 10} true;
  assume {:verifier.code 0} true;
  $i107 := $trunc.i32.i16($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 110} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p3, 82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 82} true;
  assume {:verifier.code 0} true;
  $p109 := $bitcast.ref.ref($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9870, 3} true;
  assume {:verifier.code 0} true;
  call writew($i107, $p109);
  // WARNING: call void @writew(i16 zeroext %139, i8* %141), !dbg !8295, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 17} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 576);
  $p111 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 20} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $slt.i32(0, $i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i113 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 7} true;
  assume {:verifier.code 0} true;
  $i114 := 0;
  goto $bb38;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i113 == 1));
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  goto $bb42;
$bb38:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9882, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 25} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i32.i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 31} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 576);
  $p117 := $add.ref($add.ref($p0, 576), 120);
  $p118 := $add.ref($add.ref($add.ref($p0, 576), 120), $mul.ref($i115, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 25} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i64($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 10} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i64.i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 75} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p3, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 47} true;
  assume {:verifier.code 0} true;
  $p122 := $bitcast.ref.ref($p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 87} true;
  assume {:verifier.code 0} true;
  $i123 := $sext.i32.i64($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 85} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p122, $mul.ref($i123, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9876, 3} true;
  assume {:verifier.code 0} true;
  call writel($i120, $p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 42} true;
  assume {:verifier.code 0} true;
  $i125 := $mul.i32($i114, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 37} true;
  assume {:verifier.code 0} true;
  $i126 := $shl.i32(1, $i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 17} true;
  assume {:verifier.code 0} true;
  $i127 := $trunc.i32.i16($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 10} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i16.i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 10} true;
  assume {:verifier.code 0} true;
  $i129 := $trunc.i32.i16($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 77} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p3, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 49} true;
  assume {:verifier.code 0} true;
  $p131 := $bitcast.ref.ref($p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9877, 3} true;
  assume {:verifier.code 0} true;
  call writew($i129, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9878, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $add.i32($i114, 1);
  // WARNING: %164 = add nsw i32 %.12, 1, !dbg !8317, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 20} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i32($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 9} true;
  assume {:verifier.code 0} true;
  $i134 := $slt.i32($i132, $i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 7} true;
  assume {:verifier.code 0} true;
  $i114 := $i132;
  assume {:branchcond $i134} true;
  goto $bb40, $bb41;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 7} true;
  assume {:verifier.code 0} true;
  assume ($i134 == 1);
  goto $bb38;
$bb41:
  assume !(($i134 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9881, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9887, 3} true;
  assume {:verifier.code 0} true;
  call init_flow_control_register($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9888, 42} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9888, 14} true;
  assume {:verifier.code 0} true;
  $p136 := $bitcast.ref.ref($p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9888, 3} true;
  assume {:verifier.code 0} true;
  call writel(2, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9889, 45} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9889, 17} true;
  assume {:verifier.code 0} true;
  $p138 := $bitcast.ref.ref($p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9889, 3} true;
  assume {:verifier.code 0} true;
  call writel(2061, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9890, 13} true;
  assume {:verifier.code 0} true;
  call $i139 := velocity_get_opt_media_mode($p0);
  // WARNING: %174 = call i32 @velocity_get_opt_media_mode(%struct.velocity_info* %0), !dbg !8328, !verifier.code !8092
  call {:cexpr "tmp___6"} boogie_si_record_i32($i139);
  // WARNING: call void @llvm.dbg.value(metadata i32 %174, i64 0, metadata !12171, metadata !8090), !dbg !12172, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9892, 3} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9893, 3} true;
  assume {:verifier.code 0} true;
  call mii_init($p0, $i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9894, 13} true;
  assume {:verifier.code 0} true;
  call $i140 := velocity_set_media_mode($p0, $i139);
  // WARNING: %175 = call i32 @velocity_set_media_mode(%struct.velocity_info* %0, i32 %174), !dbg !8333, !verifier.code !8092
  call {:cexpr "tmp___7"} boogie_si_record_i32($i140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9896, 15} true;
  assume {:verifier.code 0} true;
  $i141 := $ne.i32($i140, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9896, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i141 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9898, 5} true;
  assume {:verifier.code 0} true;
  call velocity_print_link_status($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9900, 32} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9900, 32} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i32($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9900, 10} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i32.i64($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9900, 43} true;
  assume {:verifier.code 0} true;
  $i145 := $and.i64($i144, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9900, 50} true;
  assume {:verifier.code 0} true;
  $i146 := $eq.i64($i145, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9900, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb45, $bb46;
$bb44:
  assume !(($i141 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb45:
  assume ($i146 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9902, 7} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9904, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9907, 3} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9911, 3} true;
  assume {:verifier.code 0} true;
  call enable_flow_control_ability($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9912, 53} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p3, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9912, 13} true;
  assume {:verifier.code 0} true;
  call $i148 := readb($p147);
  // WARNING: %189 = call zeroext i8 @readb(i8* %188), !dbg !8356, !verifier.code !8092
  call {:cexpr "tmp___8"} boogie_si_record_i8($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9913, 17} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i8.i32($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9913, 40} true;
  assume {:verifier.code 0} true;
  $i150 := $or.i32($i149, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9913, 10} true;
  assume {:verifier.code 0} true;
  $i151 := $trunc.i32.i8($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9913, 75} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p3, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9913, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i151, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9914, 53} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p3, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9914, 13} true;
  assume {:verifier.code 0} true;
  call $i154 := readb($p153);
  // WARNING: %195 = call zeroext i8 @readb(i8* %194), !dbg !8365, !verifier.code !8092
  call {:cexpr "tmp___9"} boogie_si_record_i8($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9915, 17} true;
  assume {:verifier.code 0} true;
  $i155 := $zext.i8.i32($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9915, 40} true;
  assume {:verifier.code 0} true;
  $i156 := $or.i32($i155, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9915, 10} true;
  assume {:verifier.code 0} true;
  $i157 := $trunc.i32.i8($i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9915, 75} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p3, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9915, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i157, $p158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9916, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9919, 54} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p3, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9919, 14} true;
  assume {:verifier.code 0} true;
  call $i160 := readb($p159);
  // WARNING: %202 = call zeroext i8 @readb(i8* %201), !dbg !8376, !verifier.code !8092
  call {:cexpr "tmp___10"} boogie_si_record_i8($i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9921, 7} true;
  assume {:verifier.code 0} true;
  $i161 := $zext.i8.i32($i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9921, 22} true;
  assume {:verifier.code 0} true;
  $i162 := $and.i32($i161, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9921, 22} true;
  assume {:verifier.code 0} true;
  $i163 := $ne.i32($i162, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9921, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb50, $bb51;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9921, 7} true;
  assume {:verifier.code 0} true;
  assume ($i163 == 1);
  goto $bb49;
$bb51:
  assume !(($i163 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9927, 54} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p3, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9927, 14} true;
  assume {:verifier.code 0} true;
  call $i165 := readb($p164);
  // WARNING: %209 = call zeroext i8 @readb(i8* %208), !dbg !8385, !verifier.code !8092
  call {:cexpr "tmp___11"} boogie_si_record_i8($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9928, 10} true;
  assume {:verifier.code 0} true;
  $i166 := $zext.i8.i32($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9928, 25} true;
  assume {:verifier.code 0} true;
  $i167 := $and.i32($i166, 247);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9928, 10} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i8($i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9928, 60} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p3, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9928, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i168, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9929, 16} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p0, 964);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9929, 16} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i32($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9929, 54} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p3, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9929, 26} true;
  assume {:verifier.code 0} true;
  $p173 := $bitcast.ref.ref($p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9929, 3} true;
  assume {:verifier.code 0} true;
  call writel($i171, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9930, 51} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p3, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9930, 23} true;
  assume {:verifier.code 0} true;
  $p175 := $bitcast.ref.ref($p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9930, 3} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p175);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9931, 3} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9933, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p5, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p186 := $load.ref($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 37} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p186, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 18} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i8($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i8.i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i190 := $trunc.i32.i8($i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 87} true;
  assume {:verifier.code 0} true;
  $p191 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 59} true;
  assume {:verifier.code 0} true;
  $p192 := $bitcast.ref.ref($p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 92} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p192, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i190, $p193);
  // WARNING: call void @writeb(i8 zeroext %238, i8* %241), !dbg !8203, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p5, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p195 := $load.ref($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 37} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p195, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 18} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i8($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i198 := $zext.i8.i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i199 := $trunc.i32.i8($i198);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 87} true;
  assume {:verifier.code 0} true;
  $p200 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 59} true;
  assume {:verifier.code 0} true;
  $p201 := $bitcast.ref.ref($p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 92} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p201, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i199, $p202);
  // WARNING: call void @writeb(i8 zeroext %248, i8* %251), !dbg !8203, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p5, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p204 := $load.ref($M.0, $p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 37} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p204, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 18} true;
  assume {:verifier.code 0} true;
  $i206 := $load.i8($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i207 := $zext.i8.i32($i206);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i32.i8($i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 87} true;
  assume {:verifier.code 0} true;
  $p209 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 59} true;
  assume {:verifier.code 0} true;
  $p210 := $bitcast.ref.ref($p209);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 92} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p210, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i208, $p211);
  // WARNING: call void @writeb(i8 zeroext %258, i8* %261), !dbg !8203, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9842, 7} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p5, 824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 28} true;
  assume {:verifier.code 0} true;
  $p213 := $load.ref($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 37} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p213, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 18} true;
  assume {:verifier.code 0} true;
  $i215 := $load.i8($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i216 := $zext.i8.i32($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 12} true;
  assume {:verifier.code 0} true;
  $i217 := $trunc.i32.i8($i216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 87} true;
  assume {:verifier.code 0} true;
  $p218 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 59} true;
  assume {:verifier.code 0} true;
  $p219 := $bitcast.ref.ref($p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 92} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p219, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9837, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i217, $p220);
  // WARNING: call void @writeb(i8 zeroext %268, i8* %271), !dbg !8203, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb33;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9817, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8182, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !12020, metadata !8090), !dbg !12021, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9823, 7} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9817, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8182, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !12020, metadata !8090), !dbg !12021, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9823, 7} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9817, 5} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8182, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !12020, metadata !8090), !dbg !12021, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb27;
}
const velocity_give_many_rx_descs: ref;
axiom (velocity_give_many_rx_descs == $sub.ref(0, 328047));
procedure  velocity_give_many_rx_descs($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i22: i1;
  var $i23: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i24: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i16;
  var $i37: i32;
  var $i38: i32;
  var $i39: i16;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $i20: i32;
  var $i21: i32;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i16;
  var $i53: i32;
  var $i54: i32;
  var $i55: i16;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9946, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9946, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9947, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 728);
  $p4 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9947, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9947, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i32($i5, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9947, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9948, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9973, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9953, 26} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 728);
  $p8 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9953, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9953, 36} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 3);
  // WARNING: %14 = and i32 %13, 3, !dbg !8106, !verifier.code !8092
  call {:cexpr "unusable"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9954, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 728);
  $p12 := $add.ref($add.ref($p0, 728), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9954, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9954, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32($i13, $i10);
  // WARNING: %18 = sub nsw i32 %17, %14, !dbg !8111, !verifier.code !8092
  call {:cexpr "dirty"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9955, 23} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 728);
  $p16 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9955, 26} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9955, 33} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i17, 65532);
  // WARNING: %22 = and i32 %21, 65532, !dbg !8116, !verifier.code !8092
  call {:cexpr "avail"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 7} true;
  assume {:verifier.code 0} true;
  $i20, $i21 := $i14, $i18;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9963, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $sgt.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i20, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $i23;
  goto $bb12;
$bb11:
  assume !(($i22 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 42} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 896);
  $p26 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 50} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 56} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i27, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $i28;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9958, 11} true;
  assume {:verifier.code 0} true;
  // WARNING: %34 = phi i32 [ %27, %26 ], [ %32, %28 ], !dbg !8132, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 89} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 728);
  $p30 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 92} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 99} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 97} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p31, $mul.ref($i32, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 123} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p31, $mul.ref($i32, 16));
  $p35 := $add.ref($add.ref($p31, $mul.ref($i32, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 130} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i16($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 67} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i16.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 134} true;
  assume {:verifier.code 0} true;
  $i38 := $or.i32($i37, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 57} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i32.i16($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 10} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 728);
  $p41 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 13} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 20} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 18} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p42, $mul.ref($i43, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 44} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p42, $mul.ref($i43, 16));
  $p46 := $add.ref($add.ref($p42, $mul.ref($i43, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9959, 55} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p46, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9960, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $sub.i32($i21, 1);
  // WARNING: %53 = sub nsw i32 %.012, 1, !dbg !8149, !verifier.code !8092
  call {:cexpr "avail"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 13} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i32($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 7} true;
  assume {:verifier.code 0} true;
  $i20, $i21 := $i24, $i47;
  assume {:branchcond $i48} true;
  goto $bb13, $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 7} true;
  assume {:verifier.code 0} true;
  assume ($i48 == 1);
  goto $bb8;
$bb14:
  assume !(($i48 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9962, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 40} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 728);
  $p50 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 43} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 17} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i16($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 10} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i16.i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 51} true;
  assume {:verifier.code 0} true;
  $i54 := $and.i32($i53, 65532);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 10} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 88} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p2, 94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 60} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9968, 3} true;
  assume {:verifier.code 0} true;
  call writew($i55, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9969, 9} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 728);
  $p59 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9969, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9971, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const napi_enable: ref;
axiom (napi_enable == $sub.ref(0, 329079));
procedure  napi_enable($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7467, 71} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7467, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 0, i64* %2), !dbg !8096, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7468, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7468, 37} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7468, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7468, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv__builtin_expect($i5, 0);
  // WARNING: %7 = call i64 @ldv__builtin_expect(i64 %6, i64 0), !dbg !8101, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7470, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7470, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  call devirtbounce.4(0, .str.10, 502, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7474, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7481, 51} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7481, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit(0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7483, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_start_queue: ref;
axiom (netif_start_queue == $sub.ref(0, 330111));
procedure  netif_start_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7540, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7541, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_start_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7543, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_irqrestore_84: ref;
axiom (ldv_spin_unlock_irqrestore_84 == $sub.ref(0, 331143));
procedure  ldv_spin_unlock_irqrestore_84($p0: ref, $i1: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !12358, metadata !8090), !dbg !12359, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15902, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15903, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15905, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 332175));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !12368, metadata !8090), !dbg !12369, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6496, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6496, 58} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6496, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6498, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 333207));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64);
const netif_tx_start_queue: ref;
axiom (netif_tx_start_queue == $sub.ref(0, 334239));
procedure  netif_tx_start_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7529, 59} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7529, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit(0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7531, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_rx_reset: ref;
axiom (velocity_rx_reset == $sub.ref(0, 335271));
procedure  velocity_rx_reset($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i16;
  var $i16: i32;
  var $i17: i32;
  var $i18: i16;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
  var $i7: i32;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i16;
  var $i33: i32;
  var $i34: i16;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i16;
  var $i49: i32;
  var $i50: i32;
  var $i51: i16;
  var $p52: ref;
  var $p53: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8472, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8472, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8473, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_rx_ring_indexes($p0);
  // WARNING: call void @velocity_init_rx_ring_indexes(%struct.velocity_info* %0), !dbg !8098, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 896);
  $p4 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32(0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8482, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 85} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 728);
  $p9 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 88} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 95} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 93} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p10, $mul.ref($i11, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 115} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p10, $mul.ref($i11, 16));
  $p14 := $add.ref($add.ref($p10, $mul.ref($i11, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 122} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i16($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 63} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i16.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 126} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i16, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 53} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i16($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 10} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 728);
  $p20 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 18} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p21, $mul.ref($i22, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 40} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p21, $mul.ref($i22, 16));
  $p25 := $add.ref($add.ref($p21, $mul.ref($i22, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8478, 51} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p25, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8479, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i7, 1);
  // WARNING: %27 = add nsw i32 %.01, 1, !dbg !8121, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 25} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $slt.i32($i26, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i26;
  assume {:branchcond $i28} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  assume ($i28 == 1);
  goto $bb4;
$bb7:
  assume !(($i28 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8481, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 40} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 896);
  $p30 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 48} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i32.i16($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 10} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i16.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 10} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i16($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 84} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p2, 94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 56} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8487, 3} true;
  assume {:verifier.code 0} true;
  call writew($i34, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8488, 31} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 728);
  $p38 := $add.ref($add.ref($p0, 728), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8488, 34} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i64($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8488, 10} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i64.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8488, 72} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p2, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8488, 44} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8488, 3} true;
  assume {:verifier.code 0} true;
  call writel($i40, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8489, 41} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p2, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8489, 13} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8489, 3} true;
  assume {:verifier.code 0} true;
  call writew(0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 56} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 896);
  $p46 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 64} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 33} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i16($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i16.i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 71} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i32($i49, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 10} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i16($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 110} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p2, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 82} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8490, 3} true;
  assume {:verifier.code 0} true;
  call writew($i51, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8492, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_get_opt_media_mode: ref;
axiom (velocity_get_opt_media_mode == $sub.ref(0, 336303));
procedure  velocity_get_opt_media_mode($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $p26: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !12450, metadata !8090), !dbg !12451, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8502, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 896);
  $p2 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8502, 36} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8502, 44} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8502, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8503, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8535, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 32;
  goto $bb26;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8507, 28} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 896);
  $p6 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8507, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8507, 44} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8507, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8508, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8538, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 20;
  goto $bb26;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8512, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 896);
  $p10 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8512, 36} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8512, 44} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8512, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8513, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8541, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 18;
  goto $bb26;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8517, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 896);
  $p14 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8517, 36} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8517, 44} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8517, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8518, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8544, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 4;
  goto $bb26;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8522, 28} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 896);
  $p18 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8522, 36} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8522, 44} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8522, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8523, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8547, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 2;
  goto $bb26;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8527, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 896);
  $p22 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8527, 36} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8527, 44} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8527, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8528, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8550, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 24;
  goto $bb26;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8532, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8552, 3} true;
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8554, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8554, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8555, 3} true;
  assume {:verifier.code 0} true;
  $r := $i25;
  $exn := false;
  return;
}
const velocity_set_media_mode: ref;
axiom (velocity_set_media_mode == $sub.ref(0, 337335));
procedure  velocity_set_media_mode($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i16;
  var $i23: i32;
  var $i24: i32;
  var $i25: i16;
  var $p26: ref;
  var $p27: ref;
  var $i28: i16;
  var $i29: i32;
  var $i30: i16;
  var $i31: i32;
  var $i32: i64;
  var $i33: i64;
  var $i34: i1;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $p38: ref;
  var $i39: i8;
  var $i40: i32;
  var $i41: i32;
  var $i42: i8;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i16;
  var $i48: i32;
  var $i49: i32;
  var $i50: i16;
  var $p51: ref;
  var $p52: ref;
  var $i53: i16;
  var $i54: i32;
  var $i55: i16;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i16;
  var $i61: i32;
  var $i62: i32;
  var $i63: i16;
  var $p64: ref;
  var $p65: ref;
  var $i66: i16;
  var $i67: i32;
  var $i68: i16;
  var $i69: i32;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $i73: i16;
  var $i74: i32;
  var $i75: i32;
  var $i76: i16;
  var $p77: ref;
  var $p78: ref;
  var $i79: i16;
  var $i80: i32;
  var $i81: i16;
  var $i82: i32;
  var $p83: ref;
  var $i84: i8;
  var $i85: i32;
  var $i86: i32;
  var $i87: i8;
  var $p88: ref;
  var $p89: ref;
  var $i90: i8;
  var $i91: i64;
  var $i92: i64;
  var $i93: i1;
  var $i94: i32;
  var $i95: i32;
  var $i96: i8;
  var $i98: i32;
  var $i99: i32;
  var $i100: i8;
  var $i97: i8;
  var $i101: i64;
  var $i102: i64;
  var $i103: i1;
  var $i104: i32;
  var $i105: i32;
  var $i106: i8;
  var $i107: i32;
  var $i108: i8;
  var $p109: ref;
  var $i110: i32;
  var $i111: i1;
  var $i112: i32;
  var $p113: ref;
  var $i114: i8;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $i118: i8;
  var $i119: i32;
  var $i120: i32;
  var $i121: i8;
  var $p122: ref;
  var $i123: i32;
  var $i124: i32;
  var $i125: i8;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i129: i32;
  var $i130: i8;
  var $p131: ref;
  var $p132: ref;
  var $i133: i8;
  var $i134: i32;
  var $i135: i1;
  var $p136: ref;
  var $i137: i8;
  var $i138: i32;
  var $i139: i32;
  var $i140: i8;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i32;
  var $i145: i16;
  var $i146: i32;
  var $i147: i32;
  var $i148: i16;
  var $i149: i64;
  var $i150: i64;
  var $i151: i1;
  var $i152: i16;
  var $i153: i32;
  var $i154: i32;
  var $i155: i16;
  var $p156: ref;
  var $p157: ref;
  var $i158: i16;
  var $i159: i32;
  var $i160: i16;
  var $i161: i32;
  var $i162: i64;
  var $i163: i64;
  var $i164: i1;
  var $p165: ref;
  var $i166: i8;
  var $i167: i32;
  var $i168: i32;
  var $i169: i8;
  var $p170: ref;
  var $p171: ref;
  var $i172: i8;
  var $i173: i32;
  var $i174: i32;
  var $i175: i8;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $i179: i32;
  var $i180: i16;
  var $i181: i32;
  var $i182: i32;
  var $i183: i16;
  var $i184: i64;
  var $i185: i64;
  var $i186: i1;
  var $i187: i64;
  var $i188: i64;
  var $i189: i1;
  var $i190: i16;
  var $i191: i32;
  var $i192: i32;
  var $i193: i16;
  var $i194: i16;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $i198: i64;
  var $i199: i64;
  var $i200: i1;
  var $i201: i64;
  var $i202: i64;
  var $i203: i1;
  var $i204: i16;
  var $i205: i32;
  var $i206: i32;
  var $i207: i16;
  var $i208: i16;
  var $i209: i32;
  var $i210: i32;
  var $i211: i16;
  var $p212: ref;
  var $p213: ref;
  var $i214: i16;
  var $i215: i32;
  var $i216: i16;
  var $i217: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !12512, metadata !8090), !dbg !12513, !verifier.code !8092
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8988, 16} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8988, 16} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8989, 49} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8989, 49} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8989, 22} true;
  assume {:verifier.code 0} true;
  call $i12 := mii_check_media_mode($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8989, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8989, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8991, 3} true;
  assume {:verifier.code 0} true;
  call set_mii_flow_control($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8993, 30} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8993, 30} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8993, 8} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8993, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8993, 61} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i64($i17, 1033232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8993, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8995, 29} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8995, 29} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8995, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := velocity_mii_read($p20, 28, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8996, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8996, 16} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8996, 33} true;
  assume {:verifier.code 0} true;
  $i24 := $or.i32($i23, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8996, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i16($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8996, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8997, 30} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8997, 30} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8997, 50} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8997, 44} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8997, 44} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8997, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := velocity_mii_write($p27, 28, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8999, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9002, 8} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9002, 35} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i64($i32, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9002, 43} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9002, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9003, 9} true;
  assume {:verifier.code 0} true;
  $i35 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9003, 18} true;
  assume {:verifier.code 0} true;
  $i36 := $sgt.i32($i35, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9003, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9026, 55} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p9, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9026, 15} true;
  assume {:verifier.code 0} true;
  call $i84 := readb($p83);
  // WARNING: %93 = call zeroext i8 @readb(i8* %92), !dbg !8198, !verifier.code !8089
  call {:cexpr "tmp___0"} boogie_si_record_i8($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9027, 19} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9027, 42} true;
  assume {:verifier.code 0} true;
  $i86 := $or.i32($i85, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9027, 12} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i32.i8($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9027, 78} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p9, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9027, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i87, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9028, 55} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p9, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9028, 15} true;
  assume {:verifier.code 0} true;
  call $i90 := readb($p89);
  // WARNING: %99 = call zeroext i8 @readb(i8* %98), !dbg !8207, !verifier.code !8089
  call {:cexpr "CHIPGCR"} boogie_si_record_i8($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9030, 10} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9030, 37} true;
  assume {:verifier.code 0} true;
  $i92 := $and.i64($i91, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9030, 44} true;
  assume {:verifier.code 0} true;
  $i93 := $ne.i64($i92, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9030, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb10, $bb11;
$bb6:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9005, 7} true;
  assume {:verifier.code 0} true;
  call $i37 := printk.ref(.str.12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9007, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9011, 51} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p9, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9011, 11} true;
  assume {:verifier.code 0} true;
  call $i39 := readb($p38);
  // WARNING: %47 = call zeroext i8 @readb(i8* %46), !dbg !8153, !verifier.code !8089
  call {:cexpr "tmp"} boogie_si_record_i8($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9012, 12} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9012, 22} true;
  assume {:verifier.code 0} true;
  $i41 := $and.i32($i40, 239);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9012, 12} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i32.i8($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9012, 57} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p9, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9012, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i42, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9013, 29} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9013, 29} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9013, 5} true;
  assume {:verifier.code 0} true;
  call $i46 := velocity_mii_read($p45, 4, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9014, 35} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9014, 20} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i16.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9014, 41} true;
  assume {:verifier.code 0} true;
  $i49 := $or.i32($i48, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9014, 13} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i16($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9014, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9015, 30} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9015, 30} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9015, 49} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9015, 43} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i16.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9015, 43} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9015, 5} true;
  assume {:verifier.code 0} true;
  call $i56 := velocity_mii_write($p52, 4, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9016, 29} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9016, 29} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9016, 5} true;
  assume {:verifier.code 0} true;
  call $i59 := velocity_mii_read($p58, 9, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9017, 35} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9017, 20} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i16.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9017, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $or.i32($i61, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9017, 13} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i16($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9017, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p4, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9018, 30} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9018, 30} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9018, 49} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9018, 43} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i16.i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9018, 43} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i32.i16($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9018, 5} true;
  assume {:verifier.code 0} true;
  call $i69 := velocity_mii_write($p65, 9, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9019, 29} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9019, 29} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9019, 5} true;
  assume {:verifier.code 0} true;
  call $i72 := velocity_mii_read($p71, 0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9020, 35} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9020, 20} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i16.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9020, 41} true;
  assume {:verifier.code 0} true;
  $i75 := $or.i32($i74, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9020, 13} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i16($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9020, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p5, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9021, 30} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9021, 30} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9021, 49} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9021, 43} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i16.i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9021, 43} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9021, 5} true;
  assume {:verifier.code 0} true;
  call $i82 := velocity_mii_write($p78, 0, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9022, 5} true;
  assume {:verifier.code 0} true;
  call mii_set_auto_on($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9024, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9124, 3} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $exn := false;
  return;
$bb10:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9031, 23} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i8.i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9031, 46} true;
  assume {:verifier.code 0} true;
  $i95 := $or.i32($i94, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9031, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i32.i8($i95);
  // WARNING: %106 = trunc i32 %105 to i8, !dbg !8218, !verifier.code !8089
  call {:cexpr "CHIPGCR"} boogie_si_record_i8($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9032, 5} true;
  assume {:verifier.code 0} true;
  $i97 := $i96;
  goto $bb12;
$bb11:
  assume !(($i93 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9033, 17} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i8.i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9033, 40} true;
  assume {:verifier.code 0} true;
  $i99 := $and.i32($i98, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9033, 17} true;
  assume {:verifier.code 0} true;
  $i100 := $trunc.i32.i8($i99);
  // WARNING: %110 = trunc i32 %109 to i8, !dbg !8220, !verifier.code !8089
  call {:cexpr "CHIPGCR"} boogie_si_record_i8($i100);
  assume {:verifier.code 0} true;
  $i97 := $i100;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9035, 10} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9035, 37} true;
  assume {:verifier.code 0} true;
  $i102 := $and.i64($i101, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9035, 45} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.i64($i102, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9035, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9037, 23} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i8.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9037, 46} true;
  assume {:verifier.code 0} true;
  $i105 := $or.i32($i104, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9037, 17} true;
  assume {:verifier.code 0} true;
  $i106 := $trunc.i32.i8($i105);
  // WARNING: %118 = trunc i32 %117 to i8, !dbg !8232, !verifier.code !8089
  call {:cexpr "CHIPGCR"} boogie_si_record_i8($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9038, 14} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i8.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9038, 14} true;
  assume {:verifier.code 0} true;
  $i108 := $trunc.i32.i8($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9038, 57} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p9, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9038, 7} true;
  assume {:verifier.code 0} true;
  call writeb($i108, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9040, 11} true;
  assume {:verifier.code 0} true;
  $i110 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9040, 20} true;
  assume {:verifier.code 0} true;
  $i111 := $sgt.i32($i110, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9040, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i103 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9056, 17} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i8.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9056, 40} true;
  assume {:verifier.code 0} true;
  $i124 := $and.i32($i123, 191);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9056, 17} true;
  assume {:verifier.code 0} true;
  $i125 := $trunc.i32.i8($i124);
  // WARNING: %144 = trunc i32 %143 to i8, !dbg !8261, !verifier.code !8089
  call {:cexpr "CHIPGCR"} boogie_si_record_i8($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9057, 11} true;
  assume {:verifier.code 0} true;
  $i126 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9057, 20} true;
  assume {:verifier.code 0} true;
  $i127 := $sgt.i32($i126, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9057, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb22, $bb23;
$bb15:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9042, 9} true;
  assume {:verifier.code 0} true;
  call $i112 := printk.ref(.str.13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9044, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9047, 32} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p0, 3824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9047, 32} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i8($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9047, 11} true;
  assume {:verifier.code 0} true;
  $i115 := $zext.i8.i32($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9047, 39} true;
  assume {:verifier.code 0} true;
  $i116 := $ule.i32($i115, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9047, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9049, 59} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p9, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9049, 19} true;
  assume {:verifier.code 0} true;
  call $i118 := readb($p117);
  // WARNING: %134 = call zeroext i8 @readb(i8* %133), !dbg !8252, !verifier.code !8089
  call {:cexpr "tmp___1"} boogie_si_record_i8($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9050, 16} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i8.i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9050, 30} true;
  assume {:verifier.code 0} true;
  $i120 := $and.i32($i119, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9050, 16} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9050, 65} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p9, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9050, 9} true;
  assume {:verifier.code 0} true;
  call writeb($i121, $p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9052, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9055, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9077, 29} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9077, 29} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9077, 5} true;
  assume {:verifier.code 0} true;
  call $i144 := velocity_mii_read($p143, 9, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9078, 31} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9078, 16} true;
  assume {:verifier.code 0} true;
  $i146 := $zext.i16.i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9078, 40} true;
  assume {:verifier.code 0} true;
  $i147 := $and.i32($i146, 64767);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9078, 16} true;
  assume {:verifier.code 0} true;
  $i148 := $trunc.i32.i16($i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9078, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p6, $i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9080, 10} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9080, 37} true;
  assume {:verifier.code 0} true;
  $i150 := $and.i64($i149, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9080, 45} true;
  assume {:verifier.code 0} true;
  $i151 := $eq.i64($i150, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9080, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i151} true;
  goto $bb28, $bb29;
$bb22:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9059, 9} true;
  assume {:verifier.code 0} true;
  call $i128 := printk.ref(.str.14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9061, 7} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i127 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9065, 14} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i8.i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9065, 14} true;
  assume {:verifier.code 0} true;
  $i130 := $trunc.i32.i8($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9065, 57} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p9, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9065, 7} true;
  assume {:verifier.code 0} true;
  call writeb($i130, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9067, 32} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p0, 3824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9067, 32} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i8($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9067, 11} true;
  assume {:verifier.code 0} true;
  $i134 := $zext.i8.i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9067, 39} true;
  assume {:verifier.code 0} true;
  $i135 := $ule.i32($i134, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9067, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9069, 59} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p9, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9069, 19} true;
  assume {:verifier.code 0} true;
  call $i137 := readb($p136);
  // WARNING: %160 = call zeroext i8 @readb(i8* %159), !dbg !8284, !verifier.code !8089
  call {:cexpr "tmp___2"} boogie_si_record_i8($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9070, 23} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9070, 46} true;
  assume {:verifier.code 0} true;
  $i139 := $or.i32($i138, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9070, 16} true;
  assume {:verifier.code 0} true;
  $i140 := $trunc.i32.i8($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9070, 83} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p9, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9070, 9} true;
  assume {:verifier.code 0} true;
  call writeb($i140, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9072, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i135 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb28:
  assume ($i151 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9081, 40} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9081, 25} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i16.i32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9081, 49} true;
  assume {:verifier.code 0} true;
  $i154 := $or.i32($i153, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9081, 18} true;
  assume {:verifier.code 0} true;
  $i155 := $trunc.i32.i16($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9081, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p6, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9082, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i151 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9086, 30} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9086, 30} true;
  assume {:verifier.code 0} true;
  $p157 := $load.ref($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9086, 49} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9086, 43} true;
  assume {:verifier.code 0} true;
  $i159 := $zext.i16.i32($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9086, 43} true;
  assume {:verifier.code 0} true;
  $i160 := $trunc.i32.i16($i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9086, 5} true;
  assume {:verifier.code 0} true;
  call $i161 := velocity_mii_write($p157, 9, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9088, 10} true;
  assume {:verifier.code 0} true;
  $i162 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9088, 37} true;
  assume {:verifier.code 0} true;
  $i163 := $and.i64($i162, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9088, 45} true;
  assume {:verifier.code 0} true;
  $i164 := $eq.i64($i163, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9088, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i164} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i164 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9090, 57} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p9, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9090, 17} true;
  assume {:verifier.code 0} true;
  call $i166 := readb($p165);
  // WARNING: %196 = call zeroext i8 @readb(i8* %195), !dbg !8325, !verifier.code !8089
  call {:cexpr "tmp___3"} boogie_si_record_i8($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9091, 14} true;
  assume {:verifier.code 0} true;
  $i167 := $zext.i8.i32($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9091, 28} true;
  assume {:verifier.code 0} true;
  $i168 := $and.i32($i167, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9091, 14} true;
  assume {:verifier.code 0} true;
  $i169 := $trunc.i32.i8($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9091, 63} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p9, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9091, 7} true;
  assume {:verifier.code 0} true;
  call writeb($i169, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9093, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i164 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9095, 57} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p9, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9095, 17} true;
  assume {:verifier.code 0} true;
  call $i172 := readb($p171);
  // WARNING: %203 = call zeroext i8 @readb(i8* %202), !dbg !8336, !verifier.code !8089
  call {:cexpr "tmp___4"} boogie_si_record_i8($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9096, 21} true;
  assume {:verifier.code 0} true;
  $i173 := $zext.i8.i32($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9096, 44} true;
  assume {:verifier.code 0} true;
  $i174 := $or.i32($i173, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9096, 14} true;
  assume {:verifier.code 0} true;
  $i175 := $trunc.i32.i8($i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9096, 81} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p9, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9096, 7} true;
  assume {:verifier.code 0} true;
  call writeb($i175, $p176);
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9100, 29} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9100, 29} true;
  assume {:verifier.code 0} true;
  $p178 := $load.ref($M.0, $p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9100, 5} true;
  assume {:verifier.code 0} true;
  call $i179 := velocity_mii_read($p178, 4, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9101, 27} true;
  assume {:verifier.code 0} true;
  $i180 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9101, 12} true;
  assume {:verifier.code 0} true;
  $i181 := $zext.i16.i32($i180);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9101, 32} true;
  assume {:verifier.code 0} true;
  $i182 := $and.i32($i181, 65055);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9101, 12} true;
  assume {:verifier.code 0} true;
  $i183 := $trunc.i32.i16($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9101, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9103, 10} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9103, 37} true;
  assume {:verifier.code 0} true;
  $i185 := $and.i64($i184, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9103, 44} true;
  assume {:verifier.code 0} true;
  $i186 := $ne.i64($i185, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9103, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i186} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i186 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9104, 12} true;
  assume {:verifier.code 0} true;
  $i187 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9104, 39} true;
  assume {:verifier.code 0} true;
  $i188 := $and.i64($i187, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9104, 47} true;
  assume {:verifier.code 0} true;
  $i189 := $ne.i64($i188, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9104, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i189} true;
  goto $bb36, $bb37;
$bb35:
  assume !(($i186 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9110, 10} true;
  assume {:verifier.code 0} true;
  $i198 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9110, 37} true;
  assume {:verifier.code 0} true;
  $i199 := $and.i64($i198, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9110, 44} true;
  assume {:verifier.code 0} true;
  $i200 := $ne.i64($i199, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9110, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb40, $bb41;
$bb36:
  assume ($i189 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9105, 38} true;
  assume {:verifier.code 0} true;
  $i190 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9105, 23} true;
  assume {:verifier.code 0} true;
  $i191 := $zext.i16.i32($i190);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9105, 43} true;
  assume {:verifier.code 0} true;
  $i192 := $or.i32($i191, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9105, 16} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i16($i192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9105, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9106, 7} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i189 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9107, 38} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9107, 23} true;
  assume {:verifier.code 0} true;
  $i195 := $zext.i16.i32($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9107, 43} true;
  assume {:verifier.code 0} true;
  $i196 := $or.i32($i195, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9107, 16} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i16($i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9107, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i197);
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9109, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9120, 30} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9120, 30} true;
  assume {:verifier.code 0} true;
  $p213 := $load.ref($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9120, 49} true;
  assume {:verifier.code 0} true;
  $i214 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9120, 43} true;
  assume {:verifier.code 0} true;
  $i215 := $zext.i16.i32($i214);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9120, 43} true;
  assume {:verifier.code 0} true;
  $i216 := $trunc.i32.i16($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9120, 5} true;
  assume {:verifier.code 0} true;
  call $i217 := velocity_mii_write($p213, 4, $i216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9121, 5} true;
  assume {:verifier.code 0} true;
  call mii_set_auto_on($p0);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb40:
  assume ($i200 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9111, 12} true;
  assume {:verifier.code 0} true;
  $i201 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9111, 39} true;
  assume {:verifier.code 0} true;
  $i202 := $and.i64($i201, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9111, 47} true;
  assume {:verifier.code 0} true;
  $i203 := $ne.i64($i202, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9111, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb42, $bb43;
$bb41:
  assume !(($i200 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb42:
  assume ($i203 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9112, 38} true;
  assume {:verifier.code 0} true;
  $i204 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9112, 23} true;
  assume {:verifier.code 0} true;
  $i205 := $zext.i16.i32($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9112, 43} true;
  assume {:verifier.code 0} true;
  $i206 := $or.i32($i205, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9112, 16} true;
  assume {:verifier.code 0} true;
  $i207 := $trunc.i32.i16($i206);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9112, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9113, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume !(($i203 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9114, 38} true;
  assume {:verifier.code 0} true;
  $i208 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9114, 23} true;
  assume {:verifier.code 0} true;
  $i209 := $zext.i16.i32($i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9114, 43} true;
  assume {:verifier.code 0} true;
  $i210 := $or.i32($i209, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9114, 16} true;
  assume {:verifier.code 0} true;
  $i211 := $trunc.i32.i16($i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9114, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i211);
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9116, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:verifier.code 0} true;
  goto $bb39;
}
const velocity_print_link_status: ref;
axiom (velocity_print_link_status == $sub.ref(0, 338367));
procedure  velocity_print_link_status($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $i35: i1;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $p42: ref;
  var $i43: i32;
  var $i44: i64;
  var $i45: i64;
  var $i46: i1;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $i70: i32;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $p77: ref;
  var $i78: i32;
  var $i79: i1;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i83: i32;
  var $i84: i1;
  var $i85: i32;
  var $i86: i32;
  var $i87: i1;
  var $i88: i32;
  var $i89: i32;
  var $i90: i1;
  var $i91: i32;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9132, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9132, 19} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9132, 30} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9132, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9132, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9133, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9133, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9133, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9141, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 896);
  $p13 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9141, 36} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9141, 44} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9141, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb7, $bb8;
$bb3:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9135, 71} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9135, 71} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9135, 80} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9135, 53} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9135, 7} true;
  assume {:verifier.code 0} true;
  call $i11 := printk.ref.ref(.str.15, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9137, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9140, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9276, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9142, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9142, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $sgt.i32($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9142, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9191, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9191, 18} true;
  assume {:verifier.code 0} true;
  $i54 := $sgt.i32($i53, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9191, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb37, $bb38;
$bb9:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9144, 63} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9144, 63} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9144, 72} true;
  assume {:verifier.code 0} true;
  $p20 := $p19;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9144, 45} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9144, 7} true;
  assume {:verifier.code 0} true;
  call $i22 := printk.ref.ref(.str.16, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9146, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9149, 32} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9149, 32} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9149, 10} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9149, 43} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i64($i25, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9149, 50} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9149, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9150, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9150, 20} true;
  assume {:verifier.code 0} true;
  $i29 := $sgt.i32($i28, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9150, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9158, 32} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9158, 32} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9158, 10} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9158, 43} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i64($i33, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9158, 50} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9158, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb18, $bb19;
$bb14:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9152, 9} true;
  assume {:verifier.code 0} true;
  call $i30 := printk.ref(.str.17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9154, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9157, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9174, 32} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9174, 32} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9174, 10} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i32.i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9174, 43} true;
  assume {:verifier.code 0} true;
  $i45 := $and.i64($i44, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9174, 51} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i64($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9174, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb27, $bb28;
$bb18:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9159, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9159, 20} true;
  assume {:verifier.code 0} true;
  $i37 := $sgt.i32($i36, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9159, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb20, $bb21;
$bb19:
  assume !(($i35 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9167, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9167, 18} true;
  assume {:verifier.code 0} true;
  $i40 := $sgt.i32($i39, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9167, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb24, $bb25;
$bb20:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9161, 9} true;
  assume {:verifier.code 0} true;
  call $i38 := printk.ref(.str.18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9163, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9166, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb24:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9169, 7} true;
  assume {:verifier.code 0} true;
  call $i41 := printk.ref(.str.19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9171, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  goto $bb23;
$bb27:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9175, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9175, 20} true;
  assume {:verifier.code 0} true;
  $i48 := $sgt.i32($i47, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9175, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb29, $bb30;
$bb28:
  assume !(($i46 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9183, 9} true;
  assume {:verifier.code 0} true;
  $i50 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9183, 18} true;
  assume {:verifier.code 0} true;
  $i51 := $sgt.i32($i50, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9183, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb33, $bb34;
$bb29:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9177, 9} true;
  assume {:verifier.code 0} true;
  call $i49 := printk.ref(.str.20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9179, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9190, 3} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb33:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9185, 7} true;
  assume {:verifier.code 0} true;
  call $i52 := printk.ref(.str.21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9187, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb32;
$bb36:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb37:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9193, 53} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9193, 53} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9193, 62} true;
  assume {:verifier.code 0} true;
  $p57 := $p56;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9193, 35} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9193, 7} true;
  assume {:verifier.code 0} true;
  call $i59 := printk.ref.ref(.str.22, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9199, 30} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 896);
  $p61 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9199, 38} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9199, 46} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9199, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9200, 7} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9226, 9} true;
  assume {:verifier.code 0} true;
  $i80 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9226, 18} true;
  assume {:verifier.code 0} true;
  $i81 := $sgt.i32($i80, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9226, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb61, $bb62;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9204, 30} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 896);
  $p65 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9204, 38} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9204, 46} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i66, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9204, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9205, 7} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9235, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9235, 18} true;
  assume {:verifier.code 0} true;
  $i84 := $sgt.i32($i83, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9235, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb65, $bb66;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9209, 30} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 896);
  $p69 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9209, 38} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i32($M.0, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9209, 46} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i70, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9209, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9210, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9244, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9244, 18} true;
  assume {:verifier.code 0} true;
  $i87 := $sgt.i32($i86, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9244, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb68, $bb69;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9214, 30} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 896);
  $p73 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9214, 38} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9214, 46} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32($i74, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9214, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9215, 7} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9253, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9253, 18} true;
  assume {:verifier.code 0} true;
  $i90 := $sgt.i32($i89, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9253, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb71, $bb72;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9219, 30} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 896);
  $p77 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9219, 38} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i32($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9219, 46} true;
  assume {:verifier.code 0} true;
  $i79 := $eq.i32($i78, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9219, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i79 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9220, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i79 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9262, 9} true;
  assume {:verifier.code 0} true;
  $i92 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9262, 18} true;
  assume {:verifier.code 0} true;
  $i93 := $sgt.i32($i92, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9262, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb74, $bb75;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9224, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9271, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb61:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9228, 7} true;
  assume {:verifier.code 0} true;
  call $i82 := printk.ref(.str.23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9230, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9233, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:verifier.code 0} true;
  goto $bb36;
$bb65:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9237, 7} true;
  assume {:verifier.code 0} true;
  call $i85 := printk.ref(.str.24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9239, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9242, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb68:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9246, 7} true;
  assume {:verifier.code 0} true;
  call $i88 := printk.ref(.str.25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9248, 5} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb69:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9251, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb71:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9255, 7} true;
  assume {:verifier.code 0} true;
  call $i91 := printk.ref(.str.26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9257, 5} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9260, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb74:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9264, 7} true;
  assume {:verifier.code 0} true;
  call $i94 := printk.ref(.str.27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9266, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i93 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9269, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9273, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
}
const netif_wake_queue: ref;
axiom (netif_wake_queue == $sub.ref(0, 339399));
procedure  netif_wake_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7582, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7583, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_wake_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7585, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const enable_flow_control_ability: ref;
axiom (enable_flow_control_ability == $sub.ref(0, 340431));
procedure  enable_flow_control_ability($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $i24: i8;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i8;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9286, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9286, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9288, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 896);
  $p4 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9288, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9288, 31} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9288, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9289, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9316, 49} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p2, 110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9316, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := readb($p23);
  // WARNING: %41 = call zeroext i8 @readb(i8* %40), !dbg !8136, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9318, 8} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9318, 18} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i32($i25, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9318, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9318, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb22, $bb23;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9293, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 896);
  $p8 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9293, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9293, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9293, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9294, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9342, 48} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9342, 20} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9342, 3} true;
  assume {:verifier.code 0} true;
  call writel(4194304, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9343, 48} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9343, 20} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9343, 3} true;
  assume {:verifier.code 0} true;
  call writel(2097152, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9345, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9298, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 896);
  $p12 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9298, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9298, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i13, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9298, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9348, 48} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9348, 20} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9348, 3} true;
  assume {:verifier.code 0} true;
  call writel(2097152, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9349, 48} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9349, 20} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9349, 3} true;
  assume {:verifier.code 0} true;
  call writel(4194304, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9303, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 896);
  $p16 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9303, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9303, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i17, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9303, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9304, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9354, 48} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9354, 20} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9354, 3} true;
  assume {:verifier.code 0} true;
  call writel(4194304, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9355, 48} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9355, 20} true;
  assume {:verifier.code 0} true;
  $p52 := $bitcast.ref.ref($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9355, 3} true;
  assume {:verifier.code 0} true;
  call writel(2097152, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9357, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9308, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 896);
  $p20 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9308, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9308, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9308, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9309, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9360, 48} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9360, 20} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9360, 3} true;
  assume {:verifier.code 0} true;
  call writel(2097152, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9361, 48} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9361, 20} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9361, 3} true;
  assume {:verifier.code 0} true;
  call writel(4194304, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9363, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9313, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9365, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb22:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9320, 50} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9320, 22} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9320, 5} true;
  assume {:verifier.code 0} true;
  call writel(2097152, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9322, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9324, 50} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9324, 22} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9324, 5} true;
  assume {:verifier.code 0} true;
  call writel(2097152, $p31);
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9328, 53} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p2, 110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9328, 13} true;
  assume {:verifier.code 0} true;
  call $i33 := readb($p32);
  // WARNING: %53 = call zeroext i8 @readb(i8* %52), !dbg !8157, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9330, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9330, 21} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i32($i34, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9330, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9330, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9332, 50} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9332, 22} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9332, 5} true;
  assume {:verifier.code 0} true;
  call writel(4194304, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9334, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i36 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9336, 50} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9336, 22} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9336, 5} true;
  assume {:verifier.code 0} true;
  call writel(4194304, $p40);
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9339, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9369, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9367, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
}
const velocity_soft_reset: ref;
axiom (velocity_soft_reset == $sub.ref(0, 341463));
procedure  velocity_soft_reset($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $i14: i32;
  var $i15: i1;
  var $i5: i32;
  var $i16: i32;
  var $i13: i32;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9382, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9382, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  // WARNING: call void @llvm.dbg.value(metadata %struct.mac_regs* %3, i64 0, metadata !13166, metadata !8090), !dbg !13167, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9384, 46} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9384, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9384, 3} true;
  assume {:verifier.code 0} true;
  call writel(32768, $p4);
  // WARNING: call void @writel(i32 32768, i8* %5), !dbg !8102, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9400, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9401, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9390, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(21475);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9391, 49} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9391, 15} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9391, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := readl($p7);
  // WARNING: %9 = call i32 @readl(i8* %8), !dbg !8108, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9393, 8} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9393, 28} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i64($i9, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9393, 39} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9393, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $i5;
  assume {:branchcond $i11} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i11 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9394, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i12;
  goto $bb5;
$bb4:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9406, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i13, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9406, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb10, $bb11;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9398, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i5, 1);
  // WARNING: %16 = add nsw i32 %.014, 1, !dbg !8118, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9400, 24} true;
  assume {:verifier.code 0} true;
  $i15 := $ule.i32($i14, 4094);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9400, 7} true;
  assume {:verifier.code 0} true;
  $i5, $i16 := $i14, $i14;
  assume {:branchcond $i15} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9400, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb1;
$bb8:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9400, 27} true;
  assume {:verifier.code 0} true;
  $i13 := $i16;
  goto $bb5;
$bb10:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9408, 53} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9408, 25} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9408, 5} true;
  assume {:verifier.code 0} true;
  call writel(1073741824, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9410, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 1} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb12:
  assume (1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9412, 7} true;
  assume {:verifier.code 0} true;
  call __const_udelay(8590000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9414, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !((1 == 1));
  // WARNING: call void @llvm.dbg.value(metadata i64 2, i64 0, metadata !13209, metadata !8090), !dbg !13210, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 2, i64 0, metadata !13211, metadata !8090), !dbg !13212, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9424, 11} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9431, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9425, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9419, 7} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8145, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !13211, metadata !8090), !dbg !13212, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9425, 9} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9419, 7} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295000);
  // WARNING: call void @__const_udelay(i64 4295000), !dbg !8145, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !13211, metadata !8090), !dbg !13212, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9434, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const mac_eeprom_reload: ref;
axiom (mac_eeprom_reload == $sub.ref(0, 342495));
procedure  mac_eeprom_reload($p0: ref)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $p6: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i7: i32;
  var $p11: ref;
  var $i12: i8;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.mac_regs* %0, i64 0, metadata !13223, metadata !8090), !dbg !13224, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7872, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7872, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := readb($p1);
  // WARNING: %3 = call zeroext i8 @readb(i8* %2), !dbg !8098, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7873, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7873, 36} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i3, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7873, 10} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7873, 72} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7873, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i5, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7877, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  // WARNING: call void @__const_udelay(i64 42950), !dbg !8106, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !13240, metadata !8090), !dbg !13241, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7881, 7} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb2:
  assume ($i15 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7877, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  // WARNING: call void @__const_udelay(i64 42950), !dbg !8106, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7879, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i8, 1);
  // WARNING: %9 = add nsw i32 %.0, 1, !dbg !8111, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7881, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $sgt.i32($i8, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7881, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7882, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7881, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb1;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7895, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7887, 53} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7887, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := readb($p11);
  // WARNING: %16 = call zeroext i8 @readb(i8* %15), !dbg !8118, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7889, 8} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7889, 22} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i32($i13, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7889, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7889, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  assume {:branchcond $i15} true;
  goto $bb2, $bb7;
$bb7:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7889, 31} true;
  assume {:verifier.code 0} true;
  goto $bb5;
}
const velocity_init_cam_filter: ref;
axiom (velocity_init_cam_filter == $sub.ref(0, 343527));
procedure  velocity_init_cam_filter($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i16;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i16;
  var $i11: i32;
  var $i12: i16;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i16;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $p38: ref;
  var $i39: i32;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $i48: i32;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i64;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i32;
  var $i61: i64;
  var $i62: i64;
  var $i63: i32;
  var $i64: i32;
  var $i65: i1;
  var $i37: i32;
  var $p66: ref;
  var $p67: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8376, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8376, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  // WARNING: call void @llvm.dbg.value(metadata %struct.mac_regs* %4, i64 0, metadata !13269, metadata !8090), !dbg !13270, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8378, 49} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8378, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8378, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := readw($p5);
  // WARNING: %7 = call zeroext i16 @readw(i8* %6), !dbg !8104, !verifier.code !8089
  call {:cexpr "tmp"} boogie_si_record_i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 56} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, $sub.i32(0, 7));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 62} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i8, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i16.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 10} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i16($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 97} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p3, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 69} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8379, 3} true;
  assume {:verifier.code 0} true;
  call writew($i12, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8380, 53} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p3, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8380, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8380, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := readw($p16);
  // WARNING: %18 = call zeroext i16 @readw(i8* %17), !dbg !8117, !verifier.code !8089
  call {:cexpr "tmp___0"} boogie_si_record_i16($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8381, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i16.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8381, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8381, 10} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i16($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8381, 75} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p3, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8381, 47} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8381, 3} true;
  assume {:verifier.code 0} true;
  call writew($i20, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8382, 27} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 984);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8382, 3} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8382, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p24, 0, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8383, 27} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8383, 3} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8383, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p26, 0, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8384, 46} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 984);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8384, 31} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8384, 3} true;
  assume {:verifier.code 0} true;
  call mac_set_vlan_cam_mask($p3, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8385, 41} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8385, 26} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8385, 3} true;
  assume {:verifier.code 0} true;
  call mac_set_cam_mask($p3, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8386, 62} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8386, 28} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8386, 13} true;
  assume {:verifier.code 0} true;
  call $i33 := find_first_bit($p32, 4096);
  // WARNING: %34 = call i64 @find_first_bit(i64* %33, i64 4096), !dbg !8138, !verifier.code !8089
  call {:cexpr "tmp___1"} boogie_si_record_i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8387, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i64.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8387, 7} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i32($M.16, $p1, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.16, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 11} true;
  assume {:verifier.code 0} true;
  $i36 := $ule.i32($i35, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  $i37 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8408, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8392, 35} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8392, 3} true;
  assume {:verifier.code 0} true;
  call mac_set_vlan_cam($p3, $i37, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 72} true;
  assume {:verifier.code 0} true;
  $i39 := $udiv.i32($i37, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 55} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i32.i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 61} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 984);
  $p42 := $add.ref($add.ref($p0, 984), $mul.ref($i40, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 55} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 34} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 117} true;
  assume {:verifier.code 0} true;
  $i45 := $and.i32($i37, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 105} true;
  assume {:verifier.code 0} true;
  $i46 := $shl.i32(1, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 88} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 81} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 79} true;
  assume {:verifier.code 0} true;
  $i49 := $or.i32($i44, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 28} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i8($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $udiv.i32($i37, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 9} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 984);
  $p54 := $add.ref($add.ref($p0, 984), $mul.ref($i52, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8393, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p54, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8394, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i32($i37, 1);
  // WARNING: %56 = add i32 %.01, 1, !dbg !8164, !verifier.code !8089
  call {:cexpr "i"} boogie_si_record_i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8396, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $ugt.i32($i55, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8396, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8397, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8414, 46} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 984);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8414, 31} true;
  assume {:verifier.code 0} true;
  $p67 := $bitcast.ref.ref($p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8414, 3} true;
  assume {:verifier.code 0} true;
  call mac_set_vlan_cam_mask($p3, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8416, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8402, 61} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8402, 27} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8403, 44} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.16, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8403, 48} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i32($i59, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8403, 27} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i32.i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8402, 13} true;
  assume {:verifier.code 0} true;
  call $i62 := find_next_bit($p58, 4096, $i61);
  // WARNING: %66 = call i64 @find_next_bit(i64* %62, i64 4096, i64 %65), !dbg !8176, !verifier.code !8089
  call {:cexpr "tmp___2"} boogie_si_record_i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8404, 9} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i64.i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8404, 7} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i32($M.16, $p1, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.16, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 11} true;
  assume {:verifier.code 0} true;
  $i65 := $ule.i32($i64, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $i55;
  assume {:branchcond $i65} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb4;
$bb11:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8407, 14} true;
  assume {:verifier.code 0} true;
  goto $bb8;
}
const velocity_set_multi: ref;
axiom (velocity_set_multi == $sub.ref(0, 344559));
procedure  velocity_set_multi($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i32;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i1;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $i57: i8;
  var $i58: i32;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i32;
  var $i64: i32;
  var $i65: i8;
  var $i66: i32;
  var $i67: i32;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $i78: i1;
  var $p47: ref;
  var $i48: i32;
  var $p79: ref;
  var $p80: ref;
  var $i30: i8;
  var $i14: i8;
  var $p81: ref;
  var $i82: i32;
  var $i83: i1;
  var $i84: i32;
  var $i85: i32;
  var $i86: i8;
  var $i87: i8;
  var $p88: ref;
  var $i89: i8;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i8;
  var $p94: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9452, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9453, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9454, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9454, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9456, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9456, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9456, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i6, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9456, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9456, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9458, 53} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9458, 25} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9458, 5} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9459, 53} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9459, 25} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9459, 61} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9459, 5} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p13);
  // WARNING: call void @writel(i32 -1, i8* %15), !dbg !8115, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9462, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 28;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 12} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 672);
  $p16 := $add.ref($add.ref($p0, 672), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 29} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 980);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 21} true;
  assume {:verifier.code 0} true;
  $i20 := $sgt.i32($i17, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb4, $bb6;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9497, 12} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9497, 12} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9497, 16} true;
  assume {:verifier.code 0} true;
  $i83 := $ugt.i32($i82, 1500);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9497, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb18, $bb19;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 45} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9465, 53} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9465, 25} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9465, 5} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9466, 53} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9466, 25} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9466, 61} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9466, 5} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p29);
  // WARNING: call void @writel(i32 -1, i8* %33), !dbg !8138, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9469, 3} true;
  assume {:verifier.code 0} true;
  $i30 := 12;
  goto $bb9;
$bb6:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 54} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 54} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 60} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 68} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9463, 7} true;
  assume {:verifier.code 0} true;
  assume ($i24 == 1);
  goto $bb5;
$bb8:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9471, 25} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p2, 980);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9471, 25} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9471, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32(64, $i32);
  // WARNING: %37 = sub nsw i32 64, %36, !dbg !8143, !verifier.code !8090
  call {:cexpr "offset"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9472, 43} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p2, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9472, 28} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9472, 5} true;
  assume {:verifier.code 0} true;
  call mac_get_cam_mask($p4, $p35);
  // WARNING: call void @mac_get_cam_mask(%struct.mac_regs* %5, i8* %39), !dbg !8148, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9474, 47} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 672);
  $p37 := $add.ref($p0, 672);
  $p38 := $add.ref($p0, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9474, 55} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9475, 10} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 32} true;
  assume {:verifier.code 0} true;
  $p41 := $p40;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 65} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 672);
  $p44 := $add.ref($p0, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 41} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 38} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i64($i42, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb10, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i14 := $i30;
  goto $bb3;
$bb10:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  $p47, $i48 := $p39, 0;
  goto $bb13;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i46 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9488, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9480, 25} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i48, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9480, 56} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p47, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9480, 35} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9480, 5} true;
  assume {:verifier.code 0} true;
  call mac_set_cam($p4, $i49, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 90} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i32($i33, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 95} true;
  assume {:verifier.code 0} true;
  $i53 := $sdiv.i32($i52, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 67} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 73} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p2, 992);
  $p56 := $add.ref($add.ref($p2, 992), $mul.ref($i54, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 67} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i8($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 46} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i8.i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 139} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i32($i33, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 144} true;
  assume {:verifier.code 0} true;
  $i60 := $and.i32($i59, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 127} true;
  assume {:verifier.code 0} true;
  $i61 := $shl.i32(1, $i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 110} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i8($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 103} true;
  assume {:verifier.code 0} true;
  $i63 := $sext.i8.i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 101} true;
  assume {:verifier.code 0} true;
  $i64 := $or.i32($i58, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 40} true;
  assume {:verifier.code 0} true;
  $i65 := $trunc.i32.i8($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 28} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i32($i33, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 33} true;
  assume {:verifier.code 0} true;
  $i67 := $sdiv.i32($i66, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 5} true;
  assume {:verifier.code 0} true;
  $i68 := $sext.i32.i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 11} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p2, 992);
  $p70 := $add.ref($add.ref($p2, 992), $mul.ref($i68, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9481, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9482, 11} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i32($i48, 1);
  // WARNING: %74 = add nsw i32 %.013, 1, !dbg !8187, !verifier.code !8090
  call {:cexpr "i"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9483, 50} true;
  assume {:verifier.code 0} true;
  $p72 := $p47;
  $p73 := $p47;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9483, 55} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9484, 10} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 32} true;
  assume {:verifier.code 0} true;
  $p76 := $p75;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 38} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i64($i77, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  $p47, $i48 := $p74, $i71;
  assume {:branchcond $i78} true;
  goto $bb15, $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  assume ($i78 == 1);
  goto $bb13;
$bb16:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9487, 9} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9493, 43} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p2, 992);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9493, 28} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9493, 5} true;
  assume {:verifier.code 0} true;
  call mac_set_cam_mask($p4, $p80);
  // WARNING: call void @mac_set_cam_mask(%struct.mac_regs* %5, i8* %86), !dbg !8198, !verifier.code !8090
  assume {:verifier.code 0} true;
  $i30 := 76;
  goto $bb9;
$bb18:
  assume ($i83 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9498, 21} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9498, 44} true;
  assume {:verifier.code 0} true;
  $i85 := $or.i32($i84, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9498, 15} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i32.i8($i85);
  // WARNING: %95 = trunc i32 %94 to i8, !dbg !8206, !verifier.code !8090
  call {:cexpr "rx_mode"} boogie_si_record_i8($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9499, 3} true;
  assume {:verifier.code 0} true;
  $i87 := $i86;
  goto $bb20;
$bb19:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  $i87 := $i14;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9503, 53} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9503, 13} true;
  assume {:verifier.code 0} true;
  call $i89 := readb($p88);
  // WARNING: %99 = call zeroext i8 @readb(i8* %98), !dbg !8210, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9504, 10} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9504, 26} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9504, 24} true;
  assume {:verifier.code 0} true;
  $i92 := $or.i32($i90, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9504, 10} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9504, 69} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9504, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i93, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9506, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const enable_mii_autopoll: ref;
axiom (enable_mii_autopoll == $sub.ref(0, 345591));
procedure  enable_mii_autopoll($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i3: i32;
  var $p10: ref;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8598, 41} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8598, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8599, 43} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8599, 3} true;
  assume {:verifier.code 0} true;
  call writeb($sub.i8(0, 128), $p2);
  // WARNING: call void @writeb(i8 zeroext -128, i8* %3), !dbg !8098, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8615, 7} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8616, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8605, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8606, 49} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8606, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := readb($p4);
  // WARNING: %6 = call zeroext i8 @readb(i8* %5), !dbg !8105, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8608, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8608, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8608, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8609, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8622, 43} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8622, 3} true;
  assume {:verifier.code 0} true;
  call writeb($sub.i8(0, 128), $p10);
  // WARNING: call void @writeb(i8 zeroext -128, i8* %18), !dbg !8123, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8638, 7} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb10;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8613, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i3, 1);
  // WARNING: %12 = add nsw i32 %.02, 1, !dbg !8114, !verifier.code !8092
  call {:cexpr "ii"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8615, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $ule.i32($i8, 4094);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8615, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $i8;
  assume {:branchcond $i9} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8615, 7} true;
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb1;
$bb8:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8615, 28} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8639, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8628, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(4295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8629, 53} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8629, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := readb($p12);
  // WARNING: %21 = call zeroext i8 @readb(i8* %20), !dbg !8128, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8631, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8631, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $sge.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8631, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8632, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8644, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8636, 11} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i11, 1);
  // WARNING: %27 = add nsw i32 %.11, 1, !dbg !8137, !verifier.code !8092
  call {:cexpr "ii"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8638, 25} true;
  assume {:verifier.code 0} true;
  $i17 := $ule.i32($i16, 4094);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8638, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $i16;
  assume {:branchcond $i17} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8638, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1);
  goto $bb10;
$bb17:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8638, 28} true;
  assume {:verifier.code 0} true;
  goto $bb14;
}
const setup_adaptive_interrupts: ref;
axiom (setup_adaptive_interrupts == $sub.ref(0, 346623));
procedure  setup_adaptive_interrupts($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i16;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i16;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $i20: i16;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $p31: ref;
  var $i32: i32;
  var $i33: i16;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9692, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9692, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9693, 27} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 896);
  $p4 := $add.ref($add.ref($p0, 896), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9693, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9693, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i16($i5);
  // WARNING: %7 = trunc i32 %6 to i16, !dbg !8100, !verifier.code !8092
  call {:cexpr "tx_intsup"} boogie_si_record_i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9694, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 896);
  $p8 := $add.ref($add.ref($p0, 896), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9694, 35} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9694, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  // WARNING: %11 = trunc i32 %10 to i16, !dbg !8105, !verifier.code !8092
  call {:cexpr "rx_intsup"} boogie_si_record_i16($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9695, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 964);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9695, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 37223183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9696, 42} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9696, 3} true;
  assume {:verifier.code 0} true;
  call writeb(64, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9698, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9698, 32} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9698, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9700, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 964);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9700, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9700, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, $sub.i32(0, 249));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9700, 11} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 964);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9700, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9701, 12} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9701, 12} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i16($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9701, 57} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9701, 29} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9701, 5} true;
  assume {:verifier.code 0} true;
  call writew($i20, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9703, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9705, 47} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9705, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9705, 5} true;
  assume {:verifier.code 0} true;
  call writew(16384, $p24);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9709, 43} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p2, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9709, 3} true;
  assume {:verifier.code 0} true;
  call writeb($sub.i8(0, 128), $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9711, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9711, 32} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9711, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9713, 28} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 964);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9713, 28} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9713, 37} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, $sub.i32(0, 5));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9713, 11} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 964);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9713, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9714, 12} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i16.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9714, 12} true;
  assume {:verifier.code 0} true;
  $i33 := $trunc.i32.i16($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9714, 57} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9714, 29} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9714, 5} true;
  assume {:verifier.code 0} true;
  call writew($i33, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9716, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9718, 46} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9718, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9718, 5} true;
  assume {:verifier.code 0} true;
  call writew(8192, $p37);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9722, 41} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p2, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9722, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9724, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const init_flow_control_register: ref;
axiom (init_flow_control_register == $sub.ref(0, 347655));
procedure  init_flow_control_register($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i16;
  var $i13: i32;
  var $i14: i16;
  var $p15: ref;
  var $p16: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7983, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7983, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7984, 48} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7984, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7984, 3} true;
  assume {:verifier.code 0} true;
  call writel(9109504, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7985, 48} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7985, 20} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7985, 3} true;
  assume {:verifier.code 0} true;
  call writel(7602176, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7986, 45} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7986, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7986, 3} true;
  assume {:verifier.code 0} true;
  call writew($sub.i16(0, 1), $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 40} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 896);
  $p10 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 48} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i16($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 10} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i16($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 84} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 56} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7987, 3} true;
  assume {:verifier.code 0} true;
  call writew($i14, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7989, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mii_init: ref;
axiom (mii_init == $sub.ref(0, 348687));
procedure  mii_init($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $i30: i1;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $i35: i1;
  var $p36: ref;
  var $i37: i32;
  var $i38: i64;
  var $i39: i64;
  var $i40: i1;
  var $p41: ref;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i16;
  var $i50: i32;
  var $i51: i32;
  var $i52: i16;
  var $p53: ref;
  var $p54: ref;
  var $i55: i16;
  var $i56: i32;
  var $i57: i16;
  var $i58: i32;
  var $p59: ref;
  var $i60: i32;
  var $i61: i64;
  var $i62: i64;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i16;
  var $i68: i32;
  var $i69: i32;
  var $i70: i16;
  var $p71: ref;
  var $p72: ref;
  var $i73: i16;
  var $i74: i32;
  var $i75: i16;
  var $i76: i32;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i16;
  var $i81: i32;
  var $i82: i32;
  var $i83: i16;
  var $p84: ref;
  var $p85: ref;
  var $i86: i16;
  var $i87: i32;
  var $i88: i16;
  var $i89: i32;
  var $p90: ref;
  var $p91: ref;
  var $i92: i32;
  var $i93: i16;
  var $i94: i32;
  var $i95: i32;
  var $i96: i16;
  var $p97: ref;
  var $p98: ref;
  var $i99: i16;
  var $i100: i32;
  var $i101: i16;
  var $i102: i32;
  var $p103: ref;
  var $p104: ref;
  var $i105: i32;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i16;
  var $p110: ref;
  var $p111: ref;
  var $i112: i16;
  var $i113: i32;
  var $i114: i16;
  var $i115: i32;
  var $p116: ref;
  var $i117: i32;
  var $i118: i64;
  var $i119: i64;
  var $i120: i1;
  var $p121: ref;
  var $p122: ref;
  var $i123: i32;
  var $i124: i16;
  var $i125: i32;
  var $i126: i32;
  var $i127: i16;
  var $p128: ref;
  var $p129: ref;
  var $i130: i16;
  var $i131: i32;
  var $i132: i16;
  var $i133: i32;
  var $p134: ref;
  var $p135: ref;
  var $i136: i32;
  var $i137: i16;
  var $i138: i32;
  var $i139: i32;
  var $i140: i16;
  var $p141: ref;
  var $p142: ref;
  var $i143: i16;
  var $i144: i32;
  var $i145: i16;
  var $i146: i32;
  var $p147: ref;
  var $p148: ref;
  var $i149: i32;
  var $i150: i16;
  var $i151: i32;
  var $i152: i32;
  var $i153: i16;
  var $p154: ref;
  var $p155: ref;
  var $i156: i16;
  var $i157: i32;
  var $i158: i16;
  var $i159: i32;
  var $p160: ref;
  var $p161: ref;
  var $i162: i32;
  var $i163: i16;
  var $i164: i32;
  var $i165: i32;
  var $i166: i16;
  var $p167: ref;
  var $p168: ref;
  var $i169: i16;
  var $i170: i32;
  var $i171: i16;
  var $i172: i32;
  var $p173: ref;
  var $i174: i32;
  var $i175: i64;
  var $i176: i64;
  var $i177: i1;
  var $p178: ref;
  var $p179: ref;
  var $i180: i32;
  var $i181: i16;
  var $i182: i32;
  var $i183: i32;
  var $i184: i16;
  var $p185: ref;
  var $p186: ref;
  var $i187: i16;
  var $i188: i32;
  var $i189: i16;
  var $i190: i32;
  var $p191: ref;
  var $p192: ref;
  var $i193: i32;
  var $i194: i16;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $p198: ref;
  var $p199: ref;
  var $i200: i16;
  var $i201: i32;
  var $i202: i16;
  var $i203: i32;
  var $p204: ref;
  var $p205: ref;
  var $i206: i32;
  var $i207: i16;
  var $i208: i32;
  var $i209: i32;
  var $i210: i16;
  var $p211: ref;
  var $p212: ref;
  var $i213: i16;
  var $i214: i32;
  var $i215: i16;
  var $i216: i32;
  var $p217: ref;
  var $p218: ref;
  var $i219: i32;
  var $i220: i16;
  var $i221: i32;
  var $i222: i32;
  var $i223: i16;
  var $p224: ref;
  var $p225: ref;
  var $i226: i16;
  var $i227: i32;
  var $i228: i16;
  var $i229: i32;
  var $p230: ref;
  var $p231: ref;
  var $i232: i32;
  var $i233: i16;
  var $i234: i32;
  var $i235: i32;
  var $i236: i1;
  var $i237: i16;
  var $i238: i32;
  var $i239: i32;
  var $i240: i16;
  var $p241: ref;
  var $p242: ref;
  var $i243: i16;
  var $i244: i32;
  var $i245: i16;
  var $i246: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p10 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p11 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p12 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p13 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p14 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p15 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !13644, metadata !8090), !dbg !13645, !verifier.code !8092
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9528, 30} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9528, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9528, 8} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9528, 37} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i64($i18, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9528, 61} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i64($i19, 37948500);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9528, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9529, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9561, 27} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9561, 27} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9561, 3} true;
  assume {:verifier.code 0} true;
  call $i48 := velocity_mii_read($p47, 4, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9562, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9562, 14} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i16.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9562, 31} true;
  assume {:verifier.code 0} true;
  $i51 := $or.i32($i50, 3072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9562, 7} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i16($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9562, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9563, 28} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9563, 28} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9563, 47} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9563, 41} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i16.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9563, 41} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i32.i16($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9563, 3} true;
  assume {:verifier.code 0} true;
  call $i58 := velocity_mii_write($p54, 4, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9565, 30} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9565, 30} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9565, 8} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i32.i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9565, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $and.i64($i61, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9565, 49} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i64($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9565, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb26, $bb27;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9533, 30} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9533, 30} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9533, 8} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i32.i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9533, 37} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i64($i23, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9533, 61} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i64($i24, 1033232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9533, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9534, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9586, 27} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9586, 27} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9586, 3} true;
  assume {:verifier.code 0} true;
  call $i105 := velocity_mii_read($p104, 4, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9587, 26} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9587, 11} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i16.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9587, 32} true;
  assume {:verifier.code 0} true;
  $i108 := $and.i32($i107, 62463);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9587, 11} true;
  assume {:verifier.code 0} true;
  $i109 := $trunc.i32.i16($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9587, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9588, 28} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9588, 28} true;
  assume {:verifier.code 0} true;
  $p111 := $load.ref($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9588, 47} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9588, 41} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i16.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9588, 41} true;
  assume {:verifier.code 0} true;
  $i114 := $trunc.i32.i16($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9588, 3} true;
  assume {:verifier.code 0} true;
  call $i115 := velocity_mii_write($p111, 4, $i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9590, 30} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9590, 30} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9590, 8} true;
  assume {:verifier.code 0} true;
  $i118 := $zext.i32.i64($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9590, 41} true;
  assume {:verifier.code 0} true;
  $i119 := $and.i64($i118, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9590, 49} true;
  assume {:verifier.code 0} true;
  $i120 := $ne.i64($i119, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9590, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb30, $bb31;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9538, 30} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9538, 30} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9538, 8} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i32.i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9538, 37} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i64($i28, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9538, 61} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64($i29, 1033744);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9538, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9539, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9608, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9543, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9543, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9543, 8} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9543, 37} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i64($i33, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9543, 61} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i64($i34, 1033728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9543, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9544, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9612, 27} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9612, 27} true;
  assume {:verifier.code 0} true;
  $p161 := $load.ref($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9612, 3} true;
  assume {:verifier.code 0} true;
  call $i162 := velocity_mii_read($p161, 4, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9613, 33} true;
  assume {:verifier.code 0} true;
  $i163 := $load.i16($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9613, 18} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.i16.i32($i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9613, 39} true;
  assume {:verifier.code 0} true;
  $i165 := $or.i32($i164, 3072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9613, 11} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.i32.i16($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9613, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p11, $i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9614, 28} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9614, 28} true;
  assume {:verifier.code 0} true;
  $p168 := $load.ref($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9614, 47} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i16($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9614, 41} true;
  assume {:verifier.code 0} true;
  $i170 := $zext.i16.i32($i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9614, 41} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i16($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9614, 3} true;
  assume {:verifier.code 0} true;
  call $i172 := velocity_mii_write($p168, 4, $i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9616, 30} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9616, 30} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i32($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9616, 8} true;
  assume {:verifier.code 0} true;
  $i175 := $zext.i32.i64($i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9616, 41} true;
  assume {:verifier.code 0} true;
  $i176 := $and.i64($i175, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9616, 49} true;
  assume {:verifier.code 0} true;
  $i177 := $ne.i64($i176, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9616, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb33, $bb34;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9548, 30} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9548, 30} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9548, 8} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9548, 37} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i64($i38, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9548, 61} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 21040208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9548, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9549, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9629, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9553, 30} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9553, 30} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9553, 8} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i32.i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9553, 37} true;
  assume {:verifier.code 0} true;
  $i44 := $and.i64($i43, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9553, 61} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i64($i44, 21040192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9553, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9554, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9633, 27} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9633, 27} true;
  assume {:verifier.code 0} true;
  $p205 := $load.ref($M.0, $p204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9633, 3} true;
  assume {:verifier.code 0} true;
  call $i206 := velocity_mii_read($p205, 16, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9634, 34} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i16($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9634, 19} true;
  assume {:verifier.code 0} true;
  $i208 := $zext.i16.i32($i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9634, 41} true;
  assume {:verifier.code 0} true;
  $i209 := $or.i32($i208, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9634, 12} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i32.i16($i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9634, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p14, $i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9635, 28} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9635, 28} true;
  assume {:verifier.code 0} true;
  $p212 := $load.ref($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9635, 48} true;
  assume {:verifier.code 0} true;
  $i213 := $load.i16($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9635, 42} true;
  assume {:verifier.code 0} true;
  $i214 := $zext.i16.i32($i213);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9635, 42} true;
  assume {:verifier.code 0} true;
  $i215 := $trunc.i32.i16($i214);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9635, 3} true;
  assume {:verifier.code 0} true;
  call $i216 := velocity_mii_write($p212, 16, $i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9636, 27} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9636, 27} true;
  assume {:verifier.code 0} true;
  $p218 := $load.ref($M.0, $p217);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9636, 3} true;
  assume {:verifier.code 0} true;
  call $i219 := velocity_mii_read($p218, 4, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9637, 34} true;
  assume {:verifier.code 0} true;
  $i220 := $load.i16($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9637, 19} true;
  assume {:verifier.code 0} true;
  $i221 := $zext.i16.i32($i220);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9637, 41} true;
  assume {:verifier.code 0} true;
  $i222 := $or.i32($i221, 3072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9637, 12} true;
  assume {:verifier.code 0} true;
  $i223 := $trunc.i32.i16($i222);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9637, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p15, $i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9638, 28} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9638, 28} true;
  assume {:verifier.code 0} true;
  $p225 := $load.ref($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9638, 47} true;
  assume {:verifier.code 0} true;
  $i226 := $load.i16($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9638, 41} true;
  assume {:verifier.code 0} true;
  $i227 := $zext.i16.i32($i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9638, 41} true;
  assume {:verifier.code 0} true;
  $i228 := $trunc.i32.i16($i227);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9638, 3} true;
  assume {:verifier.code 0} true;
  call $i229 := velocity_mii_write($p225, 4, $i228);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9640, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9558, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9640, 3} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb26:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9567, 29} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9567, 29} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9567, 5} true;
  assume {:verifier.code 0} true;
  call $i66 := velocity_mii_read($p65, 22, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9568, 35} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9568, 20} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i16.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9568, 41} true;
  assume {:verifier.code 0} true;
  $i69 := $or.i32($i68, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9568, 13} true;
  assume {:verifier.code 0} true;
  $i70 := $trunc.i32.i16($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9568, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p4, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9569, 30} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9569, 30} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9569, 50} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9569, 44} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i16.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9569, 44} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i32.i16($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9569, 5} true;
  assume {:verifier.code 0} true;
  call $i76 := velocity_mii_write($p72, 22, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9571, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i63 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9573, 29} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9573, 29} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9573, 5} true;
  assume {:verifier.code 0} true;
  call $i79 := velocity_mii_read($p78, 22, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9574, 28} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9574, 13} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i16.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9574, 34} true;
  assume {:verifier.code 0} true;
  $i82 := $and.i32($i81, 57343);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9574, 13} true;
  assume {:verifier.code 0} true;
  $i83 := $trunc.i32.i16($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9574, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p5, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9575, 30} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9575, 30} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9575, 50} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9575, 44} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i16.i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9575, 44} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i16($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9575, 5} true;
  assume {:verifier.code 0} true;
  call $i89 := velocity_mii_write($p85, 22, $i88);
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9579, 27} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9579, 27} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9579, 3} true;
  assume {:verifier.code 0} true;
  call $i92 := velocity_mii_read($p91, 27, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9580, 33} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9580, 18} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i16.i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9580, 39} true;
  assume {:verifier.code 0} true;
  $i95 := $or.i32($i94, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9580, 11} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i32.i16($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9580, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p6, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9581, 28} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9581, 28} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9581, 48} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9581, 42} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i16.i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9581, 42} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i32.i16($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9581, 3} true;
  assume {:verifier.code 0} true;
  call $i102 := velocity_mii_write($p98, 27, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9583, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9646, 27} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9646, 27} true;
  assume {:verifier.code 0} true;
  $p231 := $load.ref($M.0, $p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9646, 3} true;
  assume {:verifier.code 0} true;
  call $i232 := velocity_mii_read($p231, 0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9648, 14} true;
  assume {:verifier.code 0} true;
  $i233 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9648, 8} true;
  assume {:verifier.code 0} true;
  $i234 := $zext.i16.i32($i233);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9648, 19} true;
  assume {:verifier.code 0} true;
  $i235 := $and.i32($i234, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9648, 27} true;
  assume {:verifier.code 0} true;
  $i236 := $ne.i32($i235, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9648, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  goto $bb37, $bb38;
$bb30:
  assume ($i120 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9592, 29} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9592, 29} true;
  assume {:verifier.code 0} true;
  $p122 := $load.ref($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9592, 5} true;
  assume {:verifier.code 0} true;
  call $i123 := velocity_mii_read($p122, 22, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9593, 35} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i16($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9593, 20} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.i16.i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9593, 41} true;
  assume {:verifier.code 0} true;
  $i126 := $or.i32($i125, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9593, 13} true;
  assume {:verifier.code 0} true;
  $i127 := $trunc.i32.i16($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9593, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p8, $i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9594, 30} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9594, 30} true;
  assume {:verifier.code 0} true;
  $p129 := $load.ref($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9594, 50} true;
  assume {:verifier.code 0} true;
  $i130 := $load.i16($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9594, 44} true;
  assume {:verifier.code 0} true;
  $i131 := $zext.i16.i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9594, 44} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i32.i16($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9594, 5} true;
  assume {:verifier.code 0} true;
  call $i133 := velocity_mii_write($p129, 22, $i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9596, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i120 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9598, 29} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9598, 29} true;
  assume {:verifier.code 0} true;
  $p135 := $load.ref($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9598, 5} true;
  assume {:verifier.code 0} true;
  call $i136 := velocity_mii_read($p135, 22, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9599, 28} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i16($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9599, 13} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i16.i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9599, 34} true;
  assume {:verifier.code 0} true;
  $i139 := $and.i32($i138, 57343);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9599, 13} true;
  assume {:verifier.code 0} true;
  $i140 := $trunc.i32.i16($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9599, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p9, $i140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9600, 30} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9600, 30} true;
  assume {:verifier.code 0} true;
  $p142 := $load.ref($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9600, 50} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i16($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9600, 44} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i16.i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9600, 44} true;
  assume {:verifier.code 0} true;
  $i145 := $trunc.i32.i16($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9600, 5} true;
  assume {:verifier.code 0} true;
  call $i146 := velocity_mii_write($p142, 22, $i145);
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9604, 27} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9604, 27} true;
  assume {:verifier.code 0} true;
  $p148 := $load.ref($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9604, 3} true;
  assume {:verifier.code 0} true;
  call $i149 := velocity_mii_read($p148, 27, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9605, 33} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9605, 18} true;
  assume {:verifier.code 0} true;
  $i151 := $zext.i16.i32($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9605, 39} true;
  assume {:verifier.code 0} true;
  $i152 := $or.i32($i151, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9605, 11} true;
  assume {:verifier.code 0} true;
  $i153 := $trunc.i32.i16($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9605, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p10, $i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9606, 28} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9606, 28} true;
  assume {:verifier.code 0} true;
  $p155 := $load.ref($M.0, $p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9606, 48} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9606, 42} true;
  assume {:verifier.code 0} true;
  $i157 := $zext.i16.i32($i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9606, 42} true;
  assume {:verifier.code 0} true;
  $i158 := $trunc.i32.i16($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9606, 3} true;
  assume {:verifier.code 0} true;
  call $i159 := velocity_mii_write($p155, 27, $i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9608, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb33:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9618, 29} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9618, 29} true;
  assume {:verifier.code 0} true;
  $p179 := $load.ref($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9618, 5} true;
  assume {:verifier.code 0} true;
  call $i180 := velocity_mii_read($p179, 22, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9619, 35} true;
  assume {:verifier.code 0} true;
  $i181 := $load.i16($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9619, 20} true;
  assume {:verifier.code 0} true;
  $i182 := $zext.i16.i32($i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9619, 41} true;
  assume {:verifier.code 0} true;
  $i183 := $or.i32($i182, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9619, 13} true;
  assume {:verifier.code 0} true;
  $i184 := $trunc.i32.i16($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9619, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p12, $i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9620, 30} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9620, 30} true;
  assume {:verifier.code 0} true;
  $p186 := $load.ref($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9620, 50} true;
  assume {:verifier.code 0} true;
  $i187 := $load.i16($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9620, 44} true;
  assume {:verifier.code 0} true;
  $i188 := $zext.i16.i32($i187);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9620, 44} true;
  assume {:verifier.code 0} true;
  $i189 := $trunc.i32.i16($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9620, 5} true;
  assume {:verifier.code 0} true;
  call $i190 := velocity_mii_write($p186, 22, $i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9622, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i177 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9624, 29} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9624, 29} true;
  assume {:verifier.code 0} true;
  $p192 := $load.ref($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9624, 5} true;
  assume {:verifier.code 0} true;
  call $i193 := velocity_mii_read($p192, 22, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9625, 28} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i16($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9625, 13} true;
  assume {:verifier.code 0} true;
  $i195 := $zext.i16.i32($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9625, 34} true;
  assume {:verifier.code 0} true;
  $i196 := $and.i32($i195, 57343);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9625, 13} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i16($i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9625, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p13, $i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9626, 30} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9626, 30} true;
  assume {:verifier.code 0} true;
  $p199 := $load.ref($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9626, 50} true;
  assume {:verifier.code 0} true;
  $i200 := $load.i16($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9626, 44} true;
  assume {:verifier.code 0} true;
  $i201 := $zext.i16.i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9626, 44} true;
  assume {:verifier.code 0} true;
  $i202 := $trunc.i32.i16($i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9626, 5} true;
  assume {:verifier.code 0} true;
  call $i203 := velocity_mii_write($p199, 22, $i202);
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9629, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9643, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb37:
  assume ($i236 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9650, 27} true;
  assume {:verifier.code 0} true;
  $i237 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9650, 12} true;
  assume {:verifier.code 0} true;
  $i238 := $zext.i16.i32($i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9650, 32} true;
  assume {:verifier.code 0} true;
  $i239 := $and.i32($i238, 64511);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9650, 12} true;
  assume {:verifier.code 0} true;
  $i240 := $trunc.i32.i16($i239);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9650, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9651, 30} true;
  assume {:verifier.code 0} true;
  $p241 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9651, 30} true;
  assume {:verifier.code 0} true;
  $p242 := $load.ref($M.0, $p241);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9651, 49} true;
  assume {:verifier.code 0} true;
  $i243 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9651, 43} true;
  assume {:verifier.code 0} true;
  $i244 := $zext.i16.i32($i243);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9651, 43} true;
  assume {:verifier.code 0} true;
  $i245 := $trunc.i32.i16($i244);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9651, 5} true;
  assume {:verifier.code 0} true;
  call $i246 := velocity_mii_write($p242, 0, $i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9653, 3} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9656, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_mii_write: ref;
axiom (velocity_mii_write == $sub.ref(0, 349719));
procedure  velocity_mii_write($p0: ref, $i1: i8, $i2: i16)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i8;
  var $p5: ref;
  var $i6: i32;
  var $i7: i16;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i8;
  var $p15: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $i22: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i16;
  var $i27: i32;
  var $i28: i1;
  var $i16: i16;
  var $i29: i16;
  var $i23: i16;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.mac_regs* %0, i64 0, metadata !13938, metadata !8090), !dbg !13939, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !13940, metadata !8090), !dbg !13941, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8772, 3} true;
  assume {:verifier.code 0} true;
  call safe_disable_mii_autopoll($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8773, 10} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8773, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8773, 54} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8773, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8774, 10} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8774, 10} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8774, 50} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8774, 22} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8774, 3} true;
  assume {:verifier.code 0} true;
  call writew($i7, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8775, 49} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8775, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := readb($p10);
  // WARNING: %12 = call zeroext i8 @readb(i8* %11), !dbg !8108, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8776, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8776, 36} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i12, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8776, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8776, 72} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8776, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i14, $p15);
  // WARNING: call void @writeb(i8 zeroext %15, i8* %16), !dbg !8115, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8792, 7} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8793, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8782, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(21475);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8783, 53} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8783, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := readb($p17);
  // WARNING: %19 = call zeroext i8 @readb(i8* %18), !dbg !8122, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8785, 8} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8785, 22} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i32($i19, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8785, 28} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8785, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $i16;
  assume {:branchcond $i21} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i21 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8786, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $i22;
  goto $bb5;
$bb4:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8799, 3} true;
  assume {:verifier.code 0} true;
  call enable_mii_autopoll($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8801, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8801, 25} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8801, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb10, $bb11;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8790, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8790, 24} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i24, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8790, 8} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  // WARNING: %28 = trunc i32 %27 to i16, !dbg !8134, !verifier.code !8092
  call {:cexpr "ww"} boogie_si_record_i16($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8792, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i16.i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8792, 25} true;
  assume {:verifier.code 0} true;
  $i28 := $ule.i32($i27, 4094);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8792, 7} true;
  assume {:verifier.code 0} true;
  $i16, $i29 := $i26, $i26;
  assume {:branchcond $i28} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8792, 7} true;
  assume {:verifier.code 0} true;
  assume ($i28 == 1);
  goto $bb1;
$bb8:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8792, 28} true;
  assume {:verifier.code 0} true;
  $i23 := $i29;
  goto $bb5;
$bb10:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8802, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i32(0, 110);
  goto $bb12;
$bb11:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8808, 1} true;
  assume {:verifier.code 0} true;
  $r := $i32;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8806, 3} true;
  assume {:verifier.code 0} true;
  $i32 := 0;
  goto $bb12;
}
const mac_get_cam_mask: ref;
axiom (mac_get_cam_mask == $sub.ref(0, 350751));
procedure  mac_get_cam_mask($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i8;
  var $i8: i32;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i32;
  var $i21: i8;
  var $p22: ref;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i8;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i8;
  var $i47: i64;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i8;
  var $i53: i64;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i8;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i8;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8021, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8021, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := readb($p2);
  // WARNING: %4 = call zeroext i8 @readb(i8* %3), !dbg !8098, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 61} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 67} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 103} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8022, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i9, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8023, 41} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8023, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p11);
  // WARNING: call void @writeb(i8 zeroext 0, i8* %12), !dbg !8109, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8035, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8030, 15} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i15 := readb($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p1, $i15);
  // WARNING: store i8 %17, i8* %1, align 1, !dbg !8120, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $i23 := $add.i64(1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8030, 15} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, $mul.ref($i23, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 62} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i28 := readb($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, $i28);
  // WARNING: store i8 %32, i8* %14, align 1, !dbg !8120, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8041, 41} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8041, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8042, 53} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8042, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := readb($p17);
  // WARNING: %22 = call zeroext i8 @readb(i8* %21), !dbg !8128, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8043, 10} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8043, 24} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i32($i19, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8043, 10} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8043, 58} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8043, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i21, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8045, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb5:
  $i29 := $add.i64($i23, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8030, 15} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, $mul.ref($i29, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 62} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i34 := readb($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p24, $i34);
  // WARNING: store i8 %38, i8* %28, align 1, !dbg !8120, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  $i35 := $add.i64($i29, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8030, 15} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, $mul.ref($i35, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 62} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i40 := readb($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p30, $i40);
  // WARNING: store i8 %44, i8* %34, align 1, !dbg !8120, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  $i41 := $add.i64($i35, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8030, 15} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, $mul.ref($i41, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 62} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i46 := readb($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, $i46);
  // WARNING: store i8 %50, i8* %40, align 1, !dbg !8120, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  $i47 := $add.i64($i41, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8030, 15} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, $mul.ref($i47, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 62} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p50, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i52 := readb($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, $i52);
  // WARNING: store i8 %56, i8* %46, align 1, !dbg !8120, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $i53 := $add.i64($i47, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8030, 15} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p1, $mul.ref($i53, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 62} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i58 := readb($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p48, $i58);
  // WARNING: store i8 %62, i8* %52, align 1, !dbg !8120, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 54} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 20} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 62} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 14} true;
  assume {:verifier.code 0} true;
  call $i62 := readb($p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8031, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p54, $i62);
  // WARNING: store i8 %67, i8* %58, align 1, !dbg !8120, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb4;
}
const mac_set_cam: ref;
axiom (mac_set_cam == $sub.ref(0, 351783));
procedure  mac_set_cam($p0: ref, $i1: i32, $p2: ref)
{
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i8;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $i12: i32;
  var $i13: i8;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $i17: i32;
  var $i18: i8;
  var $p19: ref;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i8;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i32;
  var $i37: i8;
  var $p38: ref;
  var $i39: i64;
  var $p40: ref;
  var $i41: i8;
  var $i42: i32;
  var $i43: i8;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $p48: ref;
  var $i49: i8;
  var $i50: i32;
  var $i51: i8;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $p56: ref;
  var $i57: i8;
  var $i58: i32;
  var $i59: i8;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $p64: ref;
  var $i65: i8;
  var $i66: i32;
  var $i67: i8;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i8;
  var $i72: i32;
  var $i73: i8;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.mac_regs* %0, i64 0, metadata !14051, metadata !8090), !dbg !14052, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8130, 49} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8130, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := readb($p3);
  // WARNING: %5 = call zeroext i8 @readb(i8* %4), !dbg !8100, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 61} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 67} true;
  assume {:verifier.code 0} true;
  $i7 := $or.i32($i6, $sub.i32(0, 128));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 105} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8131, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i10, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8132, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i1, 63);
  // WARNING: %13 = and i32 %1, 63, !dbg !8110, !verifier.code !8092
  call {:cexpr "idx"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 41} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 34} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 60} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i14, $sub.i32(0, 128));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 10} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 10} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 98} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8133, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i18, $p19);
  // WARNING: call void @writeb(i8 zeroext %19, i8* %20), !dbg !8117, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8145, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8146, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8140, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 54} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i23, $p25);
  // WARNING: call void @writeb(i8 zeroext %25, i8* %27), !dbg !8129, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8146, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $i39 := $add.i64(1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8140, 15} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p2, $mul.ref($i39, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 16} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i8($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i8($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 54} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 26} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 62} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i43, $p46);
  // WARNING: call void @writeb(i8 zeroext %47, i8* %50), !dbg !8129, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8146, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8151, 53} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8151, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := readb($p26);
  // WARNING: %31 = call zeroext i8 @readb(i8* %30), !dbg !8135, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8152, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8152, 40} true;
  assume {:verifier.code 0} true;
  $i29 := $or.i32($i28, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8152, 10} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8152, 75} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8152, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i30, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8153, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8154, 41} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8154, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8155, 53} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8155, 13} true;
  assume {:verifier.code 0} true;
  call $i34 := readb($p33);
  // WARNING: %38 = call zeroext i8 @readb(i8* %37), !dbg !8147, !verifier.code !8092
  call {:cexpr "tmp___2"} boogie_si_record_i8($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8156, 10} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8156, 24} true;
  assume {:verifier.code 0} true;
  $i36 := $and.i32($i35, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8156, 10} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8156, 58} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8156, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i37, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8158, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb5:
  $i47 := $add.i64($i39, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8140, 15} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p2, $mul.ref($i47, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 16} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i8($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i8($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 54} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 26} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 62} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i51, $p54);
  // WARNING: call void @writeb(i8 zeroext %55, i8* %58), !dbg !8129, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8146, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  $i55 := $add.i64($i47, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8140, 15} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p2, $mul.ref($i55, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 16} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i8($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i8.i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 54} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 26} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 62} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i59, $p62);
  // WARNING: call void @writeb(i8 zeroext %63, i8* %66), !dbg !8129, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8146, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  $i63 := $add.i64($i55, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8140, 15} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p2, $mul.ref($i63, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 16} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i32.i8($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 54} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 26} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 62} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p69, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i67, $p70);
  // WARNING: call void @writeb(i8 zeroext %71, i8* %74), !dbg !8129, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8146, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 16} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 10} true;
  assume {:verifier.code 0} true;
  $i73 := $trunc.i32.i8($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 54} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 26} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 62} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8141, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i73, $p76);
  // WARNING: call void @writeb(i8 zeroext %78, i8* %81), !dbg !8129, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb4;
}
const mac_set_cam_mask: ref;
axiom (mac_set_cam_mask == $sub.ref(0, 352815));
procedure  mac_set_cam_mask($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i8;
  var $i8: i32;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i8;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i8;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i8;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i8;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $p50: ref;
  var $i51: i8;
  var $i52: i32;
  var $i53: i8;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i8;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $p66: ref;
  var $i67: i8;
  var $i68: i32;
  var $i69: i8;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i8;
  var $i74: i32;
  var $i75: i8;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8057, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8057, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := readb($p2);
  // WARNING: %4 = call zeroext i8 @readb(i8* %3), !dbg !8098, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 61} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 67} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 103} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8058, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i9, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8059, 43} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8059, 3} true;
  assume {:verifier.code 0} true;
  call writeb($sub.i8(0, 128), $p11);
  // WARNING: call void @writeb(i8 zeroext -128, i8* %12), !dbg !8109, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8071, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8066, 15} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i15, $p17);
  // WARNING: call void @writeb(i8 zeroext %17, i8* %19), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $i25 := $add.i64(1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8066, 15} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, $mul.ref($i25, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i32.i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 62} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i29, $p32);
  // WARNING: call void @writeb(i8 zeroext %33, i8* %36), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8077, 41} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8077, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8078, 53} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8078, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := readb($p19);
  // WARNING: %24 = call zeroext i8 @readb(i8* %23), !dbg !8129, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8079, 10} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8079, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i32($i21, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8079, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8079, 58} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8079, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i23, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8081, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb5:
  $i33 := $add.i64($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8066, 15} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, $mul.ref($i33, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 62} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p39, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i37, $p40);
  // WARNING: call void @writeb(i8 zeroext %41, i8* %44), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  $i41 := $add.i64($i33, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8066, 15} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, $mul.ref($i41, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 62} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i45, $p48);
  // WARNING: call void @writeb(i8 zeroext %49, i8* %52), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  $i49 := $add.i64($i41, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8066, 15} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p1, $mul.ref($i49, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i53 := $trunc.i32.i8($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 62} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i53, $p56);
  // WARNING: call void @writeb(i8 zeroext %57, i8* %60), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  $i57 := $add.i64($i49, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8066, 15} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p1, $mul.ref($i57, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 62} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p63, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i61, $p64);
  // WARNING: call void @writeb(i8 zeroext %65, i8* %68), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $i65 := $add.i64($i57, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8066, 15} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p1, $mul.ref($i65, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 62} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i69, $p72);
  // WARNING: call void @writeb(i8 zeroext %73, i8* %76), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 16} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i8.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 10} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i32.i8($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 54} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 26} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 62} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8067, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i75, $p78);
  // WARNING: call void @writeb(i8 zeroext %80, i8* %83), !dbg !8121, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb4;
}
const readw: ref;
axiom (readw == $sub.ref(0, 353847));
procedure  readw($p0: ref)
  returns ($r: i16)
{
  var $p1: ref;
  var $i2: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6712, 57} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  call $i2 := devirtbounce.13(0, $p1);
  // WARNING: %3 = call i16 @devirtbounce.13(i16 (i16*)* asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i16* %2)
  call {:cexpr "ret"} boogie_si_record_i16($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6713, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const mac_set_vlan_cam_mask: ref;
axiom (mac_set_vlan_cam_mask == $sub.ref(0, 354879));
procedure  mac_set_vlan_cam_mask($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i8;
  var $i8: i32;
  var $i9: i8;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i8;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i32;
  var $i23: i8;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i8;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i8;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i8;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $p50: ref;
  var $i51: i8;
  var $i52: i32;
  var $i53: i8;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i8;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $p66: ref;
  var $i67: i8;
  var $i68: i32;
  var $i69: i8;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i8;
  var $i74: i32;
  var $i75: i8;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8093, 49} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8093, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := readb($p2);
  // WARNING: %4 = call zeroext i8 @readb(i8* %3), !dbg !8098, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 61} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i4, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 67} true;
  assume {:verifier.code 0} true;
  $i6 := $or.i32($i5, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 103} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8094, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i9, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8095, 43} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8095, 3} true;
  assume {:verifier.code 0} true;
  call writeb($sub.i8(0, 64), $p11);
  // WARNING: call void @writeb(i8 zeroext -64, i8* %12), !dbg !8109, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8107, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8102, 15} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i15, $p17);
  // WARNING: call void @writeb(i8 zeroext %17, i8* %19), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $i25 := $add.i64(1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8102, 15} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, $mul.ref($i25, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i32.i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 62} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i29, $p32);
  // WARNING: call void @writeb(i8 zeroext %33, i8* %36), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8113, 41} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8113, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8114, 53} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8114, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := readb($p19);
  // WARNING: %24 = call zeroext i8 @readb(i8* %23), !dbg !8129, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8115, 10} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8115, 24} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i32($i21, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8115, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i8($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8115, 58} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8115, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i23, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8117, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb5:
  $i33 := $add.i64($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8102, 15} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, $mul.ref($i33, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p39 := $bitcast.ref.ref($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 62} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p39, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i37, $p40);
  // WARNING: call void @writeb(i8 zeroext %41, i8* %44), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  $i41 := $add.i64($i33, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8102, 15} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, $mul.ref($i41, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 62} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i45, $p48);
  // WARNING: call void @writeb(i8 zeroext %49, i8* %52), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  $i49 := $add.i64($i41, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8102, 15} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p1, $mul.ref($i49, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i53 := $trunc.i32.i8($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 62} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i53, $p56);
  // WARNING: call void @writeb(i8 zeroext %57, i8* %60), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  $i57 := $add.i64($i49, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8102, 15} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p1, $mul.ref($i57, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 62} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p63, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i61, $p64);
  // WARNING: call void @writeb(i8 zeroext %65, i8* %68), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $i65 := $add.i64($i57, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8102, 15} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p1, $mul.ref($i65, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 62} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i69, $p72);
  // WARNING: call void @writeb(i8 zeroext %73, i8* %76), !dbg !8121, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8108, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 16} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i8.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 10} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i32.i8($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 54} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 26} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 62} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p77, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8103, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i75, $p78);
  // WARNING: call void @writeb(i8 zeroext %80, i8* %83), !dbg !8121, !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb4;
}
const find_first_bit: ref;
axiom (find_first_bit == $sub.ref(0, 355911));
procedure  find_first_bit($p0: ref, $i1: i64)
  returns ($r: i64);
const mac_set_vlan_cam: ref;
axiom (mac_set_vlan_cam == $sub.ref(0, 356943));
procedure  mac_set_vlan_cam($p0: ref, $i1: i32, $p2: ref)
{
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $i8: i8;
  var $i9: i32;
  var $i10: i8;
  var $p11: ref;
  var $i12: i32;
  var $i13: i8;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $i17: i32;
  var $i18: i8;
  var $p19: ref;
  var $p20: ref;
  var $i21: i16;
  var $i22: i32;
  var $i23: i16;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i32;
  var $i37: i8;
  var $p38: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.mac_regs* %0, i64 0, metadata !14223, metadata !8090), !dbg !14224, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8169, 49} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8169, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := readb($p3);
  // WARNING: %5 = call zeroext i8 @readb(i8* %4), !dbg !8100, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 61} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 67} true;
  assume {:verifier.code 0} true;
  $i7 := $or.i32($i6, $sub.i32(0, 128));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 10} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 105} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8170, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i10, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8171, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i1, 63);
  // WARNING: %13 = and i32 %1, 63, !dbg !8110, !verifier.code !8092
  call {:cexpr "idx"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 41} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 34} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 60} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i14, $sub.i32(0, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 10} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 10} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 97} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8172, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i18, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8173, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8173, 16} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i16($M.16, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8173, 10} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8173, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8173, 60} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8173, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8173, 3} true;
  assume {:verifier.code 0} true;
  call writew($i23, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8174, 53} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8174, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := readb($p26);
  // WARNING: %28 = call zeroext i8 @readb(i8* %27), !dbg !8124, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8175, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8175, 40} true;
  assume {:verifier.code 0} true;
  $i29 := $or.i32($i28, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8175, 10} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8175, 75} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8175, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i30, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8176, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(42950);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8177, 41} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8177, 3} true;
  assume {:verifier.code 0} true;
  call writeb(0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8178, 53} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8178, 13} true;
  assume {:verifier.code 0} true;
  call $i34 := readb($p33);
  // WARNING: %35 = call zeroext i8 @readb(i8* %34), !dbg !8136, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8179, 10} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8179, 24} true;
  assume {:verifier.code 0} true;
  $i36 := $and.i32($i35, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8179, 10} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i8($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8179, 58} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8179, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i37, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8181, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const find_next_bit: ref;
axiom (find_next_bit == $sub.ref(0, 357975));
procedure  find_next_bit($p0: ref, $i1: i64, $i2: i64)
  returns ($r: i64);
const netif_tx_wake_queue: ref;
axiom (netif_tx_wake_queue == $sub.ref(0, 359007));
procedure  netif_tx_wake_queue($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7553, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := netpoll_trap();
  // WARNING: %2 = call i32 @netpoll_trap(), !dbg !8093, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7555, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7555, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7557, 5} true;
  assume {:verifier.code 0} true;
  call netif_tx_start_queue($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7559, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7575, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7564, 76} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7564, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := test_and_set_bit(0, $p3);
  // WARNING: %8 = call i32 @test_and_set_bit(i64 0, i64* %7), !dbg !8107, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7566, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7566, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7568, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7568, 33} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7568, 5} true;
  assume {:verifier.code 0} true;
  call __netif_schedule($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7570, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7573, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const netpoll_trap: ref;
axiom (netpoll_trap == $sub.ref(0, 360039));
procedure  netpoll_trap()
  returns ($r: i32);
const __netif_schedule: ref;
axiom (__netif_schedule == $sub.ref(0, 361071));
procedure  __netif_schedule($p0: ref);
const mii_check_media_mode: ref;
axiom (mii_check_media_mode == $sub.ref(0, 362103));
procedure  mii_check_media_mode($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i16;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i16;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i32;
  var $i22: i16;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i28: i32;
  var $i29: i16;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i35: i16;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i1;
  var $i45: i32;
  var $i47: i32;
  var $i46: i32;
  var $i40: i32;
  var $i34: i32;
  var $i27: i32;
  var $i20: i32;
  var $i48: i32;
  var $i49: i16;
  var $i50: i32;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $i54: i16;
  var $i55: i32;
  var $i56: i32;
  var $i57: i1;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata i16* %7, metadata !14319, metadata !8090), !dbg !14320, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8704, 3} true;
  assume {:verifier.code 0} true;
  call $i7 := velocity_mii_read($p0, 1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8706, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8706, 8} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i16.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8706, 16} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8706, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8706, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8707, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i32(0, 1);
  // WARNING: %14 = or i32 0, 1, !dbg !8116, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8708, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i12;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8712, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := velocity_mii_read($p0, 9, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8714, 14} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8714, 8} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i16.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8714, 20} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i32($i16, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8714, 27} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8714, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8715, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i13, 24);
  // WARNING: %23 = or i32 %.0, 24, !dbg !8127, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8716, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb6;
$bb5:
  assume !(($i18 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8718, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := velocity_mii_read($p0, 9, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8720, 16} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8720, 10} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8720, 22} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i32($i23, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8720, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8720, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb7, $bb8;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8740, 3} true;
  assume {:verifier.code 0} true;
  call $i48 := velocity_mii_read($p0, 0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8742, 14} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8742, 8} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i16.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8742, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i50, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8742, 28} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8742, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb19, $bb20;
$bb7:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8721, 23} true;
  assume {:verifier.code 0} true;
  $i26 := $or.i32($i13, 8);
  // WARNING: %31 = or i32 %.0, 8, !dbg !8139, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8722, 5} true;
  assume {:verifier.code 0} true;
  $i27 := $i26;
  goto $bb9;
$bb8:
  assume !(($i25 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8724, 7} true;
  assume {:verifier.code 0} true;
  call $i28 := velocity_mii_read($p0, 4, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8726, 18} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8726, 12} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8726, 23} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8726, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8726, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb10, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i20 := $i27;
  goto $bb6;
$bb10:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8727, 25} true;
  assume {:verifier.code 0} true;
  $i33 := $or.i32($i13, 20);
  // WARNING: %39 = or i32 %.0, 20, !dbg !8151, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8728, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $i33;
  goto $bb12;
$bb11:
  assume !(($i32 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8729, 18} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8729, 12} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i16.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8729, 23} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i32($i36, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8729, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8729, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb13, $bb14;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i27 := $i34;
  goto $bb9;
$bb13:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8730, 25} true;
  assume {:verifier.code 0} true;
  $i39 := $or.i32($i13, 4);
  // WARNING: %46 = or i32 %.0, 4, !dbg !8160, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8731, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $i39;
  goto $bb15;
$bb14:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8732, 18} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8732, 12} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8732, 23} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i32($i42, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8732, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8732, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb16, $bb17;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i34 := $i40;
  goto $bb12;
$bb16:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8733, 25} true;
  assume {:verifier.code 0} true;
  $i45 := $or.i32($i13, 18);
  // WARNING: %53 = or i32 %.0, 18, !dbg !8169, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8734, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $i45;
  goto $bb18;
$bb17:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8735, 25} true;
  assume {:verifier.code 0} true;
  $i47 := $or.i32($i13, 2);
  // WARNING: %55 = or i32 %.0, 2, !dbg !8172, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i47);
  assume {:verifier.code 0} true;
  $i46 := $i47;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i40 := $i46;
  goto $bb15;
$bb19:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8744, 5} true;
  assume {:verifier.code 0} true;
  call $i53 := velocity_mii_read($p0, 4, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8746, 16} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8746, 10} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i16.i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8746, 21} true;
  assume {:verifier.code 0} true;
  $i56 := $and.i32($i55, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8746, 28} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i56, 480);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8746, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb21, $bb22;
$bb20:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  $i66 := $i20;
  goto $bb27;
$bb21:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8748, 7} true;
  assume {:verifier.code 0} true;
  call $i58 := velocity_mii_read($p0, 9, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8750, 18} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8750, 12} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i16.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8750, 24} true;
  assume {:verifier.code 0} true;
  $i61 := $and.i32($i60, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8750, 31} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8750, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb23, $bb24;
$bb22:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  $i65 := $i20;
  goto $bb26;
$bb23:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8751, 25} true;
  assume {:verifier.code 0} true;
  $i63 := $or.i32($i20, 32);
  // WARNING: %79 = or i32 %.5, 32, !dbg !8200, !verifier.code !8089
  call {:cexpr "status"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8752, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $i63;
  goto $bb25;
$bb24:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  $i64 := $i20;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8755, 5} true;
  assume {:verifier.code 0} true;
  $i65 := $i64;
  goto $bb26;
$bb26:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8758, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $i65;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8761, 3} true;
  assume {:verifier.code 0} true;
  $r := $i66;
  $exn := false;
  return;
}
const set_mii_flow_control: ref;
axiom (set_mii_flow_control == $sub.ref(0, 363135));
procedure  set_mii_flow_control($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i16;
  var $i29: i32;
  var $i30: i32;
  var $i31: i16;
  var $p32: ref;
  var $p33: ref;
  var $i34: i16;
  var $i35: i32;
  var $i36: i16;
  var $i37: i32;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i16;
  var $p45: ref;
  var $p46: ref;
  var $i47: i16;
  var $i48: i32;
  var $i49: i16;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i16;
  var $i55: i32;
  var $i56: i32;
  var $i57: i16;
  var $p58: ref;
  var $p59: ref;
  var $i60: i16;
  var $i61: i32;
  var $i62: i16;
  var $i63: i32;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i16;
  var $i68: i32;
  var $i69: i32;
  var $i70: i16;
  var $p71: ref;
  var $p72: ref;
  var $i73: i16;
  var $i74: i32;
  var $i75: i16;
  var $i76: i32;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i16;
  var $i81: i32;
  var $i82: i32;
  var $i83: i16;
  var $p84: ref;
  var $p85: ref;
  var $i86: i16;
  var $i87: i32;
  var $i88: i16;
  var $i89: i32;
  var $p90: ref;
  var $p91: ref;
  var $i92: i32;
  var $i93: i16;
  var $i94: i32;
  var $i95: i32;
  var $i96: i16;
  var $p97: ref;
  var $p98: ref;
  var $i99: i16;
  var $i100: i32;
  var $i101: i16;
  var $i102: i32;
  var $p103: ref;
  var $p104: ref;
  var $i105: i32;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i16;
  var $p110: ref;
  var $p111: ref;
  var $i112: i16;
  var $i113: i32;
  var $i114: i16;
  var $i115: i32;
  var $p116: ref;
  var $p117: ref;
  var $i118: i32;
  var $i119: i16;
  var $i120: i32;
  var $i121: i32;
  var $i122: i16;
  var $p123: ref;
  var $p124: ref;
  var $i125: i16;
  var $i126: i32;
  var $i127: i16;
  var $i128: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8822, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 896);
  $p10 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8822, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8822, 31} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8822, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8823, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8845, 27} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8845, 27} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8845, 3} true;
  assume {:verifier.code 0} true;
  call $i27 := velocity_mii_read($p26, 4, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8846, 22} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8846, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8846, 24} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, 64511);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8846, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i16($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8846, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p1, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8847, 28} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8847, 28} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8847, 47} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8847, 41} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i16.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8847, 41} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i16($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8847, 3} true;
  assume {:verifier.code 0} true;
  call $i37 := velocity_mii_write($p33, 4, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8848, 27} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8848, 27} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8848, 3} true;
  assume {:verifier.code 0} true;
  call $i40 := velocity_mii_read($p39, 4, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8849, 33} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8849, 18} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8849, 39} true;
  assume {:verifier.code 0} true;
  $i43 := $or.i32($i42, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8849, 11} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i16($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8849, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8850, 28} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8850, 28} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8850, 47} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8850, 41} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i16.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8850, 41} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i16($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8850, 3} true;
  assume {:verifier.code 0} true;
  call $i50 := velocity_mii_write($p46, 4, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8852, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8827, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 896);
  $p14 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8827, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8827, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8827, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8828, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8855, 27} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8855, 27} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8855, 3} true;
  assume {:verifier.code 0} true;
  call $i53 := velocity_mii_read($p52, 4, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8856, 33} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8856, 18} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i16.i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8856, 39} true;
  assume {:verifier.code 0} true;
  $i56 := $or.i32($i55, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8856, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i32.i16($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8856, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8857, 28} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8857, 28} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8857, 47} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8857, 41} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i16.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8857, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i16($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8857, 3} true;
  assume {:verifier.code 0} true;
  call $i63 := velocity_mii_write($p59, 4, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8858, 27} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8858, 27} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8858, 3} true;
  assume {:verifier.code 0} true;
  call $i66 := velocity_mii_read($p65, 4, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8859, 33} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8859, 18} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i16.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8859, 39} true;
  assume {:verifier.code 0} true;
  $i69 := $or.i32($i68, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8859, 11} true;
  assume {:verifier.code 0} true;
  $i70 := $trunc.i32.i16($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8859, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p4, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8860, 28} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8860, 28} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8860, 47} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8860, 41} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i16.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8860, 41} true;
  assume {:verifier.code 0} true;
  $i75 := $trunc.i32.i16($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8860, 3} true;
  assume {:verifier.code 0} true;
  call $i76 := velocity_mii_write($p72, 4, $i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8862, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8832, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 896);
  $p18 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8832, 21} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8832, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8832, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8833, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8865, 27} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8865, 27} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8865, 3} true;
  assume {:verifier.code 0} true;
  call $i79 := velocity_mii_read($p78, 4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8866, 33} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8866, 18} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i16.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8866, 39} true;
  assume {:verifier.code 0} true;
  $i82 := $or.i32($i81, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8866, 11} true;
  assume {:verifier.code 0} true;
  $i83 := $trunc.i32.i16($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8866, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p5, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8867, 28} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8867, 28} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8867, 47} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8867, 41} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i16.i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8867, 41} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i16($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8867, 3} true;
  assume {:verifier.code 0} true;
  call $i89 := velocity_mii_write($p85, 4, $i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8868, 27} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8868, 27} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8868, 3} true;
  assume {:verifier.code 0} true;
  call $i92 := velocity_mii_read($p91, 4, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8869, 26} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8869, 11} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i16.i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8869, 32} true;
  assume {:verifier.code 0} true;
  $i95 := $and.i32($i94, 63487);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8869, 11} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i32.i16($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8869, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p6, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8870, 28} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8870, 28} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8870, 47} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8870, 41} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i16.i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8870, 41} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i32.i16($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8870, 3} true;
  assume {:verifier.code 0} true;
  call $i102 := velocity_mii_write($p98, 4, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8872, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8837, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 896);
  $p22 := $add.ref($add.ref($p0, 896), 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8837, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8837, 31} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8837, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8838, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8875, 27} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8875, 27} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8875, 3} true;
  assume {:verifier.code 0} true;
  call $i105 := velocity_mii_read($p104, 4, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8876, 26} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8876, 11} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i16.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8876, 32} true;
  assume {:verifier.code 0} true;
  $i108 := $and.i32($i107, 64511);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8876, 11} true;
  assume {:verifier.code 0} true;
  $i109 := $trunc.i32.i16($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8876, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8877, 28} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8877, 28} true;
  assume {:verifier.code 0} true;
  $p111 := $load.ref($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8877, 47} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i16($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8877, 41} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i16.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8877, 41} true;
  assume {:verifier.code 0} true;
  $i114 := $trunc.i32.i16($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8877, 3} true;
  assume {:verifier.code 0} true;
  call $i115 := velocity_mii_write($p111, 4, $i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8878, 27} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8878, 27} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8878, 3} true;
  assume {:verifier.code 0} true;
  call $i118 := velocity_mii_read($p117, 4, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8879, 26} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i16($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8879, 11} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i16.i32($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8879, 32} true;
  assume {:verifier.code 0} true;
  $i121 := $and.i32($i120, 63487);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8879, 11} true;
  assume {:verifier.code 0} true;
  $i122 := $trunc.i32.i16($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8879, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p8, $i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8880, 28} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8880, 28} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8880, 47} true;
  assume {:verifier.code 0} true;
  $i125 := $load.i16($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8880, 41} true;
  assume {:verifier.code 0} true;
  $i126 := $zext.i16.i32($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8880, 41} true;
  assume {:verifier.code 0} true;
  $i127 := $trunc.i32.i16($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8880, 3} true;
  assume {:verifier.code 0} true;
  call $i128 := velocity_mii_write($p124, 4, $i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8882, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8842, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8884, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8888, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8886, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
}
const mii_set_auto_on: ref;
axiom (mii_set_auto_on == $sub.ref(0, 364167));
procedure  mii_set_auto_on($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i16;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i16;
  var $i15: i32;
  var $i16: i32;
  var $i17: i16;
  var $p18: ref;
  var $p19: ref;
  var $i20: i16;
  var $i21: i32;
  var $i22: i16;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i16;
  var $i28: i32;
  var $i29: i32;
  var $i30: i16;
  var $p31: ref;
  var $p32: ref;
  var $i33: i16;
  var $i34: i32;
  var $i35: i16;
  var $i36: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8899, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8899, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8899, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := velocity_mii_read($p5, 0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8901, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8901, 8} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8901, 20} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8901, 28} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8901, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8903, 29} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8903, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8903, 5} true;
  assume {:verifier.code 0} true;
  call $i13 := velocity_mii_read($p12, 0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8904, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8904, 16} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8904, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i32($i15, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8904, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i16($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8904, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p1, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8905, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8905, 30} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8905, 49} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8905, 43} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i16.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8905, 43} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i16($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8905, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := velocity_mii_write($p19, 0, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8907, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8909, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8909, 29} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8909, 5} true;
  assume {:verifier.code 0} true;
  call $i26 := velocity_mii_read($p25, 0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8910, 35} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8910, 20} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i16.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8910, 41} true;
  assume {:verifier.code 0} true;
  $i29 := $or.i32($i28, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8910, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8910, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p2, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8911, 30} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8911, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8911, 49} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8911, 43} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i16.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8911, 43} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i32.i16($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8911, 5} true;
  assume {:verifier.code 0} true;
  call $i36 := velocity_mii_write($p32, 0, $i35);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8914, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_init_rx_ring_indexes: ref;
axiom (velocity_init_rx_ring_indexes == $sub.ref(0, 365199));
procedure  velocity_init_rx_ring_indexes($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8458, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 728);
  $p2 := $add.ref($add.ref($p0, 728), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8458, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 0);
  // WARNING: store i32 0, i32* %3, align 8, !dbg !8095, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8460, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 728);
  $p4 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8460, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8461, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 728);
  $p6 := $add.ref($add.ref($p0, 728), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8461, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8462, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __ldv_spin_lock: ref;
axiom (__ldv_spin_lock == $sub.ref(0, 366231));
procedure  __ldv_spin_lock($p0: ref);
const velocity_set_rxbufsize: ref;
axiom (velocity_set_rxbufsize == $sub.ref(0, 367263));
procedure  velocity_set_rxbufsize($p0: ref, $i1: i32)
{
  var $i2: i1;
  var $i3: i32;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !14630, metadata !8090), !dbg !14631, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 25} true;
  assume {:verifier.code 0} true;
  $i2 := $sgt.i32($i1, 1500);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 38} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i32($i1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $i3;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 21} true;
  assume {:verifier.code 0} true;
  $i4 := 1540;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 21} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 728);
  $p6 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10027, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10028, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_init_dma_rings: ref;
axiom (velocity_init_dma_rings == $sub.ref(0, 368295));
procedure  velocity_init_dma_rings($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
  var $i11: i32;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $p49: ref;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $i47: i32;
  var $p48: ref;
  var $i31: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9985, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 896);
  $p3 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9986, 63} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9986, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9986, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9986, 70} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i32($i6, 16);
  // WARNING: %8 = mul i32 %7, 16, !dbg !8104, !verifier.code !8089
  call {:cexpr "rx_ring_size"} boogie_si_record_i32($i7);
  $p8 := $add.ref($add.ref($p0, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9987, 63} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9987, 42} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9987, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i64.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9987, 70} true;
  assume {:verifier.code 0} true;
  $i12 := $mul.i32($i11, 64);
  // WARNING: %13 = mul i32 %12, 64, !dbg !8110, !verifier.code !8089
  call {:cexpr "tx_ring_size"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 32} true;
  assume {:verifier.code 0} true;
  $p13 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 32} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 83} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 576);
  $p16 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 86} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 60} true;
  assume {:verifier.code 0} true;
  $i18 := $mul.i32($i12, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 91} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i18, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9988, 10} true;
  assume {:verifier.code 0} true;
  call $p21 := dma_alloc_attrs($p14, $i20, $p1, 32, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9991, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9991, 28} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9991, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9993, 44} true;
  assume {:verifier.code 0} true;
  $p24 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9993, 44} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9994, 31} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9994, 31} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9994, 40} true;
  assume {:verifier.code 0} true;
  $p28 := $p27;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9994, 13} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9993, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := dev_err.ref.ref.ref($p25, .str.5, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9996, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10021, 1} true;
  assume {:verifier.code 0} true;
  $r := $i31;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10000, 19} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10000, 9} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 728);
  $p34 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10000, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p34, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10001, 23} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.17, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10001, 9} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 728);
  $p37 := $add.ref($add.ref($p0, 728), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10001, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p37, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10002, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10002, 15} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p21, $mul.ref($i38, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10003, 14} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i64($M.17, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10003, 25} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10003, 23} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i40, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10003, 12} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.i64($M.17, $p1, $i42);
  // WARNING: store i64 %45, i64* %2, align 8, !dbg !8145, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 32} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 576);
  $p44 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 35} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 9} true;
  assume {:verifier.code 0} true;
  $i46 := $ult.i32(0, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 7} true;
  assume {:verifier.code 0} true;
  $i47, $p48 := 0, $p39;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i46 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10014, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10007, 23} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10007, 3} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i32.i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10007, 9} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 576);
  $p52 := $add.ref($add.ref($p0, 576), 56);
  $p53 := $add.ref($add.ref($add.ref($p0, 576), 56), $mul.ref($i50, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10007, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p53, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10008, 26} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i64($M.17, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10008, 3} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i32.i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10008, 9} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 576);
  $p57 := $add.ref($add.ref($p0, 576), 120);
  $p58 := $add.ref($add.ref($add.ref($p0, 576), 120), $mul.ref($i55, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10008, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p58, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10009, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10009, 15} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p48, $mul.ref($i59, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10010, 14} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i64($M.17, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10010, 25} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10010, 23} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i61, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10010, 12} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.i64($M.17, $p1, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10011, 9} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i32($i47, 1);
  // WARNING: %66 = add i32 %.014, 1, !dbg !8167, !verifier.code !8089
  call {:cexpr "i"} boogie_si_record_i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 35} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $ult.i32($i64, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 7} true;
  assume {:verifier.code 0} true;
  $i47, $p48 := $i64, $p60;
  assume {:branchcond $i66} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 7} true;
  assume {:verifier.code 0} true;
  assume ($i66 == 1);
  goto $bb8;
$bb11:
  assume !(($i66 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10013, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10019, 3} true;
  assume {:verifier.code 0} true;
  $i31 := 0;
  goto $bb3;
}
const velocity_init_rd_ring: ref;
axiom (velocity_init_rd_ring == $sub.ref(0, 369327));
procedure  velocity_init_rd_ring($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i14: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !14729, metadata !8090), !dbg !14730, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10161, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 896);
  $p2 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10161, 40} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10161, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10161, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := kcalloc($i4, 16, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10162, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10162, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 728);
  $p8 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10162, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10164, 29} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 728);
  $p10 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10164, 32} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10164, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10164, 37} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10164, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10165, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10190, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10170, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_rx_ring_indexes($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10171, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := velocity_rx_refill($p0);
  // WARNING: %18 = call i32 @velocity_rx_refill(%struct.velocity_info* %0), !dbg !8116, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10173, 24} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 896);
  $p17 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10173, 32} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10173, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i15, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10173, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10174, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10174, 18} true;
  assume {:verifier.code 0} true;
  $i21 := $sge.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10174, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10176, 73} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10176, 73} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10176, 82} true;
  assume {:verifier.code 0} true;
  $p24 := $p23;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10176, 55} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10176, 7} true;
  assume {:verifier.code 0} true;
  call $i26 := printk.ref.ref(.str.6, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10182, 5} true;
  assume {:verifier.code 0} true;
  call velocity_free_rd_ring($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10184, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 12);
  goto $bb3;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10188, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
}
const velocity_init_td_ring: ref;
axiom (velocity_init_td_ring == $sub.ref(0, 370359));
procedure  velocity_init_td_ring($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
  var $i26: i32;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i1;
  var $i5: i32;
  var $i35: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !14780, metadata !8090), !dbg !14781, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 576);
  $p2 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 20} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32(0, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10234, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10205, 32} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 896);
  $p7 := $add.ref($add.ref($p0, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10205, 40} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10205, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10205, 9} true;
  assume {:verifier.code 0} true;
  call $p10 := kcalloc($i9, 72, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10206, 23} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10206, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10206, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 576);
  $p14 := $add.ref($add.ref($p0, 576), 88);
  $p15 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i12, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10206, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10208, 23} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10208, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 576);
  $p18 := $add.ref($add.ref($p0, 576), 88);
  $p19 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i16, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10208, 23} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10208, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10208, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10208, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $i5;
  assume {:branchcond $i22} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i22 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10215, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32($i23, 1);
  // WARNING: %25 = sub nsw i32 %.1.lcssa2, 1, !dbg !8118, !verifier.code !8092
  call {:cexpr "j"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $sge.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb8:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $i24;
  goto $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10217, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10212, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10212, 33} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 576);
  $p29 := $add.ref($add.ref($p0, 576), 88);
  $p30 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i27, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10212, 27} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10212, 11} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10212, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10215, 11} true;
  assume {:verifier.code 0} true;
  $i33 := $sub.i32($i26, 1);
  // WARNING: %34 = sub nsw i32 %37, 1, !dbg !8118, !verifier.code !8092
  call {:cexpr "j"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 11} true;
  assume {:verifier.code 0} true;
  $i34 := $sge.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $i33;
  assume {:branchcond $i34} true;
  goto $bb13, $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 9} true;
  assume {:verifier.code 0} true;
  assume ($i34 == 1);
  goto $bb11;
$bb14:
  assume !(($i34 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10216, 9} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10222, 5} true;
  assume {:verifier.code 0} true;
  $i35 := $sub.i32(0, 12);
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10241, 1} true;
  assume {:verifier.code 0} true;
  $r := $i35;
  $exn := false;
  return;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10227, 3} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10227, 9} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 576);
  $p38 := $add.ref($add.ref($p0, 576), 4);
  $p39 := $add.ref($add.ref($add.ref($p0, 576), 4), $mul.ref($i36, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10227, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, 0);
  // WARNING: store i32 0, i32* %45, align 4, !dbg !8135, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10229, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10229, 9} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 576);
  $p42 := $add.ref($add.ref($p0, 576), 20);
  $p43 := $add.ref($add.ref($add.ref($p0, 576), 20), $mul.ref($i40, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10229, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10230, 3} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10230, 9} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 576);
  $p46 := $add.ref($add.ref($p0, 576), 36);
  $p47 := $add.ref($add.ref($add.ref($p0, 576), 36), $mul.ref($i44, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10230, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10231, 9} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i32($i5, 1);
  // WARNING: %54 = add nsw i32 %.13, 1, !dbg !8144, !verifier.code !8092
  call {:cexpr "j"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 20} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 9} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i48, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i48;
  assume {:branchcond $i50} true;
  goto $bb18, $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 7} true;
  assume {:verifier.code 0} true;
  assume ($i50 == 1);
  goto $bb4;
$bb19:
  assume !(($i50 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10233, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10239, 3} true;
  assume {:verifier.code 0} true;
  $i35 := 0;
  goto $bb16;
}
const kcalloc: ref;
axiom (kcalloc == $sub.ref(0, 371391));
procedure  kcalloc($i0: i64, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i32;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !14841, metadata !8090), !dbg !14842, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !14843, metadata !8090), !dbg !14844, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6830, 38} true;
  assume {:verifier.code 0} true;
  $i3 := $or.i32($i2, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6830, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := kmalloc_array($i0, $i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6832, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const kmalloc_array: ref;
axiom (kmalloc_array == $sub.ref(0, 372423));
procedure  kmalloc_array($i0: i64, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i1;
  var $i4: i64;
  var $i5: i1;
  var $i7: i64;
  var $p8: ref;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !14855, metadata !8090), !dbg !14856, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !14857, metadata !8090), !dbg !14858, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6813, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6813, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6813, 47} true;
  assume {:verifier.code 0} true;
  $i4 := $udiv.i64($sub.i64(0, 1), $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6813, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $ugt.i64($i0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6813, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6813, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6814, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6813, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6823, 1} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6819, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6819, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := __kmalloc($i7, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6821, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $p8;
  goto $bb6;
}
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 373455));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref);
const velocity_rx_refill: ref;
axiom (velocity_rx_refill == $sub.ref(0, 374487));
procedure  velocity_rx_refill($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i16;
  var $i12: i32;
  var $i13: i1;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i16;
  var $i26: i32;
  var $i27: i1;
  var $i28: i32;
  var $i29: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $i41: i32;
  var $i42: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i1;
  var $i51: i32;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $i57: i32;
  var $i58: i32;
  var $i30: i32;
  var $i31: i32;
  var $i59: i1;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $p66: ref;
  var $p67: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10067, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 728);
  $p2 := $add.ref($add.ref($p0, 728), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10067, 20} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  // WARNING: %4 = load i32, i32* %3, align 4, !dbg !8095, !verifier.code !8092
  call {:cexpr "dirty"} boogie_si_record_i32($i3);
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !14884, metadata !8090), !dbg !14885, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10070, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 728);
  $p5 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10070, 17} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10070, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10070, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p6, $mul.ref($i7, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 26} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p6, $mul.ref($i7, 16));
  $p10 := $add.ref($add.ref($p6, $mul.ref($i7, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 38} true;
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  $i14, $i15 := $i3, 0;
  assume {:branchcond $i13} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10072, 5} true;
  assume {:verifier.code 0} true;
  $i30, $i31 := $i14, $i15;
  goto $bb8;
$bb3:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  $i16, $i17 := 0, $i3;
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb5:
  assume ($i56 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10070, 17} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10070, 24} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10070, 22} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p20, $mul.ref($i21, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 26} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p20, $mul.ref($i21, 16));
  $p24 := $add.ref($add.ref($p20, $mul.ref($i21, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 33} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i16($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i16.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 38} true;
  assume {:verifier.code 0} true;
  $i27 := $slt.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  $i28, $i29, $i16, $i17 := $i18, $i19, $i19, $i18;
  assume {:branchcond $i27} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i27 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  $i14, $i15 := $i28, $i29;
  goto $bb2;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10071, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i27 == 1));
  goto $bb4;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10096, 12} true;
  assume {:verifier.code 0} true;
  $i59 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10096, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb21, $bb22;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 728);
  $p33 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 33} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 40} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 38} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p34, $mul.ref($i35, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 64} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p34, $mul.ref($i35, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 64} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 68} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10076, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10078, 11} true;
  assume {:verifier.code 0} true;
  call $i41 := velocity_alloc_rx_buf($p0, $i17);
  // WARNING: %37 = call i32 @velocity_alloc_rx_buf(%struct.velocity_info* %0, i32 %.018), !dbg !8123, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10080, 13} true;
  assume {:verifier.code 0} true;
  $i42 := $slt.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10080, 9} true;
  assume {:verifier.code 0} true;
  $i43, $i44 := $i17, $i16;
  assume {:branchcond $i42} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb12:
  assume ($i42 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10081, 7} true;
  assume {:verifier.code 0} true;
  $i30, $i31 := $i43, $i44;
  goto $bb8;
$bb13:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10085, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10088, 15} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i32($i16, 1);
  // WARNING: %44 = add nsw i32 %.09, 1, !dbg !8134, !verifier.code !8092
  call {:cexpr "done"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 25} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 896);
  $p47 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 33} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 39} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i48, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i17, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 52} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i17, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 11} true;
  assume {:verifier.code 0} true;
  $i52 := $i51;
  goto $bb18;
$bb17:
  assume !(($i50 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 11} true;
  assume {:verifier.code 0} true;
  $i52 := 0;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10089, 11} true;
  assume {:verifier.code 0} true;
  // WARNING: %54 = phi i32 [ %51, %50 ], [ 0, %52 ], !dbg !8145, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10090, 22} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 728);
  $p54 := $add.ref($add.ref($p0, 728), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10090, 25} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10090, 13} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i32($i52, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10090, 7} true;
  assume {:verifier.code 0} true;
  $i18, $i19, $i57, $i58 := $i52, $i45, $i45, $i52;
  assume {:branchcond $i56} true;
  goto $bb5, $bb19;
$bb19:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10090, 25} true;
  assume {:verifier.code 0} true;
  $i30, $i31 := $i58, $i57;
  goto $bb8;
$bb21:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10097, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 728);
  $p61 := $add.ref($add.ref($p0, 728), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10097, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10098, 29} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 728);
  $p63 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10098, 32} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10098, 39} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i32($i64, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10098, 11} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 728);
  $p67 := $add.ref($add.ref($p0, 728), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10098, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p67, $i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10099, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10102, 3} true;
  assume {:verifier.code 0} true;
  $r := $i31;
  $exn := false;
  return;
}
const velocity_alloc_rx_buf: ref;
axiom (velocity_alloc_rx_buf == $sub.ref(0, 375519));
procedure  velocity_alloc_rx_buf($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i16;
  var $i53: i32;
  var $i54: i32;
  var $i55: i16;
  var $p56: ref;
  var $p57: ref;
  var $i58: i64;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $i24: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !14956, metadata !8090), !dbg !14957, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10038, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 728);
  $p3 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10038, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10038, 24} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10038, 22} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, $mul.ref($i5, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10039, 19} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 728);
  $p8 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10039, 22} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10039, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10039, 27} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 41} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 41} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 71} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 728);
  $p15 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 74} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 81} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i16, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 18} true;
  assume {:verifier.code 0} true;
  call $p18 := netdev_alloc_skb($p13, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 12} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10040, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p19, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10042, 32} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10042, 32} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10042, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10042, 36} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10042, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10043, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10058, 1} true;
  assume {:verifier.code 0} true;
  $r := $i24;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 24} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 24} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 76} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 76} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 82} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 82} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 59} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i64.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 88} true;
  assume {:verifier.code 0} true;
  $i33 := $and.i32($i32, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 40} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(64, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10048, 3} true;
  assume {:verifier.code 0} true;
  call skb_reserve($p26, $i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 49} true;
  assume {:verifier.code 0} true;
  $p35 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 49} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 72} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p9, $mul.ref($i10, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 72} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 78} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 78} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10050, 58} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 728);
  $p42 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10050, 61} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10050, 43} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 22} true;
  assume {:verifier.code 0} true;
  call $i45 := dma_map_single_attrs($p36, $p40, $i44, 2, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 12} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p9, $mul.ref($i10, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10049, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p46, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10051, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p4, $mul.ref($i5, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10051, 3} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10051, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 63} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 728);
  $p50 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 66} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 40} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i16($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 24} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i16.i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 74} true;
  assume {:verifier.code 0} true;
  $i54 := $or.i32($i53, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 14} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i16($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 7} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p4, $mul.ref($i5, 16)), 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10052, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p56, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10053, 40} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p9, $mul.ref($i10, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10053, 40} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i64($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10053, 16} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i64.i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10053, 7} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p4, $mul.ref($i5, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10053, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10054, 7} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p4, $mul.ref($i5, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10054, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10056, 3} true;
  assume {:verifier.code 0} true;
  $i24 := 0;
  goto $bb3;
}
const netdev_alloc_skb: ref;
axiom (netdev_alloc_skb == $sub.ref(0, 376551));
procedure  netdev_alloc_skb($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !15028, metadata !8090), !dbg !15029, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7253, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := __netdev_alloc_skb($p0, $i1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7255, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const skb_reserve: ref;
axiom (skb_reserve == $sub.ref(0, 377583));
procedure  skb_reserve($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !15041, metadata !8090), !dbg !15042, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7233, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7233, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7233, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7233, 25} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, $mul.ref($i4, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7233, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7233, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7234, 20} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7234, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7234, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i8, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7234, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7234, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7235, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_map_single_attrs: ref;
axiom (dma_map_single_attrs == $sub.ref(0, 378615));
procedure  dma_map_single_attrs($p0: ref, $p1: ref, $i2: i64, $i3: i32, $p4: ref)
  returns ($r: i64)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !15061, metadata !8090), !dbg !15062, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !15063, metadata !8090), !dbg !15064, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6893, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6895, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6895, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p1, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6896, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := valid_dma_direction($i3);
  // WARNING: %8 = call i32 @valid_dma_direction(i32 %3), !dbg !8110, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6897, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6897, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6897, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6897, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  // WARNING: %12 = call i64 @ldv__builtin_expect(i64 %11, i64 0), !dbg !8115, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6899, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6899, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  call devirtbounce.4(0, .str.7, 19, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6903, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6909, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6909, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := __phys_addr($i13);
  // WARNING: %18 = call i64 @__phys_addr(i64 %17), !dbg !8126, !verifier.code !8092
  call {:cexpr "tmp___2"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6910, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6910, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6910, 77} true;
  assume {:verifier.code 0} true;
  $i17 := $lshr.i64($i14, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6910, 66} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i17, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6911, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6911, 49} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i64($i19, 4095);
  call $i21 := devirtbounce.14($p16, $p0, $p18, $i20, $i2, $i3, $p4);
  // WARNING: %25 = call i64 @devirtbounce.14(i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.__anonstruct_sigset_t_178*)* %20, %struct.device* %0, %struct.page* %22, i64 %24, i64 %2, i32 %3, %struct.__anonstruct_sigset_t_178* %4)
  call {:cexpr "addr"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6912, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6912, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := __phys_addr($i22);
  // WARNING: %27 = call i64 @__phys_addr(i64 %26), !dbg !8137, !verifier.code !8092
  call {:cexpr "tmp___3"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6913, 70} true;
  assume {:verifier.code 0} true;
  $i24 := $lshr.i64($i23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6913, 59} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i24, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6913, 78} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6913, 98} true;
  assume {:verifier.code 0} true;
  $i27 := $and.i64($i26, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6913, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p25, $i27, $i2, $i3, $i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6916, 3} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
}
const kmemcheck_mark_initialized: ref;
axiom (kmemcheck_mark_initialized == $sub.ref(0, 379647));
procedure  kmemcheck_mark_initialized($p0: ref, $i1: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !15117, metadata !8090), !dbg !15118, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6803, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __phys_addr: ref;
axiom (__phys_addr == $sub.ref(0, 380679));
procedure  __phys_addr($i0: i64)
  returns ($r: i64);
const debug_dma_map_page: ref;
axiom (debug_dma_map_page == $sub.ref(0, 381711));
procedure  debug_dma_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32, $i5: i64, $i6: i1);
const __netdev_alloc_skb: ref;
axiom (__netdev_alloc_skb == $sub.ref(0, 382743));
procedure  __netdev_alloc_skb($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref);
const dma_alloc_attrs: ref;
axiom (dma_alloc_attrs == $sub.ref(0, 383775));
procedure  dma_alloc_attrs($p0: ref, $i1: i64, $p2: ref, $i3: i32, $p4: ref)
  returns ($r: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i64;
  var $i8: i1;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p12: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !15124, metadata !8090), !dbg !15125, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !15128, metadata !8090), !dbg !15129, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7124, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7126, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i3, $sub.i32(0, 8));
  // WARNING: %7 = and i32 %3, -8, !dbg !8106, !verifier.code !8090
  call {:cexpr "gfp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7128, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7128, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7128, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7130, 3} true;
  assume {:verifier.code 0} true;
  $p9 := x86_dma_fallback_dev;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $p9 := $p0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7134, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := is_device_dma_capable($p9);
  // WARNING: %13 = call i32 @is_device_dma_capable(%struct.device* %.01), !dbg !8113, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7136, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7136, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7137, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7155, 1} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7141, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7141, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7141, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7141, 34} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7141, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7144, 5} true;
  assume {:verifier.code 0} true;
  $p12 := $0.ref;
  goto $bb6;
$bb9:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7149, 13} true;
  assume {:verifier.code 0} true;
  call $i17 := dma_alloc_coherent_gfp_flags($p9, $i6);
  // WARNING: %25 = call i32 @dma_alloc_coherent_gfp_flags(%struct.device* %.01, i32 %7), !dbg !8129, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7150, 20} true;
  assume {:verifier.code 0} true;
  $p18 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7150, 20} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  call $p20 := devirtbounce.15($p19, $p9, $i1, $p2, $i17, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7151, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.17, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7151, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_alloc_coherent($p9, $i1, $i21, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7153, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $p20;
  goto $bb6;
}
const is_device_dma_capable: ref;
axiom (is_device_dma_capable == $sub.ref(0, 384807));
procedure  is_device_dma_capable($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $i5: i1;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 1136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 41} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 74} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 84} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 1136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 84} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 77} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 94} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:verifier.code 0} true;
  $i5 := $i9;
  goto $bb3;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 74} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 74} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6849, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const dma_alloc_coherent_gfp_flags: ref;
axiom (dma_alloc_coherent_gfp_flags == $sub.ref(0, 385839));
procedure  dma_alloc_coherent_gfp_flags($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !15193, metadata !8090), !dbg !15194, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7097, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := dma_alloc_coherent_mask($p0, $i1);
  // WARNING: %3 = call i64 @dma_alloc_coherent_mask(%struct.device* %0, i32 %1), !dbg !8095, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i64($i2);
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !15200, metadata !8090), !dbg !15201, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7100, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $ule.i64($i2, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7100, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7101, 15} true;
  assume {:verifier.code 0} true;
  $i4 := $or.i32($i1, 1);
  // WARNING: %6 = or i32 %1, 1, !dbg !8105, !verifier.code !8092
  call {:cexpr "gfp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7102, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i5 := $i1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7105, 37} true;
  assume {:verifier.code 0} true;
  $i6 := $ule.i64($i2, 4294967295);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7105, 54} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7105, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $and.i32($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7105, 68} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7105, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7105, 54} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  $i10 := $i5;
  goto $bb9;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7106, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i5, 4);
  // WARNING: %14 = or i32 %.0, 4, !dbg !8115, !verifier.code !8092
  call {:cexpr "gfp"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7107, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7105, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb6;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7110, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const debug_dma_alloc_coherent: ref;
axiom (debug_dma_alloc_coherent == $sub.ref(0, 386871));
procedure  debug_dma_alloc_coherent($p0: ref, $i1: i64, $i2: i64, $p3: ref);
const dma_alloc_coherent_mask: ref;
axiom (dma_alloc_coherent_mask == $sub.ref(0, 387903));
procedure  dma_alloc_coherent_mask($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
  var $i8: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !15224, metadata !8090), !dbg !15225, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !15226, metadata !8090), !dbg !15227, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7081, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 1144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7081, 35} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i64($M.0, $p2);
  // WARNING: %4 = load i64, i64* %3, align 8, !dbg !8097, !verifier.code !8092
  call {:cexpr "dma_mask"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7082, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7083, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7083, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7083, 16} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == 16777215)) && (($i6 != 1) ==> ($i7 == 4294967295)));
  // WARNING: %9 = select i1 %8, i64 16777215, i64 4294967295, !dbg !8104, !verifier.code !8092
  call {:cexpr "dma_mask"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7084, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i8 := $i3;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7087, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const ldv_kzalloc: ref;
axiom (ldv_kzalloc == $sub.ref(0, 388935));
procedure  ldv_kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !15241, metadata !8090), !dbg !15242, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16385, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16386, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_zalloc($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16387, 3} true;
  assume {:verifier.code 0} true;
  call ldv_after_alloc($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16389, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ldv_check_alloc_flags: ref;
axiom (ldv_check_alloc_flags == $sub.ref(0, 389967));
procedure  ldv_check_alloc_flags($i0: i32);
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 390999));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16502, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16504, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_after_alloc: ref;
axiom (ldv_after_alloc == $sub.ref(0, 392031));
procedure  ldv_after_alloc($p0: ref);
const ldv_calloc: ref;
axiom (ldv_calloc == $sub.ref(0, 393063));
procedure  ldv_calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !15265, metadata !8090), !dbg !15266, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16480, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_undef_int();
  // WARNING: %3 = call i32 @ldv_undef_int(), !dbg !8095, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16482, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16482, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16484, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc($i0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16486, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16486, 36} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16486, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16486, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16487, 15} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv_is_err($p4);
  // WARNING: %10 = call i64 @ldv_is_err(i8* %6), !dbg !8113, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16488, 24} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16488, 24} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16488, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16490, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $p4;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16492, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $0.ref;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16495, 1} true;
  assume {:verifier.code 0} true;
  $r := $p11;
  $exn := false;
  return;
}
const velocity_ioctl: ref;
axiom (velocity_ioctl == $sub.ref(0, 394095));
procedure  velocity_ioctl($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i1;
  var $i6: i8;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i16: i8;
  var $i17: i1;
  var $i18: i32;
  var $i19: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ifreq* %1, i64 0, metadata !15299, metadata !8090), !dbg !15300, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11250, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11251, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11252, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := netif_running($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11252, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i8($i5);
  // WARNING: %7 = zext i1 %6 to i8, !dbg !8104, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11254, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i8.i1($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11254, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11256, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11259, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11259, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11261, 5} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11263, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11267, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i2, 35143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11267, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11268, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11282, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11272, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i2, 35144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11272, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11273, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11282, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11277, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i2, 35145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11277, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11278, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11287, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := velocity_mii_ioctl($p0, $p1, $i2);
  // WARNING: %31 = call i32 @velocity_mii_ioctl(%struct.net_device* %0, %struct.ifreq* %1, i32 %2), !dbg !8142, !verifier.code !8090
  call {:cexpr "ret"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11289, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb20;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11282, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11291, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11296, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := netif_running($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11296, 11} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i8($i15);
  // WARNING: %36 = zext i1 %35 to i8, !dbg !8151, !verifier.code !8090
  call {:cexpr "tmp___2"} boogie_si_record_i8($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11298, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i8.i1($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11298, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb22, $bb23;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11293, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 95);
  goto $bb20;
$bb22:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11300, 3} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb24;
$bb23:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  $i18 := 1;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11303, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11303, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11305, 5} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p4, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11307, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11310, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const velocity_mii_ioctl: ref;
axiom (velocity_mii_ioctl == $sub.ref(0, 395127));
procedure  velocity_mii_ioctl($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $p11: ref;
  var $i12: i8;
  var $i13: i16;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i16;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i8;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i16;
  var $i35: i8;
  var $i36: i32;
  var $i37: i32;
  var $i38: i8;
  var $p39: ref;
  var $i40: i16;
  var $i41: i32;
  var $i42: i16;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $i29: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.ifreq* %1, i64 0, metadata !15380, metadata !8090), !dbg !15381, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11177, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11178, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11179, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11179, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11180, 13} true;
  assume {:verifier.code 0} true;
  call $p7 := if_mii($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11184, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i2, 35143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11184, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11185, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11202, 53} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p6, 113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11202, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := readb($p11);
  // WARNING: %23 = call zeroext i8 @readb(i8* %22), !dbg !8130, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11203, 37} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i16($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11203, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i16.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11203, 54} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11203, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11203, 12} true;
  assume {:verifier.code 0} true;
  $p17 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11203, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11205, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11189, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i2, 35144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11189, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11190, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 37} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 37} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 68} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p7, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 68} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i16($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 54} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i16.i8($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 47} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 77} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i32($i23, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 47} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11209, 42} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p7, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11208, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := velocity_mii_read($p19, $i25, $p26);
  // WARNING: %39 = call i32 @velocity_mii_read(%struct.mac_regs* %31, i8 zeroext %37, i16* %38), !dbg !8146, !verifier.code !8090
  call {:cexpr "tmp___2"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11211, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $slt.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11211, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb15, $bb16;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11194, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i2, 35145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11194, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11219, 34} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11219, 3} true;
  assume {:verifier.code 0} true;
  call ldv___ldv_spin_lock_91($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 34} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 34} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 65} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p7, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 65} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i16($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 51} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i16.i8($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 44} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 74} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i32($i36, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 44} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i32.i8($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 95} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p7, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 95} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i16($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 80} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i16.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 80} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i32.i16($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11220, 9} true;
  assume {:verifier.code 0} true;
  call $i43 := velocity_mii_write($p32, $i38, $i42);
  // WARNING: %58 = call i32 @velocity_mii_write(%struct.mac_regs* %47, i8 zeroext %53, i16 zeroext %57), !dbg !8165, !verifier.code !8090
  call {:cexpr "err"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11221, 41} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11221, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_84($p44, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11222, 31} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11222, 31} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11222, 3} true;
  assume {:verifier.code 0} true;
  call $i47 := check_connection_type($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11224, 11} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11224, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb19, $bb20;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11199, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11231, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.i32(0, 95);
  goto $bb17;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11235, 3} true;
  assume {:verifier.code 0} true;
  $i29 := 0;
  goto $bb17;
$bb15:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11212, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.i32(0, 110);
  goto $bb17;
$bb16:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11237, 1} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11216, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb19:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11225, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $i43;
  goto $bb17;
$bb20:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11229, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11233, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
}
const if_mii: ref;
axiom (if_mii == $sub.ref(0, 396159));
procedure  if_mii($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7846, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7846, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7846, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ldv___ldv_spin_lock_91: ref;
axiom (ldv___ldv_spin_lock_91 == $sub.ref(0, 397191));
procedure  ldv___ldv_spin_lock_91($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15969, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15970, 3} true;
  assume {:verifier.code 0} true;
  call __ldv_spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15972, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_get_stats: ref;
axiom (velocity_get_stats == $sub.ref(0, 398223));
procedure  velocity_get_stats($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $i4: i8;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p9: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11322, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11323, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11324, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := netif_running($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11324, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i8($i3);
  // WARNING: %5 = zext i1 %4 to i8, !dbg !8100, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11326, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i8.i1($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11326, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11328, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11331, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11331, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11332, 20} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11332, 5} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  goto $bb6;
$bb5:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11348, 1} true;
  assume {:verifier.code 0} true;
  $r := $p9;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11337, 32} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11337, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_irq_79($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11338, 3} true;
  assume {:verifier.code 0} true;
  call velocity_update_hw_mibs($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11339, 34} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11339, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irq_80($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11340, 49} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 768);
  $p13 := $add.ref($p2, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11340, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11340, 27} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11340, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 264);
  $p17 := $add.ref($p0, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11340, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p17, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11341, 48} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 768);
  $p19 := $add.ref($add.ref($p2, 768), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11341, 42} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11341, 26} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i32.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11341, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 264);
  $p23 := $add.ref($add.ref($p0, 264), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11341, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p23, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11342, 55} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p2, 768);
  $p25 := $add.ref($add.ref($p2, 768), 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11342, 49} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11342, 33} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11342, 8} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 264);
  $p29 := $add.ref($add.ref($p0, 264), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11342, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p29, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11343, 49} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 768);
  $p31 := $add.ref($add.ref($p2, 768), 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11343, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11343, 27} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11343, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 264);
  $p35 := $add.ref($add.ref($p0, 264), 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11343, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p35, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11344, 52} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p2, 768);
  $p37 := $add.ref($add.ref($p2, 768), 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11344, 46} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11344, 30} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11344, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 264);
  $p41 := $add.ref($add.ref($p0, 264), 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11344, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p41, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11346, 18} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11346, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $p42;
  goto $bb6;
}
const velocity_poll_controller: ref;
axiom (velocity_poll_controller == $sub.ref(0, 399255));
procedure  velocity_poll_controller($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11156, 35} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11156, 35} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11156, 3} true;
  assume {:verifier.code 0} true;
  call disable_irq($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11157, 22} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11157, 22} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11157, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11157, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := velocity_intr($i4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11158, 34} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11158, 34} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11158, 3} true;
  assume {:verifier.code 0} true;
  call enable_irq($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11160, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const disable_irq: ref;
axiom (disable_irq == $sub.ref(0, 400287));
procedure  disable_irq($i0: i32);
const velocity_intr: ref;
axiom (velocity_intr == $sub.ref(0, 401319));
procedure  velocity_intr($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i1;
  var $i20: i8;
  var $i21: i1;
  var $i22: i64;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i1;
  var $p33: ref;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10949, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10950, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10951, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10952, 28} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10952, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_85($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10953, 57} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10953, 57} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10953, 68} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10953, 22} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10953, 16} true;
  assume {:verifier.code 0} true;
  call $i10 := readl($p9);
  // WARNING: %11 = call i32 @readl(i8* %10), !dbg !8109, !verifier.code !8090
  call {:cexpr "isr_status"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10955, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10955, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10957, 32} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10957, 5} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_86($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10959, 5} true;
  assume {:verifier.code 0} true;
  $i13 := 0;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10988, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10964, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10964, 51} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10964, 62} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10964, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10964, 3} true;
  assume {:verifier.code 0} true;
  call writel($i10, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10965, 40} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10965, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := napi_schedule_prep($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10965, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i8($i19);
  // WARNING: %23 = zext i1 %22 to i8, !dbg !8127, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10966, 40} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i8.i1($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10966, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i1.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10966, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := ldv__builtin_expect($i22, 1);
  // WARNING: %26 = call i64 @ldv__builtin_expect(i64 %25, i64 1), !dbg !8132, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10968, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10968, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10970, 52} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10970, 52} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10970, 63} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10970, 23} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10970, 5} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10971, 29} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p4, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10971, 5} true;
  assume {:verifier.code 0} true;
  call __napi_schedule($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10973, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10976, 8} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10976, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i64($i30, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10976, 59} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i64($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10976, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10978, 5} true;
  assume {:verifier.code 0} true;
  call velocity_error($p4, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10980, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10984, 30} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10984, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_86($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10986, 3} true;
  assume {:verifier.code 0} true;
  $i13 := 1;
  goto $bb3;
}
const enable_irq: ref;
axiom (enable_irq == $sub.ref(0, 402351));
procedure  enable_irq($i0: i32);
const ldv_spin_lock_85: ref;
axiom (ldv_spin_lock_85 == $sub.ref(0, 403383));
procedure  ldv_spin_lock_85($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15914, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15915, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15917, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_86: ref;
axiom (ldv_spin_unlock_86 == $sub.ref(0, 404415));
procedure  ldv_spin_unlock_86($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15926, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15927, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15929, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const napi_schedule_prep: ref;
axiom (napi_schedule_prep == $sub.ref(0, 405447));
procedure  napi_schedule_prep($p0: ref)
  returns ($r: i1)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7408, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := napi_disable_pending($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7408, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !8096, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7410, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7410, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7412, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7415, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7415, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7417, 70} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7417, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := test_and_set_bit(0, $p6);
  // WARNING: %11 = call i32 @test_and_set_bit(i64 0, i64* %10), !dbg !8112, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7419, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7419, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb9;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7421, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 1;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7424, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7427, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7427, 3} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
}
const __napi_schedule: ref;
axiom (__napi_schedule == $sub.ref(0, 406479));
procedure  __napi_schedule($p0: ref);
const velocity_error: ref;
axiom (velocity_error == $sub.ref(0, 407511));
procedure  velocity_error($p0: ref, $i1: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i16;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i32;
  var $i16: i8;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $i40: i64;
  var $i41: i1;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i8;
  var $p47: ref;
  var $p48: ref;
  var $i49: i8;
  var $i50: i32;
  var $i51: i32;
  var $i52: i8;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i64;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $i60: i8;
  var $i61: i32;
  var $i62: i32;
  var $i63: i8;
  var $p64: ref;
  var $p65: ref;
  var $i66: i8;
  var $i67: i32;
  var $i68: i32;
  var $i69: i8;
  var $p70: ref;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $i77: i32;
  var $i78: i32;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i32;
  var $i84: i32;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $i90: i32;
  var $i91: i1;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i64;
  var $i97: i64;
  var $i98: i1;
  var $i99: i64;
  var $i100: i64;
  var $i101: i1;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !15690, metadata !8090), !dbg !15691, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10463, 8} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10463, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i64($i2, 33554432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10463, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10463, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10465, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10465, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10466, 51} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10466, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10466, 11} true;
  assume {:verifier.code 0} true;
  call $i9 := readw($p8);
  // WARNING: %11 = call zeroext i16 @readw(i8* %10), !dbg !8108, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i16($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10467, 50} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i16.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10467, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := printk.ref.i32(.str.35, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10468, 55} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p6, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10468, 15} true;
  assume {:verifier.code 0} true;
  call $i13 := readb($p12);
  // WARNING: %15 = call zeroext i8 @readb(i8* %14), !dbg !8114, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10469, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10469, 42} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i14, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10469, 12} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i8($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10469, 77} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p6, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10469, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i16, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10470, 43} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p6, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10470, 15} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10470, 5} true;
  assume {:verifier.code 0} true;
  call writew(1, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10471, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10471, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10471, 5} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10473, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10476, 8} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10476, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i64($i22, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10476, 42} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10476, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10477, 22} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10477, 22} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10478, 30} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 896);
  $p28 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10478, 38} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10478, 46} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10478, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb6:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10480, 26} true;
  assume {:verifier.code 0} true;
  call $i31 := check_connection_type($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10480, 13} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10480, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10482, 32} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 3824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10482, 32} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10482, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10482, 39} true;
  assume {:verifier.code 0} true;
  $i36 := $ule.i32($i35, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10482, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb8:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10483, 36} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10483, 36} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10483, 14} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10483, 47} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i64($i39, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10483, 55} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10483, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10485, 65} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p26, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10485, 21} true;
  assume {:verifier.code 0} true;
  call $i43 := readb($p42);
  // WARNING: %51 = call zeroext i8 @readb(i8* %50), !dbg !8162, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i8($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10486, 25} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10486, 48} true;
  assume {:verifier.code 0} true;
  $i45 := $or.i32($i44, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10486, 18} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i8($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10486, 89} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p26, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10486, 11} true;
  assume {:verifier.code 0} true;
  call writeb($i46, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10488, 9} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10490, 65} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p26, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10490, 21} true;
  assume {:verifier.code 0} true;
  call $i49 := readb($p48);
  // WARNING: %58 = call zeroext i8 @readb(i8* %57), !dbg !8174, !verifier.code !8092
  call {:cexpr "tmp___2"} boogie_si_record_i8($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10491, 18} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10491, 32} true;
  assume {:verifier.code 0} true;
  $i51 := $and.i32($i50, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10491, 18} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10491, 71} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p26, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10491, 11} true;
  assume {:verifier.code 0} true;
  call writeb($i52, $p53);
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10494, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10497, 34} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10497, 34} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10497, 12} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i32.i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10497, 45} true;
  assume {:verifier.code 0} true;
  $i57 := $and.i64($i56, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10497, 53} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i64($i57, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10497, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10499, 63} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p26, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10499, 19} true;
  assume {:verifier.code 0} true;
  call $i60 := readb($p59);
  // WARNING: %73 = call zeroext i8 @readb(i8* %72), !dbg !8191, !verifier.code !8092
  call {:cexpr "tmp___3"} boogie_si_record_i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10500, 16} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i8.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10500, 30} true;
  assume {:verifier.code 0} true;
  $i62 := $and.i32($i61, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10500, 16} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10500, 69} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p26, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10500, 9} true;
  assume {:verifier.code 0} true;
  call writeb($i63, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10502, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10504, 63} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p26, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10504, 19} true;
  assume {:verifier.code 0} true;
  call $i66 := readb($p65);
  // WARNING: %80 = call zeroext i8 @readb(i8* %79), !dbg !8202, !verifier.code !8092
  call {:cexpr "tmp___4"} boogie_si_record_i8($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10505, 23} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i8.i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10505, 46} true;
  assume {:verifier.code 0} true;
  $i68 := $or.i32($i67, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10505, 16} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10505, 87} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p26, 157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10505, 9} true;
  assume {:verifier.code 0} true;
  call writeb($i69, $p70);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10509, 7} true;
  assume {:verifier.code 0} true;
  call setup_queue_timers($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10511, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10515, 59} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p26, 110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10515, 15} true;
  assume {:verifier.code 0} true;
  call $i72 := readb($p71);
  // WARNING: %89 = call zeroext i8 @readb(i8* %88), !dbg !8215, !verifier.code !8092
  call {:cexpr "tmp___5"} boogie_si_record_i8($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10516, 14} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10516, 28} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73, 64);
  // WARNING: %91 = and i32 %90, 64, !dbg !8219, !verifier.code !8092
  call {:cexpr "linked"} boogie_si_record_i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10518, 16} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10518, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10520, 32} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10520, 32} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10520, 43} true;
  assume {:verifier.code 0} true;
  $i78 := $and.i32($i77, $sub.i32(0, 2));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10520, 13} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10520, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10521, 30} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10521, 30} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10521, 7} true;
  assume {:verifier.code 0} true;
  call netif_carrier_on($p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10523, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i75 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10525, 32} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10525, 32} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10525, 43} true;
  assume {:verifier.code 0} true;
  $i84 := $or.i32($i83, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10525, 13} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10525, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p85, $i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10526, 31} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10526, 31} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10526, 7} true;
  assume {:verifier.code 0} true;
  call netif_carrier_off($p87);
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10530, 5} true;
  assume {:verifier.code 0} true;
  call velocity_print_link_status($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10531, 5} true;
  assume {:verifier.code 0} true;
  call enable_flow_control_ability($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10532, 5} true;
  assume {:verifier.code 0} true;
  call enable_mii_autopoll($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10534, 21} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10534, 21} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10534, 32} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i32($i89, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10534, 32} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10534, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10536, 30} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10536, 30} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10536, 7} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10538, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i91 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10540, 30} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10540, 30} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10540, 7} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p95);
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10543, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10546, 8} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10546, 31} true;
  assume {:verifier.code 0} true;
  $i97 := $and.i64($i96, 2097152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10546, 44} true;
  assume {:verifier.code 0} true;
  $i98 := $ne.i64($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10546, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10548, 5} true;
  assume {:verifier.code 0} true;
  call velocity_update_hw_mibs($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10550, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10553, 8} true;
  assume {:verifier.code 0} true;
  $i99 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10553, 31} true;
  assume {:verifier.code 0} true;
  $i100 := $and.i64($i99, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10553, 41} true;
  assume {:verifier.code 0} true;
  $i101 := $ne.i64($i100, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10553, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10555, 44} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10555, 44} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10555, 55} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10555, 5} true;
  assume {:verifier.code 0} true;
  call writeb(4, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10557, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10560, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const setup_queue_timers: ref;
axiom (setup_queue_timers == $sub.ref(0, 408543));
procedure  setup_queue_timers($p0: ref)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i8;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i8;
  var $i18: i8;
  var $i19: i8;
  var $i20: i32;
  var $i21: i8;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i8;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9665, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 3824);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9665, 28} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9665, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9665, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $ugt.i32($i3, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9665, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !15889, metadata !8090), !dbg !15890, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9668, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9668, 32} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9668, 10} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9668, 43} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i64($i7, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9668, 51} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9668, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9669, 34} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 896);
  $p11 := $add.ref($add.ref($p0, 896), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9669, 42} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9669, 23} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  // WARNING: %16 = trunc i32 %15 to i8, !dbg !8113, !verifier.code !8092
  call {:cexpr "txqueue_timer"} boogie_si_record_i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9670, 34} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 896);
  $p15 := $add.ref($add.ref($p0, 896), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9670, 42} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9670, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i8($i16);
  // WARNING: %20 = trunc i32 %19 to i8, !dbg !8116, !verifier.code !8092
  call {:cexpr "rxqueue_timer"} boogie_si_record_i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9671, 5} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i13, $i17;
  goto $bb5;
$bb4:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i18, $i19 := 0, 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9675, 12} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9675, 12} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9675, 62} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9675, 62} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9675, 73} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9675, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i21, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9676, 12} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9676, 12} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i8($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9676, 62} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9676, 62} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9676, 73} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9676, 5} true;
  assume {:verifier.code 0} true;
  call writeb($i26, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9678, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 9681, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_carrier_on: ref;
axiom (netif_carrier_on == $sub.ref(0, 409575));
procedure  netif_carrier_on($p0: ref);
const napi_disable_pending: ref;
axiom (napi_disable_pending == $sub.ref(0, 410607));
procedure  napi_disable_pending($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7394, 71} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7394, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(1, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 1, i64* %2), !dbg !8096, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7396, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7396, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const spin_unlock: ref;
axiom (spin_unlock == $sub.ref(0, 411639));
procedure  spin_unlock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6468, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6468, 47} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6468, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6470, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock: ref;
axiom (_raw_spin_unlock == $sub.ref(0, 412671));
procedure  _raw_spin_unlock($p0: ref);
const spin_lock: ref;
axiom (spin_lock == $sub.ref(0, 413703));
procedure  spin_lock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6441, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6441, 45} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6441, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6443, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock: ref;
axiom (_raw_spin_lock == $sub.ref(0, 414735));
procedure  _raw_spin_lock($p0: ref);
const eth_mac_addr: ref;
axiom (eth_mac_addr == $sub.ref(0, 415767));
procedure  eth_mac_addr($p0: ref, $p1: ref)
  returns ($r: i32);
const velocity_xmit: ref;
axiom (velocity_xmit == $sub.ref(0, 416799));
procedure  velocity_xmit($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i25: i32;
  var $i24: i32;
  var $p26: ref;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i16;
  var $i52: i32;
  var $i53: i32;
  var $i54: i16;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i16;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i64;
  var $i73: i32;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i16;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i1;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i64;
  var $p97: ref;
  var $i98: i32;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $i102: i64;
  var $i103: i32;
  var $i104: i64;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $i108: i64;
  var $p109: ref;
  var $p110: ref;
  var $i111: i64;
  var $i112: i32;
  var $i113: i32;
  var $i114: i64;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $i118: i32;
  var $i119: i64;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $i123: i32;
  var $i124: i16;
  var $i125: i32;
  var $i126: i64;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $i130: i32;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i8;
  var $i135: i32;
  var $i136: i1;
  var $i91: i32;
  var $i137: i32;
  var $i90: i32;
  var $i138: i32;
  var $p139: ref;
  var $p140: ref;
  var $i141: i32;
  var $i142: i32;
  var $i143: i8;
  var $i144: i32;
  var $i145: i32;
  var $i146: i32;
  var $i147: i8;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $i151: i16;
  var $i152: i32;
  var $i153: i32;
  var $i154: i1;
  var $p155: ref;
  var $i156: i16;
  var $i157: i32;
  var $i158: i32;
  var $i159: i16;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $i164: i8;
  var $i165: i32;
  var $i166: i32;
  var $i167: i8;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $i172: i8;
  var $i173: i32;
  var $i174: i1;
  var $p175: ref;
  var $p176: ref;
  var $i177: i8;
  var $i178: i32;
  var $i179: i1;
  var $p180: ref;
  var $p181: ref;
  var $i182: i8;
  var $i183: i32;
  var $i184: i32;
  var $i185: i8;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: i8;
  var $i190: i32;
  var $i191: i1;
  var $p192: ref;
  var $p193: ref;
  var $i194: i8;
  var $i195: i32;
  var $i196: i32;
  var $i197: i8;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $i202: i8;
  var $i203: i32;
  var $i204: i32;
  var $i205: i8;
  var $p206: ref;
  var $p207: ref;
  var $i208: i32;
  var $i209: i1;
  var $p210: ref;
  var $p211: ref;
  var $i212: i32;
  var $i213: i32;
  var $i214: i32;
  var $p215: ref;
  var $p216: ref;
  var $i217: i16;
  var $i218: i32;
  var $i219: i32;
  var $i220: i16;
  var $p221: ref;
  var $p222: ref;
  var $i223: i64;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $i227: i32;
  var $i228: i32;
  var $i229: i64;
  var $p230: ref;
  var $p231: ref;
  var $p232: ref;
  var $i233: i32;
  var $p234: ref;
  var $p235: ref;
  var $i236: i32;
  var $i237: i32;
  var $i238: i64;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $i244: i32;
  var $i245: i64;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $i249: i32;
  var $i250: i32;
  var $i251: i1;
  var $i252: i64;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $p256: ref;
  var $i257: i64;
  var $p258: ref;
  var $p259: ref;
  var $p260: ref;
  var $p261: ref;
  var $i262: i16;
  var $i263: i32;
  var $i264: i32;
  var $i265: i16;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $i269: i32;
  var $i270: i32;
  var $i271: i16;
  var $i272: i32;
  var $i273: i16;
  var $p274: ref;
  var $p275: ref;
  var $p276: ref;
  var $p277: ref;
  var $p278: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11407, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11408, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %4, i64 0, metadata !15959, metadata !8090), !dbg !15960, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !15961, metadata !8090), !dbg !15962, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11411, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := skb_padto($p0, 60);
  // WARNING: %5 = call i32 @skb_padto(%struct.sk_buff* %0, i32 60), !dbg !8105, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11413, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11413, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11414, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11537, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11419, 13} true;
  assume {:verifier.code 0} true;
  call $p6 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11421, 59} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11421, 59} true;
  assume {:verifier.code 0} true;
  $p8 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11421, 59} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11421, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11421, 68} true;
  assume {:verifier.code 0} true;
  $i11 := $ugt.i32($i10, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11421, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11423, 15} true;
  assume {:verifier.code 0} true;
  call $i12 := __skb_linearize($p0);
  // WARNING: %17 = call i32 @__skb_linearize(%struct.sk_buff* %0), !dbg !8122, !verifier.code !8090
  call {:cexpr "tmp___2"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11425, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11425, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11427, 7} true;
  assume {:verifier.code 0} true;
  call kfree_skb($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11429, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11539, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11433, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11437, 13} true;
  assume {:verifier.code 0} true;
  call $p14 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11439, 59} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11439, 59} true;
  assume {:verifier.code 0} true;
  $p16 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11439, 59} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11439, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11439, 68} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11439, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11440, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11440, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  // WARNING: %32 = load i32, i32* %31, align 8, !dbg !8144, !verifier.code !8090
  call {:cexpr "__max1"} boogie_si_record_i32($i21);
  // WARNING: call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !16006, metadata !8090), !dbg !16007, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11442, 22} true;
  assume {:verifier.code 0} true;
  $i22 := $ugt.i32($i21, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11442, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11445, 15} true;
  assume {:verifier.code 0} true;
  call $i25 := skb_headlen($p0);
  // WARNING: %39 = call i32 @skb_headlen(%struct.sk_buff* %0), !dbg !8161, !verifier.code !8090
  call {:cexpr "tmp___4"} boogie_si_record_i32($i25);
  // WARNING: call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !16024, metadata !8090), !dbg !16025, !verifier.code !8092
  assume {:verifier.code 0} true;
  $i24 := $i25;
  goto $bb17;
$bb14:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11442, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $i21;
  goto $bb16;
$bb15:
  assume !(($i22 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11442, 15} true;
  assume {:verifier.code 0} true;
  $i23 := 60;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11442, 15} true;
  assume {:verifier.code 0} true;
  // WARNING: %37 = phi i32 [ %32, %34 ], [ 60, %35 ], !dbg !8156, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11443, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i23;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  // WARNING: %.01 = phi i32 [ %37, %36 ], [ %39, %38 ], !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11451, 34} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p3, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11451, 3} true;
  assume {:verifier.code 0} true;
  call ldv___ldv_spin_lock_96($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11452, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11452, 17} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p3, 576);
  $p29 := $add.ref($add.ref($p3, 576), 20);
  $p30 := $add.ref($add.ref($add.ref($p3, 576), 20), $mul.ref($i27, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11452, 11} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  // WARNING: %46 = load i32, i32* %45, align 4, !dbg !8171, !verifier.code !8090
  call {:cexpr "index"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11453, 12} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11453, 18} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p3, 576);
  $p34 := $add.ref($add.ref($p3, 576), 56);
  $p35 := $add.ref($add.ref($add.ref($p3, 576), 56), $mul.ref($i32, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11453, 12} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11453, 35} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11453, 33} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p36, $mul.ref($i37, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11454, 12} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11454, 18} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p3, 576);
  $p41 := $add.ref($add.ref($p3, 576), 88);
  $p42 := $add.ref($add.ref($add.ref($p3, 576), 88), $mul.ref($i39, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11454, 12} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11454, 35} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11454, 33} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p43, $mul.ref($i44, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11455, 11} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p47 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11455, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p47, $sub.i8(0, 128));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11456, 51} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p49 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p50 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11456, 61} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i16($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11456, 28} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i16.i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11456, 66} true;
  assume {:verifier.code 0} true;
  $i53 := $and.i32($i52, 32767);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11456, 28} true;
  assume {:verifier.code 0} true;
  $i54 := $trunc.i32.i16($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11456, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p56 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p57 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11456, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p57, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11457, 11} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p43, $mul.ref($i44, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11457, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p58, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 51} true;
  assume {:verifier.code 0} true;
  $p59 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 51} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 69} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 69} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 75} true;
  assume {:verifier.code 0} true;
  $i63 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 24} true;
  assume {:verifier.code 0} true;
  call $i64 := dma_map_single_attrs($p60, $p62, $i63, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 11} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 16);
  $p66 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11458, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p66, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11460, 24} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i32.i16($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11460, 11} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p36, $mul.ref($i37, 64));
  $p69 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11460, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p69, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11461, 53} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 16);
  $p71 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11461, 45} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i64($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11461, 30} true;
  assume {:verifier.code 0} true;
  $i73 := $trunc.i64.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11461, 11} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p75 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p76 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11461, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p76, $i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11462, 11} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p78 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p79 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11462, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11463, 28} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i32.i16($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11463, 11} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p82 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p83 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11463, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p83, $i80);
  // WARNING: store i16 %95, i16* %98, align 2, !dbg !8215, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11482, 14} true;
  assume {:verifier.code 0} true;
  call $p84 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 55} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 55} true;
  assume {:verifier.code 0} true;
  $p86 := $p85;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 55} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i8($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 11} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $slt.i32(0, $i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 7} true;
  assume {:verifier.code 0} true;
  $i90 := 0;
  assume {:branchcond $i89} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 7} true;
  assume {:verifier.code 0} true;
  $i91 := 0;
  goto $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i89 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb21:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11485, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11469, 13} true;
  assume {:verifier.code 0} true;
  call $p92 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11470, 72} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11470, 72} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p93, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11470, 10} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11470, 81} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i32.i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11470, 79} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p95, $mul.ref($i96, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11471, 13} true;
  assume {:verifier.code 0} true;
  call $i98 := skb_frag_size($p97);
  // WARNING: %112 = call i32 @skb_frag_size(%struct.skb_frag_struct* %111), !dbg !8235, !verifier.code !8090
  call {:cexpr "tmp___8"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 51} true;
  assume {:verifier.code 0} true;
  $p99 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 51} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 67} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i32.i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 28} true;
  assume {:verifier.code 0} true;
  call $i102 := skb_frag_dma_map($p100, $p97, 0, $i101, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 21} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i32($i91, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 3} true;
  assume {:verifier.code 0} true;
  $i104 := $sext.i32.i64($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 11} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 16);
  $p106 := $add.ref($add.ref($add.ref($p43, $mul.ref($i44, 72)), 16), $mul.ref($i104, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11472, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p106, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 67} true;
  assume {:verifier.code 0} true;
  $i107 := $add.i32($i91, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 49} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i32.i64($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 57} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 16);
  $p110 := $add.ref($add.ref($add.ref($p43, $mul.ref($i44, 72)), 16), $mul.ref($i108, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 49} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i64($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 34} true;
  assume {:verifier.code 0} true;
  $i112 := $trunc.i64.i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 20} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i32($i91, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 3} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 11} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p116 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), $mul.ref($i114, 8));
  $p117 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), $mul.ref($i114, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11474, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p117, $i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11475, 20} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i32($i91, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11475, 3} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i32.i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11475, 11} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p121 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), $mul.ref($i119, 8));
  $p122 := $add.ref($add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), $mul.ref($i119, 8)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11475, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p122, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11476, 13} true;
  assume {:verifier.code 0} true;
  call $i123 := skb_frag_size($p97);
  // WARNING: %137 = call i32 @skb_frag_size(%struct.skb_frag_struct* %111), !dbg !8257, !verifier.code !8090
  call {:cexpr "tmp___9"} boogie_si_record_i32($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11477, 32} true;
  assume {:verifier.code 0} true;
  $i124 := $trunc.i32.i16($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11477, 20} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i32($i91, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11477, 3} true;
  assume {:verifier.code 0} true;
  $i126 := $sext.i32.i64($i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11477, 11} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 8);
  $p128 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), $mul.ref($i126, 8));
  $p129 := $add.ref($add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 8), $mul.ref($i126, 8)), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11477, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p129, $i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11478, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $add.i32($i91, 1);
  // WARNING: %144 = add nsw i32 %.024, 1, !dbg !8265, !verifier.code !8090
  call {:cexpr "i"} boogie_si_record_i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11482, 14} true;
  assume {:verifier.code 0} true;
  call $p131 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 55} true;
  assume {:verifier.code 0} true;
  $p132 := $bitcast.ref.ref($p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 55} true;
  assume {:verifier.code 0} true;
  $p133 := $p132;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 55} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i8($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 11} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i8.i32($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 9} true;
  assume {:verifier.code 0} true;
  $i136 := $slt.i32($i130, $i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 7} true;
  assume {:verifier.code 0} true;
  $i91, $i137 := $i130, $i130;
  assume {:branchcond $i136} true;
  goto $bb23, $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 7} true;
  assume {:verifier.code 0} true;
  assume ($i136 == 1);
  goto $bb21;
$bb24:
  assume !(($i136 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11484, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $i137;
  goto $bb20;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11489, 24} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i32($i90, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11489, 11} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11489, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p139, $i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 54} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($add.ref($p43, $mul.ref($i44, 72)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 54} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i32($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 63} true;
  assume {:verifier.code 0} true;
  $i142 := $add.i32($i141, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 40} true;
  assume {:verifier.code 0} true;
  $i143 := $trunc.i32.i8($i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 24} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i8.i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 69} true;
  assume {:verifier.code 0} true;
  $i145 := $mul.i32($i144, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 75} true;
  assume {:verifier.code 0} true;
  $i146 := $add.i32($i145, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 24} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i32.i8($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 11} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p149 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11490, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p149, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11491, 19} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11491, 19} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i16($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11491, 8} true;
  assume {:verifier.code 0} true;
  $i152 := $zext.i16.i32($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11491, 28} true;
  assume {:verifier.code 0} true;
  $i153 := $and.i32($i152, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11491, 36} true;
  assume {:verifier.code 0} true;
  $i154 := $ne.i32($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11491, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11492, 47} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11492, 47} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i16($M.0, $p155);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11492, 27} true;
  assume {:verifier.code 0} true;
  $i157 := $zext.i16.i32($i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11492, 56} true;
  assume {:verifier.code 0} true;
  $i158 := $and.i32($i157, 61439);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11492, 27} true;
  assume {:verifier.code 0} true;
  $i159 := $trunc.i32.i16($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11492, 13} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p161 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11492, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p161, $i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11493, 55} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p163 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11493, 62} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i8($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11493, 32} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i8.i32($i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11493, 66} true;
  assume {:verifier.code 0} true;
  $i166 := $or.i32($i165, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11493, 26} true;
  assume {:verifier.code 0} true;
  $i167 := $trunc.i32.i8($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11493, 13} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p169 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11493, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p169, $i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11494, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i154 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11497, 24} true;
  assume {:verifier.code 0} true;
  $p170 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11497, 45} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p170, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11497, 22} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i8($M.0, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11497, 7} true;
  assume {:verifier.code 0} true;
  $i173 := $zext.i8.i32($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11497, 54} true;
  assume {:verifier.code 0} true;
  $i174 := $eq.i32($i173, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11497, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11499, 16} true;
  assume {:verifier.code 0} true;
  call $p175 := ip_hdr($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11502, 45} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p175, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11502, 45} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i8($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11502, 9} true;
  assume {:verifier.code 0} true;
  $i178 := $zext.i8.i32($i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11502, 55} true;
  assume {:verifier.code 0} true;
  $i179 := $eq.i32($i178, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11502, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb31, $bb32;
$bb30:
  assume !(($i174 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb31:
  assume ($i179 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11503, 57} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p181 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11503, 64} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i8($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11503, 34} true;
  assume {:verifier.code 0} true;
  $i183 := $zext.i8.i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11503, 68} true;
  assume {:verifier.code 0} true;
  $i184 := $or.i32($i183, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11503, 28} true;
  assume {:verifier.code 0} true;
  $i185 := $trunc.i32.i8($i184);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11503, 15} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p187 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11503, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p187, $i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11504, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i179 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11505, 45} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p175, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11505, 45} true;
  assume {:verifier.code 0} true;
  $i189 := $load.i8($M.0, $p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11505, 9} true;
  assume {:verifier.code 0} true;
  $i190 := $zext.i8.i32($i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11505, 55} true;
  assume {:verifier.code 0} true;
  $i191 := $eq.i32($i190, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11505, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i191} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11510, 55} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p201 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11510, 62} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i8($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11510, 32} true;
  assume {:verifier.code 0} true;
  $i203 := $zext.i8.i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11510, 66} true;
  assume {:verifier.code 0} true;
  $i204 := $or.i32($i203, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11510, 26} true;
  assume {:verifier.code 0} true;
  $i205 := $trunc.i32.i8($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11510, 13} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p207 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11510, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p207, $i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11511, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb34:
  assume ($i191 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11506, 57} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p193 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11506, 64} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i8($M.0, $p193);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11506, 34} true;
  assume {:verifier.code 0} true;
  $i195 := $zext.i8.i32($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11506, 68} true;
  assume {:verifier.code 0} true;
  $i196 := $or.i32($i195, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11506, 28} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i8($i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11506, 15} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 4);
  $p199 := $add.ref($add.ref($add.ref($p36, $mul.ref($i37, 64)), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11506, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p199, $i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11507, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i191 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  goto $bb33;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11514, 16} true;
  assume {:verifier.code 0} true;
  $i208 := $add.i32($i31, $sub.i32(0, 1));
  // WARNING: %236 = add nsw i32 %46, -1, !dbg !8349, !verifier.code !8090
  call {:cexpr "prev"} boogie_si_record_i32($i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11515, 12} true;
  assume {:verifier.code 0} true;
  $i209 := $slt.i32($i208, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11515, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i209} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i209 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11516, 18} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p3, 896);
  $p211 := $add.ref($add.ref($p3, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11516, 26} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i32($M.0, $p211);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11516, 32} true;
  assume {:verifier.code 0} true;
  $i213 := $add.i32($i212, $sub.i32(0, 1));
  // WARNING: %242 = add nsw i32 %241, -1, !dbg !8358, !verifier.code !8090
  call {:cexpr "prev"} boogie_si_record_i32($i213);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11517, 3} true;
  assume {:verifier.code 0} true;
  $i214 := $i213;
  goto $bb40;
$bb39:
  assume !(($i209 == 1));
  assume {:verifier.code 0} true;
  $i214 := $i208;
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11520, 57} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p36, $mul.ref($i37, 64));
  $p216 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11520, 64} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i16($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11520, 34} true;
  assume {:verifier.code 0} true;
  $i218 := $zext.i16.i32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11520, 68} true;
  assume {:verifier.code 0} true;
  $i219 := $or.i32($i218, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11520, 24} true;
  assume {:verifier.code 0} true;
  $i220 := $trunc.i32.i16($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11520, 11} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p36, $mul.ref($i37, 64));
  $p222 := $add.ref($add.ref($p36, $mul.ref($i37, 64)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11520, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p222, $i220);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11521, 25} true;
  assume {:verifier.code 0} true;
  $i223 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11521, 31} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p3, 576);
  $p225 := $add.ref($add.ref($p3, 576), 4);
  $p226 := $add.ref($add.ref($add.ref($p3, 576), 4), $mul.ref($i223, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11521, 25} true;
  assume {:verifier.code 0} true;
  $i227 := $load.i32($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11521, 45} true;
  assume {:verifier.code 0} true;
  $i228 := $add.i32($i227, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11521, 3} true;
  assume {:verifier.code 0} true;
  $i229 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11521, 9} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($p3, 576);
  $p231 := $add.ref($add.ref($p3, 576), 4);
  $p232 := $add.ref($add.ref($add.ref($p3, 576), 4), $mul.ref($i229, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11521, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p232, $i228);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11522, 32} true;
  assume {:verifier.code 0} true;
  $i233 := $add.i32($i31, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11522, 45} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p3, 896);
  $p235 := $add.ref($add.ref($p3, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11522, 53} true;
  assume {:verifier.code 0} true;
  $i236 := $load.i32($M.0, $p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11522, 37} true;
  assume {:verifier.code 0} true;
  $i237 := $srem.i32($i233, $i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11522, 3} true;
  assume {:verifier.code 0} true;
  $i238 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11522, 9} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p3, 576);
  $p240 := $add.ref($add.ref($p3, 576), 20);
  $p241 := $add.ref($add.ref($add.ref($p3, 576), 20), $mul.ref($i238, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11522, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p241, $i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 13} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p3, 896);
  $p243 := $add.ref($add.ref($p3, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 21} true;
  assume {:verifier.code 0} true;
  $i244 := $load.i32($M.0, $p243);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 29} true;
  assume {:verifier.code 0} true;
  $i245 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 35} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p3, 576);
  $p247 := $add.ref($add.ref($p3, 576), 4);
  $p248 := $add.ref($add.ref($add.ref($p3, 576), 4), $mul.ref($i245, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 29} true;
  assume {:verifier.code 0} true;
  $i249 := $load.i32($M.0, $p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 27} true;
  assume {:verifier.code 0} true;
  $i250 := $sub.i32($i244, $i249);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 49} true;
  assume {:verifier.code 0} true;
  $i251 := $sle.i32($i250, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11523, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i251} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i251 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11525, 5} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11527, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i251 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11531, 12} true;
  assume {:verifier.code 0} true;
  $i252 := $sext.i32.i64(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11531, 18} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p3, 576);
  $p254 := $add.ref($add.ref($p3, 576), 56);
  $p255 := $add.ref($add.ref($add.ref($p3, 576), 56), $mul.ref($i252, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11531, 12} true;
  assume {:verifier.code 0} true;
  $p256 := $load.ref($M.0, $p255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11531, 35} true;
  assume {:verifier.code 0} true;
  $i257 := $sext.i32.i64($i214);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11531, 33} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($p256, $mul.ref($i257, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11532, 61} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($add.ref($p256, $mul.ref($i257, 64)), 8);
  $p260 := $add.ref($add.ref($p256, $mul.ref($i257, 64)), 8);
  $p261 := $add.ref($add.ref($add.ref($p256, $mul.ref($i257, 64)), 8), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11532, 71} true;
  assume {:verifier.code 0} true;
  $i262 := $load.i16($M.0, $p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11532, 38} true;
  assume {:verifier.code 0} true;
  $i263 := $zext.i16.i32($i262);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11532, 76} true;
  assume {:verifier.code 0} true;
  $i264 := $or.i32($i263, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11532, 28} true;
  assume {:verifier.code 0} true;
  $i265 := $trunc.i32.i16($i264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11532, 11} true;
  assume {:verifier.code 0} true;
  $p266 := $add.ref($add.ref($p256, $mul.ref($i257, 64)), 8);
  $p267 := $add.ref($add.ref($p256, $mul.ref($i257, 64)), 8);
  $p268 := $add.ref($add.ref($add.ref($p256, $mul.ref($i257, 64)), 8), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11532, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p268, $i265);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 45} true;
  assume {:verifier.code 0} true;
  $i269 := $mul.i32(0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 37} true;
  assume {:verifier.code 0} true;
  $i270 := $shl.i32(4, $i269);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 17} true;
  assume {:verifier.code 0} true;
  $i271 := $trunc.i32.i16($i270);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 10} true;
  assume {:verifier.code 0} true;
  $i272 := $zext.i16.i32($i271);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 10} true;
  assume {:verifier.code 0} true;
  $i273 := $trunc.i32.i16($i272);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 81} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 81} true;
  assume {:verifier.code 0} true;
  $p275 := $load.ref($M.0, $p274);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 92} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p275, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 52} true;
  assume {:verifier.code 0} true;
  $p277 := $bitcast.ref.ref($p276);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11533, 3} true;
  assume {:verifier.code 0} true;
  call writew($i273, $p277);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11534, 41} true;
  assume {:verifier.code 0} true;
  $p278 := $add.ref($p3, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11534, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_84($p278, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11535, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const skb_padto: ref;
axiom (skb_padto == $sub.ref(0, 417831));
procedure  skb_padto($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i10: i32;
  var $i11: i32;
  var $i9: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !16280, metadata !8090), !dbg !16281, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7315, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7315, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  // WARNING: %4 = load i32, i32* %3, align 8, !dbg !8095, !verifier.code !8092
  call {:cexpr "size"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7316, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $uge.i32($i3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7316, 34} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7316, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7316, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 1);
  // WARNING: %8 = call i64 @ldv__builtin_expect(i64 %7, i64 1), !dbg !8102, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7318, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7318, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7319, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7328, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7324, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32($i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7324, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := skb_pad($p0, $i10);
  // WARNING: %14 = call i32 @skb_pad(%struct.sk_buff* %0, i32 %13), !dbg !8112, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7326, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i11;
  goto $bb3;
}
const skb_end_pointer: ref;
axiom (skb_end_pointer == $sub.ref(0, 418863));
procedure  skb_end_pointer($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7215, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7215, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7215, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 204);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7215, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7215, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7215, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7215, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const __skb_linearize: ref;
axiom (__skb_linearize == $sub.ref(0, 419895));
procedure  __skb_linearize($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7335, 42} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7335, 42} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7335, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := __pskb_pull_tail($p0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7337, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7337, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7337, 11} true;
  assume {:verifier.code 0} true;
  havoc $i6;
  assume ((($i5 == 1) ==> ($i6 == 0)) && (($i5 != 1) ==> ($i6 == $sub.i32(0, 12))));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7337, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const kfree_skb: ref;
axiom (kfree_skb == $sub.ref(0, 420927));
procedure  kfree_skb($p0: ref);
const skb_headlen: ref;
axiom (skb_headlen == $sub.ref(0, 421959));
procedure  skb_headlen($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7223, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7223, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7223, 57} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7223, 57} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7223, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32($i2, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7223, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const ldv___ldv_spin_lock_96: ref;
axiom (ldv___ldv_spin_lock_96 == $sub.ref(0, 422991));
procedure  ldv___ldv_spin_lock_96($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15993, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15994, 3} true;
  assume {:verifier.code 0} true;
  call __ldv_spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15996, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_frag_size: ref;
axiom (skb_frag_size == $sub.ref(0, 424023));
procedure  skb_frag_size($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7204, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7204, 32} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7204, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const skb_frag_dma_map: ref;
axiom (skb_frag_dma_map == $sub.ref(0, 425055));
procedure  skb_frag_dma_map($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32)
  returns ($r: i64)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.skb_frag_struct* %1, i64 0, metadata !16360, metadata !8090), !dbg !16361, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !16362, metadata !8090), !dbg !16363, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !16364, metadata !8090), !dbg !16365, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7301, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := skb_frag_page($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7302, 51} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7302, 51} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7302, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7302, 63} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7302, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := dma_map_page($p0, $p5, $i9, $i3, $i4);
  // WARNING: %11 = call i64 @dma_map_page(%struct.device* %0, %struct.page* %6, i64 %10, i64 %3, i32 %4), !dbg !8109, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7304, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const ip_hdr: ref;
axiom (ip_hdr == $sub.ref(0, 426087));
procedure  ip_hdr($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7802, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := skb_network_header($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7804, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7804, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const skb_network_header: ref;
axiom (skb_network_header == $sub.ref(0, 427119));
procedure  skb_network_header($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7243, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7243, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7243, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 194);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7243, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7243, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7243, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7243, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const skb_frag_page: ref;
axiom (skb_frag_page == $sub.ref(0, 428151));
procedure  skb_frag_page($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7290, 32} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7290, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7290, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const dma_map_page: ref;
axiom (dma_map_page == $sub.ref(0, 429183));
procedure  dma_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32)
  returns ($r: i64)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.page* %1, i64 0, metadata !16415, metadata !8090), !dbg !16416, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !16417, metadata !8090), !dbg !16418, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !16419, metadata !8090), !dbg !16420, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6972, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6974, 13} true;
  assume {:verifier.code 0} true;
  call $p6 := lowmem_page_address($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6975, 38} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, $mul.ref($i2, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6975, 48} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6975, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p7, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6976, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := valid_dma_direction($i4);
  // WARNING: %10 = call i32 @valid_dma_direction(i32 %4), !dbg !8114, !verifier.code !8092
  call {:cexpr "tmp___1"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6977, 41} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6977, 41} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6977, 33} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6977, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv__builtin_expect($i12, 0);
  // WARNING: %14 = call i64 @ldv__builtin_expect(i64 %13, i64 0), !dbg !8119, !verifier.code !8092
  call {:cexpr "tmp___2"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6979, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6979, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  call devirtbounce.4(0, .str.7, 79, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6983, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6989, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6989, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call $i17 := devirtbounce.14($p16, $p0, $p1, $i2, $i3, $i4, $0.ref);
  // WARNING: %21 = call i64 @devirtbounce.14(i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.__anonstruct_sigset_t_178*)* %20, %struct.device* %0, %struct.page* %1, i64 %2, i64 %3, i32 %4, %struct.__anonstruct_sigset_t_178* null)
  call {:cexpr "addr"} boogie_si_record_i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6990, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p1, $i2, $i3, $i4, $i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6992, 3} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
}
const lowmem_page_address: ref;
axiom (lowmem_page_address == $sub.ref(0, 430215));
procedure  lowmem_page_address($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6795, 60} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6795, 72} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 24189255811072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6795, 91} true;
  assume {:verifier.code 0} true;
  $i3 := $sdiv.i64($i2, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6795, 98} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i64($i3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6795, 105} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, $sub.i64(0, 131941395333120));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6795, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6795, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const __pskb_pull_tail: ref;
axiom (__pskb_pull_tail == $sub.ref(0, 431247));
procedure  __pskb_pull_tail($p0: ref, $i1: i32)
  returns ($r: ref);
const skb_pad: ref;
axiom (skb_pad == $sub.ref(0, 432279));
procedure  skb_pad($p0: ref, $i1: i32)
  returns ($r: i32);
const eth_validate_addr: ref;
axiom (eth_validate_addr == $sub.ref(0, 433311));
procedure  eth_validate_addr($p0: ref)
  returns ($r: i32);
const velocity_vlan_rx_add_vid: ref;
axiom (velocity_vlan_rx_add_vid == $sub.ref(0, 434343));
procedure  velocity_vlan_rx_add_vid($p0: ref, $i1: i16, $i2: i16)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !16470, metadata !8090), !dbg !16471, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !16472, metadata !8090), !dbg !16473, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8426, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8427, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8428, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8428, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_irq_79($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8429, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8429, 60} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8429, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8429, 3} true;
  assume {:verifier.code 0} true;
  call set_bit($i6, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8430, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_cam_filter($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8431, 34} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8431, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irq_80($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8433, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const velocity_vlan_rx_kill_vid: ref;
axiom (velocity_vlan_rx_kill_vid == $sub.ref(0, 435375));
procedure  velocity_vlan_rx_kill_vid($p0: ref, $i1: i16, $i2: i16)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !16495, metadata !8090), !dbg !16496, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !16497, metadata !8090), !dbg !16498, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8443, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8444, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8445, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8445, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_irq_79($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8446, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8446, 62} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8446, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8446, 3} true;
  assume {:verifier.code 0} true;
  call clear_bit($i6, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8447, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_cam_filter($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8448, 34} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8448, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irq_80($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8450, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const velocity_set_coalesce: ref;
axiom (velocity_set_coalesce == $sub.ref(0, 436407));
procedure  velocity_set_coalesce($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12886, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12887, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %4, i64 0, metadata !16530, metadata !8090), !dbg !16531, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12890, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12890, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12890, 31} true;
  assume {:verifier.code 0} true;
  $i6 := $ugt.i32($i5, 4032);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12890, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12891, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12926, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12895, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12895, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12895, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $ugt.i32($i9, 4032);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12895, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12896, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12900, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12900, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12900, 37} true;
  assume {:verifier.code 0} true;
  $i13 := $ugt.i32($i12, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12900, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12901, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12905, 13} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12905, 13} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12905, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $ugt.i32($i15, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12905, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12906, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 22);
  goto $bb3;
$bb12:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12911, 41} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12911, 41} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12911, 9} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p3, 896);
  $p20 := $add.ref($add.ref($p3, 896), 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12911, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12912, 41} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12912, 41} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12912, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p3, 896);
  $p24 := $add.ref($add.ref($p3, 896), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12912, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12913, 33} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p3, 896);
  $p26 := $add.ref($add.ref($p3, 896), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12913, 62} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12913, 62} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12913, 3} true;
  assume {:verifier.code 0} true;
  call set_pending_timer_val($p26, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12914, 33} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p3, 896);
  $p30 := $add.ref($add.ref($p3, 896), 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12914, 62} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12914, 62} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12914, 3} true;
  assume {:verifier.code 0} true;
  call set_pending_timer_val($p30, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12915, 35} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p3, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12915, 3} true;
  assume {:verifier.code 0} true;
  call ldv___ldv_spin_lock_111($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12916, 50} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12916, 50} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12916, 61} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12916, 21} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12916, 3} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12917, 3} true;
  assume {:verifier.code 0} true;
  call setup_adaptive_interrupts($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12918, 3} true;
  assume {:verifier.code 0} true;
  call setup_queue_timers($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12919, 16} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p3, 964);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12919, 16} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12919, 55} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12919, 55} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12919, 66} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12919, 26} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12919, 3} true;
  assume {:verifier.code 0} true;
  call writel($i39, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12920, 52} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12920, 52} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12920, 63} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12920, 23} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12920, 3} true;
  assume {:verifier.code 0} true;
  call writel($sub.i32(0, 1), $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12921, 50} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12921, 50} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12921, 61} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p49, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12921, 21} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12921, 3} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12922, 41} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p3, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12922, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_84($p52, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12924, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
}
const set_pending_timer_val: ref;
axiom (set_pending_timer_val == $sub.ref(0, 437439));
procedure  set_pending_timer_val($p0: ref, $i1: i32)
{
  var $i2: i1;
  var $i3: i8;
  var $i4: i8;
  var $i5: i1;
  var $i6: i8;
  var $i7: i8;
  var $i8: i1;
  var $i9: i8;
  var $i10: i8;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32* %0, i64 0, metadata !16599, metadata !8090), !dbg !16600, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !16601, metadata !8090), !dbg !16602, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !16603, metadata !8090), !dbg !16604, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12834, 10} true;
  assume {:verifier.code 0} true;
  $i2 := $ugt.i32($i1, 62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12834, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !16603, metadata !8090), !dbg !16604, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12837, 3} true;
  assume {:verifier.code 0} true;
  $i3, $i4 := 1, 2;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i3, $i4 := 0, 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12840, 10} true;
  assume {:verifier.code 0} true;
  $i5 := $ugt.i32($i1, 251);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12840, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i8 2, i64 0, metadata !16603, metadata !8090), !dbg !16604, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12843, 3} true;
  assume {:verifier.code 0} true;
  $i6, $i7 := 2, 4;
  goto $bb6;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6, $i7 := $i3, $i4;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12846, 10} true;
  assume {:verifier.code 0} true;
  $i8 := $ugt.i32($i1, 1007);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12846, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i8 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i8 3, i64 0, metadata !16603, metadata !8090), !dbg !16604, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12849, 3} true;
  assume {:verifier.code 0} true;
  $i9, $i10 := 3, 6;
  goto $bb9;
$bb8:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9, $i10 := $i6, $i7;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12852, 24} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12852, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $shl.i32($i11, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12852, 51} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12852, 48} true;
  assume {:verifier.code 0} true;
  $i14 := $lshr.i32($i1, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12852, 64} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12852, 41} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i32($i12, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12852, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12853, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv___ldv_spin_lock_111: ref;
axiom (ldv___ldv_spin_lock_111 == $sub.ref(0, 438471));
procedure  ldv___ldv_spin_lock_111($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16142, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16143, 3} true;
  assume {:verifier.code 0} true;
  call __ldv_spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16145, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_set_msglevel: ref;
axiom (velocity_set_msglevel == $sub.ref(0, 439503));
procedure  velocity_set_msglevel($p0: ref, $i1: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !16640, metadata !8090), !dbg !16641, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12774, 12} true;
  assume {:verifier.code 0} true;
  $M.15 := $i1;
  call {:cexpr "msglevel"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12775, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_set_settings: ref;
axiom (velocity_set_settings == $sub.ref(0, 440535));
procedure  velocity_set_settings($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i32;
  var $i21: i1;
  var $i22: i32;
  var $i23: i32;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i1;
  var $i28: i32;
  var $i29: i32;
  var $i30: i64;
  var $i31: i64;
  var $i32: i1;
  var $i33: i32;
  var $i34: i1;
  var $i36: i64;
  var $i37: i64;
  var $i38: i1;
  var $i40: i64;
  var $i41: i64;
  var $i42: i1;
  var $i44: i64;
  var $i45: i64;
  var $i46: i1;
  var $i47: i64;
  var $i48: i64;
  var $i49: i1;
  var $i50: i32;
  var $i52: i64;
  var $i53: i64;
  var $i54: i1;
  var $i55: i64;
  var $i56: i64;
  var $i57: i1;
  var $i58: i32;
  var $i51: i32;
  var $i43: i32;
  var $i39: i32;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i35: i32;
  var $i59: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12628, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12629, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12630, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := ethtool_cmd_speed($p1);
  // WARNING: %5 = call i32 @ethtool_cmd_speed(%struct.ethtool_cmd* %1), !dbg !8101, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !16661, metadata !8090), !dbg !16662, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !16663, metadata !8090), !dbg !16664, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !16665, metadata !8090), !dbg !16666, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12634, 45} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12634, 45} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12634, 17} true;
  assume {:verifier.code 0} true;
  call $i7 := check_connection_type($p6);
  // WARNING: %8 = call i32 @check_connection_type(%struct.mac_regs* %7), !dbg !8111, !verifier.code !8090
  call {:cexpr "curr_status"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12635, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, $sub.i32(0, 2));
  // WARNING: %9 = and i32 %8, -2, !dbg !8114, !verifier.code !8090
  call {:cexpr "curr_status"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12636, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12636, 50} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12636, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12636, 58} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12636, 30} true;
  assume {:verifier.code 0} true;
  havoc $i13;
  assume ((($i12 == 1) ==> ($i13 == 32)) && (($i12 != 1) ==> ($i13 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12636, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i32(0, $i13);
  // WARNING: %15 = or i32 0, %14, !dbg !8118, !verifier.code !8090
  call {:cexpr "new_status"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12637, 36} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12637, 30} true;
  assume {:verifier.code 0} true;
  havoc $i16;
  assume ((($i15 == 1) ==> ($i16 == 8)) && (($i15 != 1) ==> ($i16 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12637, 27} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i14, $i16);
  // WARNING: %18 = or i32 %15, %17, !dbg !8121, !verifier.code !8090
  call {:cexpr "new_status"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12638, 36} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i4, 100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12638, 30} true;
  assume {:verifier.code 0} true;
  havoc $i19;
  assume ((($i18 == 1) ==> ($i19 == 4)) && (($i18 != 1) ==> ($i19 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12638, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i17, $i19);
  // WARNING: %21 = or i32 %18, %20, !dbg !8124, !verifier.code !8090
  call {:cexpr "new_status"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12639, 36} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i4, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12639, 30} true;
  assume {:verifier.code 0} true;
  havoc $i22;
  assume ((($i21 == 1) ==> ($i22 == 2)) && (($i21 != 1) ==> ($i22 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12639, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $or.i32($i20, $i22);
  // WARNING: %24 = or i32 %21, %23, !dbg !8127, !verifier.code !8090
  call {:cexpr "new_status"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12640, 50} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12640, 50} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12640, 30} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12640, 57} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12640, 30} true;
  assume {:verifier.code 0} true;
  havoc $i28;
  assume ((($i27 == 1) ==> ($i28 == 16)) && (($i27 != 1) ==> ($i28 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12640, 27} true;
  assume {:verifier.code 0} true;
  $i29 := $or.i32($i23, $i28);
  // WARNING: %30 = or i32 %24, %29, !dbg !8131, !verifier.code !8090
  call {:cexpr "new_status"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 8} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i64($i30, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i64($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 80} true;
  assume {:verifier.code 0} true;
  $i33 := $or.i32($i8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 64} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i29, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i32 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12645, 10} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12645, 37} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i64($i36, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12645, 45} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i64($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12645, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12644, 3} true;
  assume {:verifier.code 0} true;
  $i35 := $sub.i32(0, 22);
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12642, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12664, 3} true;
  assume {:verifier.code 0} true;
  $i59 := $i35;
  goto $bb19;
$bb7:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12647, 5} true;
  assume {:verifier.code 0} true;
  $i39 := 0;
  goto $bb9;
$bb8:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12648, 10} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12648, 37} true;
  assume {:verifier.code 0} true;
  $i41 := $and.i64($i40, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12648, 45} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i64($i41, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12648, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb10, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12660, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p3, 896);
  $p61 := $add.ref($add.ref($p3, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12660, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12661, 5} true;
  assume {:verifier.code 0} true;
  call $i62 := velocity_set_media_mode($p3, $i29);
  assume {:verifier.code 0} true;
  $i35 := 0;
  goto $bb6;
$bb10:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12650, 5} true;
  assume {:verifier.code 0} true;
  $i43 := 5;
  goto $bb12;
$bb11:
  assume !(($i42 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12651, 10} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12651, 37} true;
  assume {:verifier.code 0} true;
  $i45 := $and.i64($i44, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12651, 44} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i64($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12651, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb13, $bb14;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i39 := $i43;
  goto $bb9;
$bb13:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12652, 18} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12652, 45} true;
  assume {:verifier.code 0} true;
  $i48 := $and.i64($i47, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12652, 53} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i64($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12652, 17} true;
  assume {:verifier.code 0} true;
  havoc $i50;
  assume ((($i49 == 1) ==> ($i50 == 2)) && (($i49 != 1) ==> ($i50 == 1)));
  // WARNING: %56 = select i1 %55, i32 2, i32 1, !dbg !8169, !verifier.code !8090
  call {:cexpr "spd_dpx"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12653, 5} true;
  assume {:verifier.code 0} true;
  $i51 := $i50;
  goto $bb15;
$bb14:
  assume !(($i46 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12654, 10} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12654, 37} true;
  assume {:verifier.code 0} true;
  $i53 := $and.i64($i52, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12654, 44} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12654, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb16, $bb17;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i43 := $i51;
  goto $bb12;
$bb16:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12655, 18} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12655, 45} true;
  assume {:verifier.code 0} true;
  $i56 := $and.i64($i55, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12655, 53} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i64($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12655, 17} true;
  assume {:verifier.code 0} true;
  havoc $i58;
  assume ((($i57 == 1) ==> ($i58 == 4)) && (($i57 != 1) ==> ($i58 == 3)));
  // WARNING: %65 = select i1 %64, i32 4, i32 3, !dbg !8180, !verifier.code !8090
  call {:cexpr "spd_dpx"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12656, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i54 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12657, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sub.i32(0, 95);
  goto $bb19;
$bb18:
  assume {:verifier.code 0} true;
  $i51 := $i58;
  goto $bb15;
$bb19:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12666, 1} true;
  assume {:verifier.code 0} true;
  $r := $i59;
  $exn := false;
  return;
}
const ethtool_cmd_speed: ref;
axiom (ethtool_cmd_speed == $sub.ref(0, 441567));
procedure  ethtool_cmd_speed($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i16;
  var $i3: i32;
  var $i4: i32;
  var $p5: ref;
  var $i6: i16;
  var $i7: i32;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 21} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 40} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i32($i3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 59} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 49} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 47} true;
  assume {:verifier.code 0} true;
  $i8 := $or.i32($i4, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7375, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const velocity_ethtool_set_wol: ref;
axiom (velocity_ethtool_set_wol == $sub.ref(0, 442599));
procedure  velocity_ethtool_set_wol($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12728, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12729, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12731, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12731, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12731, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12731, 28} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12731, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12732, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12760, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12736, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12736, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12737, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12737, 13} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12737, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i11, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12737, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12737, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12738, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12738, 28} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12738, 11} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12738, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12739, 25} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p3, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12739, 25} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12739, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i18, 524288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12739, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p3, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12739, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12740, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12743, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12743, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12743, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12743, 27} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12743, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12744, 28} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12744, 28} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12744, 37} true;
  assume {:verifier.code 0} true;
  $i27 := $or.i32($i26, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12744, 11} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12744, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, $i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12745, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p3, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12745, 25} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12745, 31} true;
  assume {:verifier.code 0} true;
  $i31 := $or.i32($i30, 524288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12745, 11} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p3, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12745, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12746, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12749, 13} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12749, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12749, 21} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i32($i34, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12749, 28} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12749, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12750, 28} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12750, 28} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12750, 37} true;
  assume {:verifier.code 0} true;
  $i39 := $or.i32($i38, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12750, 11} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p3, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12750, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12751, 25} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p3, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12751, 25} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12751, 31} true;
  assume {:verifier.code 0} true;
  $i43 := $or.i32($i42, 524288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12751, 11} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p3, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12751, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12752, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12756, 27} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p3, 1076);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12756, 3} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12756, 64} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12756, 3} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12756, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p46, $p48, 6, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12758, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
}
const malloc: ref;
axiom (malloc == $sub.ref(0, 443631));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const velocity_open: ref;
axiom (velocity_open == $sub.ref(0, 444663));
procedure  velocity_open($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $p23: ref;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10997, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10998, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10999, 46} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 520);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10999, 46} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10999, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := velocity_init_rings($p2, $i4);
  // WARNING: %6 = call i32 @velocity_init_rings(%struct.velocity_info* %3, i32 %5), !dbg !8100, !verifier.code !8090
  call {:cexpr "ret"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11001, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11001, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11002, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i5;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11029, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11007, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11008, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_registers($p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11009, 48} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11009, 48} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11009, 101} true;
  assume {:verifier.code 0} true;
  $p10 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11009, 77} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11010, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11009, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_request_irq_88($i9, velocity_intr, 128, $p11, $p12);
  // WARNING: %16 = call i32 @ldv_request_irq_88(i32 %12, i32 (i32, i8*)* @velocity_intr, i64 128, i8* %14, i8* %15), !dbg !8115, !verifier.code !8090
  call {:cexpr "ret"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11012, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $slt.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11012, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11014, 5} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11015, 5} true;
  assume {:verifier.code 0} true;
  call velocity_free_rings($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11017, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i13;
  goto $bb3;
$bb6:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11022, 3} true;
  assume {:verifier.code 0} true;
  call velocity_give_many_rx_descs($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11023, 50} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11023, 50} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11023, 61} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11023, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11023, 3} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11024, 3} true;
  assume {:verifier.code 0} true;
  call netif_start_queue($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11025, 23} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p2, 3832);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11025, 3} true;
  assume {:verifier.code 0} true;
  call napi_enable($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11026, 23} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p2, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11026, 23} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11026, 29} true;
  assume {:verifier.code 0} true;
  $i22 := $or.i32($i21, 65536);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11026, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p2, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11026, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11027, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i13;
  goto $bb3;
}
const ldv_request_irq_88: ref;
axiom (ldv_request_irq_88 == $sub.ref(0, 445695));
procedure  ldv_request_irq_88($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !16890, metadata !8090), !dbg !16891, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15943, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_irq($i0, $p1, $i2, $p3, $p4);
  // WARNING: %6 = call i32 @request_irq(i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4), !dbg !8101, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !16901, metadata !8090), !dbg !16902, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15945, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv_request_irq($i5, $i0, $p1, $i2, $p3, $p4);
  // WARNING: %7 = call i32 @ldv_request_irq(i32 %6, i32 %0, i32 (i32, i8*)* %1, i64 %2, i8* %3, i8* %4), !dbg !8109, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15947, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const request_irq: ref;
axiom (request_irq == $sub.ref(0, 446727));
procedure  request_irq($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !16913, metadata !8090), !dbg !16914, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7748, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_threaded_irq($i0, $p1, $0.ref, $i2, $p3, $p4);
  // WARNING: %6 = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4), !dbg !8101, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7751, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const ldv_request_irq: ref;
axiom (ldv_request_irq == $sub.ref(0, 447759));
procedure  ldv_request_irq($i0: i32, $i1: i32, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32)
{
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !16930, metadata !8090), !dbg !16931, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %2, i64 0, metadata !16934, metadata !8090), !dbg !16935, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15749, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := ldv_undef_int();
  // WARNING: %7 = call i32 @ldv_undef_int(), !dbg !8103, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15751, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15751, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15753, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15753, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15753, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i9);
  // WARNING: call void @ldv_assume(i32 %11), !dbg !8114, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15758, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_irq_register_12_2($i1, $p2, $0.ref, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15761, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15764, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15764, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15764, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15766, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15770, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_irq_register_12_2: ref;
axiom (ldv_dispatch_irq_register_12_2 == $sub.ref(0, 448791));
procedure  ldv_dispatch_irq_register_12_2($i0: i32, $p1: ref, $p2: ref, $p3: ref)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13538, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := ldv_xmalloc(40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13539, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13540, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13540, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13541, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13541, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13542, 13} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13542, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13543, 13} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13543, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13544, 38} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13544, 3} true;
  assume {:verifier.code 0} true;
  call ldv_interrupt_interrupt_instance_0($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13546, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_interrupt_interrupt_instance_0: ref;
axiom (ldv_interrupt_interrupt_instance_0 == $sub.ref(0, 449823));
procedure  ldv_interrupt_interrupt_instance_0($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i1;
  var $i21: i32;
  var $i22: i64;
  var $i23: i1;
  var $i24: i1;
  var $i25: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14073, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14074, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14074, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14074, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14076, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14076, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  // WARNING: %7 = load i32, i32* %6, align 8, !dbg !8099, !verifier.code !8090
  call {:cexpr "ldv_0_line_line"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14077, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14077, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14078, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14078, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14079, 29} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14079, 29} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14080, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14080, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14082, 3} true;
  assume {:verifier.code 0} true;
  $i13, $p14, $p15, $p16 := $i5, $p11, $p7, $p9;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i13, $p14, $p15, $p16 := $u7, $u27, $u28, $u28;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14086, 3} true;
  assume {:verifier.code 0} true;
  call ldv_switch_to_interrupt_context();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14087, 27} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_interrupt_instance_handler_0_5($p15, $i13, $p14);
  // WARNING: %17 = call i32 @ldv_interrupt_instance_handler_0_5(i32 (i32, i8*)* %.01, i32 %.03, i8* %.02), !dbg !8118, !verifier.code !8090
  call {:cexpr "ldv_0_ret_val_default"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14089, 3} true;
  assume {:verifier.code 0} true;
  call ldv_switch_to_process_context();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14090, 9} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv_undef_int();
  // WARNING: %18 = call i32 @ldv_undef_int(), !dbg !8122, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14092, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14092, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14094, 53} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i17, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14094, 53} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i1.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14094, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14096, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14096, 45} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14096, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14106, 53} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i17, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14106, 53} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i1.i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14106, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i25);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14099, 7} true;
  assume {:verifier.code 0} true;
  call ldv_interrupt_instance_thread_0_3($p16, $i13, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14101, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14104, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14109, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_switch_to_interrupt_context: ref;
axiom (ldv_switch_to_interrupt_context == $sub.ref(0, 450855));
procedure  ldv_switch_to_interrupt_context();
const ldv_interrupt_instance_handler_0_5: ref;
axiom (ldv_interrupt_instance_handler_0_5 == $sub.ref(0, 451887));
procedure  ldv_interrupt_instance_handler_0_5($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %0, i64 0, metadata !17061, metadata !8090), !dbg !17062, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14045, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_intr($i1, $p2);
  // WARNING: %4 = call i32 @velocity_intr(i32 %1, i8* %2), !dbg !8097, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14047, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv_switch_to_process_context: ref;
axiom (ldv_switch_to_process_context == $sub.ref(0, 452919));
procedure  ldv_switch_to_process_context();
const ldv_interrupt_instance_thread_0_3: ref;
axiom (ldv_interrupt_instance_thread_0_3 == $sub.ref(0, 453951));
procedure  ldv_interrupt_instance_thread_0_3($p0: ref, $i1: i32, $p2: ref)
{
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %0, i64 0, metadata !17076, metadata !8090), !dbg !17077, !verifier.code !8092
  call $i3 := devirtbounce.16($p0, $i1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14059, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const request_threaded_irq: ref;
axiom (request_threaded_irq == $sub.ref(0, 454983));
procedure  request_threaded_irq($i0: i32, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32);
const velocity_rx_srv: ref;
axiom (velocity_rx_srv == $sub.ref(0, 456015));
procedure  velocity_rx_srv($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i1;
  var $i27: i32;
  var $i28: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i16;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i32;
  var $p38: ref;
  var $p39: ref;
  var $i40: i16;
  var $i41: i32;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i16;
  var $i53: i32;
  var $i54: i32;
  var $i55: i1;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i16;
  var $i63: i32;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $i75: i16;
  var $i76: i32;
  var $i77: i32;
  var $i78: i16;
  var $p79: ref;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $i83: i32;
  var $i84: i1;
  var $i85: i32;
  var $i86: i32;
  var $i87: i1;
  var $i11: i32;
  var $i12: i32;
  var $i88: i32;
  var $i89: i32;
  var $i9: i32;
  var $i10: i32;
  var $i29: i32;
  var $i30: i32;
  var $p90: ref;
  var $p91: ref;
  var $i92: i1;
  var $i93: i32;
  var $i94: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !17085, metadata !8090), !dbg !17086, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10834, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10834, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10834, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10835, 19} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 728);
  $p6 := $add.ref($add.ref($p0, 728), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10835, 22} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  // WARNING: %8 = load i32, i32* %7, align 8, !dbg !8101, !verifier.code !8092
  call {:cexpr "rd_curr"} boogie_si_record_i32($i7);
  // WARNING: call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !17096, metadata !8090), !dbg !17097, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 13} true;
  assume {:verifier.code 0} true;
  $i8 := $slt.i32(0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 7} true;
  assume {:verifier.code 0} true;
  $i9, $i10 := $i7, 0;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 7} true;
  assume {:verifier.code 0} true;
  $i11, $i12 := 0, $i7;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10883, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10839, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 728);
  $p14 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10839, 17} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10839, 24} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10839, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p15, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 30} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 728);
  $p19 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 33} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 40} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 38} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p20, $mul.ref($i21, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 66} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p20, $mul.ref($i21, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 66} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 70} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i64($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10840, 7} true;
  assume {:verifier.code 0} true;
  $i27, $i28 := $i12, $i11;
  assume {:branchcond $i26} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i26 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10841, 5} true;
  assume {:verifier.code 0} true;
  $i29, $i30 := $i27, $i28;
  goto $bb8;
$bb7:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10888, 9} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 728);
  $p91 := $add.ref($add.ref($p0, 728), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10888, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p91, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10889, 13} true;
  assume {:verifier.code 0} true;
  $i92 := $sgt.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10889, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb31, $bb32;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10845, 26} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p15, $mul.ref($i16, 16));
  $p32 := $add.ref($add.ref($p15, $mul.ref($i16, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10845, 33} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i16($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10845, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i16.i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10845, 38} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10845, 7} true;
  assume {:verifier.code 0} true;
  $i36, $i37 := $i12, $i11;
  assume {:branchcond $i35} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i35 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10846, 5} true;
  assume {:verifier.code 0} true;
  $i29, $i30 := $i36, $i37;
  goto $bb8;
$bb11:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  call devirtbounce(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10851, 18} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p15, $mul.ref($i16, 16));
  $p39 := $add.ref($p15, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10851, 25} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i16($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10851, 8} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i16.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10851, 29} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i32($i41, 32792);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10851, 38} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10851, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10853, 11} true;
  assume {:verifier.code 0} true;
  call $i44 := velocity_receive_frame($p0, $i12);
  // WARNING: %43 = call i32 @velocity_receive_frame(%struct.velocity_info* %0, i32 %.18), !dbg !8141, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10855, 13} true;
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10855, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10861, 20} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p15, $mul.ref($i16, 16));
  $p51 := $add.ref($p15, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10861, 27} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i16($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10861, 10} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i16.i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10861, 31} true;
  assume {:verifier.code 0} true;
  $i54 := $and.i32($i53, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10861, 36} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.i32($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10861, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb19, $bb20;
$bb15:
  assume ($i45 == 1);
  $p46 := $add.ref($add.ref($p3, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10856, 34} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i64($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10856, 45} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 1);
  $p49 := $add.ref($add.ref($p3, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10856, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10857, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10860, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10873, 43} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p15, $mul.ref($i16, 16)), 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10873, 43} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i16($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10873, 24} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i16.i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10873, 48} true;
  assume {:verifier.code 0} true;
  $i77 := $or.i32($i76, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10873, 14} true;
  assume {:verifier.code 0} true;
  $i78 := $trunc.i32.i16($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10873, 7} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p15, $mul.ref($i16, 16)), 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10873, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10874, 21} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i12, 1);
  // WARNING: %90 = add nsw i32 %.18, 1, !dbg !8189, !verifier.code !8092
  call {:cexpr "rd_curr"} boogie_si_record_i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10875, 24} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 896);
  $p82 := $add.ref($p0, 896);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10875, 32} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10875, 15} true;
  assume {:verifier.code 0} true;
  $i84 := $sge.i32($i80, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10875, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb25, $bb26;
$bb19:
  assume ($i55 == 1);
  $p56 := $add.ref($add.ref($p3, 264), 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10862, 37} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i64($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10862, 51} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i64($i57, 1);
  $p59 := $add.ref($add.ref($p3, 264), 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10862, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p59, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10863, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10866, 20} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p15, $mul.ref($i16, 16));
  $p61 := $add.ref($p15, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10866, 27} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i16($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10866, 10} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i16.i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10866, 31} true;
  assume {:verifier.code 0} true;
  $i64 := $and.i32($i63, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10866, 36} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10866, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i65 == 1);
  $p66 := $add.ref($add.ref($p3, 264), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10867, 39} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i64($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10867, 55} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 1);
  $p69 := $add.ref($add.ref($p3, 264), 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10867, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10868, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  $p70 := $add.ref($add.ref($p3, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10871, 32} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i64($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10871, 43} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i71, 1);
  $p73 := $add.ref($add.ref($p3, 264), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10871, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p73, $i72);
  assume {:verifier.code 0} true;
  goto $bb18;
$bb25:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10877, 3} true;
  assume {:verifier.code 0} true;
  $i85 := 0;
  goto $bb27;
$bb26:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  $i85 := $i80;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10880, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i32($i11, 1);
  // WARNING: %98 = add nsw i32 %.09, 1, !dbg !8197, !verifier.code !8092
  call {:cexpr "works"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 13} true;
  assume {:verifier.code 0} true;
  $i87 := $slt.i32($i86, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 7} true;
  assume {:verifier.code 0} true;
  $i11, $i12, $i88, $i89 := $i86, $i85, $i85, $i86;
  assume {:branchcond $i87} true;
  goto $bb28, $bb29;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 7} true;
  assume {:verifier.code 0} true;
  assume ($i87 == 1);
  goto $bb4;
$bb29:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 7} true;
  assume {:verifier.code 0} true;
  $i9, $i10 := $i88, $i89;
  goto $bb3;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10882, 15} true;
  assume {:verifier.code 0} true;
  $i29, $i30 := $i9, $i10;
  goto $bb8;
$bb31:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10891, 15} true;
  assume {:verifier.code 0} true;
  call $i93 := velocity_rx_refill($p0);
  // WARNING: %108 = call i32 @velocity_rx_refill(%struct.velocity_info* %0), !dbg !8207, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10893, 17} true;
  assume {:verifier.code 0} true;
  $i94 := $sgt.i32($i93, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10893, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb33, $bb34;
$bb32:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb33:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10895, 7} true;
  assume {:verifier.code 0} true;
  call velocity_give_many_rx_descs($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10897, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10900, 3} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10904, 3} true;
  assume {:verifier.code 0} true;
  $r := $i30;
  $exn := false;
  return;
}
const ldv___ldv_spin_lock_83: ref;
axiom (ldv___ldv_spin_lock_83 == $sub.ref(0, 457047));
procedure  ldv___ldv_spin_lock_83($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15890, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15891, 3} true;
  assume {:verifier.code 0} true;
  call __ldv_spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15893, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_tx_srv: ref;
axiom (velocity_tx_srv == $sub.ref(0, 458079));
procedure  velocity_tx_srv($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i16;
  var $i46: i32;
  var $i47: i1;
  var $i48: i32;
  var $i49: i32;
  var $i53: i32;
  var $i54: i1;
  var $i55: i32;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $i59: i16;
  var $i60: i32;
  var $i61: i1;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i16;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i16;
  var $i83: i32;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i16;
  var $i93: i32;
  var $i94: i32;
  var $i95: i1;
  var $p96: ref;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i16;
  var $i103: i32;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $p110: ref;
  var $i111: i64;
  var $i112: i64;
  var $p113: ref;
  var $p114: ref;
  var $i115: i64;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i32;
  var $i120: i64;
  var $i121: i64;
  var $p122: ref;
  var $i123: i64;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i32;
  var $i128: i32;
  var $i129: i64;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i32;
  var $p134: ref;
  var $p135: ref;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i1;
  var $i27: i32;
  var $i28: i32;
  var $i140: i32;
  var $i141: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i32;
  var $i142: i64;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $i148: i32;
  var $i149: i64;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $i153: i32;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i157: i32;
  var $i158: i32;
  var $i159: i1;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i160: i32;
  var $i161: i32;
  var $i8: i32;
  var $i9: i32;
  var $p162: ref;
  var $p163: ref;
  var $i164: i1;
  var $i165: i8;
  var $i166: i1;
  var $i167: i1;
  var $p168: ref;
  var $i169: i32;
  var $i170: i64;
  var $i171: i64;
  var $i172: i1;
  var $p173: ref;
  var $p174: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !17224, metadata !8090), !dbg !17225, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !17226, metadata !8090), !dbg !17227, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10578, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10578, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10578, 29} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 264);
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device_stats* %4, i64 0, metadata !17233, metadata !8090), !dbg !17234, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 576);
  $p5 := $add.ref($p0, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $slt.i32(0, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 7} true;
  assume {:verifier.code 0} true;
  $i8, $i9 := 0, 0;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 7} true;
  assume {:verifier.code 0} true;
  $i10, $i11, $i12 := 0, 0, 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10647, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10582, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10582, 15} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 576);
  $p15 := $add.ref($add.ref($p0, 576), 36);
  $p16 := $add.ref($add.ref($add.ref($p0, 576), 36), $mul.ref($i13, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10582, 9} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  // WARNING: %14 = load i32, i32* %13, align 4, !dbg !8109, !verifier.code !8092
  call {:cexpr "idx"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 576);
  $p20 := $add.ref($add.ref($p0, 576), 4);
  $p21 := $add.ref($add.ref($add.ref($p0, 576), 4), $mul.ref($i18, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $sgt.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  $i24, $i25, $i26 := $i11, $i17, $i10;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  $i27, $i28 := $i10, $i17;
  goto $bb9;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i23 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb9:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10633, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10585, 8} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10585, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 576);
  $p31 := $add.ref($add.ref($p0, 576), 56);
  $p32 := $add.ref($add.ref($add.ref($p0, 576), 56), $mul.ref($i29, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10585, 8} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10585, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10585, 29} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p33, $mul.ref($i34, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10586, 12} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10586, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 576);
  $p38 := $add.ref($add.ref($p0, 576), 88);
  $p39 := $add.ref($add.ref($add.ref($p0, 576), 88), $mul.ref($i36, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10586, 12} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10586, 35} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10586, 33} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p40, $mul.ref($i41, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10587, 26} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p33, $mul.ref($i34, 64));
  $p44 := $add.ref($add.ref($p33, $mul.ref($i34, 64)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10587, 33} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i16($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10587, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i16.i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10587, 38} true;
  assume {:verifier.code 0} true;
  $i47 := $slt.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10587, 7} true;
  assume {:verifier.code 0} true;
  $i48, $i49 := $i28, $i27;
  assume {:branchcond $i47} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i47 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10588, 5} true;
  assume {:verifier.code 0} true;
  $i50, $i51, $i52 := $i11, $i48, $i49;
  goto $bb13;
$bb12:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10638, 3} true;
  assume {:verifier.code 0} true;
  $i142 := $sext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10638, 9} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p0, 576);
  $p144 := $add.ref($add.ref($p0, 576), 36);
  $p145 := $add.ref($add.ref($add.ref($p0, 576), 36), $mul.ref($i142, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10638, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p145, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 13} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p0, 896);
  $p147 := $add.ref($add.ref($p0, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 21} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i32($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 29} true;
  assume {:verifier.code 0} true;
  $i149 := $sext.i32.i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 35} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p0, 576);
  $p151 := $add.ref($add.ref($p0, 576), 4);
  $p152 := $add.ref($add.ref($add.ref($p0, 576), 4), $mul.ref($i149, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 29} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i32($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 27} true;
  assume {:verifier.code 0} true;
  $i154 := $sub.i32($i148, $i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 49} true;
  assume {:verifier.code 0} true;
  $i155 := $sle.i32($i154, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10639, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb36, $bb37;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10593, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i32($i27, 1);
  // WARNING: %44 = add nsw i32 %.011, 1, !dbg !8140, !verifier.code !8092
  call {:cexpr "works"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10594, 11} true;
  assume {:verifier.code 0} true;
  $i54 := $sgt.i32($i27, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10594, 7} true;
  assume {:verifier.code 0} true;
  $i55, $i56 := $i28, $i53;
  assume {:branchcond $i54} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i54 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10595, 5} true;
  assume {:verifier.code 0} true;
  $i50, $i51, $i52 := $i11, $i55, $i56;
  goto $bb13;
$bb16:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10599, 26} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p33, $mul.ref($i34, 64));
  $p58 := $add.ref($p33, $mul.ref($i34, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10599, 33} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i16($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10599, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i16.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10599, 38} true;
  assume {:verifier.code 0} true;
  $i61 := $slt.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10599, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i61 == 1);
  $p62 := $add.ref($add.ref($p2, 264), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10600, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i64($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10600, 41} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 1);
  $p65 := $add.ref($add.ref($p2, 264), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10600, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p65, $i64);
  $p66 := $add.ref($add.ref($p2, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10601, 32} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i64($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10601, 43} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 1);
  $p69 := $add.ref($add.ref($p2, 264), 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10601, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10602, 20} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p33, $mul.ref($i34, 64));
  $p71 := $add.ref($p33, $mul.ref($i34, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10602, 27} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i16($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10602, 10} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i16.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10602, 31} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i32($i73, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10602, 38} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10602, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb20, $bb21;
$bb19:
  assume !(($i61 == 1));
  $p110 := $add.ref($add.ref($p2, 264), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10623, 32} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i64($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10623, 43} true;
  assume {:verifier.code 0} true;
  $i112 := $add.i64($i111, 1);
  $p113 := $add.ref($add.ref($p2, 264), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10623, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p113, $i112);
  $p114 := $add.ref($add.ref($p2, 264), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 30} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i64($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 66} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p40, $mul.ref($i41, 72));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 66} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 72} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p117, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 72} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 41} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i32.i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 39} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i64($i115, $i120);
  $p122 := $add.ref($add.ref($p2, 264), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10624, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p122, $i121);
  assume {:verifier.code 0} true;
  goto $bb32;
$bb20:
  assume ($i75 == 1);
  $p76 := $add.ref($add.ref($p2, 264), 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10603, 43} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i64($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10603, 63} true;
  assume {:verifier.code 0} true;
  $i78 := $add.i64($i77, 1);
  $p79 := $add.ref($add.ref($p2, 264), 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10603, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10604, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10607, 20} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p33, $mul.ref($i34, 64));
  $p81 := $add.ref($p33, $mul.ref($i34, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10607, 27} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i16($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10607, 10} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.i16.i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10607, 31} true;
  assume {:verifier.code 0} true;
  $i84 := $and.i32($i83, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10607, 38} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10607, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i85 == 1);
  $p86 := $add.ref($add.ref($p2, 264), 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10608, 41} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i64($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10608, 59} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 1);
  $p89 := $add.ref($add.ref($p2, 264), 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10608, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p89, $i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10609, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10612, 20} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p33, $mul.ref($i34, 64));
  $p91 := $add.ref($p33, $mul.ref($i34, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10612, 27} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i16($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10612, 10} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i16.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10612, 31} true;
  assume {:verifier.code 0} true;
  $i94 := $and.i32($i93, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10612, 38} true;
  assume {:verifier.code 0} true;
  $i95 := $ne.i32($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10612, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i95 == 1);
  $p96 := $add.ref($add.ref($p2, 264), 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10613, 41} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i64($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10613, 59} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i97, 1);
  $p99 := $add.ref($add.ref($p2, 264), 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10613, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10614, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10617, 20} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p33, $mul.ref($i34, 64));
  $p101 := $add.ref($p33, $mul.ref($i34, 64));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10617, 27} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i16($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10617, 10} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i16.i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10617, 31} true;
  assume {:verifier.code 0} true;
  $i104 := $and.i32($i103, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10617, 37} true;
  assume {:verifier.code 0} true;
  $i105 := $ne.i32($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10617, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i105 == 1);
  $p106 := $add.ref($add.ref($p2, 264), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10618, 40} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i64($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10618, 57} true;
  assume {:verifier.code 0} true;
  $i108 := $add.i64($i107, 1);
  $p109 := $add.ref($add.ref($p2, 264), 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10618, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p109, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10619, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10622, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10627, 3} true;
  assume {:verifier.code 0} true;
  call velocity_free_tx_buf($p0, $p42, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10628, 25} true;
  assume {:verifier.code 0} true;
  $i123 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10628, 31} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p0, 576);
  $p125 := $add.ref($add.ref($p0, 576), 4);
  $p126 := $add.ref($add.ref($add.ref($p0, 576), 4), $mul.ref($i123, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10628, 25} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i32($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10628, 45} true;
  assume {:verifier.code 0} true;
  $i128 := $sub.i32($i127, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10628, 3} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10628, 9} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 576);
  $p131 := $add.ref($add.ref($p0, 576), 4);
  $p132 := $add.ref($add.ref($add.ref($p0, 576), 4), $mul.ref($i129, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10628, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p132, $i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10629, 14} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i32($i28, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10629, 27} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p0, 896);
  $p135 := $add.ref($add.ref($p0, 896), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10629, 35} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i32($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10629, 19} true;
  assume {:verifier.code 0} true;
  $i137 := $srem.i32($i133, $i136);
  // WARNING: %144 = srem i32 %140, %143, !dbg !8229, !verifier.code !8092
  call {:cexpr "idx"} boogie_si_record_i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 27} true;
  assume {:verifier.code 0} true;
  $i139 := $sgt.i32($i138, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  $i27, $i28, $i140, $i141 := $i53, $i137, $i137, $i53;
  assume {:branchcond $i139} true;
  goto $bb33, $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  assume ($i139 == 1);
  goto $bb9;
$bb34:
  assume !(($i139 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 7} true;
  assume {:verifier.code 0} true;
  $i24, $i25, $i26 := $i11, $i140, $i141;
  goto $bb8;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10632, 29} true;
  assume {:verifier.code 0} true;
  $i50, $i51, $i52 := $i24, $i25, $i26;
  goto $bb13;
$bb36:
  assume ($i155 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10641, 3} true;
  assume {:verifier.code 0} true;
  $i156 := 1;
  goto $bb38;
$bb37:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  $i156 := $i12;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10644, 15} true;
  assume {:verifier.code 0} true;
  $i157 := $add.i32($i50, 1);
  // WARNING: %168 = add nsw i32 %.0215, 1, !dbg !8247, !verifier.code !8092
  call {:cexpr "qnum"} boogie_si_record_i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 23} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 12} true;
  assume {:verifier.code 0} true;
  $i159 := $slt.i32($i157, $i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 7} true;
  assume {:verifier.code 0} true;
  $i10, $i11, $i12, $i160, $i161 := $i52, $i157, $i156, $i156, $i52;
  assume {:branchcond $i159} true;
  goto $bb39, $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 7} true;
  assume {:verifier.code 0} true;
  assume ($i159 == 1);
  goto $bb4;
$bb40:
  assume !(($i159 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10646, 7} true;
  assume {:verifier.code 0} true;
  $i8, $i9 := $i160, $i161;
  goto $bb3;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10652, 68} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10652, 68} true;
  assume {:verifier.code 0} true;
  $p163 := $load.ref($M.0, $p162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10652, 13} true;
  assume {:verifier.code 0} true;
  call $i164 := netif_queue_stopped($p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10652, 11} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i1.i8($i164);
  // WARNING: %177 = zext i1 %176 to i8, !dbg !8253, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 14} true;
  assume {:verifier.code 0} true;
  $i166 := $trunc.i8.i1($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i166} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i166 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 30} true;
  assume {:verifier.code 0} true;
  $i167 := $eq.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb45, $bb46;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i166 == 1));
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  goto $bb49;
$bb45:
  assume ($i167 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 62} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 62} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i32($M.0, $p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 40} true;
  assume {:verifier.code 0} true;
  $i170 := $zext.i32.i64($i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 73} true;
  assume {:verifier.code 0} true;
  $i171 := $and.i64($i170, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 80} true;
  assume {:verifier.code 0} true;
  $i172 := $eq.i64($i171, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i172} true;
  goto $bb47, $bb48;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i167 == 1));
  goto $bb44;
$bb47:
  assume ($i172 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10656, 28} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10656, 28} true;
  assume {:verifier.code 0} true;
  $p174 := $load.ref($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10656, 5} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10658, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10654, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i172 == 1));
  goto $bb44;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10661, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const napi_complete: ref;
axiom (napi_complete == $sub.ref(0, 459111));
procedure  napi_complete($p0: ref);
const velocity_free_tx_buf: ref;
axiom (velocity_free_tx_buf == $sub.ref(0, 460143));
procedure  velocity_free_tx_buf($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $p12: ref;
  var $i13: i32;
  var $i14: i64;
  var $i15: i1;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i16;
  var $i28: i32;
  var $i29: i32;
  var $i30: i64;
  var $i31: i1;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i16;
  var $i41: i64;
  var $i42: i32;
  var $i43: i32;
  var $i44: i1;
  var $i11: i32;
  var $p45: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10311, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10311, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10312, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10312, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10312, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10312, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $slt.i32(0, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 9} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb6;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10336, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10317, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10317, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10317, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i32.i64($i13);
  // WARNING: %16 = zext i32 %15 to i64, !dbg !8115, !verifier.code !8092
  call {:cexpr "__max1"} boogie_si_record_i64($i14);
  // WARNING: call void @llvm.dbg.value(metadata i64 %16, i64 0, metadata !17435, metadata !8090), !dbg !17436, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10319, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $ugt.i64($i14, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10319, 14} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10319, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $i14;
  goto $bb10;
$bb9:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10319, 14} true;
  assume {:verifier.code 0} true;
  $i16 := 60;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10319, 14} true;
  assume {:verifier.code 0} true;
  // WARNING: %21 = phi i64 [ %16, %18 ], [ 60, %19 ], !dbg !8126, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10320, 11} true;
  assume {:verifier.code 0} true;
  call $p17 := skb_end_pointer($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10322, 57} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10322, 57} true;
  assume {:verifier.code 0} true;
  $p19 := $p18;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10322, 57} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10322, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10322, 66} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10322, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10324, 36} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10324, 40} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p2, 8);
  $p25 := $add.ref($add.ref($p2, 8), $mul.ref($i23, 8));
  $p26 := $add.ref($add.ref($add.ref($p2, 8), $mul.ref($i23, 8)), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10324, 50} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i16($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10324, 30} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i16.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10324, 55} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i32($i28, $sub.i32(0, 32769));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10324, 20} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i29);
  // WARNING: %36 = sext i32 %35 to i64, !dbg !8146, !verifier.code !8092
  call {:cexpr "__max2___0"} boogie_si_record_i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10325, 27} true;
  assume {:verifier.code 0} true;
  $i31 := $ugt.i64($i16, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10325, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  $i33 := $i16;
  goto $bb16;
$bb13:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10325, 16} true;
  assume {:verifier.code 0} true;
  $i32 := $i16;
  goto $bb15;
$bb14:
  assume !(($i31 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10325, 16} true;
  assume {:verifier.code 0} true;
  $i32 := $i30;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10325, 16} true;
  assume {:verifier.code 0} true;
  // WARNING: %41 = phi i64 [ %21, %38 ], [ %36, %39 ], !dbg !8155, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10326, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $i32;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 34} true;
  assume {:verifier.code 0} true;
  $p34 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 34} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 39} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 47} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 16);
  $p38 := $add.ref($add.ref($p1, 16), $mul.ref($i36, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 39} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i64($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 69} true;
  assume {:verifier.code 0} true;
  $i40 := $trunc.i64.i16($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 59} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i16.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10330, 5} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p35, $i39, $i41, 1, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10332, 11} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i32($i11, 1);
  // WARNING: %52 = add nsw i32 %.012, 1, !dbg !8165, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 21} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 11} true;
  assume {:verifier.code 0} true;
  $i44 := $slt.i32($i42, $i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $i42;
  assume {:branchcond $i44} true;
  goto $bb17, $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 9} true;
  assume {:verifier.code 0} true;
  assume ($i44 == 1);
  goto $bb6;
$bb18:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10335, 9} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10341, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10345, 3} true;
  assume {:verifier.code 0} true;
  call dev_kfree_skb_irq($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10346, 11} true;
  assume {:verifier.code 0} true;
  $p45 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10346, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10348, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_queue_stopped: ref;
axiom (netif_queue_stopped == $sub.ref(0, 461175));
procedure  netif_queue_stopped($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7653, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7654, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := netif_tx_queue_stopped($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7654, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  // WARNING: %4 = zext i1 %3 to i8, !dbg !8099, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i8($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7656, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7656, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const netif_tx_queue_stopped: ref;
axiom (netif_tx_queue_stopped == $sub.ref(0, 462207));
procedure  netif_tx_queue_stopped($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7641, 79} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 424);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7641, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  // WARNING: %3 = call i32 @constant_test_bit(i64 0, i64* %2), !dbg !8096, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7643, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7643, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const dev_kfree_skb_irq: ref;
axiom (dev_kfree_skb_irq == $sub.ref(0, 463239));
procedure  dev_kfree_skb_irq($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7677, 3} true;
  assume {:verifier.code 0} true;
  call __dev_kfree_skb_irq($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7679, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __dev_kfree_skb_irq: ref;
axiom (__dev_kfree_skb_irq == $sub.ref(0, 464271));
procedure  __dev_kfree_skb_irq($p0: ref, $i1: i32);
const velocity_receive_frame: ref;
axiom (velocity_receive_frame == $sub.ref(0, 465303));
procedure  velocity_receive_frame($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i16;
  var $i19: i32;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $i58: i64;
  var $p59: ref;
  var $i60: i32;
  var $i61: i64;
  var $i62: i64;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $i66: i16;
  var $i67: i32;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $i76: i1;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i64;
  var $p83: ref;
  var $p84: ref;
  var $i85: i32;
  var $i86: i64;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i64;
  var $p91: ref;
  var $p92: ref;
  var $i93: i32;
  var $i94: i64;
  var $p95: ref;
  var $i96: i32;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i16;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $i106: i16;
  var $i107: i32;
  var $i108: i32;
  var $i109: i1;
  var $p110: ref;
  var $p111: ref;
  var $i112: i16;
  var $i113: i32;
  var $i114: i16;
  var $i115: i16;
  var $p116: ref;
  var $i117: i32;
  var $i118: i16;
  var $p119: ref;
  var $p120: ref;
  var $i121: i32;
  var $p122: ref;
  var $i123: i64;
  var $i124: i64;
  var $i125: i64;
  var $p126: ref;
  var $p127: ref;
  var $i128: i64;
  var $i129: i64;
  var $p130: ref;
  var $i38: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %0, i64 0, metadata !17528, metadata !8090), !dbg !17529, !verifier.code !8092
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10750, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10750, 20} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10750, 29} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10751, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 728);
  $p7 := $add.ref($add.ref($p0, 728), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10751, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10751, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10751, 27} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p8, $mul.ref($i9, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10752, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 728);
  $p12 := $add.ref($add.ref($p0, 728), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10752, 17} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10752, 24} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10752, 22} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10753, 23} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p13, $mul.ref($i14, 16));
  $p17 := $add.ref($add.ref($p13, $mul.ref($i14, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10753, 30} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i16($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10753, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10753, 34} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i32($i19, 16383);
  // WARNING: %21 = and i32 %20, 16383, !dbg !8117, !verifier.code !8089
  call {:cexpr "pkt_len"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10754, 18} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p13, $mul.ref($i14, 16));
  $p22 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10754, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i16($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10754, 8} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10754, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, 768);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10754, 36} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10754, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10755, 9} true;
  assume {:verifier.code 0} true;
  $i27 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10755, 18} true;
  assume {:verifier.code 0} true;
  $i28 := $sgt.i32($i27, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10755, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10757, 82} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10757, 82} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10757, 91} true;
  assume {:verifier.code 0} true;
  $p31 := $p30;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10757, 64} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10757, 7} true;
  assume {:verifier.code 0} true;
  call $i33 := printk.ref.ref(.str.64, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10759, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  $p34 := $add.ref($add.ref($p4, 264), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10762, 38} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10762, 55} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 1);
  $p37 := $add.ref($add.ref($p4, 264), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10762, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p37, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10763, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(0, 22);
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10823, 1} true;
  assume {:verifier.code 0} true;
  $r := $i38;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10767, 18} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p13, $mul.ref($i14, 16));
  $p40 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10767, 25} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10767, 8} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10767, 29} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i32($i42, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10767, 37} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10767, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i44 == 1);
  $p45 := $add.ref($add.ref($p4, 264), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10768, 31} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10768, 41} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i64($i46, 1);
  $p48 := $add.ref($add.ref($p4, 264), 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10768, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10769, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10773, 18} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p8, $mul.ref($i9, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10773, 18} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10773, 7} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p2, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 33} true;
  assume {:verifier.code 0} true;
  $p51 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 33} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 47} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p8, $mul.ref($i9, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 47} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i64($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 71} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 728);
  $p56 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 74} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 56} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10774, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_cpu($p52, $i54, $i58, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10776, 30} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10776, 30} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10776, 8} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i32.i64($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10776, 36} true;
  assume {:verifier.code 0} true;
  $i62 := $and.i64($i61, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10776, 44} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i64($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10776, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10777, 20} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p13, $mul.ref($i14, 16));
  $p65 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10777, 27} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i16($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10777, 10} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i16.i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10777, 31} true;
  assume {:verifier.code 0} true;
  $i68 := $and.i32($i67, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10777, 37} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10777, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb13:
  assume ($i69 == 1);
  $p70 := $add.ref($add.ref($p4, 264), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10778, 40} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i64($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10778, 57} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i71, 1);
  $p73 := $add.ref($add.ref($p4, 264), 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10778, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p73, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10779, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(0, 22);
  goto $bb6;
$bb14:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10783, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10787, 24} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.18, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10787, 3} true;
  assume {:verifier.code 0} true;
  call velocity_rx_csum($p15, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10788, 9} true;
  assume {:verifier.code 0} true;
  call $i75 := velocity_rx_copy($p2, $i20, $p0);
  // WARNING: %90 = call i32 @velocity_rx_copy(%struct.sk_buff** %3, i32 %21, %struct.velocity_info* %0), !dbg !8187, !verifier.code !8089
  call {:cexpr "tmp"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10790, 11} true;
  assume {:verifier.code 0} true;
  $i76 := $slt.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10790, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10792, 32} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.18, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10792, 5} true;
  assume {:verifier.code 0} true;
  call velocity_iph_realign($p0, $p77, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10793, 14} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p8, $mul.ref($i9, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10793, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 34} true;
  assume {:verifier.code 0} true;
  $p79 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 34} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 48} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p8, $mul.ref($i9, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 48} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i64($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 72} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 728);
  $p84 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 75} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 57} true;
  assume {:verifier.code 0} true;
  $i86 := $sext.i32.i64($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10794, 5} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p80, $i82, $i86, 2, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10797, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i76 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 38} true;
  assume {:verifier.code 0} true;
  $p87 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 38} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 52} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p8, $mul.ref($i9, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 52} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i64($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 76} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 728);
  $p92 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 79} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 61} true;
  assume {:verifier.code 0} true;
  $i94 := $sext.i32.i64($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10799, 5} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_for_device($p88, $i90, $i94, 2);
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10804, 11} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.18, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10804, 40} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i32($i20, $sub.i32(0, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10804, 3} true;
  assume {:verifier.code 0} true;
  call $p97 := skb_put($p95, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10805, 34} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.18, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10805, 45} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10805, 45} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10805, 19} true;
  assume {:verifier.code 0} true;
  call $i101 := eth_type_trans($p98, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10805, 3} true;
  assume {:verifier.code 0} true;
  $p102 := $load.ref($M.18, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10805, 8} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p102, 126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10805, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p103, $i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10807, 18} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p13, $mul.ref($i14, 16));
  $p105 := $add.ref($p13, $mul.ref($i14, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10807, 25} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i16($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10807, 8} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i16.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10807, 29} true;
  assume {:verifier.code 0} true;
  $i108 := $and.i32($i107, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10807, 36} true;
  assume {:verifier.code 0} true;
  $i109 := $ne.i32($i108, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10807, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i109 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10809, 35} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p13, $mul.ref($i14, 16)), 4);
  $p111 := $add.ref($add.ref($p13, $mul.ref($i14, 16)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10809, 42} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i16($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10809, 25} true;
  assume {:verifier.code 0} true;
  $i113 := $zext.i16.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10809, 25} true;
  assume {:verifier.code 0} true;
  $i114 := $trunc.i32.i16($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10809, 15} true;
  assume {:verifier.code 0} true;
  call $i115 := __fswab16($i114);
  // WARNING: %134 = call zeroext i16 @__fswab16(i16 zeroext %133), !dbg !8236, !verifier.code !8089
  call {:cexpr "tmp___0"} boogie_si_record_i16($i115);
  // WARNING: call void @llvm.dbg.value(metadata i16 %134, i64 0, metadata !17674, metadata !8090), !dbg !17675, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10811, 28} true;
  assume {:verifier.code 0} true;
  $p116 := $load.ref($M.18, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10811, 38} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i16.i32($i115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10811, 38} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i32.i16($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10811, 5} true;
  assume {:verifier.code 0} true;
  call $p119 := __vlan_hwaccel_put_tag($p116, 129, $i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10813, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i109 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10817, 21} true;
  assume {:verifier.code 0} true;
  $p120 := $load.ref($M.18, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10817, 3} true;
  assume {:verifier.code 0} true;
  call $i121 := netif_receive_skb($p120);
  $p122 := $add.ref($add.ref($p4, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10818, 28} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i64($M.0, $p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10818, 39} true;
  assume {:verifier.code 0} true;
  $i124 := $sext.i32.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10818, 37} true;
  assume {:verifier.code 0} true;
  $i125 := $add.i64($i123, $i124);
  $p126 := $add.ref($add.ref($p4, 264), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10818, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p126, $i125);
  $p127 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10819, 30} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i64($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10819, 41} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i64($i128, 1);
  $p130 := $add.ref($p4, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10819, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p130, $i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10821, 3} true;
  assume {:verifier.code 0} true;
  $i38 := 0;
  goto $bb6;
}
const dma_sync_single_for_cpu: ref;
axiom (dma_sync_single_for_cpu == $sub.ref(0, 466335));
procedure  dma_sync_single_for_cpu($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !17695, metadata !8090), !dbg !17696, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !17697, metadata !8090), !dbg !17698, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !17699, metadata !8090), !dbg !17700, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7005, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7007, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := valid_dma_direction($i3);
  // WARNING: %6 = call i32 @valid_dma_direction(i32 %3), !dbg !8104, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7008, 41} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7008, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7008, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7008, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !8109, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7010, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7010, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  call devirtbounce.4(0, .str.7, 103, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7014, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7019, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7019, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7019, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7019, 48} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7019, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7024, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7024, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call devirtbounce.17($p16, $p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7026, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7030, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_sync_single_for_cpu($p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7032, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_rx_csum: ref;
axiom (velocity_rx_csum == $sub.ref(0, 467367));
procedure  velocity_rx_csum($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i16;
  var $i28: i16;
  var $i29: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10670, 3} true;
  assume {:verifier.code 0} true;
  call skb_checksum_none_assert($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10672, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 4);
  $p3 := $add.ref($add.ref($p0, 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10672, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10672, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10672, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10672, 34} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10672, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10673, 20} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 4);
  $p9 := $add.ref($add.ref($p0, 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10673, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10673, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10673, 31} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i11, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10673, 37} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10673, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb3:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10674, 31} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 4);
  $p15 := $add.ref($add.ref($p0, 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10674, 38} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10674, 12} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10674, 42} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i17, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10674, 48} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10674, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb5:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10675, 24} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 4);
  $p21 := $add.ref($add.ref($p0, 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10675, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10675, 14} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10675, 35} true;
  assume {:verifier.code 0} true;
  $i24 := $and.i32($i23, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10675, 41} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10675, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10676, 11} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10692, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10680, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10683, 12} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10683, 22} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i16($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10683, 22} true;
  assume {:verifier.code 0} true;
  $i28 := $and.i16($i27, $sub.i16(0, 13));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10683, 22} true;
  assume {:verifier.code 0} true;
  $i29 := $or.i16($i28, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10683, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p26, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10684, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10687, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10690, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
}
const velocity_rx_copy: ref;
axiom (velocity_rx_copy == $sub.ref(0, 468399));
procedure  velocity_rx_copy($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i16;
  var $i13: i16;
  var $i14: i16;
  var $i15: i8;
  var $p16: ref;
  var $i17: i16;
  var $i18: i16;
  var $i19: i16;
  var $i20: i16;
  var $i21: i16;
  var $i22: i16;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff** %0, i64 0, metadata !17789, metadata !8090), !dbg !17790, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata %struct.velocity_info* %2, i64 0, metadata !17793, metadata !8090), !dbg !17794, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10700, 18} true;
  assume {:verifier.code 0} true;
  $i3 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10700, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10700, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10702, 47} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10702, 47} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10702, 15} true;
  assume {:verifier.code 0} true;
  call $p7 := netdev_alloc_skb_ip_align($p6, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10704, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10704, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10704, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i27 := $sub.i32(0, 1);
  goto $bb6;
$bb3:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 29} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.18, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 39} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 39} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i16($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 39} true;
  assume {:verifier.code 0} true;
  $i13 := $lshr.i16($i12, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 39} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i16($i13, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i16.i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 16} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p7, 124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 26} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i16($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 26} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i16($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 26} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i16($i17, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 26} true;
  assume {:verifier.code 0} true;
  $i20 := $shl.i16($i19, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 26} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i16($i18, $sub.i16(0, 13));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 26} true;
  assume {:verifier.code 0} true;
  $i22 := $or.i16($i21, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10706, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p16, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10707, 59} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.18, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10707, 85} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p7, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10707, 85} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10707, 7} true;
  assume {:verifier.code 0} true;
  call skb_copy_from_linear_data($p23, $p25, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10709, 15} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p0, $p7);
  // WARNING: store %struct.sk_buff* %9, %struct.sk_buff** %0, align 8, !dbg !8123, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10712, 5} true;
  assume {:verifier.code 0} true;
  $i26 := 0;
  goto $bb5;
$bb4:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 1);
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10715, 3} true;
  assume {:verifier.code 0} true;
  $i27 := $i26;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10718, 3} true;
  assume {:verifier.code 0} true;
  $r := $i27;
  $exn := false;
  return;
}
const velocity_iph_realign: ref;
axiom (velocity_iph_realign == $sub.ref(0, 469431));
procedure  velocity_iph_realign($p0: ref, $p1: ref, $i2: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %1, i64 0, metadata !17830, metadata !8090), !dbg !17831, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10727, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10727, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10727, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10727, 36} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i64($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10727, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10727, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10729, 26} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10729, 26} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10729, 31} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10729, 58} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10729, 58} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10729, 64} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10729, 5} true;
  assume {:verifier.code 0} true;
  call llvm.memmove.p0i8.p0i8.i64($p10, $p12, $i13, 1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10730, 5} true;
  assume {:verifier.code 0} true;
  call skb_reserve($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10732, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 10735, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_sync_single_for_device: ref;
axiom (dma_sync_single_for_device == $sub.ref(0, 470463));
procedure  dma_sync_single_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i32)
{
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device* %0, i64 0, metadata !17852, metadata !8090), !dbg !17853, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !17854, metadata !8090), !dbg !17855, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !17856, metadata !8090), !dbg !17857, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7045, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := get_dma_ops($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7047, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := valid_dma_direction($i3);
  // WARNING: %6 = call i32 @valid_dma_direction(i32 %3), !dbg !8104, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7048, 41} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7048, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7048, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7048, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !8109, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7050, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7050, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  call devirtbounce.4(0, .str.7, 115, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7054, 5} true;
  assume {:verifier.code 0} true;
  assume false;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7059, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7059, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7059, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7059, 51} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7059, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7064, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7064, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  call devirtbounce.17($p16, $p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7066, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7070, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_sync_single_for_device($p0, $i1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7072, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_put: ref;
axiom (skb_put == $sub.ref(0, 471495));
procedure  skb_put($p0: ref, $i1: i32)
  returns ($r: ref);
const eth_type_trans: ref;
axiom (eth_type_trans == $sub.ref(0, 472527));
procedure  eth_type_trans($p0: ref, $p1: ref)
  returns ($r: i16);
const __fswab16: ref;
axiom (__fswab16 == $sub.ref(0, 473559));
procedure  __fswab16($i0: i16)
  returns ($r: i16)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i16;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i16;
  var $i8: i32;
  var $i9: i32;
  var $i10: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 36} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i16.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 46} true;
  assume {:verifier.code 0} true;
  $i2 := $shl.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i16($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 20} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i16.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 71} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 81} true;
  assume {:verifier.code 0} true;
  $i6 := $ashr.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 62} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 55} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 53} true;
  assume {:verifier.code 0} true;
  $i9 := $or.i32($i4, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6179, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const __vlan_hwaccel_put_tag: ref;
axiom (__vlan_hwaccel_put_tag == $sub.ref(0, 474591));
procedure  __vlan_hwaccel_put_tag($p0: ref, $i1: i16, $i2: i16)
  returns ($r: ref)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
  var $i6: i16;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !17913, metadata !8090), !dbg !17914, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i16 %1, i64 0, metadata !17915, metadata !8090), !dbg !17916, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7855, 8} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7855, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7856, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7856, 52} true;
  assume {:verifier.code 0} true;
  $i5 := $or.i32($i4, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7856, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i16($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7856, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7856, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7857, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const netif_receive_skb: ref;
axiom (netif_receive_skb == $sub.ref(0, 475623));
procedure  netif_receive_skb($p0: ref)
  returns ($r: i32);
const debug_dma_sync_single_for_device: ref;
axiom (debug_dma_sync_single_for_device == $sub.ref(0, 476655));
procedure  debug_dma_sync_single_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i32);
const llvm.memmove.p0i8.p0i8.i64: ref;
axiom (llvm.memmove.p0i8.p0i8.i64 == $sub.ref(0, 477687));
procedure  llvm.memmove.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const netdev_alloc_skb_ip_align: ref;
axiom (netdev_alloc_skb_ip_align == $sub.ref(0, 478719));
procedure  netdev_alloc_skb_ip_align($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !17929, metadata !8090), !dbg !17930, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7280, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := __netdev_alloc_skb_ip_align($p0, $i1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7282, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const skb_copy_from_linear_data: ref;
axiom (skb_copy_from_linear_data == $sub.ref(0, 479751));
procedure  skb_copy_from_linear_data($p0: ref, $p1: ref, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !17944, metadata !8090), !dbg !17945, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7347, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7347, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7347, 41} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7347, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p1, $p4, $i5, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7349, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __netdev_alloc_skb_ip_align: ref;
axiom (__netdev_alloc_skb_ip_align == $sub.ref(0, 480783));
procedure  __netdev_alloc_skb_ip_align($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !17957, metadata !8090), !dbg !17958, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !17959, metadata !8090), !dbg !17960, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7267, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := __netdev_alloc_skb($p0, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7270, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const skb_checksum_none_assert: ref;
axiom (skb_checksum_none_assert == $sub.ref(0, 481815));
procedure  skb_checksum_none_assert($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7357, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const debug_dma_sync_single_for_cpu: ref;
axiom (debug_dma_sync_single_for_cpu == $sub.ref(0, 482847));
procedure  debug_dma_sync_single_for_cpu($p0: ref, $i1: i64, $i2: i64, $i3: i32);
const velocity_set_int_opt: ref;
axiom (velocity_set_int_opt == $sub.ref(0, 483879));
procedure  velocity_set_int_opt($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32, $p5: ref, $p6: ref)
{
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32* %0, i64 0, metadata !17981, metadata !8090), !dbg !17982, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !17983, metadata !8090), !dbg !17984, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !17985, metadata !8090), !dbg !17986, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !17987, metadata !8090), !dbg !17988, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8284, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i1, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8284, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8285, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8286, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8287, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8287, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb6;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8307, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8287, 17} true;
  assume {:verifier.code 0} true;
  assume ($i8 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8288, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8288, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $sgt.i32($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8288, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb9, $bb10;
$bb6:
  assume !(($i8 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8287, 24} true;
  assume {:verifier.code 0} true;
  $i9 := $sgt.i32($i1, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8287, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8287, 7} true;
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb5;
$bb8:
  assume !(($i9 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8298, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $M.15;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8298, 18} true;
  assume {:verifier.code 0} true;
  $i14 := $sgt.i32($i13, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8298, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb13, $bb14;
$bb9:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8290, 7} true;
  assume {:verifier.code 0} true;
  call $i12 := printk.ref.ref.ref.i32.i32(.str.58, $p6, $p5, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8293, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8296, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8297, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb3;
$bb13:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8300, 7} true;
  assume {:verifier.code 0} true;
  call $i15 := printk.ref.ref.ref.i32(.str.59, $p6, $p5, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8302, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8305, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i1);
  assume {:verifier.code 0} true;
  goto $bb12;
}
const velocity_set_bool_opt: ref;
axiom (velocity_set_bool_opt == $sub.ref(0, 484911));
procedure  velocity_set_bool_opt($p0: ref, $i1: i32, $i2: i32, $i3: i32, $p4: ref, $p5: ref)
{
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32* %0, i64 0, metadata !18033, metadata !8090), !dbg !18034, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !18035, metadata !8090), !dbg !18036, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !18037, metadata !8090), !dbg !18038, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8316, 10} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8316, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $xor.i32($i3, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8316, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i6, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8316, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8317, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i1, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8317, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 12} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 24} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i9 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8320, 26} true;
  assume {:verifier.code 0} true;
  $i14 := $ugt.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8320, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb3:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $i3;
  goto $bb5;
$bb4:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 20} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i10, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8318, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8319, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8332, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8322, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := printk.ref.ref.ref(.str.60, $p5, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 12} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 24} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8328, 67} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8328, 63} true;
  assume {:verifier.code 0} true;
  havoc $p21;
  assume ((($i20 == 1) ==> ($p21 == .str.62)) && (($i20 != 1) ==> ($p21 == .str.63)));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8328, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := printk.ref.ref.ref.ref(.str.61, $p5, $p4, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 12} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 24} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb13, $bb14;
$bb9:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 20} true;
  assume {:verifier.code 0} true;
  $i18 := $i3;
  goto $bb11;
$bb10:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 20} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i16, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8324, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8326, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb13:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 20} true;
  assume {:verifier.code 0} true;
  $i25 := $i3;
  goto $bb15;
$bb14:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 20} true;
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $or.i32($i23, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 8329, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p0, $i26);
  assume {:verifier.code 0} true;
  goto $bb12;
}
const ioremap_nocache: ref;
axiom (ioremap_nocache == $sub.ref(0, 485943));
procedure  ioremap_nocache($i0: i64, $i1: i64)
  returns ($r: ref);
const of_get_property: ref;
axiom (of_get_property == $sub.ref(0, 486975));
procedure  of_get_property($p0: ref, $p1: ref, $p2: ref)
  returns ($r: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7768, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const of_address_to_resource: ref;
axiom (of_address_to_resource == $sub.ref(0, 488007));
procedure  of_address_to_resource($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device_node* %0, i64 0, metadata !18115, metadata !8090), !dbg !18116, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7776, 3} true;
  assume {:verifier.code 0} true;
  $r := $sub.i32(0, 22);
  $exn := false;
  return;
}
const resource_size: ref;
axiom (resource_size == $sub.ref(0, 489039));
procedure  resource_size($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6687, 38} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6687, 38} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.20, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6687, 70} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6687, 70} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.3, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6687, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64($i2, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6687, 77} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6687, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const pci_set_master: ref;
axiom (pci_set_master == $sub.ref(0, 490071));
procedure  pci_set_master($p0: ref);
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 491103));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6432, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6432, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 6432, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 492135));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref);
const alloc_etherdev_mqs: ref;
axiom (alloc_etherdev_mqs == $sub.ref(0, 493167));
procedure  alloc_etherdev_mqs($i0: i32, $i1: i32, $i2: i32)
  returns ($r: ref);
const ldv_alloc_etherdev_mqs: ref;
axiom (ldv_alloc_etherdev_mqs == $sub.ref(0, 494199));
procedure  ldv_alloc_etherdev_mqs($p0: ref, $i1: i32, $i2: i32, $i3: i32)
  returns ($r: ref)
{
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.net_device* %0, i64 0, metadata !18147, metadata !8090), !dbg !18148, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !18149, metadata !8090), !dbg !18150, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !18151, metadata !8090), !dbg !18152, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13474, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := ldv_undef_int();
  // WARNING: %5 = call i32 @ldv_undef_int(), !dbg !8099, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13476, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13476, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13478, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := ldv_xmalloc(3200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13479, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13481, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $p6;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13484, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $0.ref;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13489, 1} true;
  assume {:verifier.code 0} true;
  $r := $p8;
  $exn := false;
  return;
}
const velocity_suspend: ref;
axiom (velocity_suspend == $sub.ref(0, 495231));
procedure  velocity_suspend($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $i8: i8;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $i23: i32;
  var $i24: i64;
  var $i25: i64;
  var $i26: i1;
  var $i27: i32;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12215, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata_105($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12216, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12217, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12218, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12219, 62} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12219, 62} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12219, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := netif_running($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12219, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i8($i7);
  // WARNING: %9 = zext i1 %8 to i8, !dbg !8107, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12221, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i8.i1($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12221, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12223, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12226, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12226, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12227, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12280, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12232, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12232, 29} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12232, 3} true;
  assume {:verifier.code 0} true;
  call netif_device_detach($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12233, 35} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12233, 3} true;
  assume {:verifier.code 0} true;
  call ldv___ldv_spin_lock_106($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12235, 29} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12235, 29} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12235, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12235, 34} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i64($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12235, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12237, 26} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12237, 26} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12237, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := pci_save_state($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12239, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12242, 30} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p4, 968);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12242, 30} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12242, 8} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i32.i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12242, 36} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i64($i24, 524288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12242, 48} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i64($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12242, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12244, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := velocity_get_ip($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12245, 41} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p4, 1084);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12245, 5} true;
  assume {:verifier.code 0} true;
  call velocity_save_context($p4, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12246, 5} true;
  assume {:verifier.code 0} true;
  call velocity_shutdown($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12247, 5} true;
  assume {:verifier.code 0} true;
  call $i29 := velocity_set_wol($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12249, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12249, 31} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12249, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12249, 36} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i64($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12249, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i26 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12261, 41} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p4, 1084);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12261, 5} true;
  assume {:verifier.code 0} true;
  call velocity_save_context($p4, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12262, 5} true;
  assume {:verifier.code 0} true;
  call velocity_shutdown($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12264, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12264, 31} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12264, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12264, 36} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12264, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb17, $bb18;
$bb13:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12251, 29} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12251, 29} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12251, 7} true;
  assume {:verifier.code 0} true;
  call $i36 := pci_enable_wake($p35, 3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12253, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12257, 5} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p4, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12259, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12276, 41} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12276, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_84($p44, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12278, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb17:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12266, 32} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12266, 32} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12266, 7} true;
  assume {:verifier.code 0} true;
  call pci_disable_device($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12268, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12272, 5} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p4, 3);
  assume {:verifier.code 0} true;
  goto $bb16;
}
const velocity_resume: ref;
axiom (velocity_resume == $sub.ref(0, 496263));
procedure  velocity_resume($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $i8: i8;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i16;
  var $i44: i32;
  var $i45: i16;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $i52: i1;
  var $i34: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12373, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata_108($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12374, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12375, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12376, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12377, 62} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12377, 62} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12377, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := netif_running($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12377, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i8($i7);
  // WARNING: %9 = zext i1 %8 to i8, !dbg !8107, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12379, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i8.i1($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12379, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12381, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12384, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12384, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12385, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12432, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12390, 3} true;
  assume {:verifier.code 0} true;
  call velocity_set_power_state($p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12392, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12392, 29} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12392, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12392, 34} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12392, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12394, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12394, 27} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12394, 5} true;
  assume {:verifier.code 0} true;
  call $i18 := pci_enable_wake($p17, 0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12395, 29} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12395, 29} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12395, 5} true;
  assume {:verifier.code 0} true;
  call pci_restore_state($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12397, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12401, 23} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12401, 23} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12401, 3} true;
  assume {:verifier.code 0} true;
  call mac_wol_reset($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12402, 35} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12402, 3} true;
  assume {:verifier.code 0} true;
  call ldv___ldv_spin_lock_109($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12403, 42} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p4, 1084);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12403, 3} true;
  assume {:verifier.code 0} true;
  call velocity_restore_context($p4, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12404, 3} true;
  assume {:verifier.code 0} true;
  call velocity_init_registers($p4, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12405, 50} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12405, 50} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12405, 61} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12405, 21} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12405, 3} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12406, 3} true;
  assume {:verifier.code 0} true;
  call $i29 := velocity_tx_srv($p4);
  // WARNING: %38 = call i32 @velocity_tx_srv(%struct.velocity_info* %5), !dbg !8148, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p4, 576);
  $p31 := $add.ref($p4, 576);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 20} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32(0, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 7} true;
  assume {:verifier.code 0} true;
  $i34 := 0;
  goto $bb14;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12421, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12411, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12411, 13} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p4, 576);
  $p37 := $add.ref($add.ref($p4, 576), 4);
  $p38 := $add.ref($add.ref($add.ref($p4, 576), 4), $mul.ref($i35, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12411, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12411, 24} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12411, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 44} true;
  assume {:verifier.code 0} true;
  $i41 := $mul.i32($i34, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 39} true;
  assume {:verifier.code 0} true;
  $i42 := $shl.i32(4, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i16($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 12} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i16.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 12} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i16($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 80} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 80} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 91} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 51} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12413, 5} true;
  assume {:verifier.code 0} true;
  call writew($i45, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12415, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12418, 9} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i32($i34, 1);
  // WARNING: %62 = add nsw i32 %.023, 1, !dbg !8172, !verifier.code !8090
  call {:cexpr "i"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $slt.i32($i50, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $i50;
  assume {:branchcond $i52} true;
  goto $bb19, $bb20;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 7} true;
  assume {:verifier.code 0} true;
  assume ($i52 == 1);
  goto $bb14;
$bb20:
  assume !(($i52 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12420, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12426, 50} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p4, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12426, 50} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12426, 61} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12426, 21} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12426, 3} true;
  assume {:verifier.code 0} true;
  call writel(33554432, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12427, 41} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p4, 1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12427, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_84($p57, $u0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12428, 29} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12428, 29} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12428, 3} true;
  assume {:verifier.code 0} true;
  call netif_device_attach($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12430, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const ldv_dev_get_drvdata_108: ref;
axiom (ldv_dev_get_drvdata_108 == $sub.ref(0, 497295));
procedure  ldv_dev_get_drvdata_108($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16119, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16121, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const pci_enable_wake: ref;
axiom (pci_enable_wake == $sub.ref(0, 498327));
procedure  pci_enable_wake($p0: ref, $i1: i32, $i2: i1)
  returns ($r: i32)
{
  var $i3: i8;
  var $i4: i1;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.pci_dev* %0, i64 0, metadata !18382, metadata !8090), !dbg !18383, !verifier.code !8092
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  // WARNING: %4 = zext i1 %2 to i8, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7704, 48} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7704, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := __pci_enable_wake($p0, $i1, 0, $i4);
  // WARNING: %6 = call i32 @__pci_enable_wake(%struct.pci_dev* %0, i32 %1, i1 zeroext false, i1 zeroext %5), !dbg !8101, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7706, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const pci_restore_state: ref;
axiom (pci_restore_state == $sub.ref(0, 499359));
procedure  pci_restore_state($p0: ref);
const ldv___ldv_spin_lock_109: ref;
axiom (ldv___ldv_spin_lock_109 == $sub.ref(0, 500391));
procedure  ldv___ldv_spin_lock_109($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16130, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16131, 3} true;
  assume {:verifier.code 0} true;
  call __ldv_spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16133, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const velocity_restore_context: ref;
axiom (velocity_restore_context == $sub.ref(0, 501423));
procedure  velocity_restore_context($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i8;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i8;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i8;
  var $i37: i32;
  var $i38: i8;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i8;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i8;
  var $i51: i32;
  var $i52: i8;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i32;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $i87: i32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i32;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i32;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i32;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $i112: i32;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i8;
  var $i128: i32;
  var $i129: i32;
  var $i130: i8;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $i135: i8;
  var $i136: i32;
  var $i137: i8;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i8;
  var $i143: i32;
  var $i144: i32;
  var $i145: i8;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $i150: i8;
  var $i151: i32;
  var $i152: i8;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $i157: i32;
  var $p158: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12288, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12288, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12289, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  // WARNING: call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !18417, metadata !8090), !dbg !18418, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12298, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 10} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 3} true;
  assume {:verifier.code 0} true;
  call writel($i7, $p4);
  // WARNING: call void @writel(i32 %9, i8* %5), !dbg !8110, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 31} true;
  assume {:verifier.code 0} true;
  $p154 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 12} true;
  assume {:verifier.code 0} true;
  $p155 := $bitcast.ref.ref($p154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 40} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p155, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 10} true;
  assume {:verifier.code 0} true;
  $i157 := $load.i32($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 85} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12294, 3} true;
  assume {:verifier.code 0} true;
  call writel($i157, $p158);
  // WARNING: call void @writel(i32 %192, i8* %193), !dbg !8110, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12312, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12313, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 39} true;
  assume {:verifier.code 0} true;
  $p8 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 48} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 10} true;
  assume {:verifier.code 0} true;
  $i13 := $xor.i32($i12, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i8($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 95} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p4, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i14, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 36} true;
  assume {:verifier.code 0} true;
  $p16 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 18} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 45} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 16} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 10} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 10} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 90} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p4, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i21, $p22);
  // WARNING: call void @writeb(i8 zeroext %26, i8* %27), !dbg !8130, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12313, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 39} true;
  assume {:verifier.code 0} true;
  $p124 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 21} true;
  assume {:verifier.code 0} true;
  $p125 := $bitcast.ref.ref($p124);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 48} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p125, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 19} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i8($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 13} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i8.i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 10} true;
  assume {:verifier.code 0} true;
  $i129 := $xor.i32($i128, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 10} true;
  assume {:verifier.code 0} true;
  $i130 := $trunc.i32.i8($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 95} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p4, 14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i130, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 36} true;
  assume {:verifier.code 0} true;
  $p132 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 18} true;
  assume {:verifier.code 0} true;
  $p133 := $bitcast.ref.ref($p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 45} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p133, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 16} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i8($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 10} true;
  assume {:verifier.code 0} true;
  $i136 := $zext.i8.i32($i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 10} true;
  assume {:verifier.code 0} true;
  $i137 := $trunc.i32.i8($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 90} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p4, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i137, $p138);
  // WARNING: call void @writeb(i8 zeroext %170, i8* %171), !dbg !8130, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12313, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12325, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12326, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 31} true;
  assume {:verifier.code 0} true;
  $p23 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 12} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 40} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 10} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 85} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 3} true;
  assume {:verifier.code 0} true;
  call writel($i26, $p27);
  // WARNING: call void @writel(i32 %34, i8* %35), !dbg !8141, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12326, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 31} true;
  assume {:verifier.code 0} true;
  $p99 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 12} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 40} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p100, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 10} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 85} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 3} true;
  assume {:verifier.code 0} true;
  call writel($i102, $p103);
  // WARNING: call void @writel(i32 %130, i8* %131), !dbg !8141, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12326, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12338, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p28 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p29, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p4, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i31, $p32);
  // WARNING: call void @writel(i32 %42, i8* %43), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p54 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i57, $p58);
  // WARNING: call void @writel(i32 %76, i8* %77), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12351, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12352, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 36} true;
  assume {:verifier.code 0} true;
  $p33 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 18} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 45} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 16} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i8($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 10} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 10} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i32.i8($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 90} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i38, $p39);
  // WARNING: call void @writeb(i8 zeroext %52, i8* %53), !dbg !8164, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12352, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 36} true;
  assume {:verifier.code 0} true;
  $p40 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 18} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 45} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 16} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 10} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 10} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 90} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p4, 49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i45, $p46);
  // WARNING: call void @writeb(i8 zeroext %62, i8* %63), !dbg !8164, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12352, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12357, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 36} true;
  assume {:verifier.code 0} true;
  $p47 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 18} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 45} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p48, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 16} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 10} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 10} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 90} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p4, 50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12347, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i52, $p53);
  // WARNING: call void @writeb(i8 zeroext %70, i8* %71), !dbg !8164, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb20;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p59 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p60 := $bitcast.ref.ref($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i62, $p63);
  // WARNING: call void @writel(i32 %82, i8* %83), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p64 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p65, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p4, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i67, $p68);
  // WARNING: call void @writel(i32 %88, i8* %89), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p69 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p70, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i32($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i72, $p73);
  // WARNING: call void @writel(i32 %94, i8* %95), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p74 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p4, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i77, $p78);
  // WARNING: call void @writel(i32 %100, i8* %101), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p79 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p80, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p4, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i82, $p83);
  // WARNING: call void @writel(i32 %106, i8* %107), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p84 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p85, 336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i87, $p88);
  // WARNING: call void @writel(i32 %112, i8* %113), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p89 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p90, 352);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p4, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i92, $p93);
  // WARNING: call void @writel(i32 %118, i8* %119), !dbg !8152, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12339, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 31} true;
  assume {:verifier.code 0} true;
  $p94 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 12} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 40} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p95, 368);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 10} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i32($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 85} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p4, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12334, 3} true;
  assume {:verifier.code 0} true;
  call writel($i97, $p98);
  // WARNING: call void @writel(i32 %124, i8* %125), !dbg !8152, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb16;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 31} true;
  assume {:verifier.code 0} true;
  $p104 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 12} true;
  assume {:verifier.code 0} true;
  $p105 := $bitcast.ref.ref($p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 40} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p105, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 10} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 85} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 3} true;
  assume {:verifier.code 0} true;
  call writel($i107, $p108);
  // WARNING: call void @writel(i32 %136, i8* %137), !dbg !8141, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12326, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 31} true;
  assume {:verifier.code 0} true;
  $p109 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 12} true;
  assume {:verifier.code 0} true;
  $p110 := $bitcast.ref.ref($p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 40} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p110, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 10} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 85} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 3} true;
  assume {:verifier.code 0} true;
  call writel($i112, $p113);
  // WARNING: call void @writel(i32 %142, i8* %143), !dbg !8141, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12326, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 31} true;
  assume {:verifier.code 0} true;
  $p114 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 12} true;
  assume {:verifier.code 0} true;
  $p115 := $bitcast.ref.ref($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 40} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p115, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 10} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 85} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 3} true;
  assume {:verifier.code 0} true;
  call writel($i117, $p118);
  // WARNING: call void @writel(i32 %148, i8* %149), !dbg !8141, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12326, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 31} true;
  assume {:verifier.code 0} true;
  $p119 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 12} true;
  assume {:verifier.code 0} true;
  $p120 := $bitcast.ref.ref($p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 40} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p120, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 10} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i32($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 85} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p4, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12321, 3} true;
  assume {:verifier.code 0} true;
  call writel($i122, $p123);
  // WARNING: call void @writel(i32 %154, i8* %155), !dbg !8141, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb12;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 39} true;
  assume {:verifier.code 0} true;
  $p139 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 21} true;
  assume {:verifier.code 0} true;
  $p140 := $bitcast.ref.ref($p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 48} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p140, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 19} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i8($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 13} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i8.i32($i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 10} true;
  assume {:verifier.code 0} true;
  $i144 := $xor.i32($i143, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 10} true;
  assume {:verifier.code 0} true;
  $i145 := $trunc.i32.i8($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 95} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p4, 15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12307, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i145, $p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 36} true;
  assume {:verifier.code 0} true;
  $p147 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 18} true;
  assume {:verifier.code 0} true;
  $p148 := $bitcast.ref.ref($p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 45} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p148, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 16} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i8($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 10} true;
  assume {:verifier.code 0} true;
  $i151 := $zext.i8.i32($i150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 10} true;
  assume {:verifier.code 0} true;
  $i152 := $trunc.i32.i8($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 90} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p4, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12308, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i152, $p153);
  // WARNING: call void @writeb(i8 zeroext %186, i8* %187), !dbg !8130, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb8;
}
const netif_device_attach: ref;
axiom (netif_device_attach == $sub.ref(0, 502455));
procedure  netif_device_attach($p0: ref);
const __pci_enable_wake: ref;
axiom (__pci_enable_wake == $sub.ref(0, 503487));
procedure  __pci_enable_wake($p0: ref, $i1: i32, $i2: i1, $i3: i1)
  returns ($r: i32);
const ldv_dev_get_drvdata_105: ref;
axiom (ldv_dev_get_drvdata_105 == $sub.ref(0, 504519));
procedure  ldv_dev_get_drvdata_105($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16096, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16098, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const netif_device_detach: ref;
axiom (netif_device_detach == $sub.ref(0, 505551));
procedure  netif_device_detach($p0: ref);
const ldv___ldv_spin_lock_106: ref;
axiom (ldv___ldv_spin_lock_106 == $sub.ref(0, 506583));
procedure  ldv___ldv_spin_lock_106($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16107, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_lock_of_velocity_info();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16108, 3} true;
  assume {:verifier.code 0} true;
  call __ldv_spin_lock($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16110, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const pci_save_state: ref;
axiom (pci_save_state == $sub.ref(0, 507615));
procedure  pci_save_state($p0: ref)
  returns ($r: i32);
const velocity_save_context: ref;
axiom (velocity_save_context == $sub.ref(0, 508647));
procedure  velocity_save_context($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i32;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12158, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12158, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12159, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  // WARNING: call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !18514, metadata !8090), !dbg !18515, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12168, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12169, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 56} true;
  assume {:verifier.code 0} true;
  call $i5 := readl($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, $i5);
  // WARNING: store i32 %7, i32* %9, align 4, !dbg !8110, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12169, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 91} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 56} true;
  assume {:verifier.code 0} true;
  call $i104 := readl($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 24} true;
  assume {:verifier.code 0} true;
  $p105 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 5} true;
  assume {:verifier.code 0} true;
  $p106 := $bitcast.ref.ref($p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 33} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p106, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p107, $i104);
  // WARNING: store i32 %132, i32* %135, align 4, !dbg !8110, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12169, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12181, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i9 := readl($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p12, $i9);
  // WARNING: store i32 %14, i32* %17, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p4, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i64 := readl($p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p65 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p66, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p67, $i64);
  // WARNING: store i32 %84, i32* %87, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12194, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i14 := readl($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p15 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $i14);
  // WARNING: store i32 %22, i32* %25, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i19 := readl($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p20 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, $i19);
  // WARNING: store i32 %30, i32* %33, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12200, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p4, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i24 := readl($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p25 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i24);
  // WARNING: store i32 %36, i32* %39, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p4, 68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i29 := readl($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p30 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i29);
  // WARNING: store i32 %42, i32* %45, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p4, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i34 := readl($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p35 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, $i34);
  // WARNING: store i32 %48, i32* %51, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p4, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i39 := readl($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p40 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p41 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i39);
  // WARNING: store i32 %54, i32* %57, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p4, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i44 := readl($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p45 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p46, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, $i44);
  // WARNING: store i32 %60, i32* %63, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p4, 84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i49 := readl($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p50 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 336);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p52, $i49);
  // WARNING: store i32 %66, i32* %69, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p4, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i54 := readl($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p55 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, 352);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p57, $i54);
  // WARNING: store i32 %72, i32* %75, align 4, !dbg !8132, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 91} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p4, 92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 56} true;
  assume {:verifier.code 0} true;
  call $i59 := readl($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 24} true;
  assume {:verifier.code 0} true;
  $p60 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 33} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, 368);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12190, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p62, $i59);
  // WARNING: store i32 %78, i32* %81, align 4, !dbg !8132, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb12;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i69 := readl($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p70 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p71 := $bitcast.ref.ref($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, $i69);
  // WARNING: store i32 %90, i32* %93, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p4, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i74 := readl($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p75 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p76, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p77, $i74);
  // WARNING: store i32 %96, i32* %99, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i79 := readl($p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p80 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p81 := $bitcast.ref.ref($p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p81, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p82, $i79);
  // WARNING: store i32 %102, i32* %105, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p4, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i84 := readl($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p85 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p86 := $bitcast.ref.ref($p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p86, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, $i84);
  // WARNING: store i32 %108, i32* %111, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p4, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i89 := readl($p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p90 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p92, $i89);
  // WARNING: store i32 %114, i32* %117, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p4, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i94 := readl($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p95 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p96 := $bitcast.ref.ref($p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p96, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p97, $i94);
  // WARNING: store i32 %120, i32* %123, align 4, !dbg !8121, !verifier.code !8093
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12182, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 91} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p4, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 56} true;
  assume {:verifier.code 0} true;
  call $i99 := readl($p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 24} true;
  assume {:verifier.code 0} true;
  $p100 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 5} true;
  assume {:verifier.code 0} true;
  $p101 := $bitcast.ref.ref($p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 33} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p101, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12177, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, $i99);
  // WARNING: store i32 %126, i32* %129, align 4, !dbg !8121, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb8;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 91} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 56} true;
  assume {:verifier.code 0} true;
  call $i109 := readl($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 24} true;
  assume {:verifier.code 0} true;
  $p110 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 5} true;
  assume {:verifier.code 0} true;
  $p111 := $bitcast.ref.ref($p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 33} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p111, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12164, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p112, $i109);
  // WARNING: store i32 %138, i32* %141, align 4, !dbg !8110, !verifier.code !8093
  assume {:verifier.code 0} true;
  goto $bb4;
}
const velocity_set_wol: ref;
axiom (velocity_set_wol == $sub.ref(0, 509679));
procedure  velocity_set_wol($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $i41: i64;
  var $i42: i64;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i16;
  var $i60: i32;
  var $i61: i16;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i8;
  var $i68: i32;
  var $i69: i32;
  var $i70: i8;
  var $p71: ref;
  var $p72: ref;
  var $i73: i8;
  var $i74: i32;
  var $i75: i32;
  var $i76: i8;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i1;
  var $i81: i1;
  var $p82: ref;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $i86: i1;
  var $p87: ref;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $i91: i1;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $i95: i16;
  var $i96: i32;
  var $i97: i32;
  var $i98: i16;
  var $p99: ref;
  var $p100: ref;
  var $i101: i16;
  var $i102: i32;
  var $i103: i16;
  var $i104: i32;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $i108: i16;
  var $i109: i32;
  var $i110: i32;
  var $i111: i16;
  var $p112: ref;
  var $p113: ref;
  var $i114: i16;
  var $i115: i32;
  var $i116: i16;
  var $i117: i32;
  var $p118: ref;
  var $i119: i32;
  var $i120: i64;
  var $i121: i64;
  var $i122: i1;
  var $p123: ref;
  var $p124: ref;
  var $i125: i32;
  var $i126: i16;
  var $i127: i32;
  var $i128: i32;
  var $i129: i16;
  var $p130: ref;
  var $p131: ref;
  var $i132: i16;
  var $i133: i32;
  var $i134: i16;
  var $i135: i32;
  var $p136: ref;
  var $i137: i8;
  var $i138: i32;
  var $i139: i32;
  var $i140: i8;
  var $p141: ref;
  var $p142: ref;
  var $i143: i8;
  var $i144: i32;
  var $i145: i32;
  var $i146: i32;
  var $i147: i8;
  var $i148: i32;
  var $i149: i8;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $i153: i8;
  var $i154: i32;
  var $i155: i8;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $i159: i8;
  var $i160: i32;
  var $i161: i32;
  var $i162: i8;
  var $p163: ref;
  var $p164: ref;
  var $i165: i8;
  var $i166: i32;
  var $i167: i32;
  var $i168: i8;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $i172: i32;
  var $p173: ref;
  var $p174: ref;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $i178: i32;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $i184: i32;
  var $p185: ref;
  var $p186: ref;
  var $p187: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(256, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12037, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12037, 16} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12038, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 896);
  $p9 := $add.ref($add.ref($p0, 896), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12038, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  // WARNING: %11 = load i32, i32* %10, align 8, !dbg !8111, !verifier.code !8089
  call {:cexpr "spd_dpx"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12039, 3} true;
  assume {:verifier.code 0} true;
  $p11 := $p2;
  $p12 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12039, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p12, 2109440);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12040, 3} true;
  assume {:verifier.code 0} true;
  $p13 := $p2;
  $p14 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12040, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p14, 960);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12041, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $p2;
  $p16 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12041, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12042, 3} true;
  assume {:verifier.code 0} true;
  $p17 := $p2;
  $p18 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12042, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12043, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p2, 16);
  $p20 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12043, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p20, $sub.i32(0, 4096));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12044, 3} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, 16);
  $p22 := $add.ref($add.ref($p2, 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12044, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p22, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12045, 3} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p2, 16);
  $p24 := $add.ref($add.ref($p2, 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12045, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p24, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12046, 3} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p2, 16);
  $p26 := $add.ref($add.ref($p2, 16), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12046, 22} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i32($M.21, $p26, 65535);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12047, 45} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p7, 164);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12047, 17} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12047, 3} true;
  assume {:verifier.code 0} true;
  call writew($sub.i16(0, 1), $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12048, 42} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p7, 163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12048, 3} true;
  assume {:verifier.code 0} true;
  call writeb(48, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12049, 43} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p7, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12049, 15} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12049, 3} true;
  assume {:verifier.code 0} true;
  call writew(512, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12051, 30} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12051, 30} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12051, 8} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12051, 39} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i64($i34, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12051, 46} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i64($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12051, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12053, 45} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p7, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12053, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12053, 5} true;
  assume {:verifier.code 0} true;
  call writew(256, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12055, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12058, 30} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 1072);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12058, 30} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12058, 8} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12058, 39} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i64($i41, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12058, 46} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i64($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12058, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12060, 11} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12061, 5} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12061, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p45, 0, 49, $zext.i32.i64(16), (0 == 1));
  // WARNING: call void @llvm.memset.p0i8.i64(i8* %50, i8 0, i64 49, i32 16, i1 false), !dbg !8161, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12071, 9} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12072, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $p46 := $p2;
  $p47 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.21, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 60} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 32} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 5} true;
  assume {:verifier.code 0} true;
  call writel($i48, $p50);
  // WARNING: call void @writel(i32 %54, i8* %56), !dbg !8169, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12072, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $p170 := $p2;
  $p171 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i32($M.21, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 60} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 32} true;
  assume {:verifier.code 0} true;
  $p174 := $bitcast.ref.ref($p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 70} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p174, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 5} true;
  assume {:verifier.code 0} true;
  call writel($i172, $p175);
  // WARNING: call void @writel(i32 %200, i8* %203), !dbg !8169, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12072, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12077, 10} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p44, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12077, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p51, 1544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12078, 10} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p44, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12078, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p52, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12079, 28} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p44, 38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12079, 5} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12079, 62} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12079, 5} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12079, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p54, $p56, 4, $zext.i32.i64(2), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12080, 27} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12080, 42} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12080, 11} true;
  assume {:verifier.code 0} true;
  call $i59 := wol_calc_crc(6, $p57, $p58);
  // WARNING: %67 = call zeroext i16 @wol_calc_crc(i32 6, i8* %65, i8* %66), !dbg !8183, !verifier.code !8089
  call {:cexpr "crc"} boogie_si_record_i16($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12081, 12} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i16.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12081, 12} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i16($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12081, 51} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p7, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12081, 23} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12081, 5} true;
  assume {:verifier.code 0} true;
  call writew($i61, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12082, 43} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p7, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12082, 15} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12082, 5} true;
  assume {:verifier.code 0} true;
  call writew(1, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12084, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12088, 49} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p7, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12088, 9} true;
  assume {:verifier.code 0} true;
  call $i67 := readb($p66);
  // WARNING: %77 = call zeroext i8 @readb(i8* %76), !dbg !8196, !verifier.code !8089
  call {:cexpr "tmp"} boogie_si_record_i8($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12089, 17} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12089, 36} true;
  assume {:verifier.code 0} true;
  $i69 := $or.i32($i68, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12089, 10} true;
  assume {:verifier.code 0} true;
  $i70 := $trunc.i32.i8($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12089, 72} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p7, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12089, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i70, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12090, 53} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p7, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12090, 13} true;
  assume {:verifier.code 0} true;
  call $i73 := readb($p72);
  // WARNING: %83 = call zeroext i8 @readb(i8* %82), !dbg !8205, !verifier.code !8089
  call {:cexpr "tmp___0"} boogie_si_record_i8($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12091, 17} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i8.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12091, 40} true;
  assume {:verifier.code 0} true;
  $i75 := $or.i32($i74, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12091, 10} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i8($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12091, 75} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p7, 162);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12091, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i76, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12092, 44} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p7, 172);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12092, 16} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12092, 3} true;
  assume {:verifier.code 0} true;
  call writew(4095, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12094, 30} true;
  assume {:verifier.code 0} true;
  $i80 := $eq.i32($i10, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12094, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12095, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12141, 53} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p7, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12141, 19} true;
  assume {:verifier.code 0} true;
  $p152 := $bitcast.ref.ref($p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12141, 13} true;
  assume {:verifier.code 0} true;
  call $i153 := readb($p152);
  // WARNING: %180 = call zeroext i8 @readb(i8* %179), !dbg !8312, !verifier.code !8089
  call {:cexpr "tmp___2"} boogie_si_record_i8($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12142, 10} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i8.i32($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12142, 10} true;
  assume {:verifier.code 0} true;
  $i155 := $trunc.i32.i8($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12142, 53} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p7, 36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12142, 25} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12142, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i155, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12143, 53} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p7, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12143, 13} true;
  assume {:verifier.code 0} true;
  call $i159 := readb($p158);
  // WARNING: %186 = call zeroext i8 @readb(i8* %185), !dbg !8320, !verifier.code !8089
  call {:cexpr "tmp___3"} boogie_si_record_i8($i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12144, 17} true;
  assume {:verifier.code 0} true;
  $i160 := $zext.i8.i32($i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12144, 40} true;
  assume {:verifier.code 0} true;
  $i161 := $or.i32($i160, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12144, 10} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i32.i8($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12144, 76} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p7, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12144, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i162, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12145, 53} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p7, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12145, 13} true;
  assume {:verifier.code 0} true;
  call $i165 := readb($p164);
  // WARNING: %192 = call zeroext i8 @readb(i8* %191), !dbg !8329, !verifier.code !8089
  call {:cexpr "tmp___4"} boogie_si_record_i8($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12146, 17} true;
  assume {:verifier.code 0} true;
  $i166 := $zext.i8.i32($i165);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12146, 40} true;
  assume {:verifier.code 0} true;
  $i167 := $or.i32($i166, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12146, 10} true;
  assume {:verifier.code 0} true;
  $i168 := $trunc.i32.i8($i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12146, 75} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p7, 131);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12146, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i168, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12148, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12099, 30} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12099, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12100, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12133, 53} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p7, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12133, 13} true;
  assume {:verifier.code 0} true;
  call $i137 := readb($p136);
  // WARNING: %163 = call zeroext i8 @readb(i8* %162), !dbg !8289, !verifier.code !8089
  call {:cexpr "tmp___1"} boogie_si_record_i8($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12134, 17} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12134, 40} true;
  assume {:verifier.code 0} true;
  $i139 := $or.i32($i138, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12134, 10} true;
  assume {:verifier.code 0} true;
  $i140 := $trunc.i32.i8($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12134, 76} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p7, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12134, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i140, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12135, 49} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p7, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12135, 9} true;
  assume {:verifier.code 0} true;
  call $i143 := readb($p142);
  // WARNING: %169 = call zeroext i8 @readb(i8* %168), !dbg !8298, !verifier.code !8089
  call {:cexpr "GCR"} boogie_si_record_i8($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12136, 16} true;
  assume {:verifier.code 0} true;
  $i144 := $sext.i8.i32($i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12136, 42} true;
  assume {:verifier.code 0} true;
  $i145 := $and.i32($i144, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12136, 48} true;
  assume {:verifier.code 0} true;
  $i146 := $or.i32($i145, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12136, 9} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i32.i8($i146);
  // WARNING: %173 = trunc i32 %172 to i8, !dbg !8304, !verifier.code !8089
  call {:cexpr "GCR"} boogie_si_record_i8($i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12137, 10} true;
  assume {:verifier.code 0} true;
  $i148 := $zext.i8.i32($i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12137, 10} true;
  assume {:verifier.code 0} true;
  $i149 := $trunc.i32.i8($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12137, 49} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p7, 159);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12137, 3} true;
  assume {:verifier.code 0} true;
  call writeb($i149, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12138, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12104, 30} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12104, 30} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12104, 8} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i32.i64($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12104, 41} true;
  assume {:verifier.code 0} true;
  $i85 := $and.i64($i84, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12104, 49} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i64($i85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12104, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12105, 32} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0, 976);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12105, 32} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i32($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12105, 10} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i32.i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12105, 39} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i64($i89, $sub.i64(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12105, 63} true;
  assume {:verifier.code 0} true;
  $i91 := $eq.i64($i90, 1033232);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12105, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb21, $bb22;
$bb20:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb21:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12107, 31} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12107, 31} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12107, 7} true;
  assume {:verifier.code 0} true;
  call $i94 := velocity_mii_read($p93, 28, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12108, 33} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12108, 18} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i16.i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12108, 35} true;
  assume {:verifier.code 0} true;
  $i97 := $or.i32($i96, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12108, 11} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i32.i16($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12108, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p3, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12109, 32} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12109, 32} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12109, 52} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12109, 46} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i16.i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12109, 46} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i16($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12109, 7} true;
  assume {:verifier.code 0} true;
  call $i104 := velocity_mii_write($p100, 28, $i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12111, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i91 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12115, 29} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12115, 29} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12115, 5} true;
  assume {:verifier.code 0} true;
  call $i107 := velocity_mii_read($p106, 9, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12116, 28} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12116, 13} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i16.i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12116, 34} true;
  assume {:verifier.code 0} true;
  $i110 := $and.i32($i109, 64767);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12116, 13} true;
  assume {:verifier.code 0} true;
  $i111 := $trunc.i32.i16($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12116, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p4, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12117, 30} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12117, 30} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12117, 49} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12117, 43} true;
  assume {:verifier.code 0} true;
  $i115 := $zext.i16.i32($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12117, 43} true;
  assume {:verifier.code 0} true;
  $i116 := $trunc.i32.i16($i115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12117, 5} true;
  assume {:verifier.code 0} true;
  call $i117 := velocity_mii_write($p113, 9, $i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12119, 3} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12122, 30} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p0, 972);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12122, 30} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i32($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12122, 8} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i32.i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12122, 41} true;
  assume {:verifier.code 0} true;
  $i121 := $and.i64($i120, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12122, 48} true;
  assume {:verifier.code 0} true;
  $i122 := $ne.i64($i121, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12122, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12124, 29} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12124, 29} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12124, 5} true;
  assume {:verifier.code 0} true;
  call $i125 := velocity_mii_read($p124, 0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12125, 35} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12125, 20} true;
  assume {:verifier.code 0} true;
  $i127 := $zext.i16.i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12125, 41} true;
  assume {:verifier.code 0} true;
  $i128 := $or.i32($i127, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12125, 13} true;
  assume {:verifier.code 0} true;
  $i129 := $trunc.i32.i16($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12125, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p5, $i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12126, 30} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12126, 30} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12126, 49} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12126, 43} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i16.i32($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12126, 43} true;
  assume {:verifier.code 0} true;
  $i134 := $trunc.i32.i16($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12126, 5} true;
  assume {:verifier.code 0} true;
  call $i135 := velocity_mii_write($p131, 0, $i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12128, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12122, 51} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $p176 := $p2;
  $p177 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $i178 := $load.i32($M.21, $p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 60} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 32} true;
  assume {:verifier.code 0} true;
  $p180 := $bitcast.ref.ref($p179);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 70} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p180, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 5} true;
  assume {:verifier.code 0} true;
  call writel($i178, $p181);
  // WARNING: call void @writel(i32 %207, i8* %210), !dbg !8169, !verifier.code !8089
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12072, 7} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $p182 := $p2;
  $p183 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 12} true;
  assume {:verifier.code 0} true;
  $i184 := $load.i32($M.21, $p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 60} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p7, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 32} true;
  assume {:verifier.code 0} true;
  $p186 := $bitcast.ref.ref($p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 70} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p186, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12067, 5} true;
  assume {:verifier.code 0} true;
  call writel($i184, $p187);
  // WARNING: call void @writel(i32 %214, i8* %217), !dbg !8169, !verifier.code !8089
  assume {:verifier.code 0} true;
  goto $bb9;
}
const wol_calc_crc: ref;
axiom (wol_calc_crc == $sub.ref(0, 510711));
procedure  wol_calc_crc($i0: i32, $p1: ref, $p2: ref)
  returns ($r: i16)
{
  var $i3: i1;
  var $i7: i64;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i8;
  var $i22: i32;
  var $i23: i32;
  var $i24: i8;
  var $i25: i32;
  var $i26: i16;
  var $i27: i32;
  var $i28: i64;
  var $p29: ref;
  var $i30: i16;
  var $i20: i16;
  var $i21: i8;
  var $i12: i32;
  var $i13: i16;
  var $i32: i32;
  var $i33: i1;
  var $i5: i32;
  var $i6: i16;
  var $i34: i16;
  var $i4: i16;
  var $i35: i32;
  var $i36: i32;
  var $i37: i16;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i1;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $i48: i32;
  var $i49: i16;
  var $i50: i32;
  var $i51: i32;
  var $i52: i64;
  var $p53: ref;
  var $i54: i16;
  var $i57: i32;
  var $i58: i32;
  var $i59: i8;
  var $i55: i16;
  var $i56: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i32;
  var $i65: i8;
  var $i66: i32;
  var $i67: i16;
  var $i68: i32;
  var $i69: i32;
  var $i70: i64;
  var $p71: ref;
  var $i72: i16;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i73: i16;
  var $i74: i8;
  var $i78: i32;
  var $i79: i32;
  var $i80: i1;
  var $i81: i32;
  var $i82: i32;
  var $i83: i8;
  var $i84: i32;
  var $i85: i16;
  var $i86: i32;
  var $i87: i32;
  var $i88: i64;
  var $p89: ref;
  var $i90: i16;
  var $i93: i32;
  var $i94: i32;
  var $i95: i8;
  var $i91: i16;
  var $i92: i8;
  var $i96: i32;
  var $i97: i32;
  var $i98: i1;
  var $i99: i32;
  var $i100: i32;
  var $i101: i8;
  var $i102: i32;
  var $i103: i16;
  var $i104: i32;
  var $i105: i32;
  var $i106: i64;
  var $p107: ref;
  var $i108: i16;
  var $i111: i32;
  var $i112: i32;
  var $i113: i8;
  var $i109: i16;
  var $i110: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i1;
  var $i117: i32;
  var $i118: i32;
  var $i119: i8;
  var $i120: i32;
  var $i121: i16;
  var $i122: i32;
  var $i123: i32;
  var $i124: i64;
  var $p125: ref;
  var $i126: i16;
  var $i129: i32;
  var $i130: i32;
  var $i131: i8;
  var $i127: i16;
  var $i128: i8;
  var $i132: i32;
  var $i133: i32;
  var $i134: i1;
  var $i135: i32;
  var $i136: i32;
  var $i137: i8;
  var $i138: i32;
  var $i139: i16;
  var $i140: i32;
  var $i141: i32;
  var $i142: i64;
  var $p143: ref;
  var $i144: i16;
  var $i147: i32;
  var $i148: i32;
  var $i149: i8;
  var $i145: i16;
  var $i146: i8;
  var $i150: i32;
  var $i151: i32;
  var $i152: i1;
  var $i153: i32;
  var $i154: i16;
  var $i155: i32;
  var $i156: i32;
  var $i157: i64;
  var $p158: ref;
  var $i159: i16;
  var $i31: i16;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !18808, metadata !8090), !dbg !18809, !verifier.code !8092
  // WARNING: call void @llvm.dbg.value(metadata i16 -1, i64 0, metadata !18810, metadata !8090), !dbg !18811, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32(0, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $sub.i16(0, 1);
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  $i5, $i6 := 0, $sub.i16(0, 1);
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12004, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11971, 27} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11971, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, $mul.ref($i7, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11971, 10} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.21, $p8);
  // WARNING: %8 = load i8, i8* %7, align 1, !dbg !8107, !verifier.code !8092
  call {:cexpr "mask"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11972, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11972, 27} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11972, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11973, 5} true;
  assume {:verifier.code 0} true;
  $i12, $i13 := $i5, $i6;
  goto $bb8;
$bb7:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12001, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i12, 1);
  // WARNING: %37 = add nsw i32 %.0110, 1, !dbg !8144, !verifier.code !8092
  call {:cexpr "i"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i32, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  $i5, $i6, $i34 := $i32, $i13, $i13;
  assume {:branchcond $i33} true;
  goto $bb18, $bb19;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11994, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 18} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $ashr.i32($i17, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 12} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  // WARNING: %21 = trunc i32 %20 to i8, !dbg !8127, !verifier.code !8092
  call {:cexpr "mask"} boogie_si_record_i8($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i20, $i21 := $i6, $i19;
  goto $bb14;
$bb13:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.02 = phi i8 [ %21, %18 ], [ %26, %23 ], !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 16} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 27} true;
  assume {:verifier.code 0} true;
  $i23 := $ashr.i32($i22, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 10} true;
  assume {:verifier.code 0} true;
  $i24 := $trunc.i32.i8($i23);
  // WARNING: %26 = trunc i32 %25 to i8, !dbg !8132, !verifier.code !8092
  call {:cexpr "mask"} boogie_si_record_i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i27 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, $mul.ref($i28, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i30 := crc_ccitt($i26, $p29, 1);
  // WARNING: %32 = call zeroext i16 @crc_ccitt(i16 zeroext %28, i8* %31, i64 1), !dbg !8137, !verifier.code !8092
  call {:cexpr "crc"} boogie_si_record_i16($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i20, $i21 := $i30, $i24;
  goto $bb14;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i32($i42, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb21, $bb22;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11994, 12} true;
  assume {:verifier.code 0} true;
  $i12, $i13 := $i5, $i31;
  goto $bb8;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  assume ($i33 == 1);
  goto $bb4;
$bb19:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i34;
  goto $bb3;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12009, 12} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12009, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $xor.i32($i35, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12009, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $trunc.i32.i16($i36);
  // WARNING: %44 = trunc i32 %43 to i16, !dbg !8149, !verifier.code !8092
  call {:cexpr "crc"} boogie_si_record_i16($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12010, 18} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12010, 9} true;
  assume {:verifier.code 0} true;
  call $i39 := bitrev32($i38);
  // WARNING: %46 = call i32 @bitrev32(i32 %45), !dbg !8151, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12012, 22} true;
  assume {:verifier.code 0} true;
  $i40 := $lshr.i32($i39, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12012, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $trunc.i32.i16($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 12012, 3} true;
  assume {:verifier.code 0} true;
  $r := $i41;
  $exn := false;
  return;
$bb21:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 18} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 29} true;
  assume {:verifier.code 0} true;
  $i58 := $ashr.i32($i57, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 12} true;
  assume {:verifier.code 0} true;
  $i59 := $trunc.i32.i8($i58);
  // WARNING: %68 = trunc i32 %67 to i8, !dbg !8127, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i55, $i56 := $i20, $i59;
  goto $bb24;
$bb22:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 16} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 27} true;
  assume {:verifier.code 0} true;
  $i46 := $ashr.i32($i45, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 10} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  // WARNING: %57 = trunc i32 %56 to i8, !dbg !8132, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i16.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i32.i16($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i50 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 77} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i32($i50, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p1, $mul.ref($i52, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i54 := crc_ccitt($i49, $p53, 1);
  // WARNING: %64 = call zeroext i16 @crc_ccitt(i16 zeroext %59, i8* %63, i64 1), !dbg !8137, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i55, $i56 := $i54, $i47;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.02.1 = phi i8 [ %68, %65 ], [ %57, %54 ], !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i61 := $and.i32($i60, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 18} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 29} true;
  assume {:verifier.code 0} true;
  $i76 := $ashr.i32($i75, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 12} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  // WARNING: %89 = trunc i32 %88 to i8, !dbg !8127, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i73, $i74 := $i55, $i77;
  goto $bb29;
$bb27:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 16} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 27} true;
  assume {:verifier.code 0} true;
  $i64 := $ashr.i32($i63, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 10} true;
  assume {:verifier.code 0} true;
  $i65 := $trunc.i32.i8($i64);
  // WARNING: %78 = trunc i32 %77 to i8, !dbg !8132, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i16.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i32.i16($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i68 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 77} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i68, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p1, $mul.ref($i70, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i72 := crc_ccitt($i67, $p71, 1);
  // WARNING: %85 = call zeroext i16 @crc_ccitt(i16 zeroext %80, i8* %84, i64 1), !dbg !8137, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i73, $i74 := $i72, $i65;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.02.2 = phi i8 [ %89, %86 ], [ %78, %75 ], !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i79 := $and.i32($i78, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i80 := $eq.i32($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 18} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i8.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 29} true;
  assume {:verifier.code 0} true;
  $i94 := $ashr.i32($i93, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 12} true;
  assume {:verifier.code 0} true;
  $i95 := $trunc.i32.i8($i94);
  // WARNING: %110 = trunc i32 %109 to i8, !dbg !8127, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i91, $i92 := $i73, $i95;
  goto $bb34;
$bb32:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 16} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i8.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 27} true;
  assume {:verifier.code 0} true;
  $i82 := $ashr.i32($i81, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 10} true;
  assume {:verifier.code 0} true;
  $i83 := $trunc.i32.i8($i82);
  // WARNING: %99 = trunc i32 %98 to i8, !dbg !8132, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i16.i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i85 := $trunc.i32.i16($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i86 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 77} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p1, $mul.ref($i88, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i90 := crc_ccitt($i85, $p89, 1);
  // WARNING: %106 = call zeroext i16 @crc_ccitt(i16 zeroext %101, i8* %105, i64 1), !dbg !8137, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92 := $i90, $i83;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.02.3 = phi i8 [ %110, %107 ], [ %99, %96 ], !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i97 := $and.i32($i96, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i98 := $eq.i32($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 18} true;
  assume {:verifier.code 0} true;
  $i111 := $zext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 29} true;
  assume {:verifier.code 0} true;
  $i112 := $ashr.i32($i111, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 12} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i8($i112);
  // WARNING: %131 = trunc i32 %130 to i8, !dbg !8127, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i109, $i110 := $i91, $i113;
  goto $bb39;
$bb37:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 16} true;
  assume {:verifier.code 0} true;
  $i99 := $zext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 27} true;
  assume {:verifier.code 0} true;
  $i100 := $ashr.i32($i99, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 10} true;
  assume {:verifier.code 0} true;
  $i101 := $trunc.i32.i8($i100);
  // WARNING: %120 = trunc i32 %119 to i8, !dbg !8132, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i16.i32($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i16($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i104 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 77} true;
  assume {:verifier.code 0} true;
  $i105 := $add.i32($i104, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i106 := $sext.i32.i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p1, $mul.ref($i106, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i108 := crc_ccitt($i103, $p107, 1);
  // WARNING: %127 = call zeroext i16 @crc_ccitt(i16 zeroext %122, i8* %126, i64 1), !dbg !8137, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i109, $i110 := $i108, $i101;
  goto $bb39;
$bb39:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.02.4 = phi i8 [ %131, %128 ], [ %120, %117 ], !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.i8.i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i115 := $and.i32($i114, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i32($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 18} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i8.i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 29} true;
  assume {:verifier.code 0} true;
  $i130 := $ashr.i32($i129, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 12} true;
  assume {:verifier.code 0} true;
  $i131 := $trunc.i32.i8($i130);
  // WARNING: %152 = trunc i32 %151 to i8, !dbg !8127, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i127, $i128 := $i109, $i131;
  goto $bb44;
$bb42:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 16} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i8.i32($i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 27} true;
  assume {:verifier.code 0} true;
  $i118 := $ashr.i32($i117, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 10} true;
  assume {:verifier.code 0} true;
  $i119 := $trunc.i32.i8($i118);
  // WARNING: %141 = trunc i32 %140 to i8, !dbg !8132, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i16.i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i16($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i122 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 77} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i32($i122, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i124 := $sext.i32.i64($i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p1, $mul.ref($i124, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i126 := crc_ccitt($i121, $p125, 1);
  // WARNING: %148 = call zeroext i16 @crc_ccitt(i16 zeroext %143, i8* %147, i64 1), !dbg !8137, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i127, $i128 := $i126, $i119;
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.02.5 = phi i8 [ %152, %149 ], [ %141, %138 ], !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i8.i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i133 := $and.i32($i132, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i134 := $eq.i32($i133, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb46, $bb47;
$bb46:
  assume ($i134 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 18} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i8.i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 29} true;
  assume {:verifier.code 0} true;
  $i148 := $ashr.i32($i147, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11981, 12} true;
  assume {:verifier.code 0} true;
  $i149 := $trunc.i32.i8($i148);
  // WARNING: %173 = trunc i32 %172 to i8, !dbg !8127, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i145, $i146 := $i127, $i149;
  goto $bb49;
$bb47:
  assume !(($i134 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 16} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i8.i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 27} true;
  assume {:verifier.code 0} true;
  $i136 := $ashr.i32($i135, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11987, 10} true;
  assume {:verifier.code 0} true;
  $i137 := $trunc.i32.i8($i136);
  // WARNING: %162 = trunc i32 %161 to i8, !dbg !8132, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i16.i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i16($i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i140 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 77} true;
  assume {:verifier.code 0} true;
  $i141 := $add.i32($i140, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i142 := $sext.i32.i64($i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p1, $mul.ref($i142, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i144 := crc_ccitt($i139, $p143, 1);
  // WARNING: %169 = call zeroext i16 @crc_ccitt(i16 zeroext %164, i8* %168, i64 1), !dbg !8137, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i145, $i146 := $i144, $i137;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.02.6 = phi i8 [ %173, %170 ], [ %162, %159 ], !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 8} true;
  assume {:verifier.code 0} true;
  $i150 := $zext.i8.i32($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 19} true;
  assume {:verifier.code 0} true;
  $i151 := $and.i32($i150, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 24} true;
  assume {:verifier.code 0} true;
  $i152 := $eq.i32($i151, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11980, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i152 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11982, 5} true;
  assume {:verifier.code 0} true;
  $i31 := $i145;
  goto $bb54;
$bb52:
  assume !(($i152 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i16.i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 19} true;
  assume {:verifier.code 0} true;
  $i154 := $trunc.i32.i16($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 73} true;
  assume {:verifier.code 0} true;
  $i155 := $mul.i32($i5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 77} true;
  assume {:verifier.code 0} true;
  $i156 := $add.i32($i155, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 54} true;
  assume {:verifier.code 0} true;
  $i157 := $sext.i32.i64($i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 52} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p1, $mul.ref($i157, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11988, 9} true;
  assume {:verifier.code 0} true;
  call $i159 := crc_ccitt($i154, $p158, 1);
  // WARNING: %187 = call zeroext i16 @crc_ccitt(i16 zeroext %182, i8* %186, i64 1), !dbg !8137, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11990, 3} true;
  assume {:verifier.code 0} true;
  $i31 := $i159;
  goto $bb54;
$bb54:
  assume {:verifier.code 0} true;
  // WARNING: %.03.7 = phi i16 [ %.03.6, %188 ], [ %187, %180 ], !verifier.code !8092
  assume {:verifier.code 0} true;
  goto $bb17;
}
const crc_ccitt: ref;
axiom (crc_ccitt == $sub.ref(0, 511743));
procedure  crc_ccitt($i0: i16, $p1: ref, $i2: i64)
  returns ($r: i16);
const bitrev32: ref;
axiom (bitrev32 == $sub.ref(0, 512775));
procedure  bitrev32($i0: i32)
  returns ($r: i32);
const velocity_platform_probe: ref;
axiom (velocity_platform_probe == $sub.ref(0, 513807));
procedure  velocity_platform_probe($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11924, 97} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11924, 11} true;
  assume {:verifier.code 0} true;
  call $p2 := __of_match_device($0.ref, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11926, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11926, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11926, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11927, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11946, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11932, 53} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 192);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11932, 53} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.22, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11932, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11933, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 16);
  $p10 := $add.ref($add.ref($p0, 16), 1200);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11933, 40} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11933, 9} true;
  assume {:verifier.code 0} true;
  call $i12 := irq_of_parse_and_map($p11, 0);
  // WARNING: %15 = call i32 @irq_of_parse_and_map(%struct.device_node* %14, i32 0), !dbg !8110, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i12);
  // WARNING: call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !18894, metadata !8090), !dbg !18895, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11936, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11936, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11937, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 22);
  goto $bb3;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11942, 36} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11942, 13} true;
  assume {:verifier.code 0} true;
  call $i15 := velocity_probe($p14, $i12, $p8, 1);
  // WARNING: %21 = call i32 @velocity_probe(%struct.device* %20, i32 %15, %struct.velocity_info_tbl* %11, i32 1), !dbg !8122, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11944, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i15;
  goto $bb3;
}
const velocity_platform_remove: ref;
axiom (velocity_platform_remove == $sub.ref(0, 514839));
procedure  velocity_platform_remove($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11953, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11953, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_remove($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 11955, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const __of_match_device: ref;
axiom (__of_match_device == $sub.ref(0, 515871));
procedure  __of_match_device($p0: ref, $p1: ref)
  returns ($r: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7785, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const irq_of_parse_and_map: ref;
axiom (irq_of_parse_and_map == $sub.ref(0, 516903));
procedure  irq_of_parse_and_map($p0: ref, $i1: i32)
  returns ($r: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.device_node* %0, i64 0, metadata !18930, metadata !8090), !dbg !18931, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 7793, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_EMGentry_init_velocity_init_module_18_7: ref;
axiom (ldv_EMGentry_init_velocity_init_module_18_7 == $sub.ref(0, 517935));
procedure  ldv_EMGentry_init_velocity_init_module_18_7($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13409, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := velocity_init_module();
  // WARNING: %2 = call i32 @velocity_init_module(), !dbg !8093, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13411, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const velocity_init_module: ref;
axiom (velocity_init_module == $sub.ref(0, 518967));
procedure  velocity_init_module()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i1;
  var $i3: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13200, 3} true;
  assume {:verifier.code 0} true;
  call velocity_register_notifier();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13201, 13} true;
  assume {:verifier.code 0} true;
  call $i0 := ldv___pci_register_driver_117(velocity_pci_driver, __this_module, .str.3);
  // WARNING: %1 = call i32 @ldv___pci_register_driver_117(%struct.pci_driver* @velocity_pci_driver, %struct.module* @__this_module, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0)), !dbg !8091, !verifier.code !8090
  call {:cexpr "ret_pci"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13203, 18} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv___platform_driver_register_118(velocity_platform_driver, __this_module);
  // WARNING: %2 = call i32 @ldv___platform_driver_register_118(%struct.platform_driver* @velocity_platform_driver, %struct.module* @__this_module), !dbg !8095, !verifier.code !8090
  call {:cexpr "ret_platform"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13205, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13205, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13205, 35} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13205, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13205, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13207, 5} true;
  assume {:verifier.code 0} true;
  call velocity_unregister_notifier();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13209, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i0;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13205, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13215, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13213, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb6;
}
const velocity_register_notifier: ref;
axiom (velocity_register_notifier == $sub.ref(0, 519999));
procedure  velocity_register_notifier()
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13177, 3} true;
  assume {:verifier.code 0} true;
  call $i0 := ldv_register_inetaddr_notifier_115(velocity_inetaddr_notifier);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13179, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv___pci_register_driver_117: ref;
axiom (ldv___pci_register_driver_117 == $sub.ref(0, 521031));
procedure  ldv___pci_register_driver_117($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16189, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __pci_register_driver($p0, $p1, $p2);
  // WARNING: %4 = call i32 @__pci_register_driver(%struct.pci_driver* %0, %struct.module* %1, i8* %2), !dbg !8097, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !18986, metadata !8090), !dbg !18987, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16191, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := ldv___pci_register_driver($i3, $p0, $p1, $p2);
  // WARNING: %5 = call i32 @ldv___pci_register_driver(i32 %4, %struct.pci_driver* %0, %struct.module* %1, i8* %2), !dbg !8105, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16194, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const ldv___platform_driver_register_118: ref;
axiom (ldv___platform_driver_register_118 == $sub.ref(0, 522063));
procedure  ldv___platform_driver_register_118($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16207, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := __platform_driver_register($p0, $p1);
  // WARNING: %3 = call i32 @__platform_driver_register(%struct.platform_driver* %0, %struct.module* %1), !dbg !8095, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !19005, metadata !8090), !dbg !19006, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16209, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv___platform_driver_register($i2, $p0, $p1);
  // WARNING: %4 = call i32 @ldv___platform_driver_register(i32 %3, %struct.platform_driver* %0, %struct.module* %1), !dbg !8103, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16211, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const __platform_driver_register: ref;
axiom (__platform_driver_register == $sub.ref(0, 523095));
procedure  __platform_driver_register($p0: ref, $p1: ref)
  returns ($r: i32);
const ldv___platform_driver_register: ref;
axiom (ldv___platform_driver_register == $sub.ref(0, 524127));
procedure  ldv___platform_driver_register($i0: i32, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13447, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %4 = call i32 @ldv_undef_int(), !dbg !8097, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13449, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13449, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13451, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13451, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13451, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13453, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_register_6_2($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13455, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13458, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13458, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13458, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13460, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13464, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_register_6_2: ref;
axiom (ldv_dispatch_register_6_2 == $sub.ref(0, 525159));
procedure  ldv_dispatch_register_6_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13623, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13624, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13625, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13625, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13626, 36} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13626, 3} true;
  assume {:verifier.code 0} true;
  call ldv_platform_platform_instance_3($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13628, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_platform_platform_instance_3: ref;
axiom (ldv_platform_platform_instance_3 == $sub.ref(0, 526191));
procedure  ldv_platform_platform_instance_3($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $i27: i1;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15068, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.ldv_struct_platform_instance_3* %2, i64 0, metadata !19066, metadata !8090), !dbg !19067, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15070, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15070, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15070, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15072, 45} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15072, 45} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15073, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15073, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15075, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $p7 := $u29;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15079, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := ldv_xmalloc(1432);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15080, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15086, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv_undef_int();
  // WARNING: %13 = call i32 @ldv_undef_int(), !dbg !8116, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15109, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15109, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15111, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15090, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pre_probe();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15091, 94} true;
  assume {:verifier.code 0} true;
  $p12 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15091, 94} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15091, 28} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv_platform_instance_probe_3_14($p13, $p9);
  // WARNING: %18 = call i32 @ldv_platform_instance_probe_3_14(i32 (%struct.platform_device*)* %17, %struct.platform_device* %12), !dbg !8127, !verifier.code !8090
  call {:cexpr "ldv_3_probed_default"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15093, 28} true;
  assume {:verifier.code 0} true;
  call $i15 := ldv_post_probe($i14);
  // WARNING: %19 = call i32 @ldv_post_probe(i32 %18), !dbg !8128, !verifier.code !8090
  call {:cexpr "ldv_3_probed_default"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15094, 15} true;
  assume {:verifier.code 0} true;
  call $i16 := ldv_undef_int();
  // WARNING: %20 = call i32 @ldv_undef_int(), !dbg !8129, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15096, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15096, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15098, 39} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15098, 39} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i1.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15098, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15100, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i17 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15103, 39} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15103, 39} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i1.i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15103, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15105, 7} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15116, 13} true;
  assume {:verifier.code 0} true;
  call $i25 := ldv_undef_int();
  // WARNING: %33 = call i32 @ldv_undef_int(), !dbg !8150, !verifier.code !8090
  call {:cexpr "tmp___2"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15119, 15} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15119, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb15, $bb16;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15086, 13} true;
  assume {:verifier.code 0} true;
  call $i22 := ldv_undef_int();
  // WARNING: %28 = call i32 @ldv_undef_int(), !dbg !8116, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb12, $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 7} true;
  assume {:verifier.code 0} true;
  assume ($i23 == 1);
  goto $bb7;
$bb13:
  assume !(($i23 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15088, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15158, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb15:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15120, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15136, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15124, 15} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i25, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15124, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $i25;
  assume {:branchcond $i27} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15125, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15139, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_pm_register_3_6();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15140, 3} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_pm_deregister_3_5();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15142, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15129, 15} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15129, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15130, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15146, 70} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15146, 70} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15146, 3} true;
  assume {:verifier.code 0} true;
  call ldv_platform_instance_release_3_3($p31, $p9);
  // WARNING: call void @ldv_platform_instance_release_3_3(i32 (%struct.platform_device*)* %50, %struct.platform_device* %12), !dbg !8178, !verifier.code !8090
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15149, 3} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15134, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15152, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15153, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15116, 13} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15156, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
}
const ldv_pre_probe: ref;
axiom (ldv_pre_probe == $sub.ref(0, 527223));
procedure  ldv_pre_probe();
const ldv_platform_instance_probe_3_14: ref;
axiom (ldv_platform_instance_probe_3_14 == $sub.ref(0, 528255));
procedure  ldv_platform_instance_probe_3_14($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15040, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_platform_probe($p1);
  // WARNING: %3 = call i32 @velocity_platform_probe(%struct.platform_device* %1), !dbg !8095, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15042, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_post_probe: ref;
axiom (ldv_post_probe == $sub.ref(0, 529287));
procedure  ldv_post_probe($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16361, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_filter_positive_int($i0);
  // WARNING: %2 = call i32 @ldv_filter_positive_int(i32 %0), !dbg !8091, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16363, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_dispatch_pm_register_3_6: ref;
axiom (ldv_dispatch_pm_register_3_6 == $sub.ref(0, 530319));
procedure  ldv_dispatch_pm_register_3_6()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13564, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13565, 14} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13566, 34} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13566, 3} true;
  assume {:verifier.code 0} true;
  call ldv_platform_pm_ops_instance_4($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13568, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_dispatch_pm_deregister_3_5: ref;
axiom (ldv_dispatch_pm_deregister_3_5 == $sub.ref(0, 531351));
procedure  ldv_dispatch_pm_deregister_3_5()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13554, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_platform_instance_release_3_3: ref;
axiom (ldv_platform_instance_release_3_3 == $sub.ref(0, 532383));
procedure  ldv_platform_instance_release_3_3($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15051, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_platform_remove($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15053, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_platform_pm_ops_instance_4: ref;
axiom (ldv_platform_pm_ops_instance_4 == $sub.ref(0, 533415));
procedure  ldv_platform_pm_ops_instance_4($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i1;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $i72: i1;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $i78: i1;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i64;
  var $i90: i1;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i32;
  var $i98: i1;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $i102: i1;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i64;
  var $i108: i1;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i64;
  var $i114: i1;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i64;
  var $i120: i1;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i64;
  var $i128: i1;
  var $p129: ref;
  var $p130: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15170, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15174, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_undef_int();
  // WARNING: %3 = call i32 @ldv_undef_int(), !dbg !8093, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15177, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15177, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15178, 5} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15199, 48} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($u30, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15199, 48} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.23, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15199, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15199, 61} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15199, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb19, $bb20;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15182, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15182, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15183, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15208, 48} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($u30, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15208, 48} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.25, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15208, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15208, 64} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15208, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb23, $bb24;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15187, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15187, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i1;
  assume {:branchcond $i4} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15188, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15226, 48} true;
  assume {:verifier.code 0} true;
  $p25 := $u30;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15226, 48} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.29, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15226, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15226, 56} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15226, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb29, $bb30;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15192, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15192, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15193, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15398, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15197, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15401, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15402, 3} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb19:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15201, 68} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($u30, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15201, 68} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.24, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15201, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_runtime_idle_4_27($p12, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15203, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15206, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15174, 9} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb23:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15210, 71} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($u30, 160);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15210, 71} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.26, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15210, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_runtime_suspend_4_25($p18, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15213, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15216, 48} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($u30, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15216, 48} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.27, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15216, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15216, 63} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15216, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15218, 70} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($u30, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15218, 70} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.28, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15218, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_runtime_resume_4_24($p24, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15221, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15224, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb29:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15228, 63} true;
  assume {:verifier.code 0} true;
  $p29 := $u30;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15228, 63} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.30, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15228, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_prepare_4_22($p30, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15230, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15234, 13} true;
  assume {:verifier.code 0} true;
  call $i31 := ldv_undef_int();
  // WARNING: %59 = call i32 @ldv_undef_int(), !dbg !8161, !verifier.code !8090
  call {:cexpr "tmp___0"} boogie_si_record_i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15237, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15237, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15238, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15255, 61} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($u30, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15255, 61} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.31, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15255, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_suspend_4_21($p36, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15256, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := ldv_undef_int();
  // WARNING: %75 = call i32 @ldv_undef_int(), !dbg !8185, !verifier.code !8090
  call {:cexpr "tmp___1"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15258, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb45, $bb46;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15242, 15} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i31, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15242, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15243, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15299, 60} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($u30, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15299, 60} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.41, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15299, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_freeze_4_15($p66, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15300, 13} true;
  assume {:verifier.code 0} true;
  call $i67 := ldv_undef_int();
  // WARNING: %121 = call i32 @ldv_undef_int(), !dbg !8241, !verifier.code !8090
  call {:cexpr "tmp___2"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15302, 15} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.i32($i67, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15302, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb61, $bb62;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15247, 15} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i31, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15247, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15248, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15340, 61} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($u30, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15340, 61} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.51, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15340, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_poweroff_4_9($p96, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15341, 13} true;
  assume {:verifier.code 0} true;
  call $i97 := ldv_undef_int();
  // WARNING: %167 = call i32 @ldv_undef_int(), !dbg !8297, !verifier.code !8090
  call {:cexpr "tmp___3"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15343, 15} true;
  assume {:verifier.code 0} true;
  $i98 := $ne.i32($i97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15343, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb76, $bb77;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15252, 3} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15384, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15385, 3} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb45:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15259, 50} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($u30, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15259, 50} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.32, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15259, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15259, 64} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i64($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15259, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb47, $bb48;
$bb46:
  assume !(($i38 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15276, 50} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($u30, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15276, 50} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.36, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15276, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15276, 63} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15276, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb54, $bb55;
$bb47:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15261, 71} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($u30, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15261, 71} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.33, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15261, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_suspend_noirq_4_20($p44, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15264, 5} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15267, 50} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($u30, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15267, 50} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.34, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15267, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15267, 63} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i64($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15267, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15269, 70} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($u30, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15269, 70} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.35, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15269, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_resume_noirq_4_19($p50, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15272, 5} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15275, 3} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15294, 60} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($u30, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15294, 60} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.40, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15294, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_resume_4_16($p64, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15296, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb54:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15278, 70} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($u30, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15278, 70} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.37, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15278, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_suspend_late_4_18($p56, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15281, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15284, 50} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($u30, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15284, 50} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.38, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15284, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15284, 63} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i64($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15284, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15286, 70} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($u30, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15286, 70} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.39, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15286, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_resume_early_4_17($p62, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15289, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:verifier.code 0} true;
  goto $bb53;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15389, 48} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($u30, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15389, 48} true;
  assume {:verifier.code 0} true;
  $p126 := $load.ref($M.61, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15389, 7} true;
  assume {:verifier.code 0} true;
  $i127 := $p2i.ref.i64($p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15389, 57} true;
  assume {:verifier.code 0} true;
  $i128 := $ne.i64($i127, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15389, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i128} true;
  goto $bb92, $bb93;
$bb61:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15303, 50} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($u30, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15303, 50} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.42, $p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15303, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $p2i.ref.i64($p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15303, 62} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i64($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15303, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb63, $bb64;
$bb62:
  assume !(($i68 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15318, 50} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($u30, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15318, 50} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.46, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15318, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15318, 63} true;
  assume {:verifier.code 0} true;
  $i84 := $ne.i64($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15318, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb70, $bb71;
$bb63:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15305, 69} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($u30, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15305, 69} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.43, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15305, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_freeze_late_4_14($p74, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15307, 5} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15310, 50} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($u30, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15310, 50} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.44, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15310, 9} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15310, 61} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i64($i77, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15310, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15312, 68} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($u30, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15312, 68} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.45, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15312, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_thaw_early_4_13($p80, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15314, 5} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15317, 3} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15335, 58} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($u30, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15335, 58} true;
  assume {:verifier.code 0} true;
  $p94 := $load.ref($M.50, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15335, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_thaw_4_10($p94, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15337, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb70:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15320, 70} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($u30, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15320, 70} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.47, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15320, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_freeze_noirq_4_12($p86, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15323, 5} true;
  assume {:verifier.code 0} true;
  goto $bb72;
$bb71:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb72;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15326, 50} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($u30, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15326, 50} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.48, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15326, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $p2i.ref.i64($p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15326, 61} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i64($i89, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15326, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb73, $bb74;
$bb73:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15328, 68} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($u30, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15328, 68} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.49, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15328, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_thaw_noirq_4_11($p92, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15330, 5} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb74:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:verifier.code 0} true;
  goto $bb69;
$bb76:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15344, 50} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($u30, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15344, 50} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.52, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15344, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $p2i.ref.i64($p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15344, 64} true;
  assume {:verifier.code 0} true;
  $i102 := $ne.i64($i101, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15344, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb78, $bb79;
$bb77:
  assume !(($i98 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15361, 50} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($u30, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15361, 50} true;
  assume {:verifier.code 0} true;
  $p112 := $load.ref($M.56, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15361, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $p2i.ref.i64($p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15361, 65} true;
  assume {:verifier.code 0} true;
  $i114 := $ne.i64($i113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15361, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb85, $bb86;
$bb78:
  assume ($i102 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15346, 70} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($u30, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15346, 70} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.53, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15346, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_poweroff_late_4_8($p104, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15349, 5} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume !(($i102 == 1));
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15352, 50} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($u30, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15352, 50} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.54, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15352, 9} true;
  assume {:verifier.code 0} true;
  $i107 := $p2i.ref.i64($p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15352, 64} true;
  assume {:verifier.code 0} true;
  $i108 := $ne.i64($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15352, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15354, 70} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($u30, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15354, 70} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.55, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15354, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_restore_early_4_7($p110, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15357, 5} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb82:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15360, 3} true;
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15379, 60} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($u30, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15379, 60} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.60, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15379, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_restore_4_4($p124, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15381, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb85:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15363, 71} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($u30, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15363, 71} true;
  assume {:verifier.code 0} true;
  $p116 := $load.ref($M.57, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15363, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_poweroff_noirq_4_6($p116, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15366, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb86:
  assume !(($i114 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15369, 50} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($u30, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15369, 50} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.58, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15369, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.i64($p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15369, 64} true;
  assume {:verifier.code 0} true;
  $i120 := $ne.i64($i119, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15369, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb88, $bb89;
$bb88:
  assume ($i120 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15371, 70} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($u30, 152);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15371, 70} true;
  assume {:verifier.code 0} true;
  $p122 := $load.ref($M.59, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15371, 7} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_restore_noirq_4_5($p122, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15374, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume !(($i120 == 1));
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:verifier.code 0} true;
  goto $bb84;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb92:
  assume ($i128 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15391, 63} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($u30, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15391, 63} true;
  assume {:verifier.code 0} true;
  $p130 := $load.ref($M.62, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15391, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pm_ops_instance_complete_4_3($p130, $u31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15393, 3} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i128 == 1));
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15396, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15407, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15405, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
}
const ldv_pm_ops_instance_runtime_idle_4_27: ref;
axiom (ldv_pm_ops_instance_runtime_idle_4_27 == $sub.ref(0, 534447));
procedure  ldv_pm_ops_instance_runtime_idle_4_27($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15570, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_runtime_suspend_4_25: ref;
axiom (ldv_pm_ops_instance_runtime_suspend_4_25 == $sub.ref(0, 535479));
procedure  ldv_pm_ops_instance_runtime_suspend_4_25($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15592, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_runtime_resume_4_24: ref;
axiom (ldv_pm_ops_instance_runtime_resume_4_24 == $sub.ref(0, 536511));
procedure  ldv_pm_ops_instance_runtime_resume_4_24($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15581, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_prepare_4_22: ref;
axiom (ldv_pm_ops_instance_prepare_4_22 == $sub.ref(0, 537543));
procedure  ldv_pm_ops_instance_prepare_4_22($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15493, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_suspend_4_21: ref;
axiom (ldv_pm_ops_instance_suspend_4_21 == $sub.ref(0, 538575));
procedure  ldv_pm_ops_instance_suspend_4_21($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15601, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_suspend($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15603, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_suspend_noirq_4_20: ref;
axiom (ldv_pm_ops_instance_suspend_noirq_4_20 == $sub.ref(0, 539607));
procedure  ldv_pm_ops_instance_suspend_noirq_4_20($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15625, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_resume_noirq_4_19: ref;
axiom (ldv_pm_ops_instance_resume_noirq_4_19 == $sub.ref(0, 540639));
procedure  ldv_pm_ops_instance_resume_noirq_4_19($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15559, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_suspend_late_4_18: ref;
axiom (ldv_pm_ops_instance_suspend_late_4_18 == $sub.ref(0, 541671));
procedure  ldv_pm_ops_instance_suspend_late_4_18($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15614, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_resume_early_4_17: ref;
axiom (ldv_pm_ops_instance_resume_early_4_17 == $sub.ref(0, 542703));
procedure  ldv_pm_ops_instance_resume_early_4_17($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15548, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_resume_4_16: ref;
axiom (ldv_pm_ops_instance_resume_4_16 == $sub.ref(0, 543735));
procedure  ldv_pm_ops_instance_resume_4_16($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15535, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_resume($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15537, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_freeze_4_15: ref;
axiom (ldv_pm_ops_instance_freeze_4_15 == $sub.ref(0, 544767));
procedure  ldv_pm_ops_instance_freeze_4_15($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15425, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_suspend($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15427, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_freeze_late_4_14: ref;
axiom (ldv_pm_ops_instance_freeze_late_4_14 == $sub.ref(0, 545799));
procedure  ldv_pm_ops_instance_freeze_late_4_14($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15438, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_thaw_early_4_13: ref;
axiom (ldv_pm_ops_instance_thaw_early_4_13 == $sub.ref(0, 546831));
procedure  ldv_pm_ops_instance_thaw_early_4_13($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15647, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_freeze_noirq_4_12: ref;
axiom (ldv_pm_ops_instance_freeze_noirq_4_12 == $sub.ref(0, 547863));
procedure  ldv_pm_ops_instance_freeze_noirq_4_12($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15449, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_thaw_noirq_4_11: ref;
axiom (ldv_pm_ops_instance_thaw_noirq_4_11 == $sub.ref(0, 548895));
procedure  ldv_pm_ops_instance_thaw_noirq_4_11($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15658, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_thaw_4_10: ref;
axiom (ldv_pm_ops_instance_thaw_4_10 == $sub.ref(0, 549927));
procedure  ldv_pm_ops_instance_thaw_4_10($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15634, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_resume($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15636, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_poweroff_4_9: ref;
axiom (ldv_pm_ops_instance_poweroff_4_9 == $sub.ref(0, 550959));
procedure  ldv_pm_ops_instance_poweroff_4_9($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15458, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_suspend($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15460, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_poweroff_late_4_8: ref;
axiom (ldv_pm_ops_instance_poweroff_late_4_8 == $sub.ref(0, 551991));
procedure  ldv_pm_ops_instance_poweroff_late_4_8($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15471, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_restore_early_4_7: ref;
axiom (ldv_pm_ops_instance_restore_early_4_7 == $sub.ref(0, 553023));
procedure  ldv_pm_ops_instance_restore_early_4_7($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15515, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_poweroff_noirq_4_6: ref;
axiom (ldv_pm_ops_instance_poweroff_noirq_4_6 == $sub.ref(0, 554055));
procedure  ldv_pm_ops_instance_poweroff_noirq_4_6($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15482, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_restore_noirq_4_5: ref;
axiom (ldv_pm_ops_instance_restore_noirq_4_5 == $sub.ref(0, 555087));
procedure  ldv_pm_ops_instance_restore_noirq_4_5($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.18($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15526, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_restore_4_4: ref;
axiom (ldv_pm_ops_instance_restore_4_4 == $sub.ref(0, 556119));
procedure  ldv_pm_ops_instance_restore_4_4($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15502, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := velocity_resume($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15504, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pm_ops_instance_complete_4_3: ref;
axiom (ldv_pm_ops_instance_complete_4_3 == $sub.ref(0, 557151));
procedure  ldv_pm_ops_instance_complete_4_3($p0: ref, $p1: ref)
{
$bb0:
  call devirtbounce.19($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15416, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_filter_positive_int: ref;
axiom (ldv_filter_positive_int == $sub.ref(0, 558183));
procedure  ldv_filter_positive_int($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16339, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $sle.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16339, 18} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16339, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16341, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __pci_register_driver: ref;
axiom (__pci_register_driver == $sub.ref(0, 559215));
procedure  __pci_register_driver($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const ldv___pci_register_driver: ref;
axiom (ldv___pci_register_driver == $sub.ref(0, 560247));
procedure  ldv___pci_register_driver($i0: i32, $p1: ref, $p2: ref, $p3: ref)
  returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13422, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := ldv_undef_int();
  // WARNING: %5 = call i32 @ldv_undef_int(), !dbg !8099, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13424, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13424, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13426, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13426, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13426, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13428, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_register_15_2($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13430, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13433, 21} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13433, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13433, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13435, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13439, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_register_15_2: ref;
axiom (ldv_dispatch_register_15_2 == $sub.ref(0, 561279));
procedure  ldv_dispatch_register_15_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13593, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13594, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13595, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13595, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13596, 26} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13596, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_pci_instance_2($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13598, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_pci_instance_2: ref;
axiom (ldv_pci_pci_instance_2 == $sub.ref(0, 562311));
procedure  ldv_pci_pci_instance_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i1;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i27: i1;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i26: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $i53: i1;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i32;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i64;
  var $i70: i1;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i64;
  var $i76: i1;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14875, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  // WARNING: call void @llvm.dbg.value(metadata %struct.ldv_struct_pci_instance_2* %3, i64 0, metadata !19730, metadata !8090), !dbg !19731, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14877, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14877, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14877, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14879, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14879, 40} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14880, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14880, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14882, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $p6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $p8 := $u32;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14886, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := ldv_xmalloc(2936);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14887, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14888, 13} true;
  assume {:verifier.code 0} true;
  call $p11 := ldv_xmalloc(32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14889, 45} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14895, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_undef_int();
  // WARNING: %16 = call i32 @ldv_undef_int(), !dbg !8124, !verifier.code !8087
  call {:cexpr "tmp___2"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14918, 14} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14918, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14919, 14} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14919, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14921, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14899, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pre_probe();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14900, 134} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14900, 134} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14900, 25} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_pci_instance_probe_2_17($p16, $p10, $p12);
  // WARNING: %21 = call i32 @ldv_pci_instance_probe_2_17(i32 (%struct.pci_dev*, %struct.pci_device_id*)* %20, %struct.pci_dev* %13, %struct.pci_device_id* %15), !dbg !8135, !verifier.code !8087
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14902, 25} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv_post_probe($i17);
  // WARNING: %22 = call i32 @ldv_post_probe(i32 %21), !dbg !8136, !verifier.code !8087
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14903, 15} true;
  assume {:verifier.code 0} true;
  call $i19 := ldv_undef_int();
  // WARNING: %23 = call i32 @ldv_undef_int(), !dbg !8137, !verifier.code !8087
  call {:cexpr "tmp___1"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14905, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14905, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14907, 36} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14907, 36} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i1.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14907, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14909, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $i18;
  goto $bb10;
$bb9:
  assume !(($i20 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14912, 36} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14912, 36} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i1.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14912, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14914, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14926, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := ldv_undef_int();
  // WARNING: %28 = call i32 @ldv_undef_int(), !dbg !8148, !verifier.code !8087
  call {:cexpr "tmp___3"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 15} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $i24;
  assume {:branchcond $i25} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14930, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14895, 13} true;
  assume {:verifier.code 0} true;
  call $i29 := ldv_undef_int();
  // WARNING: %33 = call i32 @ldv_undef_int(), !dbg !8124, !verifier.code !8087
  call {:cexpr "tmp___2"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 15} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 7} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1);
  goto $bb7;
$bb17:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14897, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15007, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14926, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := ldv_undef_int();
  // WARNING: %50 = call i32 @ldv_undef_int(), !dbg !8148, !verifier.code !8087
  call {:cexpr "tmp___3"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i37, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $i37;
  assume {:branchcond $i38} true;
  goto $bb31, $bb20;
$bb20:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $i33;
  goto $bb13;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14934, 15} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i26, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14934, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $i26;
  assume {:branchcond $i34} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14935, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14948, 51} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14948, 51} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14948, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14948, 59} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i64($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14948, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb32, $bb33;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14939, 15} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i35, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14939, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14940, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14988, 51} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p8, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14988, 51} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14988, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $p2i.ref.i64($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14988, 60} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i64($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14988, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb44, $bb45;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14944, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15001, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15002, 3} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14929, 7} true;
  assume {:verifier.code 0} true;
  assume ($i38 == 1);
  goto $bb14;
$bb32:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14951, 82} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14951, 82} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14951, 25} true;
  assume {:verifier.code 0} true;
  $p45 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14951, 25} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.63, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14951, 25} true;
  assume {:verifier.code 0} true;
  call $i47 := ldv_pci_instance_suspend_2_8($p44, $p10, $i46);
  // WARNING: %62 = call i32 @ldv_pci_instance_suspend_2_8(i32 (%struct.pci_dev*, i32)* %59, %struct.pci_dev* %13, i32 %61), !dbg !8189, !verifier.code !8087
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14954, 3} true;
  assume {:verifier.code 0} true;
  $i48 := $i47;
  goto $bb34;
$bb33:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  $i48 := $i23;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14958, 23} true;
  assume {:verifier.code 0} true;
  call $i49 := ldv_filter_err_code($i48);
  // WARNING: %65 = call i32 @ldv_filter_err_code(i32 %.1), !dbg !8191, !verifier.code !8087
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14960, 51} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p8, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14960, 51} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14960, 7} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14960, 64} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i64($i52, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14960, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14963, 87} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p8, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14963, 87} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14963, 25} true;
  assume {:verifier.code 0} true;
  $p56 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14963, 25} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.63, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14963, 25} true;
  assume {:verifier.code 0} true;
  call $i58 := ldv_pci_instance_suspend_late_2_7($p55, $p10, $i57);
  // WARNING: %75 = call i32 @ldv_pci_instance_suspend_late_2_7(i32 (%struct.pci_dev*, i32)* %72, %struct.pci_dev* %13, i32 %74), !dbg !8201, !verifier.code !8087
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14966, 3} true;
  assume {:verifier.code 0} true;
  $i59 := $i58;
  goto $bb37;
$bb36:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  $i59 := $i49;
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14970, 23} true;
  assume {:verifier.code 0} true;
  call $i60 := ldv_filter_err_code($i59);
  // WARNING: %78 = call i32 @ldv_filter_err_code(i32 %.2), !dbg !8203, !verifier.code !8087
  call {:cexpr "ldv_2_ret_default"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14972, 51} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p8, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14972, 51} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14972, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14972, 64} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i64($i63, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14972, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14974, 67} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p8, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14974, 67} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14974, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_resume_early_2_6($p66, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14976, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14979, 51} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p8, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14979, 51} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14979, 7} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14979, 58} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i64($i69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14979, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14981, 61} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p8, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14981, 61} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14981, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_resume_2_5($p72, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14983, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14986, 3} true;
  assume {:verifier.code 0} true;
  $i23 := $i60;
  goto $bb10;
$bb44:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14990, 63} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p8, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14990, 63} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14990, 5} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_shutdown_2_3($p78, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14992, 3} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14996, 60} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14996, 60} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14996, 3} true;
  assume {:verifier.code 0} true;
  call ldv_pci_instance_release_2_2($p80, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14998, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15005, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
}
const ldv_pci_instance_probe_2_17: ref;
axiom (ldv_pci_instance_probe_2_17 == $sub.ref(0, 563343));
procedure  ldv_pci_instance_probe_2_17($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14787, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := velocity_pci_probe($p1, $p2);
  // WARNING: %4 = call i32 @velocity_pci_probe(%struct.pci_dev* %1, %struct.pci_device_id* %2), !dbg !8097, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14789, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv_pci_instance_suspend_2_8: ref;
axiom (ldv_pci_instance_suspend_2_8 == $sub.ref(0, 564375));
procedure  ldv_pci_instance_suspend_2_8($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:verifier.code 0} true;
  $M.64 := $store.i32($M.64, $p4, $i2);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14843, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14843, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.64, $p5);
  call $i7 := devirtbounce.20($p0, $p1, $i6);
  // WARNING: %8 = call i32 @devirtbounce.20(i32 (%struct.pci_dev*, i32)* %0, %struct.pci_dev* %1, i32 %7)
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14845, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const ldv_filter_err_code: ref;
axiom (ldv_filter_err_code == $sub.ref(0, 565407));
procedure  ldv_filter_err_code($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16372, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_filter_positive_int($i0);
  // WARNING: %2 = call i32 @ldv_filter_positive_int(i32 %0), !dbg !8091, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16374, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_pci_instance_suspend_late_2_7: ref;
axiom (ldv_pci_instance_suspend_late_2_7 == $sub.ref(0, 566439));
procedure  ldv_pci_instance_suspend_late_2_7($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:verifier.code 0} true;
  $M.65 := $store.i32($M.65, $p4, $i2);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14855, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14855, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.65, $p5);
  call $i7 := devirtbounce.20($p0, $p1, $i6);
  // WARNING: %8 = call i32 @devirtbounce.20(i32 (%struct.pci_dev*, i32)* %0, %struct.pci_dev* %1, i32 %7)
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14857, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const ldv_pci_instance_resume_early_2_6: ref;
axiom (ldv_pci_instance_resume_early_2_6 == $sub.ref(0, 567471));
procedure  ldv_pci_instance_resume_early_2_6($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.21($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14822, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_instance_resume_2_5: ref;
axiom (ldv_pci_instance_resume_2_5 == $sub.ref(0, 568503));
procedure  ldv_pci_instance_resume_2_5($p0: ref, $p1: ref)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.21($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14811, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_instance_shutdown_2_3: ref;
axiom (ldv_pci_instance_shutdown_2_3 == $sub.ref(0, 569535));
procedure  ldv_pci_instance_shutdown_2_3($p0: ref, $p1: ref)
{
$bb0:
  call devirtbounce.22($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14833, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_pci_instance_release_2_2: ref;
axiom (ldv_pci_instance_release_2_2 == $sub.ref(0, 570567));
procedure  ldv_pci_instance_release_2_2($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14798, 3} true;
  assume {:verifier.code 0} true;
  call velocity_pci_remove($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14800, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_register_inetaddr_notifier_115: ref;
axiom (ldv_register_inetaddr_notifier_115 == $sub.ref(0, 571599));
procedure  ldv_register_inetaddr_notifier_115($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16156, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := register_inetaddr_notifier($p0);
  // WARNING: %2 = call i32 @register_inetaddr_notifier(%struct.notifier_block* %0), !dbg !8093, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !19975, metadata !8090), !dbg !19976, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16158, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_register_inetaddr_notifier($i1, $p0);
  // WARNING: %3 = call i32 @ldv_register_inetaddr_notifier(i32 %2, %struct.notifier_block* %0), !dbg !8101, !verifier.code !8092
  call {:cexpr "tmp___0"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16160, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const register_inetaddr_notifier: ref;
axiom (register_inetaddr_notifier == $sub.ref(0, 572631));
procedure  register_inetaddr_notifier($p0: ref)
  returns ($r: i32);
const ldv_register_inetaddr_notifier: ref;
axiom (ldv_register_inetaddr_notifier == $sub.ref(0, 573663));
procedure  ldv_register_inetaddr_notifier($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15668, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_undef_int();
  // WARNING: %3 = call i32 @ldv_undef_int(), !dbg !8095, !verifier.code !8092
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15670, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15670, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15672, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15672, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15672, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15674, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dispatch_register_17_2($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15676, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15679, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15679, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15679, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15681, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15685, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_dispatch_register_17_2: ref;
axiom (ldv_dispatch_register_17_2 == $sub.ref(0, 574695));
procedure  ldv_dispatch_register_17_2($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13608, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := ldv_xmalloc(16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13609, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13610, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13610, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13611, 59} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13611, 3} true;
  assume {:verifier.code 0} true;
  call ldv_struct_notifier_block_dummy_resourceless_instance_5($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13613, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_struct_notifier_block_dummy_resourceless_instance_5: ref;
axiom (ldv_struct_notifier_block_dummy_resourceless_instance_5 == $sub.ref(0, 575727));
procedure  ldv_struct_notifier_block_dummy_resourceless_instance_5($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15781, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15782, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15782, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15782, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15784, 51} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15784, 51} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15785, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15785, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15787, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $p7 := $u33;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15794, 9} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv_undef_int();
  // WARNING: %11 = call i32 @ldv_undef_int(), !dbg !8107, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15805, 5} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15798, 35} true;
  assume {:verifier.code 0} true;
  call $p10 := ldv_xmalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15799, 5} true;
  assume {:verifier.code 0} true;
  call ldv_dummy_resourceless_instance_callback_5_3($u34, $p7, $u0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15801, 5} true;
  assume {:verifier.code 0} true;
  call ldv_free($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15794, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv_undef_int();
  // WARNING: %15 = call i32 @ldv_undef_int(), !dbg !8107, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 7} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb7;
$bb9:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 15796, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const ldv_dummy_resourceless_instance_callback_5_3: ref;
axiom (ldv_dummy_resourceless_instance_callback_5_3 == $sub.ref(0, 576759));
procedure  ldv_dummy_resourceless_instance_callback_5_3($p0: ref, $p1: ref, $i2: i64, $p3: ref)
{
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.notifier_block* %1, i64 0, metadata !20067, metadata !8090), !dbg !20068, !verifier.code !8092
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13963, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := velocity_netdev_event($p1, $i2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13965, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_entry_EMGentry_18: ref;
axiom (ldv_entry_EMGentry_18 == $sub.ref(0, 577791));
procedure  ldv_entry_EMGentry_18($p0: ref)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13977, 24} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_EMGentry_init_velocity_init_module_18_7($u35);
  // WARNING: %2 = call i32 @ldv_EMGentry_init_velocity_init_module_18_7(i32 ()* undef), !dbg !8091, !verifier.code !8090
  call {:cexpr "ldv_18_ret_default"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13978, 24} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_post_init($i1);
  // WARNING: %3 = call i32 @ldv_post_init(i32 %2), !dbg !8096, !verifier.code !8090
  call {:cexpr "ldv_18_ret_default"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13979, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := ldv_undef_int();
  // WARNING: %4 = call i32 @ldv_undef_int(), !dbg !8097, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13981, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13981, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13983, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13983, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13983, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13984, 5} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13985, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13987, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13990, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13990, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13990, 5} true;
  assume {:verifier.code 0} true;
  call ldv_assume($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13991, 5} true;
  assume {:verifier.code 0} true;
  call ldv_EMGentry_exit_velocity_cleanup_module_18_2($u36);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13992, 5} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13993, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13995, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 13999, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_post_init: ref;
axiom (ldv_post_init == $sub.ref(0, 578823));
procedure  ldv_post_init($i0: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16350, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_filter_positive_int($i0);
  // WARNING: %2 = call i32 @ldv_filter_positive_int(i32 %0), !dbg !8091, !verifier.code !8090
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 16352, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 579855));
procedure  ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18529, 71} true;
  assume {:verifier.code 0} true;
  $i0 := $M.66;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18529, 107} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18529, 107} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18529, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18530, 71} true;
  assume {:verifier.code 0} true;
  $i3 := $M.67;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18530, 109} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18530, 109} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18530, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18531, 71} true;
  assume {:verifier.code 0} true;
  $i6 := $M.68;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18531, 106} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18531, 106} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18531, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18532, 71} true;
  assume {:verifier.code 0} true;
  $i9 := $M.69;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18532, 96} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18532, 96} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18532, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18533, 71} true;
  assume {:verifier.code 0} true;
  $i12 := $M.70;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18533, 85} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18533, 85} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i1.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18533, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18534, 71} true;
  assume {:verifier.code 0} true;
  $i15 := $M.71;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18534, 101} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18534, 101} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18534, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18535, 71} true;
  assume {:verifier.code 0} true;
  $i18 := $M.72;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18535, 100} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18535, 100} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i1.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18535, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18536, 71} true;
  assume {:verifier.code 0} true;
  $i21 := $M.14;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18536, 102} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18536, 102} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i1.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18536, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18537, 71} true;
  assume {:verifier.code 0} true;
  $i24 := $M.73;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18537, 104} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18537, 104} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i1.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18537, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18538, 71} true;
  assume {:verifier.code 0} true;
  $i27 := $M.74;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18538, 110} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i27, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18538, 110} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i1.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18538, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18539, 71} true;
  assume {:verifier.code 0} true;
  $i30 := $M.75;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18539, 84} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18539, 84} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i1.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18539, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18540, 71} true;
  assume {:verifier.code 0} true;
  $i33 := $M.76;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18540, 106} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i33, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18540, 106} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i1.i32($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18540, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18541, 71} true;
  assume {:verifier.code 0} true;
  $i36 := $M.77;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18541, 100} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18541, 100} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i1.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18541, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18542, 71} true;
  assume {:verifier.code 0} true;
  $i39 := $M.78;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18542, 102} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i39, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18542, 102} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i1.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18542, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18543, 71} true;
  assume {:verifier.code 0} true;
  $i42 := $M.79;
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18543, 109} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18543, 109} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i1.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18543, 3} true;
  assume {:verifier.code 0} true;
  call ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18545, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit: ref;
axiom (ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit == $sub.ref(0, 580887));
procedure  ldv_assert_linux_kernel_locking_spinlock__one_thread_locked_at_exit($i0: i32)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18682, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18682, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18684, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18686, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 18689, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 581919));
procedure {:entrypoint} main()
  returns ($r: i32)
{
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14006, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14006, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14007, 3} true;
  assume {:verifier.code 0} true;
  call ldv_entry_EMGentry_18($0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-3.14__linux-kernel-locking-spinlock__drivers-net-ethernet-via-via-velocity_true-unreach-call.cil-UnKT5A.c", 14009, 1} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 582951));
procedure  ldv_initialize();
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 583983));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !20185, metadata !8090), !dbg !20186, !verifier.code !8092
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 585015));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 586047));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 587079));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 588111));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 589143));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 590175));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 591207));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 592239));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 593271));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 594303));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 595335));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 596367));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !8087, !verifier.code !8088
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 597399));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 598431));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 599463));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 600495));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 601527));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 602559));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 603591));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 604623));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 605655));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 606687));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 607719));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 608751));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 609783));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 610815));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 611847));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 612879));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const calloc: ref;
axiom (calloc == $sub.ref(0, 613911));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !20218, metadata !8090), !dbg !20219, !verifier.code !8092
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 614943));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 615975));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 617007));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 618039));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 619071));
procedure  __SMACK_static_init()
{
$bb0:
  $M.80 := 0;
  $M.81 := 0;
  $M.82 := 0;
  $M.83 := 0;
  $M.84 := 0;
  $M.85 := 0;
  $M.86 := 0;
  $M.87 := $store.i8($M.87, __mod_of_device_table, 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 1), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 2), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 3), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 4), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 5), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 6), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 7), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 8), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 9), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 10), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 11), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 12), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 13), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 14), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 15), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 16), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 17), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 18), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 19), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 20), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 21), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 22), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 23), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 24), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 25), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 26), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 27), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 28), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 29), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 30), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 31), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 32), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 1), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 2), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 3), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 4), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 5), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 6), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 7), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 8), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 9), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 10), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 11), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 12), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 13), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 14), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 15), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 16), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 17), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 18), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 19), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 20), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 21), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 22), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 23), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 24), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 25), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 26), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 27), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 28), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 29), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 30), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 32), 31), 0);
  $M.87 := $store.i8($M.87, $add.ref(__mod_of_device_table, 64), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 1), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 2), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 3), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 4), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 5), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 6), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 7), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 8), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 9), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 10), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 11), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 12), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 13), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 14), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 15), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 16), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 17), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 18), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 19), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 20), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 21), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 22), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 23), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 24), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 25), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 26), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 27), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 28), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 29), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 30), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 31), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 32), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 33), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 34), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 35), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 36), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 37), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 38), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 39), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 40), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 41), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 42), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 43), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 44), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 45), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 46), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 47), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 48), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 49), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 50), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 51), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 52), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 53), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 54), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 55), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 56), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 57), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 58), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 59), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 60), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 61), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 62), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 63), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 64), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 65), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 66), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 67), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 68), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 69), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 70), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 71), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 72), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 73), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 74), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 75), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 76), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 77), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 78), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 79), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 80), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 81), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 82), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 83), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 84), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 85), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 86), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 87), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 88), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 89), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 90), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 91), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 92), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 93), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 94), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 95), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 96), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 97), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 98), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 99), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 100), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 101), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 102), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 103), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 104), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 105), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 106), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 107), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 108), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 109), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 110), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 111), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 112), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 113), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 114), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 115), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 116), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 117), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 118), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 119), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 120), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 121), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 122), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 123), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 124), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 125), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 126), 0);
  $M.87 := $store.i8($M.87, $add.ref($add.ref(__mod_of_device_table, 64), 127), 0);
  $M.87 := $store.ref($M.87, $add.ref(__mod_of_device_table, 192), $0.ref);
  $M.88 := 0;
  $M.89 := $0.ref;
  $M.90 := 0;
  $M.91 := $0.ref;
  $M.92 := 0;
  $M.93 := $0.ref;
  $M.94 := 0;
  $M.95 := $0.ref;
  $M.96 := 0;
  $M.97 := $0.ref;
  $M.98 := 0;
  $M.99 := $0.ref;
  $M.100 := 0;
  $M.101 := $0.ref;
  $M.79 := 1;
  call {:cexpr "ldv_spin_tx_global_lock_of_net_device"} boogie_si_record_i32(1);
  $M.78 := 1;
  call {:cexpr "ldv_spin_slock_of_NOT_ARG_SIGN"} boogie_si_record_i32(1);
  $M.77 := 1;
  call {:cexpr "ldv_spin_sk_dst_lock_of_sock"} boogie_si_record_i32(1);
  $M.76 := 1;
  call {:cexpr "ldv_spin_siglock_of_sighand_struct"} boogie_si_record_i32(1);
  $M.75 := 1;
  call {:cexpr "ldv_spin_ptl"} boogie_si_record_i32(1);
  $M.74 := 1;
  call {:cexpr "ldv_spin_node_size_lock_of_pglist_data"} boogie_si_record_i32(1);
  $M.73 := 1;
  call {:cexpr "ldv_spin_lru_lock_of_netns_frags"} boogie_si_record_i32(1);
  $M.14 := 1;
  call {:cexpr "ldv_spin_lock_of_velocity_info"} boogie_si_record_i32(1);
  $M.72 := 1;
  call {:cexpr "ldv_spin_lock_of_res_counter"} boogie_si_record_i32(1);
  $M.71 := 1;
  call {:cexpr "ldv_spin_lock_of_NOT_ARG_SIGN"} boogie_si_record_i32(1);
  $M.70 := 1;
  call {:cexpr "ldv_spin_lock"} boogie_si_record_i32(1);
  $M.69 := 1;
  call {:cexpr "ldv_spin_i_lock_of_inode"} boogie_si_record_i32(1);
  $M.68 := 1;
  call {:cexpr "ldv_spin_alloc_lock_of_task_struct"} boogie_si_record_i32(1);
  $M.67 := 1;
  call {:cexpr "ldv_spin_addr_list_lock_of_net_device"} boogie_si_record_i32(1);
  $M.66 := 1;
  call {:cexpr "ldv_spin__xmit_lock_of_netdev_queue"} boogie_si_record_i32(1);
  $M.19 := 200;
  call {:cexpr "rx_copybreak"} boogie_si_record_i32(200);
  $M.0 := $store.ref($M.0, velocity_ethtool_ops, velocity_get_settings);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 8), velocity_set_settings);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 16), velocity_get_drvinfo);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 40), velocity_ethtool_get_wol);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 48), velocity_ethtool_set_wol);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 56), velocity_get_msglevel);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 64), velocity_set_msglevel);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 80), velocity_get_link);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 112), velocity_get_coalesce);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 120), velocity_set_coalesce);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 168), velocity_get_strings);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 184), velocity_get_ethtool_stats);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 192), velocity_ethtool_up);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 200), velocity_ethtool_down);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 216), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 224), velocity_get_sset_count);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 232), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 240), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 248), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 256), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 264), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 272), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 280), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 288), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 296), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 320), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 328), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 336), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 344), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 352), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_ethtool_ops, 360), $0.ref);
  $M.12 := $store.i32($M.12, wol_opts, $sub.i32(0, 1));
  $M.12 := $store.i32($M.12, $add.ref(wol_opts, 4), $sub.i32(0, 1));
  $M.12 := $store.i32($M.12, $add.ref(wol_opts, 8), $sub.i32(0, 1));
  $M.12 := $store.i32($M.12, $add.ref(wol_opts, 12), $sub.i32(0, 1));
  $M.12 := $store.i32($M.12, $add.ref(wol_opts, 16), $sub.i32(0, 1));
  $M.12 := $store.i32($M.12, $add.ref(wol_opts, 20), $sub.i32(0, 1));
  $M.12 := $store.i32($M.12, $add.ref(wol_opts, 24), $sub.i32(0, 1));
  $M.12 := $store.i32($M.12, $add.ref(wol_opts, 28), $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, speed_duplex, $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, $add.ref(speed_duplex, 4), $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, $add.ref(speed_duplex, 8), $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, $add.ref(speed_duplex, 12), $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, $add.ref(speed_duplex, 16), $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, $add.ref(speed_duplex, 20), $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, $add.ref(speed_duplex, 24), $sub.i32(0, 1));
  $M.11 := $store.i32($M.11, $add.ref(speed_duplex, 28), $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, ValPktLen, $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, $add.ref(ValPktLen, 4), $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, $add.ref(ValPktLen, 8), $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, $add.ref(ValPktLen, 12), $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, $add.ref(ValPktLen, 16), $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, $add.ref(ValPktLen, 20), $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, $add.ref(ValPktLen, 24), $sub.i32(0, 1));
  $M.10 := $store.i32($M.10, $add.ref(ValPktLen, 28), $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, IP_byte_align, $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, $add.ref(IP_byte_align, 4), $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, $add.ref(IP_byte_align, 8), $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, $add.ref(IP_byte_align, 12), $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, $add.ref(IP_byte_align, 16), $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, $add.ref(IP_byte_align, 20), $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, $add.ref(IP_byte_align, 24), $sub.i32(0, 1));
  $M.9 := $store.i32($M.9, $add.ref(IP_byte_align, 28), $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, flow_control, $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, $add.ref(flow_control, 4), $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, $add.ref(flow_control, 8), $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, $add.ref(flow_control, 12), $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, $add.ref(flow_control, 16), $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, $add.ref(flow_control, 20), $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, $add.ref(flow_control, 24), $sub.i32(0, 1));
  $M.8 := $store.i32($M.8, $add.ref(flow_control, 28), $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, TxDescriptors, $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, $add.ref(TxDescriptors, 4), $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, $add.ref(TxDescriptors, 8), $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, $add.ref(TxDescriptors, 12), $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, $add.ref(TxDescriptors, 16), $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, $add.ref(TxDescriptors, 20), $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, $add.ref(TxDescriptors, 24), $sub.i32(0, 1));
  $M.7 := $store.i32($M.7, $add.ref(TxDescriptors, 28), $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, RxDescriptors, $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, $add.ref(RxDescriptors, 4), $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, $add.ref(RxDescriptors, 8), $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, $add.ref(RxDescriptors, 12), $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, $add.ref(RxDescriptors, 16), $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, $add.ref(RxDescriptors, 20), $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, $add.ref(RxDescriptors, 24), $sub.i32(0, 1));
  $M.6 := $store.i32($M.6, $add.ref(RxDescriptors, 28), $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, DMA_length, $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, $add.ref(DMA_length, 4), $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, $add.ref(DMA_length, 8), $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, $add.ref(DMA_length, 12), $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, $add.ref(DMA_length, 16), $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, $add.ref(DMA_length, 20), $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, $add.ref(DMA_length, 24), $sub.i32(0, 1));
  $M.5 := $store.i32($M.5, $add.ref(DMA_length, 28), $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, rx_thresh, $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, $add.ref(rx_thresh, 4), $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, $add.ref(rx_thresh, 8), $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, $add.ref(rx_thresh, 12), $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, $add.ref(rx_thresh, 16), $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, $add.ref(rx_thresh, 20), $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, $add.ref(rx_thresh, 24), $sub.i32(0, 1));
  $M.4 := $store.i32($M.4, $add.ref(rx_thresh, 28), $sub.i32(0, 1));
  $M.1 := 0;
  call {:cexpr "velocity_nics"} boogie_si_record_i32(0);
  $M.0 := $store.ref($M.0, velocity_netdev_ops, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 16), velocity_open);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 24), velocity_close);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 32), velocity_xmit);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 56), velocity_set_multi);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 64), eth_mac_addr);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 72), eth_validate_addr);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 80), velocity_ioctl);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 96), velocity_change_mtu);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 128), velocity_get_stats);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 136), velocity_vlan_rx_add_vid);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 144), velocity_vlan_rx_kill_vid);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 152), velocity_poll_controller);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 216), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 224), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 232), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 240), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 248), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 256), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 264), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 272), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 280), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 288), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 296), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 304), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 312), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 320), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 328), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 336), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 344), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 352), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 360), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 368), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 376), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 384), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 392), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 400), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 408), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 416), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 424), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 432), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 440), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 448), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 456), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_netdev_ops, 464), $0.ref);
  $M.0 := $store.i8($M.0, velocity_gstrings, 114);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 1), 120);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 3), 97);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 4), 108);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 5), 108);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 9), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 10), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 11), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 12), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 13), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 14), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 15), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 16), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 17), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 18), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 19), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 20), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 21), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 22), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 23), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 25), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 26), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 27), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 28), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 29), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 30), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 32), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 3), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 4), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 32), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 64), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 3), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 4), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 64), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 96), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 3), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 5), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 7), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 96), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 128), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 3), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 4), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 6), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 9), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 128), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 160), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 3), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 4), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 6), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 10), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 160), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 192), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 3), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 192), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 224), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 3), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 4), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 224), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 256), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 3), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 5), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 6), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 9), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 10), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 11), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 256), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 288), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 3), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 5), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 6), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 9), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 10), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 11), 55);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 288), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 320), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 10), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 11), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 12), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 320), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 352), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 4), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 5), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 10), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 11), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 12), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 352), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 384), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 5), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 10), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 11), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 12), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 384), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 416), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 3), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 4), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 5), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 10), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 11), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 12), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 416), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 448), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 3), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 10), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 11), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 12), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 13), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 448), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 480), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 3), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 4), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 7), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 10), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 11), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 12), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 13), 51);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 480), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 512), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 6), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 8), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 9), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 11), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 12), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 13), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 14), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 512), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 544), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 3), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 4), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 5), 50);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 6), 52);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 8), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 9), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 10), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 11), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 12), 53);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 13), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 14), 56);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 544), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 576), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 3), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 4), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 5), 104);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 6), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 7), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 9), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 10), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 11), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 12), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 13), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 14), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 15), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 16), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 17), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 18), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 576), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 608), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 3), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 8), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 10), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 12), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 608), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 640), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 3), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 4), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 5), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 6), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 640), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 672), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 3), 106);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 4), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 5), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 6), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 672), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 704), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 3), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 4), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 7), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 9), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 10), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 12), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 13), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 14), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 15), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 16), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 17), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 18), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 19), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 20), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 704), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 736), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 3), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 4), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 7), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 9), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 10), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 12), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 13), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 14), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 15), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 16), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 17), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 18), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 19), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 20), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 736), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 768), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 3), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 4), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 5), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 6), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 9), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 10), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 11), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 12), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 13), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 14), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 15), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 16), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 17), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 18), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 19), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 20), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 21), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 22), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 23), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 24), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 25), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 768), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 800), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 3), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 6), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 8), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 9), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 800), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 832), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 3), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 6), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 7), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 8), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 10), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 832), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 864), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 3), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 4), 113);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 6), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 8), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 9), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 10), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 12), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 864), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 896), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 3), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 4), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 5), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 6), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 7), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 8), 102);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 896), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 928), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 1), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 3), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 4), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 5), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 6), 98);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 8), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 9), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 11), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 12), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 13), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 14), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 15), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 928), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 960), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 1), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 2), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 3), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 4), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 5), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 6), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 7), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 8), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 9), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 10), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 11), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 12), 103);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 13), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 14), 104);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 15), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 16), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 17), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 18), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 19), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 20), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 21), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 960), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_gstrings, 992), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 1), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 2), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 3), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 4), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 5), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 6), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 7), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 8), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 9), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 10), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 11), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 12), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 13), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 14), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_gstrings, 992), 31), 0);
  $M.15 := 2;
  call {:cexpr "msglevel"} boogie_si_record_i32(2);
  $M.0 := $store.i32($M.0, chip_info_table, 1);
  $M.0 := $store.ref($M.0, $add.ref(chip_info_table, 8), .str.2);
  $M.0 := $store.i32($M.0, $add.ref(chip_info_table, 16), 1);
  $M.0 := $store.i32($M.0, $add.ref(chip_info_table, 20), 16777215);
  $M.0 := $store.i32($M.0, $add.ref(chip_info_table, 24), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(chip_info_table, 24), 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(chip_info_table, 24), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(chip_info_table, 24), 20), 0);
  $M.0 := $store.i8($M.0, velocity_of_ids, 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 1), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 2), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 6), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 7), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 8), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 9), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 10), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 11), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 12), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 13), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 14), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 15), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 16), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 17), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 18), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 19), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 20), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 21), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 22), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 23), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 25), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 26), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 27), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 28), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 29), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 30), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 32), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 32), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 64), 118);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 1), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 2), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 3), 44);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 4), 118);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 5), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 6), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 7), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 8), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 9), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 10), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 11), 121);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 12), 45);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 13), 118);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 14), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 15), 54);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 16), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 17), 49);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 18), 48);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 32), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 33), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 34), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 35), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 36), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 37), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 38), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 39), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 40), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 41), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 42), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 43), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 44), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 45), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 46), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 47), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 48), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 49), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 50), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 51), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 52), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 53), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 54), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 55), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 56), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 57), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 58), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 59), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 60), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 61), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 62), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 63), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 64), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 65), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 66), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 67), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 68), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 69), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 70), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 71), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 72), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 73), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 74), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 75), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 76), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 77), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 78), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 79), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 80), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 81), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 82), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 83), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 84), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 85), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 86), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 87), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 88), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 89), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 90), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 91), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 92), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 93), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 94), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 95), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 96), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 97), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 98), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 99), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 100), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 101), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 102), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 103), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 104), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 105), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 106), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 107), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 108), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 109), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 110), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 111), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 112), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 113), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 114), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 115), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 116), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 117), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 118), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 119), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 120), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 121), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 122), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 123), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 124), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 125), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 126), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 64), 127), 0);
  $M.0 := $store.ref($M.0, $add.ref(velocity_of_ids, 192), chip_info_table);
  $M.0 := $store.i8($M.0, $add.ref(velocity_of_ids, 200), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 32), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 32), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_of_ids, 200), 64), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 15), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 16), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 17), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 18), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 19), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 20), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 21), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 22), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 23), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 25), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 26), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 27), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 28), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 29), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 30), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 31), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 32), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 33), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 34), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 35), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 36), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 37), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 38), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 39), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 40), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 41), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 42), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 43), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 44), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 45), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 46), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 47), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 48), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 49), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 50), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 51), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 52), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 53), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 54), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 55), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 56), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 57), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 58), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 59), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 60), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 61), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 62), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 63), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 64), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 65), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 66), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 67), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 68), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 69), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 70), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 71), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 72), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 73), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 74), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 75), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 76), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 77), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 78), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 79), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 80), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 81), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 82), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 83), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 84), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 85), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 86), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 87), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 88), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 89), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 90), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 91), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 92), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 93), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 94), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 95), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 96), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 97), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 98), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 99), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 100), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 101), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 102), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 103), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 104), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 105), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 106), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 107), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 108), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 109), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 110), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 111), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 112), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 113), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 114), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 115), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 116), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 117), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 118), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 119), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 120), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 121), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 122), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 123), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 124), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 125), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 126), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(velocity_of_ids, 200), 64), 127), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_of_ids, 200), 192), $0.ref);
  $M.0 := $store.ref($M.0, velocity_platform_driver, velocity_platform_probe);
  $M.0 := $store.ref($M.0, $add.ref(velocity_platform_driver, 8), velocity_platform_remove);
  $M.0 := $store.ref($M.0, $add.ref(velocity_platform_driver, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_platform_driver, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_platform_driver, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_platform_driver, 40), .str.1);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 16), __this_module);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 40), velocity_of_ids);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 104), velocity_pm_ops);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_platform_driver, 40), 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_platform_driver, 160), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(velocity_platform_driver, 168), 0);
  $M.0 := $store.ref($M.0, velocity_pm_ops, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 16), velocity_suspend);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 24), velocity_resume);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 32), velocity_suspend);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 40), velocity_resume);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 48), velocity_suspend);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 56), velocity_resume);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pm_ops, 176), $0.ref);
  $M.0 := $store.i32($M.0, velocity_pci_id_table, 4358);
  $M.0 := $store.i32($M.0, $add.ref(velocity_pci_id_table, 4), 12569);
  $M.0 := $store.i32($M.0, $add.ref(velocity_pci_id_table, 8), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref(velocity_pci_id_table, 12), $sub.i32(0, 1));
  $M.0 := $store.i32($M.0, $add.ref(velocity_pci_id_table, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(velocity_pci_id_table, 20), 0);
  $M.0 := $store.i64($M.0, $add.ref(velocity_pci_id_table, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref(velocity_pci_id_table, 32), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(velocity_pci_id_table, 32), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(velocity_pci_id_table, 32), 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(velocity_pci_id_table, 32), 12), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(velocity_pci_id_table, 32), 16), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(velocity_pci_id_table, 32), 20), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(velocity_pci_id_table, 32), 24), 0);
  $M.0 := $store.ref($M.0, velocity_pci_driver, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 16), .str.1);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 24), velocity_pci_id_table);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 32), velocity_pci_probe);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 40), velocity_pci_remove);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(velocity_pci_driver, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 104), velocity_pm_ops);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 104), 112), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(velocity_pci_driver, 224), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(velocity_pci_driver, 224), 4), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(velocity_pci_driver, 224), 8), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 224), 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 224), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(velocity_pci_driver, 224), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(velocity_pci_driver, 224), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(velocity_pci_driver, 224), 24), 24), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(velocity_pci_driver, 224), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(velocity_pci_driver, 224), 24), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(velocity_pci_driver, 224), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(velocity_pci_driver, 224), 72), 8), $0.ref);
  $M.0 := $store.ref($M.0, velocity_inetaddr_notifier, velocity_netdev_event);
  $M.0 := $store.ref($M.0, $add.ref(velocity_inetaddr_notifier, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(velocity_inetaddr_notifier, 16), 0);
  $M.0 := $store.i8($M.0, .str.1, 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 1), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 2), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 3), 45);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 4), 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 6), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 7), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 8), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 9), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 10), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 11), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.1, 12), 0);
  $M.0 := $store.i8($M.0, .str.2, 86);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 1), 73);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 2), 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 3), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 4), 78);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 5), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 6), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 7), 119);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 8), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 9), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 10), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 11), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 12), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 13), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 14), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 15), 86);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 16), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 17), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 18), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 19), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 20), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 21), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 22), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 23), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 24), 70);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 25), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 26), 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 27), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 28), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 29), 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 30), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 31), 71);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 32), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 33), 103);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 34), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 35), 98);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 36), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 37), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 38), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 39), 69);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 40), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 41), 104);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 42), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 43), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 44), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 45), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 46), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 47), 32);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 48), 65);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 49), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 50), 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 51), 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 52), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 53), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 54), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.2, 55), 0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 620103));
procedure  devirtbounce(funcPtr: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 621135));
procedure  devirtbounce.1(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i1;
  var $i6: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i6 := $eq.ref(velocity_ethtool_get_wol, $p0);
  assume {:branchcond $i6} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i5 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg1);
  call velocity_get_drvinfo($p1, $p2);
  $exn := false;
  return;
$bb3:
  assume ($i6 == 1);
  $p3 := $bitcast.ref.ref(arg);
  $p4 := $bitcast.ref.ref(arg1);
  call velocity_ethtool_get_wol($p3, $p4);
  $exn := false;
  return;
$bb4:
  assume !(($i5 == 1));
  assume false;
$bb5:
  assume !(($i6 == 1));
  $i5 := $eq.ref(velocity_get_drvinfo, $p0);
  assume {:branchcond $i5} true;
  goto $bb2, $bb4;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 622167));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i3 := $eq.ref(velocity_get_strings, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg2);
  call velocity_get_strings($p1, arg1, $p2);
  $exn := false;
  return;
$bb3:
  assume !(($i3 == 1));
  assume false;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 623199));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i64, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 624231));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 625263));
procedure  devirtbounce.5(funcPtr: ref, arg: i64, arg1: ref, arg2: i32)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 626295));
procedure  devirtbounce.6(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 627327));
procedure  devirtbounce.7(funcPtr: ref, arg: i32, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 628359));
procedure  devirtbounce.8(funcPtr: ref, arg: i16, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 629391));
procedure  devirtbounce.9(funcPtr: ref, arg: i8, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.10: ref;
axiom (devirtbounce.10 == $sub.ref(0, 630423));
procedure  devirtbounce.10(funcPtr: ref, arg: ref)
  returns ($r: i8)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.11: ref;
axiom (devirtbounce.11 == $sub.ref(0, 631455));
procedure  devirtbounce.11(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.12: ref;
axiom (devirtbounce.12 == $sub.ref(0, 632487));
procedure  devirtbounce.12(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i30 := $eq.ref(velocity_platform_remove, $p0);
  assume {:branchcond $i30} true;
  goto $bb11, $bb21;
$bb2:
  assume ($i21 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := velocity_close($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i22 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := velocity_get_link($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i23 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := velocity_ethtool_up($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i24 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := velocity_get_msglevel($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i25 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := eth_validate_addr($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i26 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := velocity_open($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume ($i27 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call $i14 := velocity_suspend($p13);
  $r := $i14;
  $exn := false;
  return;
$bb9:
  assume ($i28 == 1);
  $p15 := $bitcast.ref.ref(arg);
  call $i16 := velocity_resume($p15);
  $r := $i16;
  $exn := false;
  return;
$bb10:
  assume ($i29 == 1);
  $p17 := $bitcast.ref.ref(arg);
  call $i18 := velocity_platform_probe($p17);
  $r := $i18;
  $exn := false;
  return;
$bb11:
  assume ($i30 == 1);
  $p19 := $bitcast.ref.ref(arg);
  call $i20 := velocity_platform_remove($p19);
  $r := $i20;
  $exn := false;
  return;
$bb12:
  assume !(($i21 == 1));
  assume false;
$bb13:
  assume !(($i22 == 1));
  $i21 := $eq.ref(velocity_close, $p0);
  assume {:branchcond $i21} true;
  goto $bb2, $bb12;
$bb14:
  assume !(($i23 == 1));
  $i22 := $eq.ref(velocity_get_link, $p0);
  assume {:branchcond $i22} true;
  goto $bb3, $bb13;
$bb15:
  assume !(($i24 == 1));
  $i23 := $eq.ref(velocity_ethtool_up, $p0);
  assume {:branchcond $i23} true;
  goto $bb4, $bb14;
$bb16:
  assume !(($i25 == 1));
  $i24 := $eq.ref(velocity_get_msglevel, $p0);
  assume {:branchcond $i24} true;
  goto $bb5, $bb15;
$bb17:
  assume !(($i26 == 1));
  $i25 := $eq.ref(eth_validate_addr, $p0);
  assume {:branchcond $i25} true;
  goto $bb6, $bb16;
$bb18:
  assume !(($i27 == 1));
  $i26 := $eq.ref(velocity_open, $p0);
  assume {:branchcond $i26} true;
  goto $bb7, $bb17;
$bb19:
  assume !(($i28 == 1));
  $i27 := $eq.ref(velocity_suspend, $p0);
  assume {:branchcond $i27} true;
  goto $bb8, $bb18;
$bb20:
  assume !(($i29 == 1));
  $i28 := $eq.ref(velocity_resume, $p0);
  assume {:branchcond $i28} true;
  goto $bb9, $bb19;
$bb21:
  assume !(($i30 == 1));
  $i29 := $eq.ref(velocity_platform_probe, $p0);
  assume {:branchcond $i29} true;
  goto $bb10, $bb20;
}
const devirtbounce.13: ref;
axiom (devirtbounce.13 == $sub.ref(0, 633519));
procedure  devirtbounce.13(funcPtr: ref, arg: ref)
  returns ($r: i16)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.14: ref;
axiom (devirtbounce.14 == $sub.ref(0, 634551));
procedure  devirtbounce.14(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: i64, arg4: i32, arg5: ref)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.15: ref;
axiom (devirtbounce.15 == $sub.ref(0, 635583));
procedure  devirtbounce.15(funcPtr: ref, arg: ref, arg1: i64, arg2: ref, arg3: i32, arg4: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.16: ref;
axiom (devirtbounce.16 == $sub.ref(0, 636615));
procedure  devirtbounce.16(funcPtr: ref, arg: i32, arg1: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i2 := $eq.ref(velocity_intr, $p0);
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  call $i1 := velocity_intr(arg, arg1);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume !(($i2 == 1));
  assume false;
}
const devirtbounce.17: ref;
axiom (devirtbounce.17 == $sub.ref(0, 637647));
procedure  devirtbounce.17(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.18: ref;
axiom (devirtbounce.18 == $sub.ref(0, 638679));
procedure  devirtbounce.18(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i28 := $eq.ref(velocity_suspend, $p0);
  assume {:branchcond $i28} true;
  goto $bb11, $bb21;
$bb2:
  assume ($i19 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := velocity_get_link($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i20 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := velocity_ethtool_up($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i21 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := velocity_platform_remove($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i22 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := velocity_platform_probe($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i23 == 1);
  call $i9 := velocity_resume(arg);
  $r := $i9;
  $exn := false;
  return;
$bb7:
  assume ($i24 == 1);
  $p10 := $bitcast.ref.ref(arg);
  call $i11 := velocity_open($p10);
  $r := $i11;
  $exn := false;
  return;
$bb8:
  assume ($i25 == 1);
  $p12 := $bitcast.ref.ref(arg);
  call $i13 := velocity_close($p12);
  $r := $i13;
  $exn := false;
  return;
$bb9:
  assume ($i26 == 1);
  $p14 := $bitcast.ref.ref(arg);
  call $i15 := velocity_get_msglevel($p14);
  $r := $i15;
  $exn := false;
  return;
$bb10:
  assume ($i27 == 1);
  $p16 := $bitcast.ref.ref(arg);
  call $i17 := eth_validate_addr($p16);
  $r := $i17;
  $exn := false;
  return;
$bb11:
  assume ($i28 == 1);
  call $i18 := velocity_suspend(arg);
  $r := $i18;
  $exn := false;
  return;
$bb12:
  assume !(($i19 == 1));
  assume false;
$bb13:
  assume !(($i20 == 1));
  $i19 := $eq.ref(velocity_get_link, $p0);
  assume {:branchcond $i19} true;
  goto $bb2, $bb12;
$bb14:
  assume !(($i21 == 1));
  $i20 := $eq.ref(velocity_ethtool_up, $p0);
  assume {:branchcond $i20} true;
  goto $bb3, $bb13;
$bb15:
  assume !(($i22 == 1));
  $i21 := $eq.ref(velocity_platform_remove, $p0);
  assume {:branchcond $i21} true;
  goto $bb4, $bb14;
$bb16:
  assume !(($i23 == 1));
  $i22 := $eq.ref(velocity_platform_probe, $p0);
  assume {:branchcond $i22} true;
  goto $bb5, $bb15;
$bb17:
  assume !(($i24 == 1));
  $i23 := $eq.ref(velocity_resume, $p0);
  assume {:branchcond $i23} true;
  goto $bb6, $bb16;
$bb18:
  assume !(($i25 == 1));
  $i24 := $eq.ref(velocity_open, $p0);
  assume {:branchcond $i24} true;
  goto $bb7, $bb17;
$bb19:
  assume !(($i26 == 1));
  $i25 := $eq.ref(velocity_close, $p0);
  assume {:branchcond $i25} true;
  goto $bb8, $bb18;
$bb20:
  assume !(($i27 == 1));
  $i26 := $eq.ref(velocity_get_msglevel, $p0);
  assume {:branchcond $i26} true;
  goto $bb9, $bb19;
$bb21:
  assume !(($i28 == 1));
  $i27 := $eq.ref(eth_validate_addr, $p0);
  assume {:branchcond $i27} true;
  goto $bb10, $bb20;
}
const devirtbounce.19: ref;
axiom (devirtbounce.19 == $sub.ref(0, 639711));
procedure  devirtbounce.19(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i8 := $eq.ref(velocity_poll_controller, $p0);
  assume {:branchcond $i8} true;
  goto $bb5, $bb9;
$bb2:
  assume ($i5 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call velocity_ethtool_down($p1);
  $exn := false;
  return;
$bb3:
  assume ($i6 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call velocity_pci_remove($p2);
  $exn := false;
  return;
$bb4:
  assume ($i7 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call velocity_set_multi($p3);
  $exn := false;
  return;
$bb5:
  assume ($i8 == 1);
  $p4 := $bitcast.ref.ref(arg);
  call velocity_poll_controller($p4);
  $exn := false;
  return;
$bb6:
  assume !(($i5 == 1));
  assume false;
$bb7:
  assume !(($i6 == 1));
  $i5 := $eq.ref(velocity_ethtool_down, $p0);
  assume {:branchcond $i5} true;
  goto $bb2, $bb6;
$bb8:
  assume !(($i7 == 1));
  $i6 := $eq.ref(velocity_pci_remove, $p0);
  assume {:branchcond $i6} true;
  goto $bb3, $bb7;
$bb9:
  assume !(($i8 == 1));
  $i7 := $eq.ref(velocity_set_multi, $p0);
  assume {:branchcond $i7} true;
  goto $bb4, $bb8;
}
const devirtbounce.20: ref;
axiom (devirtbounce.20 == $sub.ref(0, 640743));
procedure  devirtbounce.20(funcPtr: ref, arg: ref, arg1: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i9 := $eq.ref(velocity_change_mtu, $p0);
  assume {:branchcond $i9} true;
  goto $bb4, $bb7;
$bb2:
  assume ($i7 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := velocity_poll($p1, arg1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i8 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := velocity_get_sset_count($p3, arg1);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i9 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := velocity_change_mtu($p5, arg1);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume !(($i7 == 1));
  assume false;
$bb6:
  assume !(($i8 == 1));
  $i7 := $eq.ref(velocity_poll, $p0);
  assume {:branchcond $i7} true;
  goto $bb2, $bb5;
$bb7:
  assume !(($i9 == 1));
  $i8 := $eq.ref(velocity_get_sset_count, $p0);
  assume {:branchcond $i8} true;
  goto $bb3, $bb6;
}
const devirtbounce.21: ref;
axiom (devirtbounce.21 == $sub.ref(0, 641775));
procedure  devirtbounce.21(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i30 := $eq.ref(velocity_platform_remove, $p0);
  assume {:branchcond $i30} true;
  goto $bb11, $bb21;
$bb2:
  assume ($i21 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := velocity_close($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i22 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := velocity_get_link($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i23 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := velocity_ethtool_up($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i24 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := velocity_get_msglevel($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i25 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := eth_validate_addr($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i26 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := velocity_open($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume ($i27 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call $i14 := velocity_suspend($p13);
  $r := $i14;
  $exn := false;
  return;
$bb9:
  assume ($i28 == 1);
  $p15 := $bitcast.ref.ref(arg);
  call $i16 := velocity_resume($p15);
  $r := $i16;
  $exn := false;
  return;
$bb10:
  assume ($i29 == 1);
  $p17 := $bitcast.ref.ref(arg);
  call $i18 := velocity_platform_probe($p17);
  $r := $i18;
  $exn := false;
  return;
$bb11:
  assume ($i30 == 1);
  $p19 := $bitcast.ref.ref(arg);
  call $i20 := velocity_platform_remove($p19);
  $r := $i20;
  $exn := false;
  return;
$bb12:
  assume !(($i21 == 1));
  assume false;
$bb13:
  assume !(($i22 == 1));
  $i21 := $eq.ref(velocity_close, $p0);
  assume {:branchcond $i21} true;
  goto $bb2, $bb12;
$bb14:
  assume !(($i23 == 1));
  $i22 := $eq.ref(velocity_get_link, $p0);
  assume {:branchcond $i22} true;
  goto $bb3, $bb13;
$bb15:
  assume !(($i24 == 1));
  $i23 := $eq.ref(velocity_ethtool_up, $p0);
  assume {:branchcond $i23} true;
  goto $bb4, $bb14;
$bb16:
  assume !(($i25 == 1));
  $i24 := $eq.ref(velocity_get_msglevel, $p0);
  assume {:branchcond $i24} true;
  goto $bb5, $bb15;
$bb17:
  assume !(($i26 == 1));
  $i25 := $eq.ref(eth_validate_addr, $p0);
  assume {:branchcond $i25} true;
  goto $bb6, $bb16;
$bb18:
  assume !(($i27 == 1));
  $i26 := $eq.ref(velocity_open, $p0);
  assume {:branchcond $i26} true;
  goto $bb7, $bb17;
$bb19:
  assume !(($i28 == 1));
  $i27 := $eq.ref(velocity_suspend, $p0);
  assume {:branchcond $i27} true;
  goto $bb8, $bb18;
$bb20:
  assume !(($i29 == 1));
  $i28 := $eq.ref(velocity_resume, $p0);
  assume {:branchcond $i28} true;
  goto $bb9, $bb19;
$bb21:
  assume !(($i30 == 1));
  $i29 := $eq.ref(velocity_platform_probe, $p0);
  assume {:branchcond $i29} true;
  goto $bb10, $bb20;
}
const devirtbounce.22: ref;
axiom (devirtbounce.22 == $sub.ref(0, 642807));
procedure  devirtbounce.22(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i7 := $eq.ref(velocity_poll_controller, $p0);
  assume {:branchcond $i7} true;
  goto $bb5, $bb9;
$bb2:
  assume ($i4 == 1);
  call velocity_pci_remove(arg);
  $exn := false;
  return;
$bb3:
  assume ($i5 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call velocity_ethtool_down($p1);
  $exn := false;
  return;
$bb4:
  assume ($i6 == 1);
  $p2 := $bitcast.ref.ref(arg);
  call velocity_set_multi($p2);
  $exn := false;
  return;
$bb5:
  assume ($i7 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call velocity_poll_controller($p3);
  $exn := false;
  return;
$bb6:
  assume !(($i4 == 1));
  assume false;
$bb7:
  assume !(($i5 == 1));
  $i4 := $eq.ref(velocity_pci_remove, $p0);
  assume {:branchcond $i4} true;
  goto $bb2, $bb6;
$bb8:
  assume !(($i6 == 1));
  $i5 := $eq.ref(velocity_ethtool_down, $p0);
  assume {:branchcond $i5} true;
  goto $bb3, $bb7;
$bb9:
  assume !(($i7 == 1));
  $i6 := $eq.ref(velocity_set_multi, $p0);
  assume {:branchcond $i6} true;
  goto $bb4, $bb8;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

const $u0: i64;
const $u1: ref;
const $u10: i16;
const $u11: ref;
const $u12: ref;
const $u13: ref;
const $u14: ref;
const $u15: ref;
const $u16: ref;
const $u17: ref;
const $u18: ref;
const $u19: ref;
const $u2: ref;
const $u20: ref;
const $u21: ref;
const $u22: ref;
const $u23: ref;
const $u24: ref;
const $u25: ref;
const $u26: ref;
const $u27: ref;
const $u28: ref;
const $u29: ref;
const $u3: ref;
const $u30: ref;
const $u31: ref;
const $u32: ref;
const $u33: ref;
const $u34: ref;
const $u35: ref;
const $u36: ref;
const $u4: ref;
const $u5: ref;
const $u6: ref;
const $u7: i32;
const $u8: ref;
const $u9: ref;
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
